(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       150,          7]
NotebookDataLength[    108780,       2114]
NotebookOptionsPosition[    102295,       1966]
NotebookOutlinePosition[    108540,       2110]
CellTagsIndexPosition[    108497,       2107]
WindowTitle->CDF InfoKit - Plan Your Retirement
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
aeXS0sm67ajO+lCx2T9AeoszTOsTF86K5xTvXestFUsA+EH/lbZK5l+R/7dV
LBUA8Kn39v0v0uNvnk2x+fhLdiO0yML2sJk8ZWYjpxxbJYe701ix0J4XIEIY
PFwCe6hq+SjkFk+Y/SfiCvAQFTFzO9ccPWOtcTIEaBBl1e/uOkSusPpWNr4R
6wKqxUaYrrRew0c0R0FcIMbtEoivKOIsFEna8L9SdmaRGZE4o1o6ga5wR7DA
6epN6YZSSdywLTGwgNYES9NQ2l2ulmi9sfssBKRhZHzZmVBhyyLof3NbL1OE
2Z1hDkBFouK6IbspvYw+nzC7Sfknsy8uE34lZ04X+7LqhUdFD4sfw7g13HgN
kwQkRc2GQ3LXSB3IzeKpqgxMvx2nooe8V8G4/+zrTEnkxoIuFKxGF7dFmChy
6IvC6N2VtoGxvz7TzY4v62Csl/VyRAgSSjh6yCPCrNRAuIxYTVR8pJ4OHhH1
Yv27uF9o3gYtCllvHvzJ8KXII1yLVx/WcVpneRT1pqzcm7usJjvI1Sklu7us
lxVkK+50cVgZPW8t07w6w39ML1Qfdx7LKolDtnY63OKIkCVYqyH5HjI37qij
uexXr+QnDcZZx4s+4mzVp4KWGD0iSmOzy3jkTGkYnug83CoEkrV0V/1V6cHj
YeLwxMDIgq7KDMDNYbdkdetpfZJl7t1q58DyGqfhVGd9a5mwwWVOKwdahbHQ
2PcurntUwg67gDK+Vmbg0Wr1UTwbQE1uQeZm5wpZqlS7xayz2Alfjm0pFN8A
zkie0A+CydMDk0TwhOz9JjX8/SAwqzjMP/9wLXtheHZtQ6znyvrWp4kbeCOu
T2PlKIaXfEqtNnLXIeTKEwZLJGFBD019nl37+tixAzeSFaAAqydUsfz/RrvQ
kEXkSi95rqg+eAsYstZrDg97LIUZwvVCIz3mdiqBg78ODkd6wjZIXe25OOiA
A3iQ2DBBBfP0Yejm6sZ2qeLfF5nh18/2sPDrjI0m1xCatnfOp8+P3hbWXSz9
Z3rs7QtputIQIeNSkECSx1TYwxHqUJ2vHBkUCmEsjqvVEBVPpxAwJrQVEhAP
Hl7QJf3lMX4e8pI53NdQkuS2rfNcZZaI5pKl1yqxYJA8+Ygi5A66ytFMJ9EM
EXgLSylE5FAqadSm5lqVnTMsDW8nNAfq8HIg/nlmHNidqHGx9GGY/HvoDIy8
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
vZgGelzPMxLPIV7MWHC4dzkoFN85uMtjsD9//4/ne4+yvgNviOLpQzlg4Q3T
XgOZ2CtYU4j35GLCklc2UxRKmzAZ9s3gpAoTu7i/mHuYY6aas5NsV7P5JU5N
sbZ+L8TJjfkz8OSfn88tr69bQ8aTar2lr2YXLU7yHGYi1gQzqtPH3KMAd9nM
6vDEHVlEW9vh6eRfYXZFj1Cx+H5HHzn6DFndA2VlOZNIHT4M184vPWTn2/Lm
9htfptAZQs8dXlieWX34ahC3bnGrmYdYAwd4MZCEa1gCv0mN4tq/ujzZgpNr
S2jVpeG5w5TT+FhwKiDY11O5SbzdFxFDWeV6MlsFNpRC+438jQoh0XVnp4o2
zsi+TbD1PrKMPtQrm9Pekp6wurcHOYO4KFeQ1Di/UPZSWmHSugCMPgsQeuFH
57rR9+iLGM5f0QTSKNRkqj1GDM0qg1wu6LE8TIlhLwVTL7Xh/vQGIuF4ypyH
zfrk61+myFh3si+LveiVrE+e6y7nD0CvfUFysJSbiZ+TdulC1/C6hR1EVfTN
xBCzkztYnzdcprXUEJOtsd2cnarn5hM5qWS/leUw62MxsovPSWwfaBgwtBfb
Y/XuuJOzRsnZhYkiXuFj8CU8qiU9OXZvmUV6cXieN9fL1OEpdz1fD89d2tyg
elaKi1ifJ1bmw/vUX8x7oXWkIYVTqLfbvGUjOn0HFFWWb17jevXI1Hfs2gBc
837HAGu+VX68pTUKwic16JLv5a7IjkA/cV2uKgqNHIYYeTeKUV7b7mloKL6T
UNa3f5DB9dzDhpBgJsEcJDNbHiajzAaI3RR0sGq0GQNGsuEMpizKpussGxGe
lGjBzhNakc2E19g1XgLvvp4w3Z0fmZ9dfgAlXBjNcz3H7t03jiOheWxr2BY0
COeJmtlSwmrwPSbXFWXHXPsAJfMj6TK8VEweHhEDDf3VtX5rVqzrY/dyDlnv
Ftx+vKPfhqpDk3ewFa3h36SGmcjVoyVCnwze6EbnHu4x8Ymx+DQ1wvwNSnip
LYHk1ltLbmjEWyJ4ih3dBfe9ca672vW52QV2u6FrosK3We16ESlFx9hZIVbP
Y92tWL2yxwnIpKET+GY9b5R3epYM66NsKyHYe1NpzqECY80hPGuCoX9xIyRp
dX5ljZck7f3IhZy03YO7iWre1WB8a/DTVp434LB615vDOvgR0DsYs8YT8GTI
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
XnfYJf5PeqLZ9VYm//OLLFKpVatsfOYZzOw1i5keidXodMUzgP1ifQfeEMVT
COYzbKzBXJIHTd651jd7D+wjzJCrD7e3THhlZmXjWEfWRqzqvDFaopaTaqym
PRK8cOwMFDILqvNFbKil3ibOmTAHXwaG4I1z3VDO/0zdMJl7sQ+j4rkq0bEh
RDVj7NmzccMdzSQzwUfDsfOEY2e/7ebtfljOzcXl14JJUwd0BeCO2iJGbfZH
1O4daY3Qlu+3dS+tS3ytiMeCXRfTX51oVRLF5t5xDgbVeCgl28fICof5dXAs
t2rXp2fvsUCas5OGQpedpWVu75Hce97qaMxcyNL7HX3t5WpTOC87gbsmW5MO
9H3h9fjuOTl1cNh4C3lXePQRy/5HwRvOzq3YrSv2PDrZ9026nZ5dNNoStlTK
wca01WR8SXQbxctuH5De2sZ2bnY5nV8AlYaffXOLZtvI/XL0zc0U7gnJnzV8
fTX0Z+e9hVqszzi46F05hUJp2259Yj2EZl4cub1NDrRPUxPiR/JaxiJtN7Fg
3nSMUgXOk5lbyOYXczQ5gLT5FRiY78fc1R2qnBAOI8mUpQdMHZUOMY4dkI/3
gaM1TkOSt/HGYGKZXXsA6yB2EkKV7Gs5rEKKM81bfpffvvRXQ0WY2P4KKlE5
V4wuPHglSBtDWkljfV28HKN304RrrFaqjQvcQFe9xxXPM/ZwcouNrykUjwGl
q/EHOlEWtWtiYQmmuMsjs/NLD/kVXWP3li8Nz38cvuGisKk5hwQpHy8/Kwvk
D99kfY/oodMb5SUtF4K/EhdytaIHxsUHsRJDax+chkq83NYtCW+eGCyc+QiX
IgU6qQkxmGw5IrNjtjT1oZMlYP2+DZ9dLVFr407337YJfmAj6n1x6+BCI0UR
Xof3MQXuDWUhtGIb6U0B6EMAa2KjP85aeXRjJv2+8EVuiqNstR9nd/jK1IF2
fqva9Xh6Dwnj93RKIe/oKVfbeHed3jidthH7nFwiVoUcfDbIzg0mldbt6nD+
+NWB49f6jl3pB2IJCoa7vOdW0KWDqpiwG4Fdnvje9Ll3dom4RAEDecQEvt+O
pGVts2hfevVRZKCR6o/a60PFc7Gx9pYP8GGF5CAp+z+XNkvX8/dBn+ERsERC
F6WcBrzAWuc0AWX43Ngaq4wUf6Mfd7K+3SjVH8P62F9nfH30SouRufc6cu93
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
    "], {{0, 136}, {850, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> All, Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Magnification[1],
  ImageSizeRaw->{850, 136},
  PlotRange->{{0, 850}, {0, 136}}]], "PluginEmbeddedContent",
 CellChangeTimes->{3.5185072127170887`*^9, 3.5185072519880157`*^9, 
  3.5189075660373325`*^9, 3.518929021204753*^9}],

Cell["Retirement Planning Group",
 CellFrame->{{0, 0}, {1, 0}},
 CellMargins->{{90, 90}, {10, 30}},
 CellFrameColor->RGBColor[0.258824, 0.596078, 0.709804],
 FontFamily->"Georgia",
 FontSize->21,
 FontSlant->"Italic",
 FontColor->RGBColor[0.258824, 0.596078, 0.709804],
 Background->None],

Cell["\<\
The key to successful retirement income planning is determining how much you\
\[CloseCurlyQuote]ll need to save and creating an investment plan to get \
there. Use the interactive tools below to see how changes to salary, \
contributions, employer match, retirement age, and rate of return will affect \
your retirement savings plan.\
\>",
 CellMargins->{{90, 90}, {20, 10}},
 CellChangeTimes->{
  3.518908566550902*^9, {3.518929398481753*^9, 3.5189293992937527`*^9}, {
   3.5193806411893053`*^9, 3.5193806570562124`*^9}},
 TextJustification->1.,
 LineSpacing->{1.25, 0},
 FontFamily->"Arial",
 FontSize->13,
 FontColor->GrayLevel[
   Rational[1, 3]],
 Background->None],

Cell[BoxData[
 DynamicModuleBox[{}, 
  TagBox[GridBox[{
     {
      TemplateBox[{DynamicBox[
         ToBoxes[
          
          With[{$CellContext`sel$ = 
            PlanYourRetirement`Private`selector === Part[{1}, 1]}, 
           EventHandler[
            MouseAppearance[
             Overlay[{
               If[$CellContext`sel$, 
                Image[CompressedData["
1:eJzt1stPE1EUx3GiLvw3/BOMishDEBV5KbTSFpeQ6M6YqInR+B9YXhVBFKS1
tNBpZwApVeRRaKktEFfujCsjG1csdK3nnnvvdAZM3J4mh3z45czA7htCT/Xf
8945VlVV9eAkjLfv0aX79/se3zwBD82PH97uPw7Hafgeh29x/8GvHwe/nqaL
TSHrbDBx9lkC9syzOUYHRNE3HInqoHE3tfX5+88/+iv79UdjyDoXNKAdLh4D
YhkRkEMIGuUDTRS+QMH9g98XQ1b1gFE9kMDVBuGXE4wIZxdRatBQBozct/0n
y6XzQ8nzg2joyDJCDNcOqds7lWl9uVQznLqAaoYYadgoKQ9nrwvDJkq5l1Fj
1o4Iupdpv7HVjVh1IatWLT4ySmpHVB0nx5uFutB8/XPYBXsZTRjLNm9vw4vF
+lGxEtyMrIZRFat+VFqQR+OLdy5jjLCjpcS92DSWbhxbagLj8kgz2jAWHONp
WQ3u5pfLlycUuBl5aXmIXhP2Zq68ysBixwyjTJbCXdbVxCN6jzJXX79nlEEm
xy3CXcVwLZMr1yZXWiY/4K5cm2KEYSA7kzogHOybjy1T0oo+GFEQy9HLfrnq
9pGR1TotA63iIbTitk07hN2PjKCw2lbn4/Rqe3itHXZ6jdHXhqXKC+1AZL0t
vNYWXm9HeDO6dC+wLh9BR1iAmvJglKlMslqkXK09stER2ZArD0aWaPTWDd90
goheVhnWXY8iYrYzmsWaahlp0cNvOt5mr0cdZtyPjKTO6IbjUdw3opvIPhht
M5vuWFn5siuGP5LL6FOlsvpNtju21TWzJVcejDKZSRD3pnoTy3XFc2KlOKsE
MVey7lhOV8554ow02QhieVS4nEfmi+e7Z/Oe2bw44EfxPCNPZHIm884JnllW
EXL27S0/5jxz255ZVpl0u5uJbe+caxlZ7kD5f/1OQS+jKnHoDWQVB2yPIRYq
47HNaLOTiUfd7pNTj8Go07EKegvyvS8JK+8CI8tnODM5yxZ9RtFeRhk2clZT
hy9Z9KeK/qQ4GHH+8n6ybzxK/mTJp0DQEqMrqQ5fORweqVLALIk/xpQsWGRk
BSAWOhQxkNrBdjsB5GeEBUzh6F8iR6wkENES+9+InJIu+MdniuWIlavX3A2Y
u7AcsXL1zu+CgLVrf8LRn3Z2OGKl6LVURMfLkg7HEanrtfag4C1rT5jf85vq
kyp8zgF/AZoG9So=
                 "], "Byte", ColorSpace -> "RGB", ImageSize -> 
                 All, Interleaving -> True], 
                Image[CompressedData["
1:eJzt3FtKw0AYhuGiXrgNl+ASdAl1BS3orVAF6UrcVGmhLaSHtJ3JyXiOJh7j
6ZeICD1I9SL5hu+BhMndwHsx899ko7pf3lsplUoH6/IqV462arVKfWdNPrbr
h7vVVVlsynMsz+f6nYiIiMgscRyHYegTjiiKvvOlaWpZVqfTsQhKt9tttVpJ
kkjEZrNp27ZDgJRS7XZbFtI0773Q32mtG43GYDBwCVl2FHqErN/vMyK6LGLe
l2X6FzkQJWJAyBjRABKx1+udELLhcCgRQ0Jm27bcbU4JWRbxjJCNRiM5Fs8J
WRbxgpCNx2NGRJdFvCRkjGgAiSij4hUhm0wmEvGakDGiASSizPvRfHlvkL4s
aKSUkog3hExrLfP+LSFjRANkEWNC5jiOjIoJIcsi3hEy13Ul4j0hY0QDSESZ
9x8Imed5EvGRkPm+r5R6ImSMaIAs4jNBkXA/P4MgWBAxpeJhRAMsG/GFimfZ
iK9UPIxogGUjvlHxzIyotZ4+PfPeKc01HWtexPz+T0a/mBnxA53FtRk=
                 "], 
                 "Byte", ColorSpace -> "RGB", ImageSize -> All, Interleaving -> 
                 True]], 
               Style[
                Column[{
                  Row[{
                    Spacer[{1, 
                    If[$CellContext`sel$, 22, 25]}], 
                    Part[{"Watch Your", "Balance Grow"}, 1]}], 
                  Part[{"Watch Your", "Balance Grow"}, 2]}, 
                 Alignment -> {Left, Top}], 
                
                If[$CellContext`sel$, {
                 FontFamily -> "Arial", FontSize -> 13, FontColor -> 
                  GrayLevel[1], FontWeight -> Bold}, {
                 FontFamily -> "Arial", FontSize -> 11, FontColor -> 
                  GrayLevel[0.54], FontWeight -> Bold}]]}, 
              Alignment -> {Center, Top}], 
             If[$CellContext`sel$, "Arrow", "LinkHand"]], {
            "MouseClicked" :> (PlanYourRetirement`Private`selector = 
              Part[{1}, 1])}]], StandardForm], 
         ImageSizeCache -> {151., {21., 28.}}],DynamicBox[
         ToBoxes[
          
          With[{$CellContext`sel$ = 
            PlanYourRetirement`Private`selector === Part[{2}, 1]}, 
           EventHandler[
            MouseAppearance[
             Overlay[{
               If[$CellContext`sel$, 
                Image[CompressedData["
1:eJzt1stPE1EUx3GiLvw3/BOMishDEBV5KbTSFpeQ6M6YqInR+B9YXhVBFKS1
tNBpZwApVeRRaKktEFfujCsjG1csdK3nnnvvdAZM3J4mh3z45czA7htCT/Xf
8945VlVV9eAkjLfv0aX79/se3zwBD82PH97uPw7Hafgeh29x/8GvHwe/nqaL
TSHrbDBx9lkC9syzOUYHRNE3HInqoHE3tfX5+88/+iv79UdjyDoXNKAdLh4D
YhkRkEMIGuUDTRS+QMH9g98XQ1b1gFE9kMDVBuGXE4wIZxdRatBQBozct/0n
y6XzQ8nzg2joyDJCDNcOqds7lWl9uVQznLqAaoYYadgoKQ9nrwvDJkq5l1Fj
1o4Iupdpv7HVjVh1IatWLT4ySmpHVB0nx5uFutB8/XPYBXsZTRjLNm9vw4vF
+lGxEtyMrIZRFat+VFqQR+OLdy5jjLCjpcS92DSWbhxbagLj8kgz2jAWHONp
WQ3u5pfLlycUuBl5aXmIXhP2Zq68ysBixwyjTJbCXdbVxCN6jzJXX79nlEEm
xy3CXcVwLZMr1yZXWiY/4K5cm2KEYSA7kzogHOybjy1T0oo+GFEQy9HLfrnq
9pGR1TotA63iIbTitk07hN2PjKCw2lbn4/Rqe3itHXZ6jdHXhqXKC+1AZL0t
vNYWXm9HeDO6dC+wLh9BR1iAmvJglKlMslqkXK09stER2ZArD0aWaPTWDd90
goheVhnWXY8iYrYzmsWaahlp0cNvOt5mr0cdZtyPjKTO6IbjUdw3opvIPhht
M5vuWFn5siuGP5LL6FOlsvpNtju21TWzJVcejDKZSRD3pnoTy3XFc2KlOKsE
MVey7lhOV8554ow02QhieVS4nEfmi+e7Z/Oe2bw44EfxPCNPZHIm884JnllW
EXL27S0/5jxz255ZVpl0u5uJbe+caxlZ7kD5f/1OQS+jKnHoDWQVB2yPIRYq
47HNaLOTiUfd7pNTj8Go07EKegvyvS8JK+8CI8tnODM5yxZ9RtFeRhk2clZT
hy9Z9KeK/qQ4GHH+8n6ybzxK/mTJp0DQEqMrqQ5fORweqVLALIk/xpQsWGRk
BSAWOhQxkNrBdjsB5GeEBUzh6F8iR6wkENES+9+InJIu+MdniuWIlavX3A2Y
u7AcsXL1zu+CgLVrf8LRn3Z2OGKl6LVURMfLkg7HEanrtfag4C1rT5jf85vq
kyp8zgF/AZoG9So=
                 "], "Byte", ColorSpace -> "RGB", ImageSize -> 
                 All, Interleaving -> True], 
                Image[CompressedData["
1:eJzt3FtKw0AYhuGiXrgNl+ASdAl1BS3orVAF6UrcVGmhLaSHtJ3JyXiOJh7j
6ZeICD1I9SL5hu+BhMndwHsx899ko7pf3lsplUoH6/IqV462arVKfWdNPrbr
h7vVVVlsynMsz+f6nYiIiMgscRyHYegTjiiKvvOlaWpZVqfTsQhKt9tttVpJ
kkjEZrNp27ZDgJRS7XZbFtI0773Q32mtG43GYDBwCVl2FHqErN/vMyK6LGLe
l2X6FzkQJWJAyBjRABKx1+udELLhcCgRQ0Jm27bcbU4JWRbxjJCNRiM5Fs8J
WRbxgpCNx2NGRJdFvCRkjGgAiSij4hUhm0wmEvGakDGiASSizPvRfHlvkL4s
aKSUkog3hExrLfP+LSFjRANkEWNC5jiOjIoJIcsi3hEy13Ul4j0hY0QDSESZ
9x8Imed5EvGRkPm+r5R6ImSMaIAs4jNBkXA/P4MgWBAxpeJhRAMsG/GFimfZ
iK9UPIxogGUjvlHxzIyotZ4+PfPeKc01HWtexPz+T0a/mBnxA53FtRk=
                 "], 
                 "Byte", ColorSpace -> "RGB", ImageSize -> All, Interleaving -> 
                 True]], 
               Style[
                Column[{
                  Row[{
                    Spacer[{1, 
                    If[$CellContext`sel$, 22, 25]}], 
                    Part[{"Take Advantage of", "Employer Match"}, 1]}], 
                  Part[{"Take Advantage of", "Employer Match"}, 2]}, 
                 Alignment -> {Left, Top}], 
                
                If[$CellContext`sel$, {
                 FontFamily -> "Arial", FontSize -> 13, FontColor -> 
                  GrayLevel[1], FontWeight -> Bold}, {
                 FontFamily -> "Arial", FontSize -> 11, FontColor -> 
                  GrayLevel[0.54], FontWeight -> Bold}]]}, 
              Alignment -> {Center, Top}], 
             If[$CellContext`sel$, "Arrow", "LinkHand"]], {
            "MouseClicked" :> (PlanYourRetirement`Private`selector = 
              Part[{2}, 1])}]], StandardForm], 
         ImageSizeCache -> {151., {21., 28.}}],DynamicBox[
         ToBoxes[
          
          With[{$CellContext`sel$ = 
            PlanYourRetirement`Private`selector === Part[{3}, 1]}, 
           EventHandler[
            MouseAppearance[
             Overlay[{
               If[$CellContext`sel$, 
                Image[CompressedData["
1:eJzt1stPE1EUx3GiLvw3/BOMishDEBV5KbTSFpeQ6M6YqInR+B9YXhVBFKS1
tNBpZwApVeRRaKktEFfujCsjG1csdK3nnnvvdAZM3J4mh3z45czA7htCT/Xf
8945VlVV9eAkjLfv0aX79/se3zwBD82PH97uPw7Hafgeh29x/8GvHwe/nqaL
TSHrbDBx9lkC9syzOUYHRNE3HInqoHE3tfX5+88/+iv79UdjyDoXNKAdLh4D
YhkRkEMIGuUDTRS+QMH9g98XQ1b1gFE9kMDVBuGXE4wIZxdRatBQBozct/0n
y6XzQ8nzg2joyDJCDNcOqds7lWl9uVQznLqAaoYYadgoKQ9nrwvDJkq5l1Fj
1o4Iupdpv7HVjVh1IatWLT4ySmpHVB0nx5uFutB8/XPYBXsZTRjLNm9vw4vF
+lGxEtyMrIZRFat+VFqQR+OLdy5jjLCjpcS92DSWbhxbagLj8kgz2jAWHONp
WQ3u5pfLlycUuBl5aXmIXhP2Zq68ysBixwyjTJbCXdbVxCN6jzJXX79nlEEm
xy3CXcVwLZMr1yZXWiY/4K5cm2KEYSA7kzogHOybjy1T0oo+GFEQy9HLfrnq
9pGR1TotA63iIbTitk07hN2PjKCw2lbn4/Rqe3itHXZ6jdHXhqXKC+1AZL0t
vNYWXm9HeDO6dC+wLh9BR1iAmvJglKlMslqkXK09stER2ZArD0aWaPTWDd90
goheVhnWXY8iYrYzmsWaahlp0cNvOt5mr0cdZtyPjKTO6IbjUdw3opvIPhht
M5vuWFn5siuGP5LL6FOlsvpNtju21TWzJVcejDKZSRD3pnoTy3XFc2KlOKsE
MVey7lhOV8554ow02QhieVS4nEfmi+e7Z/Oe2bw44EfxPCNPZHIm884JnllW
EXL27S0/5jxz255ZVpl0u5uJbe+caxlZ7kD5f/1OQS+jKnHoDWQVB2yPIRYq
47HNaLOTiUfd7pNTj8Go07EKegvyvS8JK+8CI8tnODM5yxZ9RtFeRhk2clZT
hy9Z9KeK/qQ4GHH+8n6ybzxK/mTJp0DQEqMrqQ5fORweqVLALIk/xpQsWGRk
BSAWOhQxkNrBdjsB5GeEBUzh6F8iR6wkENES+9+InJIu+MdniuWIlavX3A2Y
u7AcsXL1zu+CgLVrf8LRn3Z2OGKl6LVURMfLkg7HEanrtfag4C1rT5jf85vq
kyp8zgF/AZoG9So=
                 "], "Byte", ColorSpace -> "RGB", ImageSize -> 
                 All, Interleaving -> True], 
                Image[CompressedData["
1:eJzt3FtKw0AYhuGiXrgNl+ASdAl1BS3orVAF6UrcVGmhLaSHtJ3JyXiOJh7j
6ZeICD1I9SL5hu+BhMndwHsx899ko7pf3lsplUoH6/IqV462arVKfWdNPrbr
h7vVVVlsynMsz+f6nYiIiMgscRyHYegTjiiKvvOlaWpZVqfTsQhKt9tttVpJ
kkjEZrNp27ZDgJRS7XZbFtI0773Q32mtG43GYDBwCVl2FHqErN/vMyK6LGLe
l2X6FzkQJWJAyBjRABKx1+udELLhcCgRQ0Jm27bcbU4JWRbxjJCNRiM5Fs8J
WRbxgpCNx2NGRJdFvCRkjGgAiSij4hUhm0wmEvGakDGiASSizPvRfHlvkL4s
aKSUkog3hExrLfP+LSFjRANkEWNC5jiOjIoJIcsi3hEy13Ul4j0hY0QDSESZ
9x8Imed5EvGRkPm+r5R6ImSMaIAs4jNBkXA/P4MgWBAxpeJhRAMsG/GFimfZ
iK9UPIxogGUjvlHxzIyotZ4+PfPeKc01HWtexPz+T0a/mBnxA53FtRk=
                 "], 
                 "Byte", ColorSpace -> "RGB", ImageSize -> All, Interleaving -> 
                 True]], 
               Style[
                Column[{
                  Row[{
                    Spacer[{1, 
                    If[$CellContext`sel$, 22, 25]}], 
                    Part[{"Account for", "Inflation"}, 1]}], 
                  Part[{"Account for", "Inflation"}, 2]}, 
                 Alignment -> {Left, Top}], 
                
                If[$CellContext`sel$, {
                 FontFamily -> "Arial", FontSize -> 13, FontColor -> 
                  GrayLevel[1], FontWeight -> Bold}, {
                 FontFamily -> "Arial", FontSize -> 11, FontColor -> 
                  GrayLevel[0.54], FontWeight -> Bold}]]}, 
              Alignment -> {Center, Top}], 
             If[$CellContext`sel$, "Arrow", "LinkHand"]], {
            "MouseClicked" :> (PlanYourRetirement`Private`selector = 
              Part[{3}, 1])}]], StandardForm], 
         ImageSizeCache -> {151., {21., 28.}}],DynamicBox[
         ToBoxes[
          
          With[{$CellContext`sel$ = 
            PlanYourRetirement`Private`selector === Part[{4}, 1]}, 
           EventHandler[
            MouseAppearance[
             Overlay[{
               If[$CellContext`sel$, 
                Image[CompressedData["
1:eJzt1stPE1EUx3GiLvw3/BOMishDEBV5KbTSFpeQ6M6YqInR+B9YXhVBFKS1
tNBpZwApVeRRaKktEFfujCsjG1csdK3nnnvvdAZM3J4mh3z45czA7htCT/Xf
8945VlVV9eAkjLfv0aX79/se3zwBD82PH97uPw7Hafgeh29x/8GvHwe/nqaL
TSHrbDBx9lkC9syzOUYHRNE3HInqoHE3tfX5+88/+iv79UdjyDoXNKAdLh4D
YhkRkEMIGuUDTRS+QMH9g98XQ1b1gFE9kMDVBuGXE4wIZxdRatBQBozct/0n
y6XzQ8nzg2joyDJCDNcOqds7lWl9uVQznLqAaoYYadgoKQ9nrwvDJkq5l1Fj
1o4Iupdpv7HVjVh1IatWLT4ySmpHVB0nx5uFutB8/XPYBXsZTRjLNm9vw4vF
+lGxEtyMrIZRFat+VFqQR+OLdy5jjLCjpcS92DSWbhxbagLj8kgz2jAWHONp
WQ3u5pfLlycUuBl5aXmIXhP2Zq68ysBixwyjTJbCXdbVxCN6jzJXX79nlEEm
xy3CXcVwLZMr1yZXWiY/4K5cm2KEYSA7kzogHOybjy1T0oo+GFEQy9HLfrnq
9pGR1TotA63iIbTitk07hN2PjKCw2lbn4/Rqe3itHXZ6jdHXhqXKC+1AZL0t
vNYWXm9HeDO6dC+wLh9BR1iAmvJglKlMslqkXK09stER2ZArD0aWaPTWDd90
goheVhnWXY8iYrYzmsWaahlp0cNvOt5mr0cdZtyPjKTO6IbjUdw3opvIPhht
M5vuWFn5siuGP5LL6FOlsvpNtju21TWzJVcejDKZSRD3pnoTy3XFc2KlOKsE
MVey7lhOV8554ow02QhieVS4nEfmi+e7Z/Oe2bw44EfxPCNPZHIm884JnllW
EXL27S0/5jxz255ZVpl0u5uJbe+caxlZ7kD5f/1OQS+jKnHoDWQVB2yPIRYq
47HNaLOTiUfd7pNTj8Go07EKegvyvS8JK+8CI8tnODM5yxZ9RtFeRhk2clZT
hy9Z9KeK/qQ4GHH+8n6ybzxK/mTJp0DQEqMrqQ5fORweqVLALIk/xpQsWGRk
BSAWOhQxkNrBdjsB5GeEBUzh6F8iR6wkENES+9+InJIu+MdniuWIlavX3A2Y
u7AcsXL1zu+CgLVrf8LRn3Z2OGKl6LVURMfLkg7HEanrtfag4C1rT5jf85vq
kyp8zgF/AZoG9So=
                 "], "Byte", ColorSpace -> "RGB", ImageSize -> 
                 All, Interleaving -> True], 
                Image[CompressedData["
1:eJzt3FtKw0AYhuGiXrgNl+ASdAl1BS3orVAF6UrcVGmhLaSHtJ3JyXiOJh7j
6ZeICD1I9SL5hu+BhMndwHsx899ko7pf3lsplUoH6/IqV462arVKfWdNPrbr
h7vVVVlsynMsz+f6nYiIiMgscRyHYegTjiiKvvOlaWpZVqfTsQhKt9tttVpJ
kkjEZrNp27ZDgJRS7XZbFtI0773Q32mtG43GYDBwCVl2FHqErN/vMyK6LGLe
l2X6FzkQJWJAyBjRABKx1+udELLhcCgRQ0Jm27bcbU4JWRbxjJCNRiM5Fs8J
WRbxgpCNx2NGRJdFvCRkjGgAiSij4hUhm0wmEvGakDGiASSizPvRfHlvkL4s
aKSUkog3hExrLfP+LSFjRANkEWNC5jiOjIoJIcsi3hEy13Ul4j0hY0QDSESZ
9x8Imed5EvGRkPm+r5R6ImSMaIAs4jNBkXA/P4MgWBAxpeJhRAMsG/GFimfZ
iK9UPIxogGUjvlHxzIyotZ4+PfPeKc01HWtexPz+T0a/mBnxA53FtRk=
                 "], 
                 "Byte", ColorSpace -> "RGB", ImageSize -> All, Interleaving -> 
                 True]], 
               Style[
                Column[{
                  Row[{
                    Spacer[{1, 
                    If[$CellContext`sel$, 22, 25]}], 
                    Part[{"Work Longer or", "Contribute More?"}, 1]}], 
                  Part[{"Work Longer or", "Contribute More?"}, 2]}, 
                 Alignment -> {Left, Top}], 
                
                If[$CellContext`sel$, {
                 FontFamily -> "Arial", FontSize -> 13, FontColor -> 
                  GrayLevel[1], FontWeight -> Bold}, {
                 FontFamily -> "Arial", FontSize -> 11, FontColor -> 
                  GrayLevel[0.54], FontWeight -> Bold}]]}, 
              Alignment -> {Center, Top}], 
             If[$CellContext`sel$, "Arrow", "LinkHand"]], {
            "MouseClicked" :> (PlanYourRetirement`Private`selector = 
              Part[{4}, 1])}]], StandardForm], 
         ImageSizeCache -> {151., {21., 28.}}]},
       "Row",
       DisplayFunction->(
        RowBox[{#, "\[InvisibleSpace]", #2, "\[InvisibleSpace]", #3, 
          "\[InvisibleSpace]", #4}]& ),
       InterpretationFunction->(RowBox[{"Row", "[", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], "]"}]& )]},
     {
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt2tlOE1EAxnGiXvgAvoCPoo+ATwCJ3qJANIREjdErRVwC7mtMjBoJixKV
SJG2tFagpaUtUJayLy0UutOC9UCkOXTOnDmdttAO3y8HUwIXJE38fzPT05VV
5ReOlZWV1Zwk/5RXXDlTXV1Rd+4E+eZsXe35yuPkxSny9ZH8zs7rWHIrmkiS
E95MhuKJYDyxHtsMRONrkbg/HFsJRZdD0YWNyPx6eDYQ8q4GJ/0bHt/66ErA
vbTmXFy1L/htc76B2ZU/M8tm75JxcrF3YqHHM989Ntc1MvPNPf3V6e0Ynmq1
T7YMTXyyjX8Y9LwfGHvXP/rWMvLG4n5ldr0wu571OZ8Yhx8bh5sNjia942Gv
/cGvIXLu9djIadTZ7upsDTprQ7f11o/++k5Lbbspl1PTxvsRzsGciy2Gqs/6
qhb2udSiv9yqr2vT17fpr7bjFMHBG1FsB+9Izudau0HFud6xc+jX/8/utze+
GG92mm7/HCTnTreVHFKunX7prI0kZ7tRu78bOFK6Jr29We94ZHCQAj7tcz43
OV+aXa9/u0kfSSVJK0kxSTdJPUlDSUk7Xd7v7pmu0VmdZ653fN4wsWCaWrRM
L/fPrFjnfPZ5P4kySTMJ9LhvfWp1w7sWJOEm+V4MRkjKfeHYaiRG4k4qT1r/
V2J7vy1KkpKgbO6J74pRonsilDAlRAnK2ACNWoMi45dx2H/XkYZ3pCQEAgH+
f3dygQvtl44jHc10SdNtje9J9zddZLrUdMHpskvTrzgA6A0gHQDpv0f1AODP
AKwCAAAoToLlUux+Lumn6y+X/kLUnzkAClT/w36fAQAAMqmuv9wAyPuFP6f+
hRsAWW2AbG8FAAAAFDNm48L7HcyFfyqVEhwAIp8BkA4AkacA0iUgMgkAAABK
DjN2GUGkL5ml3c/LVT+n/uJ3AJgDQPFjAOIbAJMAAABKjkjRpB1UkX7Bq/6M
+udlADAfAYjcBGBuAMEZAAAAUIqY4WN2X3X6+Y/7U5Q8PgLgbICMGZCxBDh7
AAAAQDOk7eNEn+6+ihv+25JP+onUPy8DgHMfQG4DYA8AAIA28BuX0X1O+pmX
/Fld9WdVf/FHAJyPASjeBBCZAQAAANrAjKDIJX+O6c+of4EGgOIGkJsB2AMA
AKAxnNhxuq86/YWof1YDQGQDKM4AAAAAjZGmkNP9vKRfWv/cBwDnYwDSASC3
ATAGAABAqzjVk1aSk/781r8QG4C5BJhjQHwYAAAAlChO+6StVBF9Tvc56Ves
P3MAqN4AijMAAABA25hxVOy+ivTz66/uDgBzAIhvAIwBAAA4OjgdlHYzX+kX
qb/ITQC5GSC+BLIaBgAAAJrBDyIzo6qjL9j93B8EcDaA4BIAAAA4ajjdlEtt
IdIveAdA9QbAHgAAgCNLJI6cvAoGOiPr/wBggZNq
         "], {{0, 20}, {682, 0}}, {0,
          255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", ImageSize -> All, Interleaving -> True],
        Selectable->False],
       BaseStyle->"ImageGraphics",
       ImageSize->Magnification[1],
       ImageSizeRaw->{682, 20},
       PlotRange->{{0, 682}, {0, 20}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Column"],
  DynamicModuleValues:>{},
  Initialization:>(PlanYourRetirement`Private`selector = 1)]],
 CellMargins->{{80, 90}, {7, 20}},
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.5193839563467317`*^9},
 ShowStringCharacters->False],

Cell[BoxData[
 DynamicBox[ToBoxes[
   StringJoin[
    Part[{{"Watch Your", "Balance Grow"}, {
      "Take Advantage of", "Employer Match"}, {"Account for", "Inflation"}, {
      "Work Longer or", "Contribute More?"}}, 
     PlanYourRetirement`Private`selector, 1], " ", 
    Part[{{"Watch Your", "Balance Grow"}, {
      "Take Advantage of", "Employer Match"}, {"Account for", "Inflation"}, {
      "Work Longer or", "Contribute More?"}}, 
     PlanYourRetirement`Private`selector, 2]], StandardForm],
  ImageSizeCache->{229., {1., 13.}}]],
 CellMargins->{{90, 90}, {15, 7}},
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.519383956387734*^9},
 ShowStringCharacters->False,
 FontFamily->"Arial",
 FontSize->18,
 FontWeight->Bold,
 FontColor->GrayLevel[
   Rational[1, 3]]],

Cell[BoxData[
 PaneBox[
  DynamicBox[ToBoxes[
    Switch[PlanYourRetirement`Private`selector, 1, 
     TextCell[
     "Meet your retirement goals by investing wisely. Create an optimal plan \
based on your current age, income, and expected annual return from \
investments. View how much savings you might have at retirement and how much \
more you might have if you make small annual increases to your \
contributions."], 2, 
     TextCell[
     "Many employers provide matching contributions to your retirement \
account. The match may vary from company to company, but is generally between \
3 to 6 percent of your pay. See how your employer's match affects your \
retirement income."], 3, 
     TextCell[
     "Planning for inflation is critical to the success of your retirement \
savings plan. Even at relatively low rates, inflation can greatly diminish \
your purchasing power over time. Most experts recommend that individuals \
calculate their retirement needs using a 3 percent inflation rate, the \
historic average."], 4, 
     TextCell[
     "You can achieve your retirement income goals in two ways. You can \
either work longer and contribute less, or work for a shorter period of time \
and contribute more. Today, many people expect to work past the traditional \
retirement age of 65. Check out when you can retire comfortably."]], 
    StandardForm],
   ImageSizeCache->{640., {43., 13.}}],
  ImageSize->{670, 70},
  ScrollPosition->{0., 0.}]],
 CellMargins->{{90, 90}, {15, 7}},
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.519383958879876*^9},
 LineSpacing->{1.25, 0},
 LineIndent->0,
 FontFamily->"Arial",
 FontSize->13,
 FontColor->GrayLevel[
   Rational[1, 3]]],

Cell[BoxData[
 FrameBox[
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`annualReturn$$ = 
     6, $CellContext`bgHighlight$$ = {
      RGBColor[0.95, 0.95, 1], 
      RGBColor[0.95, 0.95, 1], 
      RGBColor[0.95, 0.95, 1], 
      RGBColor[0.95, 0.95, 1], 
      RGBColor[0.95, 0.95, 1], 
      RGBColor[0.95, 0.95, 1]}, $CellContext`currentAge$$ = 
     30, $CellContext`currentSalary$$ = 30000, $CellContext`delta$$ = 
     Null, $CellContext`employerContribution$$ = 
     0, $CellContext`employerContributionMax$$ = 6, $CellContext`inflation$$ =
      3, $CellContext`open1$$ = False, $CellContext`open2$$ = 
     False, $CellContext`open3$$ = True, $CellContext`open4$$ = 
     False, $CellContext`open5$$ = False, $CellContext`principal$$ = 
     0, $CellContext`retireAge$$ = 65, $CellContext`salaryContribution$$ = 
     10, $CellContext`salaryIncrease$$ = 3, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`delta$$]}, {
       Hold[$CellContext`open1$$]}, {
       Hold[$CellContext`open2$$]}, {
       Hold[$CellContext`open3$$]}, {
       Hold[$CellContext`open4$$]}, {
       Hold[$CellContext`open5$$]}, {
       Hold[$CellContext`bgHighlight$$]}, {{
        Hold[$CellContext`currentAge$$], 30, ""}, 20, 80, 1}, {{
        Hold[$CellContext`retireAge$$], 65, ""}, 20, 80, 1}, {{
        Hold[$CellContext`currentSalary$$], 30000, ""}, 10000, 250000, 100}, {{
        Hold[$CellContext`salaryIncrease$$], 3, ""}, 1, 50, 1}, {{
        Hold[$CellContext`principal$$], 0, ""}, 0, 100000, 100}, {{
        Hold[$CellContext`salaryContribution$$], 10, ""}, 1, 50, 1}, {{
        Hold[$CellContext`annualReturn$$], 6, ""}, 0, 50, 1}, {{
        Hold[$CellContext`employerContribution$$], 0, ""}, 0, 100, 1}, {{
        Hold[$CellContext`employerContributionMax$$], 6, ""}, 0, 100, 1}, {{
        Hold[$CellContext`inflation$$], 3, ""}, 0, 100, 1}, {
       Hold[
        Pane[
         Column[{
           Dynamic[
            Pane[
             TextCell[
              Row[{"I am currently ", 
                
                Row[{$CellContext`currentAge$$}, 
                 BaseStyle -> {
                  FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                   RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                   Bold}], " and plan to retire at ", 
                
                Row[{$CellContext`retireAge$$}, 
                 BaseStyle -> {
                  FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                   RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                   Bold}], "."}]], {
             ImageSize -> 270, ImageMargins -> {{10, 15}, {0, 0}}, 
              BaseStyle -> {
               FontFamily -> "Arial", FontSize -> 14, FontColor -> GrayLevel[
                  Rational[1, 3]], FontSlant -> Plain}}]], 
           OpenerView[{"Change", 
             Column[{"How old are you?", 
               Row[{
                 Manipulate`Place[1], 
                 Spacer[5], 
                 InputField[
                  Dynamic[$CellContext`currentAge$$], Number, ImageSize -> 
                  30]}], "When are you planning to retire?", 
               Row[{
                 Manipulate`Place[2], 
                 Spacer[5], 
                 InputField[
                  Dynamic[$CellContext`retireAge$$], Number, ImageSize -> 
                  30]}]}, {
              Spacings -> {0, {2, 0.3, {1.5, 0.3}}}, Frame -> Opacity[0]}]}, 
            Dynamic[$CellContext`open1$$], {
            ImageSize -> 270, ImageMargins -> {{5, 0}, {0, 5}}}], 
           Dynamic[
            Pane[
             TextCell[
              Row[{"My salary is ", 
                
                Row[{"$", $CellContext`currentSalary$$}, 
                 BaseStyle -> {
                  FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                   RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                   Bold}], " and I expect an annual raise of ", 
                
                Row[{$CellContext`salaryIncrease$$, "%"}, 
                 BaseStyle -> {
                  FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                   RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                   Bold}], "."}]], {
             ImageSize -> 270, ImageMargins -> {{10, 15}, {0, 0}}, 
              BaseStyle -> {
               FontFamily -> "Arial", FontSize -> 14, FontColor -> GrayLevel[
                  Rational[1, 3]], FontSlant -> Plain}}]], 
           OpenerView[{"Change", 
             Column[{"What is your current annual salary?", 
               Row[{
                 Manipulate`Place[3], 
                 Spacer[5], "$", 
                 InputField[
                  Dynamic[$CellContext`currentSalary$$], Number, ImageSize -> 
                  50]}], "What is your expected annual raise?", 
               Row[{
                 Manipulate`Place[4], 
                 Spacer[5], 
                 InputField[
                  Dynamic[$CellContext`salaryIncrease$$], Number, ImageSize -> 
                  30], "%"}]}, {
              Spacings -> {0, {2, 0.3, {1.5, 0.3}}}, Frame -> Opacity[0]}]}, 
            Dynamic[$CellContext`open2$$], {
            ImageSize -> 270, ImageMargins -> {{5, 0}, {0, 5}}}], 
           Dynamic[
            Pane[
             TextCell[
              Row[{"My current balance is ", 
                
                Row[{"$", $CellContext`principal$$}, 
                 BaseStyle -> {
                  FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                   RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                   Bold}], " and I contribute ", 
                
                Row[{$CellContext`salaryContribution$$, "%"}, 
                 BaseStyle -> {
                  FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                   RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                   Bold}], " of my salary. I expect a ", 
                
                Row[{$CellContext`annualReturn$$, "%"}, 
                 BaseStyle -> {
                  FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                   RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                   Bold}], " annual return."}]], {
             ImageSize -> 270, ImageMargins -> {{10, 15}, {0, 0}}, 
              BaseStyle -> {
               FontFamily -> "Arial", FontSize -> 14, FontColor -> GrayLevel[
                  Rational[1, 3]], FontSlant -> Plain}}]], 
           OpenerView[{"Change", 
             Column[{"How much do you have in retirement savings?", 
               Row[{
                 Manipulate`Place[5], 
                 Spacer[5], "$", 
                 InputField[
                  Dynamic[$CellContext`principal$$], Number, ImageSize -> 
                  50]}], "What percent of your salary do you contribute?", 
               Row[{
                 Manipulate`Place[6], 
                 Spacer[5], 
                 InputField[
                  Dynamic[$CellContext`salaryContribution$$], Number, 
                  ImageSize -> 30], "%"}], 
               "What annual return do you expect?", 
               Row[{
                 Manipulate`Place[7], 
                 Spacer[5], 
                 InputField[
                  Dynamic[$CellContext`annualReturn$$], Number, ImageSize -> 
                  30], "%"}]}, {
              Spacings -> {0, {2, 0.3, {1.5, 0.3}}}, Frame -> Opacity[0]}]}, 
            Dynamic[$CellContext`open3$$], {
            ImageSize -> 270, ImageMargins -> {{5, 0}, {0, 5}}}], 
           Dynamic[
            Pane[
             TextCell[
              Row[{"My employer matches ", 
                
                Row[{$CellContext`employerContribution$$, "%"}, 
                 BaseStyle -> {
                  FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                   RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                   Bold}], " of my contribution up to ", 
                
                Row[{$CellContext`employerContributionMax$$, "%"}, 
                 BaseStyle -> {
                  FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                   RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                   Bold}], " of my salary."}]], {
             ImageSize -> 270, ImageMargins -> {{10, 15}, {0, 0}}, 
              BaseStyle -> {
               FontFamily -> "Arial", FontSize -> 14, FontColor -> GrayLevel[
                  Rational[1, 3]], FontSlant -> Plain}}]], 
           OpenerView[{"Change", 
             Column[{"How much does your employer match?", 
               Row[{
                 Manipulate`Place[8], 
                 Spacer[5], 
                 InputField[
                  Dynamic[$CellContext`employerContribution$$], Number, 
                  ImageSize -> 30], "%"}], 
               "What is the maximum employer match?", 
               Row[{
                 Manipulate`Place[9], 
                 Spacer[5], 
                 InputField[
                  Dynamic[$CellContext`employerContributionMax$$], Number, 
                  ImageSize -> 30], "%"}]}, {
              Spacings -> {0, {2, 0.3, {1.5, 0.3}}}, Frame -> Opacity[0]}]}, 
            Dynamic[$CellContext`open4$$], {
            ImageSize -> 270, ImageMargins -> {{5, 0}, {0, 5}}}], 
           Dynamic[
            Pane[
             TextCell[
              Row[{"Expected annual inflation is ", 
                
                Row[{$CellContext`inflation$$, "%"}, 
                 BaseStyle -> {
                  FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                   RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                   Bold}], "."}]], {
             ImageSize -> 270, ImageMargins -> {{10, 15}, {0, 0}}, 
              BaseStyle -> {
               FontFamily -> "Arial", FontSize -> 14, FontColor -> GrayLevel[
                  Rational[1, 3]], FontSlant -> Plain}}]], 
           OpenerView[{"Change", 
             Column[{"What is the expected annual inflation rate?", 
               Row[{
                 Manipulate`Place[10], 
                 Spacer[5], 
                 InputField[
                  Dynamic[$CellContext`inflation$$], Number, ImageSize -> 30],
                  "%"}]}, {
              Spacings -> {0, {2, 0.3, {1.5, 0.3}}}, Frame -> Opacity[0]}]}, 
            Dynamic[$CellContext`open5$$], {
            ImageSize -> 270, ImageMargins -> {{5, 0}, {0, 5}}}]}, 
          Dividers -> {False, {False, {False, 
              GrayLevel[0.85]}, False}}, Spacings -> {0, {0, {0, 2}, 0}}, 
          Background -> Dynamic[$CellContext`bgHighlight$$]], {310, 460}, 
         ImageSizeAction -> "Scrollable", Scrollbars -> {False, Automatic}, 
         AppearanceElements -> None]], Manipulate`Dump`ThisIsNotAControl}}, 
     Typeset`size$$ = {332., {227., 235.}}, Typeset`update$$ = 0, 
     Typeset`initDone$$, Typeset`skipInitDone$$ = 
     False, $CellContext`currentAge$4063$$ = 
     0, $CellContext`retireAge$4064$$ = 0, $CellContext`currentSalary$4065$$ =
      0, $CellContext`salaryIncrease$4066$$ = 
     0, $CellContext`principal$4067$$ = 
     0, $CellContext`salaryContribution$4068$$ = 
     0, $CellContext`annualReturn$4069$$ = 
     0, $CellContext`employerContribution$4070$$ = 
     0, $CellContext`employerContributionMax$4071$$ = 
     0, $CellContext`inflation$4072$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      2, StandardForm, 
       "Variables" :> {$CellContext`annualReturn$$ = 
         6, $CellContext`bgHighlight$$ = Null, $CellContext`currentAge$$ = 
         30, $CellContext`currentSalary$$ = 30000, $CellContext`delta$$ = 
         Null, $CellContext`employerContribution$$ = 
         0, $CellContext`employerContributionMax$$ = 
         6, $CellContext`inflation$$ = 3, $CellContext`open1$$ = 
         Null, $CellContext`open2$$ = Null, $CellContext`open3$$ = 
         Null, $CellContext`open4$$ = Null, $CellContext`open5$$ = 
         Null, $CellContext`principal$$ = 0, $CellContext`retireAge$$ = 
         65, $CellContext`salaryContribution$$ = 
         10, $CellContext`salaryIncrease$$ = 3}, "ControllerVariables" :> {
         Hold[$CellContext`currentAge$$, $CellContext`currentAge$4063$$, 0], 
         Hold[$CellContext`retireAge$$, $CellContext`retireAge$4064$$, 0], 
         Hold[$CellContext`currentSalary$$, $CellContext`currentSalary$4065$$,
           0], 
         Hold[$CellContext`salaryIncrease$$, \
$CellContext`salaryIncrease$4066$$, 0], 
         Hold[$CellContext`principal$$, $CellContext`principal$4067$$, 0], 
         Hold[$CellContext`salaryContribution$$, \
$CellContext`salaryContribution$4068$$, 0], 
         Hold[$CellContext`annualReturn$$, $CellContext`annualReturn$4069$$, 
          0], 
         Hold[$CellContext`employerContribution$$, \
$CellContext`employerContribution$4070$$, 0], 
         Hold[$CellContext`employerContributionMax$$, \
$CellContext`employerContributionMax$4071$$, 0], 
         Hold[$CellContext`inflation$$, $CellContext`inflation$4072$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, 
       "Body" :> (
        If[$CellContext`prevSelector =!= 
          PlanYourRetirement`Private`selector, {$CellContext`open1$$, \
$CellContext`open2$$, $CellContext`open3$$, $CellContext`open4$$, \
$CellContext`open5$$} = 
           Switch[PlanYourRetirement`Private`selector, 1, {
             False, False, True, False, False}, 2, {
             False, False, False, True, False}, 3, {
             False, False, False, False, True}, 4, {
             False, False, True, False, False}]; $CellContext`bgHighlight$$ = 
           Switch[PlanYourRetirement`Private`selector, 1, {
              RGBColor[0.95, 0.95, 1], 
              RGBColor[0.95, 0.95, 1], 
              RGBColor[0.95, 0.95, 1], 
              RGBColor[0.95, 0.95, 1], 
              RGBColor[0.95, 0.95, 1], 
              RGBColor[0.95, 0.95, 1]}, 2, {
             None, None, None, None, None, None, 
              RGBColor[0.95, 0.95, 1], 
              RGBColor[0.95, 0.95, 1]}, 3, {
             None, None, None, None, None, None, None, None, 
              RGBColor[0.95, 0.95, 1], 
              RGBColor[0.95, 0.95, 1]}, 4, {
              RGBColor[0.95, 0.95, 1], 
              RGBColor[0.95, 0.95, 1], 
              RGBColor[0.95, 0.95, 1], 
              RGBColor[0.95, 0.95, 1], 
              RGBColor[0.95, 0.95, 1], 
              RGBColor[0.95, 0.95, 1]}]; $CellContext`prevSelector = 
           PlanYourRetirement`Private`selector]; 
        If[$CellContext`currentAge$$ >= $CellContext`retireAge$$, \
$CellContext`retireAge$$ = $CellContext`currentAge$$ + 4]; 
        With[{$CellContext`data1$ = Table[
             Round[
              $CellContext`balance[$CellContext`principal$$, \
$CellContext`currentSalary$$, 
               N[$CellContext`salaryIncrease$$/100], 
               N[$CellContext`salaryContribution$$/100], 
               N[$CellContext`employerContribution$$/100], 
               N[$CellContext`employerContributionMax$$/100], 
               
               N[$CellContext`annualReturn$$/
                100], $CellContext`t]], {$CellContext`t, 1, 
              Max[
               Abs[$CellContext`retireAge$$ - $CellContext`currentAge$$], 
               4]}], $CellContext`data2$ = 
           Switch[PlanYourRetirement`Private`selector, 1, 
             Table[
              Round[
               $CellContext`balance[$CellContext`principal$$, \
$CellContext`currentSalary$$, 
                N[$CellContext`salaryIncrease$$/100], 
                N[$CellContext`salaryContribution$$/100], 
                N[$CellContext`employerContribution$$/100], 
                N[$CellContext`employerContributionMax$$/100], 
                0., $CellContext`t]], {$CellContext`t, 1, 
               Max[
                Abs[$CellContext`retireAge$$ - $CellContext`currentAge$$], 
                4]}], 2, 
             Table[
              Round[
               $CellContext`balance[$CellContext`principal$$, \
$CellContext`currentSalary$$, 
                N[$CellContext`salaryIncrease$$/100], 
                N[$CellContext`salaryContribution$$/100], 0, 0, 
                
                N[$CellContext`annualReturn$$/
                 100], $CellContext`t]], {$CellContext`t, 1, 
               Max[
                Abs[$CellContext`retireAge$$ - $CellContext`currentAge$$], 
                4]}], 3, 
             Table[
              
              Round[(1/(1 + N[$CellContext`inflation$$/100])^($CellContext`t - 
                 1)) $CellContext`balance[$CellContext`principal$$, \
$CellContext`currentSalary$$, 
                 N[$CellContext`salaryIncrease$$/100], 
                 N[$CellContext`salaryContribution$$/100], 
                 N[$CellContext`employerContribution$$/100], 
                 N[$CellContext`employerContributionMax$$/100], 
                 
                 N[$CellContext`annualReturn$$/
                  100], $CellContext`t]], {$CellContext`t, 1, 
               Max[
                Abs[$CellContext`retireAge$$ - $CellContext`currentAge$$], 
                4]}]], $CellContext`min$ = 
           Min[$CellContext`currentAge$$, $CellContext`retireAge$$]}, 
          Framed[
           Pane[
            If[PlanYourRetirement`Private`selector =!= 4, 
             Column[{
               Graphics[{
                 MapThread[Tooltip[
                   
                   Raster[{{{230, 232, 241}, {236, 238, 247}, {191, 195, 
                    217}, {159, 164, 191}, {168, 173, 199}, {177, 181, 207}, {
                    187, 191, 216}, {195, 200, 224}, {204, 209, 233}, {214, 
                    218, 241}, {221, 225, 247}, {223, 226, 247}, {221, 225, 
                    246}, {202, 207, 231}, {176, 181, 
                    207}}}, {{$CellContext`min$ + #3 - 
                    0.4, #2}, {$CellContext`min$ + #3 + 0.4, #}}, {0, 
                    255}], #]& , {$CellContext`data1$, $CellContext`data2$, 
                   Range[
                    Length[$CellContext`data1$]]}], 
                 MapIndexed[Tooltip[
                   
                   Raster[{{{205, 237, 218}, {250, 255, 252}, {210, 241, 
                    222}, {158, 205, 176}, {153, 202, 171}, {163, 210, 181}, {
                    172, 218, 189}, {182, 227, 199}, {192, 236, 209}, {201, 
                    244, 217}, {211, 253, 227}, {216, 255, 231}, {219, 255, 
                    233}, {206, 248, 222}, {178, 224, 
                    195}}}, {{$CellContext`min$ + Part[#2, 1] - 0.4, 
                    0}, {$CellContext`min$ + Part[#2, 1] + 0.4, #}}, {0, 
                    255}], #]& , $CellContext`data2$], 
                 Opacity[0.4], 
                 Line[
                  
                  MapIndexed[{{$CellContext`min$ + Part[#2, 1] - 0.4, 
                    0}, {$CellContext`min$ + Part[#2, 1] - 
                    0.4, #}, {$CellContext`min$ + Part[#2, 1] + 
                    0.4, #}, {$CellContext`min$ + Part[#2, 1] + 0.4, 
                    0}, {$CellContext`min$ + Part[#2, 1] - 0.4, 
                    0}}& , $CellContext`data1$]], 
                 Line[
                  
                  MapIndexed[{{$CellContext`min$ + Part[#2, 1] - 
                    0.4, #}, {$CellContext`min$ + Part[#2, 1] + 
                    0.4, #}}& , $CellContext`data2$]], 
                 Opacity[1], 
                 Table[
                  Text[
                   Style[
                    Row[{"$", $CellContext`i}], FontFamily -> "Arial", 10, 
                    Gray], {$CellContext`min$, $CellContext`i}, {
                   Left, Bottom}], {$CellContext`i, 
                   DeleteCases[
                    FindDivisions[{0, 
                    Max[$CellContext`data1$]}, 7], 0]}]}, Axes -> False, 
                Frame -> {{False, False}, {True, False}}, 
                FrameTicks -> {{None, None}, {
                   Table[$CellContext`i, {$CellContext`i, 
                    Cases[
                    DeleteCases[
                    FindDivisions[$CellContext`min$ + {0, 
                    Max[
                    Abs[$CellContext`currentAge$$ - $CellContext`retireAge$$],
                     4]}, 7], 0], 
                    Blank[Integer]]}], None}}, FrameStyle -> Gray, FrameLabel -> 
                "Age", GridLines -> {None, 
                  Cases[
                   DeleteCases[
                    FindDivisions[{0, 
                    Max[$CellContext`data1$]}, 7], 0], 
                   Blank[Integer]]}, GridLinesStyle -> LightGray, 
                PlotRangeClipping -> False, ImageSize -> 320, AspectRatio -> 
                1/GoldenRatio, 
                BaseStyle -> {
                 FontFamily -> "Arial", FontColor -> Gray, FontSize -> 10, 
                  FontSlant -> Plain}], "", 
               
               Row[{"Total balance at the age of ", \
$CellContext`retireAge$$}], 
               Grid[{{"", "", "Total"}, {
                  Graphics[{
                    Raster[
                    
                    Transpose[{{{230, 232, 241}, {236, 238, 247}, {191, 195, 
                    217}, {159, 164, 191}, {168, 173, 199}, {177, 181, 207}, {
                    187, 191, 216}, {195, 200, 224}, {204, 209, 233}, {214, 
                    218, 241}, {221, 225, 247}, {223, 226, 247}, {221, 225, 
                    246}, {202, 207, 231}, {176, 181, 207}}}], {{0, 0}, {10, 
                    3}}, {0, 255}], 
                    FaceForm[], 
                    EdgeForm[
                    Opacity[0.4]], 
                    Rectangle[{0, 0}, {10, 3}]}, ImageSize -> 36], 
                  
                  Part[{{"With investment return", "Without investment"}, {
                    "With employer match", "Without employer match"}, {
                    "Current value", "Inflation adjusted value"}, {
                    "Current value", "Inflation adjusted value"}}, 
                   PlanYourRetirement`Private`selector, 1], 
                  Row[{"$", 
                    Max[$CellContext`data1$]}]}, {
                  Graphics[{
                    Raster[
                    
                    Transpose[{{{205, 237, 218}, {250, 255, 252}, {210, 241, 
                    222}, {158, 205, 176}, {153, 202, 171}, {163, 210, 181}, {
                    172, 218, 189}, {182, 227, 199}, {192, 236, 209}, {201, 
                    244, 217}, {211, 253, 227}, {216, 255, 231}, {219, 255, 
                    233}, {206, 248, 222}, {178, 224, 195}}}], {{0, 0}, {10, 
                    3}}, {0, 255}], 
                    FaceForm[], 
                    EdgeForm[
                    Opacity[0.4]], 
                    Rectangle[{0, 0}, {10, 3}]}, ImageSize -> 36], 
                  
                  Part[{{"With investment return", "Without investment"}, {
                    "With employer match", "Without employer match"}, {
                    "Current value", "Inflation adjusted value"}, {
                    "Current value", "Inflation adjusted value"}}, 
                   PlanYourRetirement`Private`selector, 2], 
                  Row[{"$", 
                    Max[$CellContext`data2$]}]}}, 
                Alignment -> {Left, Baseline, {{1, 3} -> Center}}, 
                Spacings -> {{1.2, 1, 1.5, 1.2}, {1, 1.5, 1, 1}}, Frame -> 
                True, FrameStyle -> LightGray, 
                Dividers -> {{LightGray, False, LightGray}, {
                  LightGray, LightGray, False, LightGray}}, 
                Background -> {{None, None, 
                   RGBColor[0.95, 0.95, 1]}}, 
                BaseStyle -> {FontSlant -> Plain, FontColor -> Gray}], Null}, 
              Alignment -> Center], 
             
             With[{$CellContext`final$ = 
               Last[$CellContext`data1$], $CellContext`contrib$ = 
               N[$CellContext`salaryContribution$$/100], $CellContext`year$ = 
               Max[
                 Abs[$CellContext`currentAge$$ - $CellContext`retireAge$$], 
                 4], $CellContext`contourColor$ = RGBColor[0.25, 0.6, 0.7]}, 
              Column[{
                Quiet[
                 ContourPlot[
                  $CellContext`balance[$CellContext`principal$$, \
$CellContext`currentSalary$$, 
                   N[$CellContext`salaryIncrease$$/100], $CellContext`ccc, 
                   N[$CellContext`employerContribution$$/100], 
                   N[$CellContext`employerContributionMax$$/100], 
                   
                   N[$CellContext`annualReturn$$/
                    100], $CellContext`yyy], {$CellContext`ccc, 
                   0.5 $CellContext`contrib$, 
                   1.5 $CellContext`contrib$}, {$CellContext`yyy, 
                   0.5 $CellContext`year$, 1.5 $CellContext`year$}, 
                  FrameStyle -> Gray, ImageSize -> 320, Contours -> 
                  Round[{0.75 $CellContext`final$, $CellContext`final$, 
                    1.25 $CellContext`final$}], ContourStyle -> {
                    Directive[$CellContext`contourColor$, Dashed, Thick], 
                    Directive[Gray, Thick], 
                    Directive[$CellContext`contourColor$, Thick]}, 
                  ContourShading -> {
                    GrayLevel[0.9], LightGreen, LightBlue, White}, 
                  FrameLabel -> {
                   "Contribution (% of the salary)", "Year to retirement"}, 
                  FrameTicks -> {{Automatic, None}, {
                    Table[{$CellContext`i, 
                    Round[100 $CellContext`i]}, {$CellContext`i, 
                    
                    FindDivisions[{
                    0.5 $CellContext`contrib$, 1.5 $CellContext`contrib$}, 
                    7]}], None}}, 
                  BaseStyle -> {
                   FontFamily -> "Arial", FontSlant -> Plain, FontColor -> 
                    Gray}, Epilog -> {
                    Text[
                    
                    Column[{"Higher balance", "at retirement"}, Alignment -> 
                    Right], 
                    Scaled[{0.95, 0.95}], {Right, Top}], 
                    Text[
                    Column[{"Lower balance", "at retirement"}], 
                    Scaled[{0.05, 0.05}], {Left, Bottom}]}, PerformanceGoal -> 
                  "Speed", PlotPoints -> 25]], 
                Column[{
                  
                  Row[{"Total balance at the age of ", \
$CellContext`retireAge$$}], 
                  Grid[{{
                    Graphics[{
                    Directive[$CellContext`contourColor$, Dashed, Thick], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> 48, 
                    PlotRange -> {{0, 1}, {-0.5, 0.5}}, AspectRatio -> 1/10], 
                    
                    Spacer[10], "$", 
                    Round[0.75 $CellContext`final$]}, {
                    Graphics[{
                    Directive[Gray, Thick], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> 48, 
                    PlotRange -> {{0, 1}, {-0.5, 0.5}}, AspectRatio -> 1/10], 
                    
                    Spacer[10], "$", 
                    Round[$CellContext`final$], SpanFromAbove, 
                    SpanFromAbove}, {
                    Graphics[{
                    Directive[$CellContext`contourColor$, Thick], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> 48, 
                    PlotRange -> {{0, 1}, {-0.5, 0.5}}, AspectRatio -> 1/10], 
                    
                    Spacer[10], "$", 
                    Round[1.25 $CellContext`final$], SpanFromAbove, 
                    SpanFromAbove}}, Spacings -> {0, 0.5}, 
                   Alignment -> {Center, Center}, 
                   BaseStyle -> {FontSlant -> Plain, FontColor -> Gray}], 
                  Null}, Alignment -> Center, Spacings -> {0, {0, 1.25, 0}}]},
                Alignment -> Center, Spacings -> {0, {0, 1.5, 0}}]]], {320, 
            450}, Alignment -> {Center, Center}], FrameMargins -> 5, 
           FrameStyle -> RGBColor[0.44, 0.62, 0.67]]]), 
       "Specifications" :> {{$CellContext`delta$$, ControlType -> 
          None}, {$CellContext`open1$$, ControlType -> 
          None}, {$CellContext`open2$$, ControlType -> 
          None}, {$CellContext`open3$$, ControlType -> 
          None}, {$CellContext`open4$$, ControlType -> 
          None}, {$CellContext`open5$$, ControlType -> 
          None}, {$CellContext`bgHighlight$$, ControlType -> 
          None}, {{$CellContext`currentAge$$, 30, ""}, 20, 80, 1, ControlType -> 
          Slider, ControlPlacement -> 1}, {{$CellContext`retireAge$$, 65, ""},
           20, 80, 1, ControlType -> Slider, ControlPlacement -> 
          2}, {{$CellContext`currentSalary$$, 30000, ""}, 10000, 250000, 100, 
          ControlType -> Slider, ControlPlacement -> 
          3}, {{$CellContext`salaryIncrease$$, 3, ""}, 1, 50, 1, ControlType -> 
          Slider, ControlPlacement -> 4}, {{$CellContext`principal$$, 0, ""}, 
          0, 100000, 100, ControlType -> Slider, ControlPlacement -> 
          5}, {{$CellContext`salaryContribution$$, 10, ""}, 1, 50, 1, 
          ControlType -> Slider, ControlPlacement -> 
          6}, {{$CellContext`annualReturn$$, 6, ""}, 0, 50, 1, ControlType -> 
          Slider, ControlPlacement -> 
          7}, {{$CellContext`employerContribution$$, 0, ""}, 0, 100, 1, 
          ControlType -> Slider, ControlPlacement -> 
          8}, {{$CellContext`employerContributionMax$$, 6, ""}, 0, 100, 1, 
          ControlType -> Slider, ControlPlacement -> 
          9}, {{$CellContext`inflation$$, 3, ""}, 0, 100, 1, ControlType -> 
          Slider, ControlPlacement -> 10}, 
         Pane[
          Column[{
            Dynamic[
             Pane[
              TextCell[
               Row[{"I am currently ", 
                 
                 Row[{$CellContext`currentAge$$}, 
                  BaseStyle -> {
                   FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                    RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                    Bold}], " and plan to retire at ", 
                 
                 Row[{$CellContext`retireAge$$}, 
                  BaseStyle -> {
                   FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                    RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                    Bold}], "."}]], {
              ImageSize -> 270, ImageMargins -> {{10, 15}, {0, 0}}, 
               BaseStyle -> {
                FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                 GrayLevel[
                   Rational[1, 3]], FontSlant -> Plain}}]], 
            OpenerView[{"Change", 
              Column[{"How old are you?", 
                Row[{
                  Manipulate`Place[1], 
                  Spacer[5], 
                  InputField[
                   Dynamic[$CellContext`currentAge$$], Number, ImageSize -> 
                   30]}], "When are you planning to retire?", 
                Row[{
                  Manipulate`Place[2], 
                  Spacer[5], 
                  InputField[
                   Dynamic[$CellContext`retireAge$$], Number, ImageSize -> 
                   30]}]}, {
               Spacings -> {0, {2, 0.3, {1.5, 0.3}}}, Frame -> Opacity[0]}]}, 
             
             Dynamic[$CellContext`open1$$], {
             ImageSize -> 270, ImageMargins -> {{5, 0}, {0, 5}}}], 
            Dynamic[
             Pane[
              TextCell[
               Row[{"My salary is ", 
                 
                 Row[{"$", $CellContext`currentSalary$$}, 
                  BaseStyle -> {
                   FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                    RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                    Bold}], " and I expect an annual raise of ", 
                 
                 Row[{$CellContext`salaryIncrease$$, "%"}, 
                  BaseStyle -> {
                   FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                    RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                    Bold}], "."}]], {
              ImageSize -> 270, ImageMargins -> {{10, 15}, {0, 0}}, 
               BaseStyle -> {
                FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                 GrayLevel[
                   Rational[1, 3]], FontSlant -> Plain}}]], 
            OpenerView[{"Change", 
              Column[{"What is your current annual salary?", 
                Row[{
                  Manipulate`Place[3], 
                  Spacer[5], "$", 
                  InputField[
                   Dynamic[$CellContext`currentSalary$$], Number, ImageSize -> 
                   50]}], "What is your expected annual raise?", 
                Row[{
                  Manipulate`Place[4], 
                  Spacer[5], 
                  InputField[
                   Dynamic[$CellContext`salaryIncrease$$], Number, ImageSize -> 
                   30], "%"}]}, {
               Spacings -> {0, {2, 0.3, {1.5, 0.3}}}, Frame -> Opacity[0]}]}, 
             
             Dynamic[$CellContext`open2$$], {
             ImageSize -> 270, ImageMargins -> {{5, 0}, {0, 5}}}], 
            Dynamic[
             Pane[
              TextCell[
               Row[{"My current balance is ", 
                 
                 Row[{"$", $CellContext`principal$$}, 
                  BaseStyle -> {
                   FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                    RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                    Bold}], " and I contribute ", 
                 
                 Row[{$CellContext`salaryContribution$$, "%"}, 
                  BaseStyle -> {
                   FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                    RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                    Bold}], " of my salary. I expect a ", 
                 
                 Row[{$CellContext`annualReturn$$, "%"}, 
                  BaseStyle -> {
                   FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                    RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                    Bold}], " annual return."}]], {
              ImageSize -> 270, ImageMargins -> {{10, 15}, {0, 0}}, 
               BaseStyle -> {
                FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                 GrayLevel[
                   Rational[1, 3]], FontSlant -> Plain}}]], 
            OpenerView[{"Change", 
              Column[{"How much do you have in retirement savings?", 
                Row[{
                  Manipulate`Place[5], 
                  Spacer[5], "$", 
                  InputField[
                   Dynamic[$CellContext`principal$$], Number, ImageSize -> 
                   50]}], "What percent of your salary do you contribute?", 
                Row[{
                  Manipulate`Place[6], 
                  Spacer[5], 
                  InputField[
                   Dynamic[$CellContext`salaryContribution$$], Number, 
                   ImageSize -> 30], "%"}], 
                "What annual return do you expect?", 
                Row[{
                  Manipulate`Place[7], 
                  Spacer[5], 
                  InputField[
                   Dynamic[$CellContext`annualReturn$$], Number, ImageSize -> 
                   30], "%"}]}, {
               Spacings -> {0, {2, 0.3, {1.5, 0.3}}}, Frame -> Opacity[0]}]}, 
             
             Dynamic[$CellContext`open3$$], {
             ImageSize -> 270, ImageMargins -> {{5, 0}, {0, 5}}}], 
            Dynamic[
             Pane[
              TextCell[
               Row[{"My employer matches ", 
                 
                 Row[{$CellContext`employerContribution$$, "%"}, 
                  BaseStyle -> {
                   FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                    RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                    Bold}], " of my contribution up to ", 
                 
                 Row[{$CellContext`employerContributionMax$$, "%"}, 
                  BaseStyle -> {
                   FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                    RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                    Bold}], " of my salary."}]], {
              ImageSize -> 270, ImageMargins -> {{10, 15}, {0, 0}}, 
               BaseStyle -> {
                FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                 GrayLevel[
                   Rational[1, 3]], FontSlant -> Plain}}]], 
            OpenerView[{"Change", 
              Column[{"How much does your employer match?", 
                Row[{
                  Manipulate`Place[8], 
                  Spacer[5], 
                  InputField[
                   Dynamic[$CellContext`employerContribution$$], Number, 
                   ImageSize -> 30], "%"}], 
                "What is the maximum employer match?", 
                Row[{
                  Manipulate`Place[9], 
                  Spacer[5], 
                  InputField[
                   Dynamic[$CellContext`employerContributionMax$$], Number, 
                   ImageSize -> 30], "%"}]}, {
               Spacings -> {0, {2, 0.3, {1.5, 0.3}}}, Frame -> Opacity[0]}]}, 
             
             Dynamic[$CellContext`open4$$], {
             ImageSize -> 270, ImageMargins -> {{5, 0}, {0, 5}}}], 
            Dynamic[
             Pane[
              TextCell[
               Row[{"Expected annual inflation is ", 
                 
                 Row[{$CellContext`inflation$$, "%"}, 
                  BaseStyle -> {
                   FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                    RGBColor[0.25, 0.6, 0.7], FontSlant -> Plain, FontWeight -> 
                    Bold}], "."}]], {
              ImageSize -> 270, ImageMargins -> {{10, 15}, {0, 0}}, 
               BaseStyle -> {
                FontFamily -> "Arial", FontSize -> 14, FontColor -> 
                 GrayLevel[
                   Rational[1, 3]], FontSlant -> Plain}}]], 
            OpenerView[{"Change", 
              Column[{"What is the expected annual inflation rate?", 
                Row[{
                  Manipulate`Place[10], 
                  Spacer[5], 
                  InputField[
                   Dynamic[$CellContext`inflation$$], Number, ImageSize -> 
                   30], "%"}]}, {
               Spacings -> {0, {2, 0.3, {1.5, 0.3}}}, Frame -> Opacity[0]}]}, 
             
             Dynamic[$CellContext`open5$$], {
             ImageSize -> 270, ImageMargins -> {{5, 0}, {0, 5}}}]}, 
           Dividers -> {False, {False, {False, 
               GrayLevel[0.85]}, False}}, Spacings -> {0, {0, {0, 2}, 0}}, 
           Background -> Dynamic[$CellContext`bgHighlight$$]], {310, 460}, 
          ImageSizeAction -> "Scrollable", Scrollbars -> {False, Automatic}, 
          AppearanceElements -> None]}, 
       "Options" :> {
        ControlPlacement -> Left, 
         BaseStyle -> {
          FontFamily -> "Arial", FontSize -> 12, FontColor -> 
           RGBColor[0.25, 0.6, 0.7], FontSlant -> Italic}, 
         DefaultBaseStyle -> {
          SliderBoxOptions -> {ImageSize -> {150, 15}}, 
           InputFieldBoxOptions -> {FieldSize -> {{20., 20.}, {1., 1.}}}}, 
         AppearanceElements -> None, Paneled -> False, Deployed -> True, 
         FrameMargins -> 0}, "DefaultOptions" :> {}],
      ImageSizeCache->{649., {228., 235.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     Initialization:>(($CellContext`prevSelector = -1; $CellContext`bal1 = 
        Compile[{$CellContext`principal, $CellContext`currentS, \
$CellContext`increaseS, $CellContext`contribution, $CellContext`match, \
$CellContext`matchmax, $CellContext`annualRate, $CellContext`year}, 
          Evaluate[
           TimeValue[
            
            Annuity[($CellContext`currentS (1. + $CellContext`increaseS)^(# - 
                1)) ($CellContext`contribution + 
              Min[$CellContext`contribution $CellContext`match, \
$CellContext`matchmax])& , $CellContext`year, 
             0], $CellContext`annualRate, $CellContext`year]]]; \
$CellContext`bal2 = 
        Compile[{$CellContext`principal, $CellContext`currentS, \
$CellContext`increaseS, $CellContext`contribution, $CellContext`match, \
$CellContext`matchmax, $CellContext`annualRate, $CellContext`year}, 
          Evaluate[
           TimeValue[
            
            Annuity[($CellContext`currentS (1. + $CellContext`annualRate)^(# - 
                1)) ($CellContext`contribution + 
              Min[$CellContext`contribution $CellContext`match, \
$CellContext`matchmax])& , $CellContext`year, 
             0], $CellContext`annualRate, $CellContext`year]]]; \
$CellContext`prince = 
        Compile[{$CellContext`principal, $CellContext`annualRate, \
$CellContext`year}, 
          Evaluate[
           
           TimeValue[$CellContext`principal, $CellContext`annualRate, \
$CellContext`year]]]; $CellContext`balance = 
        Compile[{$CellContext`principal, $CellContext`currentS, \
$CellContext`increaseS, $CellContext`contribution, $CellContext`match, \
$CellContext`matchmax, $CellContext`annualRate, $CellContext`year}, 
          
          If[$CellContext`increaseS != $CellContext`annualRate, \
$CellContext`prince[$CellContext`principal, $CellContext`annualRate, \
$CellContext`year] + $CellContext`bal1[$CellContext`principal, \
$CellContext`currentS, $CellContext`increaseS, $CellContext`contribution, \
$CellContext`match, $CellContext`matchmax, $CellContext`annualRate, \
$CellContext`year], $CellContext`prince[$CellContext`principal, \
$CellContext`annualRate, $CellContext`year] + \
$CellContext`bal2[$CellContext`principal, $CellContext`currentS, \
$CellContext`increaseS, $CellContext`contribution, $CellContext`match, \
$CellContext`matchmax, $CellContext`annualRate, $CellContext`year]]]); 
      Typeset`initDone$$ = True),
     SynchronousInitialization->True,
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}],
    Deployed->True,
    StripOnInput->False,
    FontFamily->"Arial",
    FontSize->12,
    FontSlant->Italic,
    FontColor->RGBColor[0.25, 0.6, 0.7],
    InputFieldBoxOptions->{FieldSize->{{20., 20.}, {1., 1.}}},
    SliderBoxOptions->{ImageSize->{150, 15}}],
   Manipulate`InterpretManipulate[1]],
  BoxFrame->2,
  FrameMargins->15,
  FrameStyle->RGBColor[0.44, 0.62, 0.67],
  StripOnInput->False]], "PluginEmbeddedContent",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.5193860278062124`*^9},
 TextAlignment->0]
},
WindowSize->{860, Automatic},
WindowMargins->Automatic,
WindowElements->{"MagnificationPopUp", "StatusArea", "VerticalScrollBar"},
WindowTitle->"CDF InfoKit - Plan Your Retirement",
PrintingCopies->1,
PrintingPageRange->{1, 1},
PrivateNotebookOptions->{"PluginToolbarEnabled"->False},
ShowCellBracket->False,
ShowSelection->True,
Deployed->False,
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[StyleDefinitions -> "StyleMenuClear.nb"]], 
   Cell[
    CellGroupData[{
      Cell["Style Environment Names", "Section"], 
      Cell[
       StyleData[All, "Working"], PageWidth -> 850]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Notebook Options Settings", "Section"], 
      Cell[
       StyleData["Notebook"], ShowCellBracket -> False, FontFamily -> "Times",
        FontSize -> 18, FontWeight -> "Plain", FontSlant -> "Plain"]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Title and Section Cells", "Section"], 
      Cell[
       StyleData["Title"], CellMargins -> {{60, 0}, {2, 60}}, 
       LineSpacing -> {0, 48}, FontFamily -> "Georgia", FontSize -> 36, 
       FontWeight -> "Plain", FontSlant -> "Plain", 
       FontVariations -> {"CapsType" -> "SmallCaps"}, FontColor -> 
       RGBColor[
        0.07290760662241551, 0.42914473182269014`, 0.5300068665598535]], 
      Cell[
       StyleData["Subtitle"], 
       CellMargins -> {{60, Inherited + 100}, {Inherited, Inherited}}, 
       FontFamily -> "Arial", FontSize -> 20, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> GrayLevel[0.2]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Author"], CellMargins -> {{60, 0}, {8, 16}}, 
          CellFrameMargins -> 10, CellFrameColor -> 
          RGBColor[0.53, 0.22, 0.14], FontFamily -> "Verdana", FontSize -> 18,
           FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
          GrayLevel[1], Background -> 
          RGBColor[
           0.07290760662241551, 0.42914473182269014`, 0.5300068665598535]], 
         Cell[
          StyleData["Author", "Printout"], 
          CellMargins -> {{24, 120}, {8, 20}}, FontColor -> GrayLevel[1]]}, 
        Closed]], 
      Cell[
       StyleData["Abstract"], CellMargins -> {{71, 100}, {8, 8}}, 
       TextJustification -> 0., LineSpacing -> {1, 6}, FontFamily -> 
       "Georgia", FontSize -> 12, FontWeight -> "Plain", FontSlant -> "Plain",
        FontColor -> GrayLevel[0.25]], 
      Cell[
       StyleData["Section"], CellFrame -> {{0, 0}, {0.5, 0}}, 
       CellMargins -> {{60, Inherited}, {8, 36}}, CellFrameColor -> 
       GrayLevel[0.5], 
       CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}, {
         "Subsubsubsection", 0}, {"Item1", 0}, {"Item2", 0}, {"Item3", 0}, {
         "Item1Numbered", 0}, {"Item2Numbered", 0}, {"Item3Numbered", 0}}, 
       FontFamily -> "Arial", FontSize -> 20, FontWeight -> "Plain", 
       FontSlant -> "Plain", FontColor -> 
       RGBColor[
        0.07290760662241551, 0.42914473182269014`, 0.5300068665598535]], 
      Cell[
       StyleData["Subsection"], CellMargins -> {{75, Inherited}, {8, 12}}, 
       CounterAssignments -> {{"Subsubsection", 0}, {"Subsubsubsection", 0}, {
         "Item1", 0}, {"Item2", 0}, {"Item3", 0}, {"Item1Numbered", 0}, {
         "Item2Numbered", 0}, {"Item3Numbered", 0}}, FontFamily -> "Arial", 
       FontSize -> 14, FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
       RGBColor[0.1202410925459678, 0.2980392156862745, 0.3167467765316243]]},
      Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Body Text", "Section"], 
      Cell[
       StyleData["Text"], CellMargins -> {{60, 10}, {7, 7}}, 
       LineSpacing -> {1, 4}, FontFamily -> "Georgia", FontSize -> 13, 
       FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
       GrayLevel[0.2]], 
      Cell[
       StyleData["Reference"], CellMargins -> {{60, 10}, {2, 4}}, Hyphenation -> 
       True, LineSpacing -> {1, 1}, ParagraphIndent -> -18, 
       TabSpacings -> {0.1, 1, 1.5}, FontFamily -> "Georgia", FontSize -> 12, 
       FontColor -> GrayLevel[0.2]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Formulas and Programming", "Section"], 
      Cell[
       StyleData["Figure"], Editable -> True, 
       CellMargins -> {{56, Inherited}, {Inherited, 20}}, CellGroupingRules -> 
       "InputGrouping", CounterIncrements -> "Figure", 
       GraphicsBoxOptions -> {ImageSize -> 350}, 
       Graphics3DBoxOptions -> {ImageSize -> 350}], 
      Cell[
       StyleData["FigureCaption"], CellMargins -> {{60, Inherited}, {20, 4}}, 
       CellGroupingRules -> "NormalGrouping", PageBreakAbove -> False, 
       Hyphenation -> True, CounterIncrements -> "FigureCaption", 
       CounterAssignments -> {{"Nil", 0}}, FontFamily -> "Arial", FontSize -> 
       11, FontWeight -> "Plain", FontSlant -> "Plain", FontColor -> 
       GrayLevel[0.33]], 
      Cell[
       StyleData["FigureCaptionLabel"], FontWeight -> "Bold"], 
      Cell[
       StyleData["EquationNumbered"], 
       CellMargins -> {{85, 40}, {Inherited, Inherited}}, 
       CellFrameLabels -> {{None, 
          Cell[
           TextData[{"(", 
             CounterBox["EquationNumbered"], ")"}]]}, {None, None}}, 
       DefaultFormatType -> TraditionalForm, CounterIncrements -> 
       "EquationNumbered", FontSize -> 13, FontColor -> 
       RGBColor[0.23076218814374, 0.23076218814374, 0.23076218814374], 
       ButtonBoxOptions -> {Appearance -> {Automatic, None}}]}, Open]], 
   Cell[
    CellGroupData[{
      Cell["Styles for Input and Output Cells", "Section"], 
      Cell[
       StyleData["Input"], CellMargins -> {{56, 10}, {5, 10}}, FontSize -> 
       12], 
      Cell[
       StyleData["Output"], CellMargins -> {{60, 10}, {10, 5}}]}, Open]]}, 
  Visible -> False, FrontEndVersion -> 
  "8.0 for Microsoft Windows (64-bit) (February 23, 2011)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[598, 21, 38947, 644, 136, "PluginEmbeddedContent"],
Cell[39548, 667, 288, 8, 74, InheritFromParent],
Cell[39839, 677, 680, 17, 86, InheritFromParent],
Cell[40522, 696, 15830, 316, 98, InheritFromParent],
Cell[56355, 1014, 794, 21, 43, InheritFromParent],
Cell[57152, 1037, 1710, 39, 94, InheritFromParent],
Cell[58865, 1078, 43426, 886, 499, "PluginEmbeddedContent"]
}
]
*)

(* End of internal cache information *)(* NotebookSignature 7KNJachHmA9j4IkA@3dQ3VOO *)
