(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    201836,       4064]
NotebookOptionsPosition[    199573,       4002]
NotebookOutlinePosition[    199917,       4017]
CellTagsIndexPosition[    199874,       4014]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "y", ",", "\[Delta]", ",", "c", ",", "\[Delta]c", ",", "c1", 
       ",", "c2", ",", "f", ",", "g"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ";", 
      RowBox[{"y", "=", 
       RowBox[{"0.4", "*", "x"}]}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"0.25", "/", "5"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "1", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.75", "*", "x"}], ",", 
           RowBox[{"0.35", "*", "y"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.75", "*", "x"}], ",", 
           RowBox[{"0.75", "*", "y"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.75", "*", "x"}], ",", "y"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Delta]c", "[", "1", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "2", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.25", "*", "x"}], ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.25", "*", "x"}], ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Delta]c", "[", "2", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c1", "[", "i_", "]"}], ":=", 
       RowBox[{
        RowBox[{"c", "[", "i", "]"}], "+", 
        RowBox[{"\[Delta]c", "[", "i", "]"}]}]}], ";", 
      RowBox[{
       RowBox[{"c2", "[", "i_", "]"}], ":=", 
       RowBox[{
        RowBox[{"c", "[", "i", "]"}], "-", 
        RowBox[{"\[Delta]c", "[", "i", "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"data_", ",", "i_"}], "]"}], ":=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"BezierFunction", "[", 
             RowBox[{"data", "[", "i", "]"}], "]"}], "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "1", ",", "0.01"}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", "[", 
        RowBox[{"data_", ",", "i_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"data", ",", "i"}], "]"}], "[", "#", "]"}]}], "}"}], 
         "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"data", "[", "i", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"data", "[", "i", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0.01"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Red", ",", 
             RowBox[{"BezierCurve", "@", 
              RowBox[{"c1", "[", "#", "]"}]}], ",", 
             RowBox[{"BezierCurve", "@", 
              RowBox[{"c2", "[", "#", "]"}]}]}], "}"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Dashed", ",", 
           RowBox[{"Line", "@", 
            RowBox[{"g", "[", 
             RowBox[{"c1", ",", "1"}], "]"}]}], ",", 
           RowBox[{"Line", "@", 
            RowBox[{"g", "[", 
             RowBox[{"c2", ",", "1"}], "]"}]}], ",", "Blue", ",", 
           RowBox[{"Line", "@", 
            RowBox[{"g", "[", 
             RowBox[{"c1", ",", "2"}], "]"}]}], ",", 
           RowBox[{"Line", "@", 
            RowBox[{"g", "[", 
             RowBox[{"c2", ",", "2"}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FaceForm", "@", 
          RowBox[{"Opacity", "[", 
           RowBox[{"0.5", ",", "Red"}], "]"}]}], ","}], "\[IndentingNewLine]",
         "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", "0.2", ",", "\"\<feed quality\>\""}], "}"}], ",", 
      "0", ",", "1", ",", "0.1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7015930017653084`*^9, 3.70159359759281*^9}, {
  3.702040416850947*^9, 
  3.7020404406976557`*^9}},ExpressionUUID->"13b219d5-7d21-4cf4-8814-\
2bfa3d105691"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`q$$], 0.2, "feed quality"}, 0, 1, 0.1}}, 
    Typeset`size$$ = {360., {91., 96.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, $CellContext`q$3491$$ =
     0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`q$$ = 0.2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`q$$, $CellContext`q$3491$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`x, $CellContext`y, $CellContext`\[Delta], \
$CellContext`c, $CellContext`\[Delta]c, $CellContext`c1, $CellContext`c2, \
$CellContext`f, $CellContext`g}, $CellContext`x = 1; $CellContext`y = 
         0.4 $CellContext`x; $CellContext`\[Delta] = 
         0.25/5; $CellContext`c[
          1] = {{0, $CellContext`y/2}, {
           0.75 $CellContext`x, 0.35 $CellContext`y}, {
           0.75 $CellContext`x, 0.75 $CellContext`y}, {
           0.75 $CellContext`x, $CellContext`y}}; $CellContext`\[Delta]c[
          1] = {{0, $CellContext`\[Delta]}, {-$CellContext`\[Delta], \
$CellContext`\[Delta]}, {-$CellContext`\[Delta], $CellContext`\[Delta]}, \
{-$CellContext`\[Delta], 0}}; $CellContext`c[
          2] = {{0, $CellContext`y/2}, {
           0.25 $CellContext`x, $CellContext`y/2}, {
           0.25 $CellContext`x, 0}}; $CellContext`\[Delta]c[
          2] = {{0, $CellContext`\[Delta]}, {$CellContext`\[Delta], \
$CellContext`\[Delta]}, {$CellContext`\[Delta], 0}}; $CellContext`c1[
           Pattern[$CellContext`i, 
            
            Blank[]]] := $CellContext`c[$CellContext`i] + $CellContext`\
\[Delta]c[$CellContext`i]; $CellContext`c2[
           Pattern[$CellContext`i, 
            
            Blank[]]] := $CellContext`c[$CellContext`i] - $CellContext`\
\[Delta]c[$CellContext`i]; $CellContext`f[
           Pattern[$CellContext`data, 
            Blank[]], 
           Pattern[$CellContext`i, 
            Blank[]]] := Quiet[
           Interpolation[
            Map[BezierFunction[
              $CellContext`data[$CellContext`i]][#]& , 
             Range[0, 1, 0.01]]]]; $CellContext`g[
           Pattern[$CellContext`data, 
            Blank[]], 
           Pattern[$CellContext`i, 
            Blank[]]] := Map[{#, 
            $CellContext`f[$CellContext`data, $CellContext`i][#]}& , 
           Range[
            Part[
             $CellContext`data[$CellContext`i], 1, 1], 
            Part[
             $CellContext`data[$CellContext`i], -1, 1], 0.01]]; Graphics[{
           Map[{Thick, Red, 
             BezierCurve[
              $CellContext`c1[#]], 
             BezierCurve[
              $CellContext`c2[#]]}& , {1, 2}], {Thick, Dashed, 
            Line[
             $CellContext`g[$CellContext`c1, 1]], 
            Line[
             $CellContext`g[$CellContext`c2, 1]], Blue, 
            Line[
             $CellContext`g[$CellContext`c1, 2]], 
            Line[
             $CellContext`g[$CellContext`c2, 2]]}}]], 
      "Specifications" :> {{{$CellContext`q$$, 0.2, "feed quality"}, 0, 1, 
         0.1, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {137., 144.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.701592996486882*^9, 3.7015930488155518`*^9, {3.701593218661144*^9, 
   3.7015933028179135`*^9}, 3.7015933416889105`*^9, {3.7015933811857104`*^9, 
   3.7015934122946615`*^9}, {3.701593444400014*^9, 
   3.701593591118182*^9}},ExpressionUUID->"252c8130-cb0a-4bb1-ad11-\
b91b17fb218a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "\[Delta]", ",", "V", ",", "L"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ";", 
      RowBox[{"y", "=", 
       RowBox[{"0.4", "*", "x"}]}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"0.25", "/", "5"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"V", "=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "c0", ",", "\[Delta]c", ",", "c1", ",", "c2", ",", "f", ",", "g", 
           ",", "h1", ",", "h2"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"c0", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"y", "/", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.42", "*", "x"}], ",", 
               RowBox[{"y", "/", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.75", "*", "x"}], ",", 
               RowBox[{"0.4", "*", "y"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.75", "*", "x"}], ",", 
               RowBox[{"0.75", "*", "y"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.75", "*", "x"}], ",", "y"}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Delta]c", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "\[Delta]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "\[Delta]"}], ",", "0"}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"c1", "=", 
           RowBox[{"c0", "+", "\[Delta]c"}]}], ";", 
          RowBox[{"c2", "=", 
           RowBox[{"c0", "-", "\[Delta]c"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"f", "[", "c_", "]"}], ":=", 
           RowBox[{"Quiet", "@", 
            RowBox[{"Interpolation", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"BezierFunction", "[", "c", "]"}], "[", "#", "]"}], 
               "&"}], "/@", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", "1", ",", "0.01"}], "]"}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"g", "[", "c_", "]"}], ":=", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{
                RowBox[{"f", "[", "c", "]"}], "[", "#", "]"}]}], "}"}], "&"}],
             "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"c", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0.01"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"h1", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"c2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
             RowBox[{"g", "@", "c1"}]}], "]"}]}], ";", 
          RowBox[{"h2", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"g", "@", "c2"}], ",", 
             RowBox[{"{", 
              RowBox[{"c1", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"White", ",", 
               RowBox[{"Polygon", "@", 
                RowBox[{"Join", "[", 
                 RowBox[{"h1", ",", "h2"}], "]"}]}]}], "}"}], ",", 
             "\[IndentingNewLine]", "Thick", ",", 
             RowBox[{"Line", "@", 
              RowBox[{"g", "[", "c1", "]"}]}], ",", 
             RowBox[{"Line", "@", 
              RowBox[{"g", "[", "c2", "]"}]}], ",", "\[IndentingNewLine]", 
             "Green", ",", 
             RowBox[{"Point", "@", 
              RowBox[{"RandomPoint", "[", 
               RowBox[{
                RowBox[{"Polygon", "@", 
                 RowBox[{"Join", "[", 
                  RowBox[{"h1", ",", "h2"}], "]"}]}], ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"q", "*", "500"}], "]"}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"L", "=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "c0", ",", "\[Delta]c", ",", "c1", ",", "c2", ",", "f", ",", "g", 
           ",", "h1", ",", "h2"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"c0", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"y", "/", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.25", "*", "x"}], ",", 
               RowBox[{"y", "/", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.25", "*", "x"}], ",", "0"}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Delta]c", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "\[Delta]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Delta]", ",", "\[Delta]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Delta]", ",", "0"}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"c1", "=", 
           RowBox[{"c0", "+", "\[Delta]c"}]}], ";", 
          RowBox[{"c2", "=", 
           RowBox[{"c0", "-", "\[Delta]c"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"f", "[", "c_", "]"}], ":=", 
           RowBox[{"Quiet", "@", 
            RowBox[{"Interpolation", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"BezierFunction", "[", "c", "]"}], "[", "#", "]"}], 
               "&"}], "/@", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", "1", ",", "0.01"}], "]"}]}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"g", "[", "c_", "]"}], ":=", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{
                RowBox[{"f", "[", "c", "]"}], "[", "#", "]"}]}], "}"}], "&"}],
             "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"c", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0.01"}], 
             "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"h1", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"c2", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
             RowBox[{"g", "@", "c1"}]}], "]"}]}], ";", 
          RowBox[{"h2", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"g", "@", "c2"}], ",", 
             RowBox[{"{", 
              RowBox[{"c1", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"White", ",", 
               RowBox[{"Polygon", "@", 
                RowBox[{"Join", "[", 
                 RowBox[{"h1", ",", "h2"}], "]"}]}]}], "}"}], ",", 
             "\[IndentingNewLine]", "Thick", ",", 
             RowBox[{"Line", "@", 
              RowBox[{"g", "[", "c1", "]"}]}], ",", 
             RowBox[{"Line", "@", 
              RowBox[{"g", "[", "c2", "]"}]}], ",", "\[IndentingNewLine]", 
             "Blue", ",", 
             RowBox[{"Point", "@", 
              RowBox[{"RandomPoint", "[", 
               RowBox[{
                RowBox[{"Polygon", "@", 
                 RowBox[{"Join", "[", 
                  RowBox[{"h1", ",", "h2"}], "]"}]}], ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"q", "*", "500"}], "]"}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"L", ",", "V"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", "0.2", ",", "\"\<feed quality\>\""}], "}"}], ",", 
      "0", ",", "1", ",", "0.1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.702041690782484*^9, 3.7020420923087935`*^9}, {
  3.7020421226563435`*^9, 
  3.702042344791106*^9}},ExpressionUUID->"23947c67-93c8-4ce1-bda3-\
2a293e2dc937"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = 0.2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`q$$], 0.2, "feed quality"}, 0, 1, 0.1}}, 
    Typeset`size$$ = {360., {91., 96.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`q$61144$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`q$$ = 0.2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`q$$, $CellContext`q$61144$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`x$, $CellContext`y$, $CellContext`\[Delta]$, \
$CellContext`V$, $CellContext`L$}, $CellContext`x$ = 1; $CellContext`y$ = 
         0.4 $CellContext`x$; $CellContext`\[Delta]$ = 
         0.25/5; $CellContext`V$ = 
         Module[{$CellContext`c0$, $CellContext`\[Delta]c$, $CellContext`c1$, \
$CellContext`c2$, $CellContext`f$, $CellContext`g$, $CellContext`h1$, \
$CellContext`h2$}, $CellContext`c0$ = {{0, $CellContext`y$/2}, {
              0.42 $CellContext`x$, $CellContext`y$/2}, {
              0.75 $CellContext`x$, 0.4 $CellContext`y$}, {
              0.75 $CellContext`x$, 0.75 $CellContext`y$}, {
              0.75 $CellContext`x$, $CellContext`y$}}; \
$CellContext`\[Delta]c$ = {{
              0, $CellContext`\[Delta]$}, {-$CellContext`\[Delta]$, \
$CellContext`\[Delta]$}, {-$CellContext`\[Delta]$, $CellContext`\[Delta]$}, \
{-$CellContext`\[Delta]$, $CellContext`\[Delta]$}, {-$CellContext`\[Delta]$, 
               0}}; $CellContext`c1$ = $CellContext`c0$ + $CellContext`\
\[Delta]c$; $CellContext`c2$ = $CellContext`c0$ - $CellContext`\[Delta]c$; \
$CellContext`f$[
              Pattern[$CellContext`c, 
               Blank[]]] := Quiet[
              Interpolation[
               Map[BezierFunction[$CellContext`c][#]& , 
                Range[0, 1, 0.01]]]]; $CellContext`g$[
              Pattern[$CellContext`c$, 
               Blank[]]] := Map[{#, 
               $CellContext`f$[$CellContext`c$][#]}& , 
              Range[0, 
               Part[$CellContext`c$, -1, 1], 0.01]]; $CellContext`h1$ = Join[{
               Part[$CellContext`c2$, 1]}, 
              $CellContext`g$[$CellContext`c1$]]; $CellContext`h2$ = Join[
              $CellContext`g$[$CellContext`c2$], {
               Part[$CellContext`c1$, -1]}]; Graphics[{{White, 
               Polygon[
                Join[$CellContext`h1$, $CellContext`h2$]]}, Thick, 
              Line[
               $CellContext`g$[$CellContext`c1$]], 
              Line[
               $CellContext`g$[$CellContext`c2$]], Green, 
              Point[
               RandomPoint[
                Polygon[
                 Join[$CellContext`h1$, $CellContext`h2$]], 
                Round[$CellContext`q$$ 500]]]}]]; $CellContext`L$ = 
         Module[{$CellContext`c0$, $CellContext`\[Delta]c$, $CellContext`c1$, \
$CellContext`c2$, $CellContext`f$, $CellContext`g$, $CellContext`h1$, \
$CellContext`h2$}, $CellContext`c0$ = {{0, $CellContext`y$/2}, {
              0.25 $CellContext`x$, $CellContext`y$/2}, {
              0.25 $CellContext`x$, 0}}; $CellContext`\[Delta]c$ = {{
              0, $CellContext`\[Delta]$}, {$CellContext`\[Delta]$, \
$CellContext`\[Delta]$}, {$CellContext`\[Delta]$, 
               0}}; $CellContext`c1$ = $CellContext`c0$ + $CellContext`\
\[Delta]c$; $CellContext`c2$ = $CellContext`c0$ - $CellContext`\[Delta]c$; \
$CellContext`f$[
              Pattern[$CellContext`c, 
               Blank[]]] := Quiet[
              Interpolation[
               Map[BezierFunction[$CellContext`c][#]& , 
                Range[0, 1, 0.01]]]]; $CellContext`g$[
              Pattern[$CellContext`c$, 
               Blank[]]] := Map[{#, 
               $CellContext`f$[$CellContext`c$][#]}& , 
              Range[0, 
               Part[$CellContext`c$, -1, 1], 0.01]]; $CellContext`h1$ = Join[{
               Part[$CellContext`c2$, 1]}, 
              $CellContext`g$[$CellContext`c1$]]; $CellContext`h2$ = Join[
              $CellContext`g$[$CellContext`c2$], {
               Part[$CellContext`c1$, -1]}]; Graphics[{{White, 
               Polygon[
                Join[$CellContext`h1$, $CellContext`h2$]]}, Thick, 
              Line[
               $CellContext`g$[$CellContext`c1$]], 
              Line[
               $CellContext`g$[$CellContext`c2$]], Blue, 
              Point[
               RandomPoint[
                Polygon[
                 Join[$CellContext`h1$, $CellContext`h2$]], 
                Round[$CellContext`q$$ 500]]]}]]; 
        Show[$CellContext`L$, $CellContext`V$]], 
      "Specifications" :> {{{$CellContext`q$$, 0.2, "feed quality"}, 0, 1, 
         0.1, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {137., 144.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7020418183801317`*^9, 3.7020418668849792`*^9}, {
   3.702041965431492*^9, 3.702041992340023*^9}, {3.702042058588836*^9, 
   3.702042093223811*^9}, {3.7020421330498023`*^9, 3.702042194278725*^9}, 
   3.7020422490994163`*^9, {3.7020422869850073`*^9, 
   3.702042345149907*^9}},ExpressionUUID->"c42cb434-8a2f-43f3-b64c-\
6c3c85e4deea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "y", ",", "\[Delta]", ",", "c", ",", "\[Delta]c", ",", "cA1", 
       ",", "cA2", ",", "cB1", ",", "cB2", ",", "f1", ",", "g1", ",", "h1", 
       ",", "f2", ",", "g2", ",", "h2", ",", "j"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ";", 
      RowBox[{"y", "=", 
       RowBox[{"0.4", "*", "x"}]}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"0.25", "/", "5"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "1", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.42", "*", "x"}], ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.75", "*", "x"}], ",", 
           RowBox[{"0.4", "*", "y"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.75", "*", "x"}], ",", 
           RowBox[{"0.75", "*", "y"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.75", "*", "x"}], ",", "y"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Delta]c", "[", "1", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "2", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.25", "*", "x"}], ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.25", "*", "x"}], ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Delta]c", "[", "2", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cA1", "=", 
       RowBox[{
        RowBox[{"c", "[", "1", "]"}], "+", 
        RowBox[{"\[Delta]c", "[", "1", "]"}]}]}], ";", 
      RowBox[{"cB1", "=", 
       RowBox[{
        RowBox[{"c", "[", "1", "]"}], "-", 
        RowBox[{"\[Delta]c", "[", "1", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"cA2", "=", 
       RowBox[{
        RowBox[{"c", "[", "2", "]"}], "+", 
        RowBox[{"\[Delta]c", "[", "2", "]"}]}]}], ";", 
      RowBox[{"cB2", "=", 
       RowBox[{
        RowBox[{"c", "[", "2", "]"}], "-", 
        RowBox[{"\[Delta]c", "[", "2", "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"f1", "[", "i_", "]"}], ":=", 
         RowBox[{"Quiet", "@", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"BezierFunction", "[", 
               RowBox[{"c1", "[", "i", "]"}], "]"}], "[", "#", "]"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "1", ",", "0.01"}], "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"g1", "[", "i_", "]"}], ":=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"f1", "[", "i", "]"}], "[", "#", "]"}]}], "}"}], "&"}], 
          "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"c1", "[", "i", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0.01"}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"h1", "[", "i_", "]"}], ":=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c2", "[", "i", "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
           RowBox[{"g1", "[", "i", "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"f2", "[", "i_", "]"}], ":=", 
         RowBox[{"Quiet", "@", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"BezierFunction", "[", 
               RowBox[{"c2", "[", "i", "]"}], "]"}], "[", "#", "]"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "1", ",", "0.01"}], "]"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"g2", "[", "i_", "]"}], ":=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"f2", "[", "i", "]"}], "[", "#", "]"}]}], "}"}], "&"}], 
          "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"c2", "[", "i", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0.01"}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"h2", "[", "i_", "]"}], ":=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"g2", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c1", "[", "i", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "}"}]}], "]"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Point", "@", 
             RowBox[{"RandomPoint", "[", 
              RowBox[{
               RowBox[{"Polygon", "[", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"h2", "[", "1", "]"}], ",", 
                  RowBox[{"h1", "[", "1", "]"}]}], "]"}], "]"}], ",", 
               RowBox[{"Round", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "q"}], ")"}], "*", "500"}], "]"}]}], 
              "]"}]}], ","}], "*)"}], 
          RowBox[{
           RowBox[{"BezierCurve", "@", "cA1"}], ",", 
           RowBox[{"BezierCurve", "@", "cB1"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Point", "@", 
              RowBox[{"RandomPoint", "[", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"h2", "[", "2", "]"}], ",", 
                   RowBox[{"h1", "[", "2", "]"}]}], "]"}], "]"}], ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"q", "*", "500"}], "]"}]}], "]"}]}], ","}], "*)"}], 
           RowBox[{"BezierCurve", "@", "cA2"}], ",", 
           RowBox[{"BezierCurve", "@", "cB2"}]}], "}"}], ","}], 
        "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", "0.2", ",", "\"\<feed quality\>\""}], "}"}], ",", 
      "0", ",", "1", ",", "0.1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7020414731018033`*^9, 
  3.7020416715563836`*^9}},ExpressionUUID->"d9ca4778-c59c-4e6d-b028-\
218c1e9ed3f2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = 0.2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`q$$], 0.2, "feed quality"}, 0, 1, 0.1}}, 
    Typeset`size$$ = {360., {91., 96.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`q$56251$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`q$$ = 0.2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`q$$, $CellContext`q$56251$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`x, $CellContext`y, $CellContext`\[Delta], \
$CellContext`c, $CellContext`\[Delta]c, $CellContext`cA1, $CellContext`cA2, \
$CellContext`cB1, $CellContext`cB2, $CellContext`f1, $CellContext`g1, \
$CellContext`h1, $CellContext`f2, $CellContext`g2, $CellContext`h2, \
$CellContext`j}, $CellContext`x = 1; $CellContext`y = 
         0.4 $CellContext`x; $CellContext`\[Delta] = 
         0.25/5; $CellContext`c[
          1] = {{0, $CellContext`y/2}, {
           0.42 $CellContext`x, $CellContext`y/2}, {
           0.75 $CellContext`x, 0.4 $CellContext`y}, {
           0.75 $CellContext`x, 0.75 $CellContext`y}, {
           0.75 $CellContext`x, $CellContext`y}}; $CellContext`\[Delta]c[
          1] = {{0, $CellContext`\[Delta]}, {-$CellContext`\[Delta], \
$CellContext`\[Delta]}, {-$CellContext`\[Delta], $CellContext`\[Delta]}, \
{-$CellContext`\[Delta], $CellContext`\[Delta]}, {-$CellContext`\[Delta], 
            0}}; $CellContext`c[
          2] = {{0, $CellContext`y/2}, {
           0.25 $CellContext`x, $CellContext`y/2}, {
           0.25 $CellContext`x, 0}}; $CellContext`\[Delta]c[
          2] = {{
           0, $CellContext`\[Delta]}, {$CellContext`\[Delta], $CellContext`\
\[Delta]}, {$CellContext`\[Delta], 0}}; $CellContext`cA1 = $CellContext`c[
           1] + $CellContext`\[Delta]c[1]; $CellContext`cB1 = $CellContext`c[
           1] - $CellContext`\[Delta]c[
          1]; $CellContext`cA2 = $CellContext`c[2] + $CellContext`\[Delta]c[
           2]; $CellContext`cB2 = $CellContext`c[2] - $CellContext`\[Delta]c[
          2]; Graphics[{Thick, {
            BezierCurve[$CellContext`cA1], 
            BezierCurve[$CellContext`cB1]}, {Red, 
            BezierCurve[$CellContext`cA2], 
            BezierCurve[$CellContext`cB2]}, Null}]], 
      "Specifications" :> {{{$CellContext`q$$, 0.2, "feed quality"}, 0, 1, 
         0.1, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {137., 144.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7020414934825044`*^9, {3.702041612863696*^9, 
   3.7020416603077292`*^9}},ExpressionUUID->"cd3bfb63-a450-4505-9006-\
8e1b4c300ceb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "y", ",", "\[Delta]", ",", "c", ",", "\[Delta]c", ",", "c1", 
       ",", "c2", ",", "f1", ",", "g1", ",", "h1", ",", "f2", ",", "g2", ",", 
       "h2", ",", "j"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ";", 
      RowBox[{"y", "=", 
       RowBox[{"0.4", "*", "x"}]}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"0.25", "/", "5"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "1", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.42", "*", "x"}], ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.75", "*", "x"}], ",", 
           RowBox[{"0.4", "*", "y"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.75", "*", "x"}], ",", 
           RowBox[{"0.75", "*", "y"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.75", "*", "x"}], ",", "y"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Delta]c", "[", "1", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c", "[", "2", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.25", "*", "x"}], ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.25", "*", "x"}], ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Delta]c", "[", "2", "]"}], "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"c1", "[", "i_", "]"}], ":=", 
       RowBox[{
        RowBox[{"c", "[", "i", "]"}], "+", 
        RowBox[{"\[Delta]c", "[", "i", "]"}]}]}], ";", 
      RowBox[{
       RowBox[{"c2", "[", "i_", "]"}], ":=", 
       RowBox[{
        RowBox[{"c", "[", "i", "]"}], "-", 
        RowBox[{"\[Delta]c", "[", "i", "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f1", "[", "i_", "]"}], ":=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"BezierFunction", "[", 
             RowBox[{"c1", "[", "i", "]"}], "]"}], "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "1", ",", "0.01"}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g1", "[", "i_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"f1", "[", "i", "]"}], "[", "#", "]"}]}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"c1", "[", "i", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0.01"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"h1", "[", "i_", "]"}], ":=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"c2", "[", "i", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
         RowBox[{"g1", "[", "i", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f2", "[", "i_", "]"}], ":=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"BezierFunction", "[", 
             RowBox[{"c2", "[", "i", "]"}], "]"}], "[", "#", "]"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "1", ",", "0.01"}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g2", "[", "i_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{
            RowBox[{"f2", "[", "i", "]"}], "[", "#", "]"}]}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"c2", "[", "i", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0.01"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"h2", "[", "i_", "]"}], ":=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"g2", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"c1", "[", "i", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"j", "=", "2"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Point", "@", 
             RowBox[{"RandomPoint", "[", 
              RowBox[{
               RowBox[{"Polygon", "[", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"h2", "[", "1", "]"}], ",", 
                  RowBox[{"h1", "[", "1", "]"}]}], "]"}], "]"}], ",", 
               RowBox[{"Round", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "q"}], ")"}], "*", "500"}], "]"}]}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"BezierCurve", "@", 
             RowBox[{"c1", "[", "1", "]"}]}], ",", 
            RowBox[{"BezierCurve", "@", 
             RowBox[{"c2", "[", "1", "]"}]}]}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"BezierCurve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"c1", "[", "1", "]"}], "+", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "#"}], "*", "x"}], ",", 
                    RowBox[{"#", "*", "y"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "#"}], "*", "x"}], ",", 
                    RowBox[{"#", "*", "y"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "#"}], "*", "x"}], ",", 
                    RowBox[{"#", "*", "y"}]}], "}"}]}], "}"}]}], "&"}], "@", 
               "0.015"}], "]"}], ",", "Red", ",", 
             RowBox[{"BezierCurve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"c2", "[", "1", "]"}], "+", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "#"}], "*", "x"}], ",", 
                    RowBox[{"#", "*", "y"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "#"}], "*", "x"}], ",", 
                    RowBox[{"#", "*", "y"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "#"}], "*", "x"}], ",", 
                    RowBox[{"#", "*", "y"}]}], "}"}]}], "}"}]}], "&"}], "@", 
               "0.015"}], "]"}]}], "*)"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Point", "@", 
             RowBox[{"RandomPoint", "[", 
              RowBox[{
               RowBox[{"Polygon", "[", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"h2", "[", "2", "]"}], ",", 
                  RowBox[{"h1", "[", "2", "]"}]}], "]"}], "]"}], ",", 
               RowBox[{"Round", "[", 
                RowBox[{"q", "*", "500"}], "]"}]}], "]"}]}], ","}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"BezierCurve", "@", 
              RowBox[{"c1", "[", "2", "]"}]}], ",", 
             RowBox[{"BezierCurve", "@", 
              RowBox[{"c2", "[", "2", "]"}]}]}], "*)"}], "}"}], ","}], 
         "\[IndentingNewLine]", "}"}], "]"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Point", "@", 
               RowBox[{"RandomPoint", "[", 
                RowBox[{
                 RowBox[{"Polygon", "[", 
                  RowBox[{"Join", "[", 
                   RowBox[{
                    RowBox[{"h2", "[", "1", "]"}], ",", 
                    RowBox[{"h1", "[", "1", "]"}]}], "]"}], "]"}], ",", 
                 RowBox[{"Round", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "-", "q"}], ")"}], "*", "500"}], "]"}]}], 
                "]"}]}], ","}], "*)"}], 
            RowBox[{
             RowBox[{"BezierCurve", "@", 
              RowBox[{"c1", "[", "1", "]"}]}], ",", 
             RowBox[{"BezierCurve", "@", 
              RowBox[{"c2", "[", "1", "]"}]}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Point", "@", 
              RowBox[{"RandomPoint", "[", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Join", "[", 
                  RowBox[{
                   RowBox[{"h2", "[", "2", "]"}], ",", 
                   RowBox[{"h1", "[", "2", "]"}]}], "]"}], "]"}], ",", 
                RowBox[{"Round", "[", 
                 RowBox[{"q", "*", "500"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"BezierCurve", "@", 
              RowBox[{"c1", "[", "2", "]"}]}], ",", 
             RowBox[{"BezierCurve", "@", 
              RowBox[{"c2", "[", "2", "]"}]}]}], "}"}], ","}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FaceForm", "@", 
            RowBox[{"Opacity", "[", 
             RowBox[{"0.5", ",", "Red"}], "]"}]}], ",", 
           RowBox[{"Polygon", "@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"h1", "[", "1", "]"}], ",", 
              RowBox[{"h2", "[", "1", "]"}]}], "]"}]}], ",", 
           RowBox[{"Polygon", "@", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"h1", "[", "2", "]"}], ",", 
              RowBox[{"h2", "[", "2", "]"}]}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", 
             RowBox[{"Line", "@", 
              RowBox[{"h1", "[", "#", "]"}]}], ",", 
             RowBox[{"Line", "@", 
              RowBox[{"h2", "[", "#", "]"}]}]}], "}"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Point", "@", 
          RowBox[{"RandomPoint", "[", 
           RowBox[{
            RowBox[{"Polygon", "@", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"h1", "[", "1", "]"}], ",", 
               RowBox[{"h2", "[", "1", "]"}]}], "]"}]}], ",", 
            RowBox[{"Round", "[", 
             RowBox[{"q", "*", "500"}], "]"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", "0.2", ",", "\"\<feed quality\>\""}], "}"}], ",", 
      "0", ",", "1", ",", "0.1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.701434975961976*^9, 3.7014351538388743`*^9}, {
  3.7014351997951097`*^9, 3.70143530233663*^9}, {3.7014353371242175`*^9, 
  3.7014353573393183`*^9}, {3.701435399727723*^9, 3.7014354102907734`*^9}, {
  3.7014473421796775`*^9, 3.7014473685301847`*^9}, {3.701518970224906*^9, 
  3.701518994762831*^9}, {3.701519037016633*^9, 3.7015191896529813`*^9}, {
  3.7015200422057514`*^9, 3.701520108103927*^9}, {3.702041208319674*^9, 
  3.7020414463714557`*^9}},ExpressionUUID->"d2e8d2a3-4fd7-4a91-bc3b-\
1a3b04ca12ef"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = 0.8, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`q$$], 0.2, "feed quality"}, 0, 1, 0.1}}, 
    Typeset`size$$ = {360., {91., 96.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`q$55436$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`q$$ = 0.2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`q$$, $CellContext`q$55436$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`x$, $CellContext`y$, $CellContext`\[Delta]$, \
$CellContext`c$, $CellContext`\[Delta]c$, $CellContext`c1$, $CellContext`c2$, \
$CellContext`f1$, $CellContext`g1$, $CellContext`h1$, $CellContext`f2$, \
$CellContext`g2$, $CellContext`h2$, $CellContext`j$}, $CellContext`x$ = 
         1; $CellContext`y$ = 0.4 $CellContext`x$; $CellContext`\[Delta]$ = 
         0.25/5; $CellContext`c$[
          1] = {{0, $CellContext`y$/2}, {
           0.42 $CellContext`x$, $CellContext`y$/2}, {
           0.75 $CellContext`x$, 0.4 $CellContext`y$}, {
           0.75 $CellContext`x$, 0.75 $CellContext`y$}, {
           0.75 $CellContext`x$, $CellContext`y$}}; $CellContext`\[Delta]c$[
          1] = {{0, $CellContext`\[Delta]$}, {-$CellContext`\[Delta]$, \
$CellContext`\[Delta]$}, {-$CellContext`\[Delta]$, $CellContext`\[Delta]$}, \
{-$CellContext`\[Delta]$, $CellContext`\[Delta]$}, {-$CellContext`\[Delta]$, 
            0}}; $CellContext`c$[
          2] = {{0, $CellContext`y$/2}, {
           0.25 $CellContext`x$, $CellContext`y$/2}, {
           0.25 $CellContext`x$, 0}}; $CellContext`\[Delta]c$[
          2] = {{
           0, $CellContext`\[Delta]$}, {$CellContext`\[Delta]$, $CellContext`\
\[Delta]$}, {$CellContext`\[Delta]$, 0}}; $CellContext`c1$[
           Pattern[$CellContext`i$, 
            
            Blank[]]] := $CellContext`c$[$CellContext`i$] + $CellContext`\
\[Delta]c$[$CellContext`i$]; $CellContext`c2$[
           Pattern[$CellContext`i$, 
            
            Blank[]]] := $CellContext`c$[$CellContext`i$] - $CellContext`\
\[Delta]c$[$CellContext`i$]; $CellContext`f1$[
           Pattern[$CellContext`i$, 
            Blank[]]] := Quiet[
           Interpolation[
            Map[BezierFunction[
              $CellContext`c1$[$CellContext`i$]][#]& , 
             Range[0, 1, 0.01]]]]; $CellContext`g1$[
           Pattern[$CellContext`i$, 
            Blank[]]] := Map[{#, 
            $CellContext`f1$[$CellContext`i$][#]}& , 
           Range[0, 
            Part[
             $CellContext`c1$[$CellContext`i$], -1, 1], 
            0.01]]; $CellContext`h1$[
           Pattern[$CellContext`i$, 
            Blank[]]] := Join[{
            Part[
             $CellContext`c2$[$CellContext`i$], 1]}, 
           $CellContext`g1$[$CellContext`i$]]; $CellContext`f2$[
           Pattern[$CellContext`i$, 
            Blank[]]] := Quiet[
           Interpolation[
            Map[BezierFunction[
              $CellContext`c2$[$CellContext`i$]][#]& , 
             Range[0, 1, 0.01]]]]; $CellContext`g2$[
           Pattern[$CellContext`i$, 
            Blank[]]] := Map[{#, 
            $CellContext`f2$[$CellContext`i$][#]}& , 
           Range[0, 
            Part[
             $CellContext`c2$[$CellContext`i$], -1, 1], 
            0.01]]; $CellContext`h2$[
           Pattern[$CellContext`i$, 
            Blank[]]] := Join[
           $CellContext`g2$[$CellContext`i$], {
            Part[
             $CellContext`c1$[$CellContext`i$], -1]}]; Graphics[{Thick, {
            FaceForm[
             Opacity[0.5, Red]], 
            Polygon[
             Join[
              $CellContext`h1$[1], 
              $CellContext`h2$[1]]], 
            Polygon[
             Join[
              $CellContext`h1$[2], 
              $CellContext`h2$[2]]]}, 
           Map[{Thick, 
             Line[
              $CellContext`h1$[#]], 
             Line[
              $CellContext`h2$[#]]}& , {1, 2}], 
           Point[
            RandomPoint[
             Polygon[
              Join[
               $CellContext`h1$[1], 
               $CellContext`h2$[1]]], 
             Round[$CellContext`q$$ 500]]]}]], 
      "Specifications" :> {{{$CellContext`q$$, 0.2, "feed quality"}, 0, 1, 
         0.1, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {137., 144.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7014349579532814`*^9, {3.7014350955075827`*^9, 3.701435154228875*^9}, {
   3.701435210794177*^9, 3.7014352216018276`*^9}, {3.70143525963741*^9, 
   3.701435302898231*^9}, 3.70143535813492*^9, {3.7014354029651446`*^9, 
   3.701435411082991*^9}, {3.701447352953294*^9, 3.701447369858261*^9}, {
   3.701518971146308*^9, 3.7015189955272326`*^9}, 3.7015190394122524`*^9, {
   3.70151910280576*^9, 3.701519187014296*^9}, {3.7015200304076953`*^9, 
   3.7015200592125626`*^9}, {3.701520090720933*^9, 3.701520108640958*^9}, {
   3.70204124436025*^9, 3.7020413629824505`*^9}, {3.702041399112028*^9, 
   3.7020414477822733`*^9}},ExpressionUUID->"c5259b23-58f8-4970-a265-\
c1d80210428b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "y", ",", "\[Delta]", ",", "c", ",", "\[Delta]c", ",", "c1", 
       ",", "c2", ",", "f1", ",", "g1", ",", "h1", ",", "f2", ",", "g2", ",", 
       "h2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ";", 
      RowBox[{"y", "=", 
       RowBox[{"0.4", "*", "x"}]}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"0.25", "/", "5"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"c", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.42", "*", "x"}], ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.75", "*", "x"}], ",", 
           RowBox[{"0.35", "*", "y"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.75", "*", "x"}], ",", 
           RowBox[{"0.75", "*", "y"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.75", "*", "x"}], ",", "y"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Delta]c", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Delta]"}], ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c1", "=", 
       RowBox[{"c", "+", "\[Delta]c"}]}], ";", 
      RowBox[{"c2", "=", 
       RowBox[{"c", "-", "\[Delta]c"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"f1", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"BezierFunction", "[", "c1", "]"}], "[", "#", "]"}], 
           "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "1", ",", "0.01"}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"f1", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"c1", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0.01"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"h1", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", "g1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"f2", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"BezierFunction", "[", "c2", "]"}], "[", "#", "]"}], 
           "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "1", ",", "0.01"}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"f2", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"c2", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0.01"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"h2", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"g2", ",", 
         RowBox[{"{", 
          RowBox[{"c1", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"BezierCurve", "@", "c"}], ",", "Dashed", ",", "Blue", ",", 
           RowBox[{"BezierCurve", "@", "c1"}], ",", "Red", ",", 
           RowBox[{"BezierCurve", "@", "c2"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"EdgeForm", "@", "None"}], ",", 
         RowBox[{"FaceForm", "@", 
          RowBox[{"Opacity", "[", 
           RowBox[{"0.5", ",", "Red"}], "]"}]}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"h2", ",", "h1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
        "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", "0", ",", "\"\<feed quality\>\""}], "}"}], ",", "0", 
      ",", "1", ",", "0.1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7014339234472065`*^9, 3.7014339389921017`*^9}, {
  3.701433968994274*^9, 3.701433983407691*^9}, {3.7014347517111783`*^9, 
  3.701434777238302*^9}, {3.7014348375223994`*^9, 3.701434841167021*^9}, {
  3.7014348969225683`*^9, 3.701434930410137*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`q$$], 0, "feed quality"}, 0, 1, 0.1}}, 
    Typeset`size$$ = {360., {71., 77.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`q$427846$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`q$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`q$$, $CellContext`q$427846$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`x, $CellContext`y, $CellContext`\[Delta], \
$CellContext`c, $CellContext`\[Delta]c, $CellContext`c1, $CellContext`c2, \
$CellContext`f1, $CellContext`g1, $CellContext`h1, $CellContext`f2, \
$CellContext`g2, $CellContext`h2}, $CellContext`x = 1; $CellContext`y = 
         0.4 $CellContext`x; $CellContext`\[Delta] = 
         0.25/5; $CellContext`c = {{0, $CellContext`y/2}, {
           0.42 $CellContext`x, $CellContext`y/2}, {
           0.75 $CellContext`x, 0.35 $CellContext`y}, {
           0.75 $CellContext`x, 0.75 $CellContext`y}, {
           0.75 $CellContext`x, $CellContext`y}}; $CellContext`\[Delta]c = {{
           0, $CellContext`\[Delta]}, {-$CellContext`\[Delta], $CellContext`\
\[Delta]}, {-$CellContext`\[Delta], $CellContext`\[Delta]}, {-$CellContext`\
\[Delta], $CellContext`\[Delta]}, {-$CellContext`\[Delta], 
            0}}; $CellContext`c1 = $CellContext`c + $CellContext`\[Delta]c; \
$CellContext`c2 = $CellContext`c - $CellContext`\[Delta]c; $CellContext`f1 = 
         Quiet[
           Interpolation[
            Map[BezierFunction[$CellContext`c1][#]& , 
             Range[0, 1, 0.01]]]]; $CellContext`g1 = Map[{#, 
            $CellContext`f1[#]}& , 
           Range[0, 
            Part[$CellContext`c1, -1, 1], 0.01]]; $CellContext`h1 = Join[{
            Part[$CellContext`c2, 1]}, $CellContext`g1]; $CellContext`f2 = 
         Quiet[
           Interpolation[
            Map[BezierFunction[$CellContext`c2][#]& , 
             Range[0, 1, 0.01]]]]; $CellContext`g2 = Map[{#, 
            $CellContext`f2[#]}& , 
           Range[0, 
            Part[$CellContext`c2, -1, 1], 0.01]]; $CellContext`h2 = 
         Join[$CellContext`g2, {
            Part[$CellContext`c1, -1]}]; Graphics[{Thick, {
            BezierCurve[$CellContext`c], Dashed, Blue, 
            BezierCurve[$CellContext`c1], Red, 
            BezierCurve[$CellContext`c2]}, 
           EdgeForm[None], 
           FaceForm[
            Opacity[0.5, Red]], 
           Polygon[
            Join[$CellContext`h2, $CellContext`h1]]}]], 
      "Specifications" :> {{{$CellContext`q$$, 0, "feed quality"}, 0, 1, 0.1, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {117., 124.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7014339159519773`*^9, 3.701433939896903*^9}, 
   3.701433984203508*^9, 3.701434777924703*^9, 3.701434841697422*^9, 
   3.7014349025975943`*^9, 
   3.701434933756543*^9},ExpressionUUID->"c791f60f-1df9-4f1c-af19-\
8cefaa73dd99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "x", ",", "y", ",", "\[Delta]", ",", "c", ",", "\[Delta]c", ",", "c1", 
       ",", "c2", ",", "f1", ",", "f2", ",", "g1", ",", "g2", ",", "h1", ",", 
       "h2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", "1"}], ";", 
      RowBox[{"y", "=", 
       RowBox[{"0.4", "*", "x"}]}], ";", 
      RowBox[{"\[Delta]", "=", 
       RowBox[{"0.25", "/", "5"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"c", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.25", "*", "x"}], ",", 
           RowBox[{"y", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0.25", "*", "x"}], ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Delta]c", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "\[Delta]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Delta]", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c1", "=", 
       RowBox[{"c", "+", "\[Delta]c"}]}], ";", 
      RowBox[{"c2", "=", 
       RowBox[{"c", "-", "\[Delta]c"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"f1", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"BezierFunction", "[", "c1", "]"}], "[", "#", "]"}], 
           "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "1", ",", "0.01"}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"f1", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"c1", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0.01"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"h1", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", "g1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"f2", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"BezierFunction", "[", "c2", "]"}], "[", "#", "]"}], 
           "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "1", ",", "0.01"}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"g2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"f2", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", 
          RowBox[{"c2", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", "0.01"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"h2", "=", 
       RowBox[{"Join", "[", 
        RowBox[{"g2", ",", 
         RowBox[{"{", 
          RowBox[{"c1", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "@", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"BezierCurve", "@", "c"}], ",", "Dashed", ",", "Blue", ",", 
           RowBox[{"BezierCurve", "@", "c1"}], ",", "Red", ",", 
           RowBox[{"BezierCurve", "@", "c2"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"EdgeForm", "@", "None"}], ",", 
         RowBox[{"FaceForm", "@", 
          RowBox[{"Opacity", "[", 
           RowBox[{"0.5", ",", "Red"}], "]"}]}], ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"h2", ",", "h1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Point", "@", 
          RowBox[{"RandomPoint", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"Join", "[", 
              RowBox[{"h2", ",", "h1"}], "]"}], "]"}], ",", "500"}], "]"}]}], 
         "*)"}], "}"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"q", ",", "0", ",", "\"\<feed quality\>\""}], "}"}], ",", "0", 
      ",", "1", ",", "0.1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7014333833194385`*^9, 3.7014333848170414`*^9}, {
  3.7014334845617332`*^9, 3.701433553857298*^9}, {3.701434027240126*^9, 
  3.701434304330937*^9}, {3.701434358828394*^9, 3.7014344119760623`*^9}, {
  3.7014346653041515`*^9, 3.7014347252378497`*^9}, {3.7014347933441772`*^9, 
  3.7014348301635704`*^9}, {3.701434911691242*^9, 3.701434920131288*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`q$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`q$$], 0, "feed quality"}, 0, 1, 0.1}}, 
    Typeset`size$$ = {360., {148., 154.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`q$427818$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`q$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`q$$, $CellContext`q$427818$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`x, $CellContext`y, $CellContext`\[Delta], \
$CellContext`c, $CellContext`\[Delta]c, $CellContext`c1, $CellContext`c2, \
$CellContext`f1, $CellContext`f2, $CellContext`g1, $CellContext`g2, \
$CellContext`h1, $CellContext`h2}, $CellContext`x = 1; $CellContext`y = 
         0.4 $CellContext`x; $CellContext`\[Delta] = 
         0.25/5; $CellContext`c = {{0, $CellContext`y/2}, {
           0.25 $CellContext`x, $CellContext`y/2}, {
           0.25 $CellContext`x, 0}}; $CellContext`\[Delta]c = {{
           0, $CellContext`\[Delta]}, {$CellContext`\[Delta], $CellContext`\
\[Delta]}, {$CellContext`\[Delta], 
            0}}; $CellContext`c1 = $CellContext`c + $CellContext`\[Delta]c; \
$CellContext`c2 = $CellContext`c - $CellContext`\[Delta]c; $CellContext`f1 = 
         Quiet[
           Interpolation[
            Map[BezierFunction[$CellContext`c1][#]& , 
             Range[0, 1, 0.01]]]]; $CellContext`g1 = Map[{#, 
            $CellContext`f1[#]}& , 
           Range[0, 
            Part[$CellContext`c1, -1, 1], 0.01]]; $CellContext`h1 = Join[{
            Part[$CellContext`c2, 1]}, $CellContext`g1]; $CellContext`f2 = 
         Quiet[
           Interpolation[
            Map[BezierFunction[$CellContext`c2][#]& , 
             Range[0, 1, 0.01]]]]; $CellContext`g2 = Map[{#, 
            $CellContext`f2[#]}& , 
           Range[0, 
            Part[$CellContext`c2, -1, 1], 0.01]]; $CellContext`h2 = 
         Join[$CellContext`g2, {
            Part[$CellContext`c1, -1]}]; Graphics[{Thick, {
            BezierCurve[$CellContext`c], Dashed, Blue, 
            BezierCurve[$CellContext`c1], Red, 
            BezierCurve[$CellContext`c2]}, 
           EdgeForm[None], 
           FaceForm[
            Opacity[0.5, Red]], 
           Polygon[
            Join[$CellContext`h2, $CellContext`h1]]}]], 
      "Specifications" :> {{{$CellContext`q$$, 0, "feed quality"}, 0, 1, 0.1, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {194., 201.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7014333857706428`*^9, 3.7014336168606186`*^9, 3.7014340647951255`*^9, {
   3.7014340977348833`*^9, 3.7014341962247763`*^9}, {3.7014342360709925`*^9, 
   3.701434255471491*^9}, {3.701434301447716*^9, 3.701434337810893*^9}, {
   3.7014343826791162`*^9, 3.701434412646864*^9}, 3.7014346755834017`*^9, {
   3.7014347131301804`*^9, 3.701434728628457*^9}, {3.7014347941085787`*^9, 
   3.7014348306783714`*^9}, 
   3.7014349221446915`*^9},ExpressionUUID->"bea3fc6f-8d00-4895-ab4b-\
39c90792f1fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "@", 
  RowBox[{"Graphics", "@", 
   RowBox[{"Point", "[", 
    RowBox[{"RandomPoint", "[", 
     RowBox[{
      RowBox[{"ImplicitRegion", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "x", "]"}], "\[LessEqual]", "y", "\[LessEqual]", 
          RowBox[{"Sin", "[", "x", "]"}]}], "||", 
         RowBox[{
          RowBox[{"Sin", "[", "x", "]"}], "\[LessEqual]", "y", "\[LessEqual]", 
          RowBox[{"Cos", "[", "x", "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", 
            RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}], ",", 
      "500"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.701592954306464*^9, 3.701592968848336*^9}}],

Cell[BoxData[
 GraphicsBox[PointBox[CompressedData["
1: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
8r6WyXOhYn+lxsA3UVQTEKSx/EQV/A/aWDqQ
   "]]]], "Output",
 CellChangeTimes->{{3.7015929663035316`*^9, 3.7015929701109514`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"c1", ",", "c2", ",", "gk"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"c2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0.25"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.75", ",", "0.25"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.75", ",", "1"}], "}"}]}], "}"}]}], ";", "\n", 
    "\[IndentingNewLine]", 
    RowBox[{"gk", "=", 
     RowBox[{"JoinedCurve", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.25"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"BezierCurve", "@", "c2"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.75", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"BezierCurve", "@", "c1"}]}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\n", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FilledCurve", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"BezierCurve", "@", "c1"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0.25"}], "}"}]}], "}"}], "]"}], ",", 
          RowBox[{"BezierCurve", "@", "c2"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1.75", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], 
       ",", "\[IndentingNewLine]", "Red", ",", 
       RowBox[{"Point", "@", 
        RowBox[{"RandomPoint", "[", 
         RowBox[{
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0.45"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.3", ",", "0.9"}], "}"}]}], "]"}], ",", "5000"}], 
         "]"}]}], ",", "\[IndentingNewLine]", "Blue", ",", 
       RowBox[{"Point", "@", 
        RowBox[{"RandomPoint", "[", 
         RowBox[{"gk", ",", "500"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.702041031445641*^9, 
  3.7020411652523384`*^9}},ExpressionUUID->"e24926a4-b05d-4ba2-9401-\
e1f3b17d6376"],

Cell[BoxData[
 TemplateBox[{
  "RandomPoint","creg",
   "\"The first argument \\!\\(\\*RowBox[{\\\"JoinedCurve\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"Line\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \
\\\"0\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\
\",\\\", \\\"0.25`\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"BezierCurve\\\", \\\"[\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\
\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0.25`\\\"}], \\\"}\\\"}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.75`\\\", \\\",\\\", \
\\\"0.25`\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"1.75`\
\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \
\\\",\\\", RowBox[{\\\"Line\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1.75`\\\", \\\",\\\", \\\"1\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"1\\\"}], \\\"}\\\"}]}], \\\"}\\\"}], \\\"]\\\"}], \\\",\\\", \
RowBox[{\\\"BezierCurve\\\", \\\"[\\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\
\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"1\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\
\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"0\\\", \\\",\\\", \\\"0\\\"}], \
\\\"}\\\"}]}], \\\"}\\\"}], \\\"]\\\"}]}], \\\"}\\\"}], \\\"]\\\"}]\\) is \
expected to be a parameter-free region.\"",2,51,2,19564065626919990757,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7020411662361403`*^9},ExpressionUUID->"42d42c46-4839-4827-bfff-\
d0212bd4ab51"],

Cell[BoxData[
 GraphicsBox[{
   FilledCurveBox[{
    BezierCurve[{{2, 1}, {2, 0}, {0, 0}}], Line[{{0, 0}, {0, 0.25}}], 
     BezierCurve[{{0, 0.25}, {1.75, 0.25}, {1.75, 1}}], 
     Line[{{1.75, 1}, {2, 1}}]}], 
   {RGBColor[1, 0, 0], PointBox[CompressedData["
1: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
+7DqCpZ96pMvmE2iq+1F6epVLORItp/5bwf7YKb9syXEaQZCgiHJ3eHMfUj7
Hhev148c7RTblctM38vi2Fod3gU5hT6ThopiwnrXDtWfnnQ0xc7OJQbGQTfo
3WGWahpzfsLBK6EPMwUr+9jMhjGzxVFc9mQhMXrZyOTbBRay/kSkaoXWEFiV
No2afJnC0wOpt1JH+tGS1upUo92NrKRtZw8QTwkz7+Z3IvwUKNRo/dlrTUXI
aPMzq+AVnPO9QfV4noy63Q+fcqXO4mK8vGj0syHkFMfst3NhoHs0o+HJkXG0
iB3wKr+8jAyb/Gv/9nTDZ0jUpXbVNMTfNSsnpaYQBny64dwfKsAjddN29joV
fwqFrD/XLeEzxat29mk/nPUiNj/dOQmfgTM6tqRhPD2m61WtwoAKQ39k5FUh
qDLcki/vT+NypDhv+Gw9Yf707wj/0DA8Xywn9JC7McNZKZd0fgljydm7nz8e
g3PyT44Z4TlE+XB7+j1OIOqUrRX4v1DRsuFoQI9ePrHNUKcQYXPYJqjxoO5I
MaHYutPz1tF5yMveLv+sVk943etxfzJOgfazOzF3c34S7obPD781a0CzW/f2
PUt1xGwtZ3tk9hJYI0nHR1fXIGLyXdpJejnOjR7uHJxJJRyWfGb+TFDgYPpx
a/3eKUhelSnLP1xBzMsUvWtqakX8jw2qsez90I6YZtkyOY5t9Xv8TJfpII2a
XhHKG4RRwXOS51IGkdLikZfc3Y86cYVIzbl+MKbTq2/9SSUiczuihf8uMzlC
6WNxSRZhb3Ql6RPrPHzcJpoWd4yguc9O8vvnZXBKzL+7d74DetyRqYsC2YTS
Nb0QC9M4VD1Jdn5yoApXer5X35+kIafd4rp82zSOyjNCo0+lwp4YrYoqGsXf
1OmCXW8HQdnWIWMcsAQO6aj75/UHoJNG3roUXYVQks+Hsi2dkI2ZvjrVNI0A
XOBXftiIuKw8ZNQMQ3/l2e/XKsUQPZuYFljPAFfJ083VAZW48W1GKSGMyTMV
9N+G1Vm46P9f4YW9FLTsrtt4lqcRa0vaT44ye9KySk7JQp2CULZxHT/uKYj7
ubV0ZdYhR2/6nMKnOhBxV9d3va4mrFSaHcLKm7ANBbdrxXKItFk74cWMEeT4
GTBJsZzQzrHctetXG8QKE4+SRNpxinudhcKWITTlRkmlbqXCPeFghtA4A7wD
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
vW9CaffRiAJenamPwr1gn65+vDFhEOmWpfs5Q1KI7Anefz+fksg9W53SFy93
YsbBrr12cQ6fMks+OgnWguazY/RA+QosBCM+sDSUYHI2xipWgInsFrJfQj91
EIMzaqtD74vAHDvMKsLYd/1m5A6pwRpIqCjMPP/bgbN3bg6P3m2AOBGmO3o8
HuczrT2Nv9HRoHfV9Pv7Kkz4N9rvujKD+8dVb+y/WY5z0s07uVcWccbsDOdT
cRquv76qPKRGIotLs8SOXB7Fxde9G/lfMpGFqszbT3xpRZaDcvLCRgYfLfN9
CeWpB98maUyP18OT+/Rcm2YXQk4wObHN0XFgM18K3b6JMLp4LuVmVROOuG/8
uZg3As4/uxbUFtohEFfo4ZJXCB9q2w4Or3xircM+v917m2CvP3rorF0OBlmu
/LPUzsCt1OdzHgFTSL6z49oT8VHw75v+/LZ8EjbutVvsWhsh6yrXWPumEoFC
1d/kc7rg2nJZ/Pb6SSyH2Huk2NAQc0/SSubPPEjPRQUklO4SRTtyE3d/mULH
qZ08vDqjmNI+mRlLTOGGceL4/3MZcUFTs//tOJY/1OiHcU/jyGlb+aE8EnkH
Z0Z08r9mJCo0KtefoiN/x7uHebJVRNjohKnkuxmc/LhHlJkUS7jw3Gi5MNsK
cS9Vlxm+UMgMb18c/DeAVilria1LjDkbO9hQ+3YaHnVsF6QcG4k5iVett6Xn
kPfTxEpw+wDmNvSNLKckg6c7YSinPZnwO+o/EZ7QgIGPnrkfuRoQWFH5Kev0
IhwnpTt3XYzA9aiML15ddLzz2uyUq91IUBaNPf44VIJZkOyytnwC3TyWfm9F
BxFatak4WqyGwZ1uZbVcNUReTMsoZyUjL/qfD1yym4fXw8sHecnd2DTBxHKO
l466H3054gxva7ltZvV4vha10csN7WIMn2q3XTO3SiJjd17RV9ceSH6d/C25
m5mczrFGmDW6GjapEMW1LGKw78IHg2+5kFV//Xs+s4wwX5ZVbPDOQ+jqzm+y
kQzPZ9u56+TYANKNx69IRXbCscl6neUxCnatCfhE5WjE6yfJ3ef4m+FY+2yP
VlkT8u96PtlPrkToh1VDtYEOHHW4uW9bQD30n+zm7jiSDsP1zIvrLFowfvea
+sahGfje7n62KknD1OgBOf9OJnKquFiQSWArdA/wGzYvd+KWtMdlnoYGIm3f
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
     "]]}, 
   {RGBColor[0, 0, 1], 
    PointBox[RandomPoint[
     JoinedCurve[{
       Line[{{0, 0}, {0, 0.25}}], 
        BezierCurve[{{0, 0.25}, {1.75, 0.25}, {1.75, 1}}], 
        Line[{{1.75, 1}, {2, 1}}], BezierCurve[{{2, 1}, {2, 0}, {0, 0}}]}], 
      500]]}}]], "Output",
 CellChangeTimes->{{3.7020410652143345`*^9, 3.7020410823798656`*^9}, {
  3.7020411161328773`*^9, 
  3.7020411662517405`*^9}},ExpressionUUID->"7958ca9c-999c-40f8-a95f-\
17b5adc0daac"]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 6142, 168, 430, "Input", "ExpressionUUID" -> \
"13b219d5-7d21-4cf4-8814-2bfa3d105691"],
Cell[6725, 192, 4384, 95, 298, "Output", "ExpressionUUID" -> \
"252c8130-cb0a-4bb1-ad11-b91b17fb218a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11146, 292, 9992, 255, 734, "Input", "ExpressionUUID" -> \
"23947c67-93c8-4ce1-bda3-2a293e2dc937"],
Cell[21141, 549, 5980, 118, 298, "Output", "ExpressionUUID" -> \
"c42cb434-8a2f-43f3-b64c-6c3c85e4deea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27158, 672, 8698, 235, 525, "Input", "ExpressionUUID" -> \
"d9ca4778-c59c-4e6d-b028-218c1e9ed3f2"],
Cell[35859, 909, 3528, 68, 298, "Output", "ExpressionUUID" -> \
"cd3bfb63-a450-4505-9006-8e1b4c300ceb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39424, 982, 14433, 373, 734, "Input", "ExpressionUUID" -> \
"d2e8d2a3-4fd7-4a91-bc3b-1a3b04ca12ef"],
Cell[53860, 1357, 5953, 131, 298, "Output", "ExpressionUUID" -> \
"c5259b23-58f8-4970-a265-c1d80210428b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59850, 1493, 5737, 154, 449, "Input", "ExpressionUUID" -> \
"46193d25-25ba-4b25-b43c-07e84f3b71cb"],
Cell[65590, 1649, 3888, 77, 258, "Output", "ExpressionUUID" -> \
"c791f60f-1df9-4f1c-af19-8cefaa73dd99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69515, 1731, 5547, 146, 449, "Input", "ExpressionUUID" -> \
"0ccb5833-86ec-4bdc-a48a-70508db48bac"],
Cell[75065, 1879, 3928, 78, 412, "Output", "ExpressionUUID" -> \
"bea3fc6f-8d00-4895-ab4b-39c90792f1fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79030, 1962, 906, 24, 30, "Input", "ExpressionUUID" -> \
"584f1a6d-7f97-4992-ac70-a4cc91da7180"],
Cell[79939, 1988, 10612, 175, 140, "Output", "ExpressionUUID" -> \
"1bba8d9d-d92f-4c55-87a3-8246cb446be4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90588, 2168, 3036, 85, 240, "Input", "ExpressionUUID" -> \
"e24926a4-b05d-4ba2-9401-e1f3b17d6376"],
Cell[93627, 2255, 1693, 27, 21, "Message", "ExpressionUUID" -> \
"42d42c46-4839-4827-bfff-d0212bd4ab51"],
Cell[95323, 2284, 104234, 1715, 267, "Output", "ExpressionUUID" -> \
"7958ca9c-999c-40f8-a95f-17b5adc0daac"]
}, Open  ]]
}
]
*)

