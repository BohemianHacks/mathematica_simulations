(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    261507,       5732]
NotebookOptionsPosition[    260519,       5693]
NotebookOutlinePosition[    260867,       5708]
CellTagsIndexPosition[    260824,       5705]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "time", ",", "\[Zeta]c", ",", "Cc", ",", "\[Rho]", ",", "cap", ",", "k",
        ",", "r0", ",", "rstar", ",", "J", ",", "\[Alpha]", ",", "h", ",", 
       "lumpT", ",", "fo", ",", "\[Theta]star", ",", "temp", ",", 
       RowBox[{"(*", 
        RowBox[{"tmaxHeated", ",", "tmaxCooled", ","}], "*)"}], "col", ",", 
       "cylinder", ",", "heatingplot", ",", "coolingplot"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"time", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"tab", "\[Equal]", "1"}], ",", "time1", ",", "time2"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Zeta]c", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.01", ",", "0.1412"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.02", ",", "0.1995"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.03", ",", "0.244"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.04", ",", "0.2814"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.05", ",", "0.3143"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.06", ",", "0.3438"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.07", ",", "0.3709"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.08", ",", "0.396"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.09", ",", "0.4195"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.1", ",", "0.4417"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.15", ",", "0.5376"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.2", ",", "0.617"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "0.6856"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.3", ",", "0.7465"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "0.8516"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.9408"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "1.0184"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.7", ",", "1.0873"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.8", ",", "1.149"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "1.2048"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.", ",", "1.2558"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2.", ",", "1.5994"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3.", ",", "1.7887"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4.", ",", "1.9081"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"5.", ",", "1.9898"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6.", ",", "2.049"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"7.", ",", "2.0937"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"8.", ",", "2.1286"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"9.", ",", "2.1566"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10.", ",", "2.1795"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"20.", ",", "2.2881"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"30.", ",", "2.3261"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40.", ",", "2.3455"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.", ",", "2.3572"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"100.", ",", "2.3809"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"99999", ",", "2.405"}], "}"}]}], "}"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Cc", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.01", ",", "1.0025"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.02", ",", "1.005"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.03", ",", "1.0075"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.04", ",", "1.0099"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.05", ",", "1.0124"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.06", ",", "1.0148"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.07", ",", "1.0173"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.08", ",", "1.0197"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.09", ",", "1.0222"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.1", ",", "1.0246"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.15", ",", "1.0365"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.2", ",", "1.0483"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "1.0598"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.3", ",", "1.0712"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "1.0932"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "1.1143"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "1.1345"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.7", ",", "1.1539"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.8", ",", "1.1724"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "1.1902"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.", ",", "1.2071"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2.", ",", "1.3384"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3.", ",", "1.4191"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4.", ",", "1.4698"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"5.", ",", "1.5029"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6.", ",", "1.5253"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"7.", ",", "1.5411"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"8.", ",", "1.5526"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"9.", ",", "1.5611"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10.", ",", "1.5677"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"20.", ",", "1.5919"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"30.", ",", "1.5973"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40.", ",", "1.5993"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.", ",", "1.6002"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"100.", ",", "1.6015"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"99999", ",", "1.6018"}], "}"}]}], "}"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]", "=", "7830"}], " ", 
      RowBox[{"(*", 
       RowBox[{"kg", "/", 
        RowBox[{"m", "^", "3"}]}], "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cap", "=", "550"}], " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"J", "/", "kg"}], "*", "K"}], "*)"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "48"}], " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"W", "/", "m"}], "*", "K"}], "*)"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"r0", "=", "0.5"}], 
      RowBox[{"(*", "m", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"rstar", "=", "0"}], 
      RowBox[{"(*", "m", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"J", "=", "1"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", 
       FractionBox["k", 
        RowBox[{"\[Rho]", "*", "cap"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"h", "=", 
       FractionBox[
        RowBox[{"Bi", "*", "k"}], 
        RowBox[{"0.5", "*", "r0"}]]}], " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"W", "/", 
         RowBox[{"m", "^", "2"}]}], "*", "K"}], "*)"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lumpT", "[", 
        RowBox[{"t_", ",", "ti_", ",", "tinf_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"h", "*", "t"}], 
            RowBox[{"\[Rho]", "*", "0.5", "*", "r0", "*", "cap"}]]}], "]"}], 
         "*", 
         RowBox[{"(", 
          RowBox[{"ti", "-", "tinf"}], ")"}]}], "+", "tinf"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fo", "[", "t_", "]"}], ":=", 
       RowBox[{"\[Alpha]", "*", 
        RowBox[{"t", "/", 
         SuperscriptBox["r0", "2"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]star", "[", 
        RowBox[{"t_", ",", "r_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"Cc", "[", "Bi", "]"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"\[Zeta]c", "[", "Bi", "]"}], "2"]}], "*", 
          RowBox[{"fo", "[", "t", "]"}]}], "]"}], "*", "J", " ", "*", 
        RowBox[{"r", "/", "r0"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "[", 
        RowBox[{"t_", ",", "ti_", ",", "tinf_", ",", "r_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]star", "[", 
          RowBox[{"t", ",", "r"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"ti", "-", "tinf"}], ")"}]}], "+", "tinf"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tmaxHeated", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Bi", "\[LessEqual]", ".02"}], ",", "2500000", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{".03", "\[LessEqual]", "Bi", "\[LessEqual]", ".1"}], ",", 
           "200000", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{".12", "\[LessEqual]", "Bi", "\[LessEqual]", ".4"}], ",",
              "150000", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{".4", "<", "Bi", "\[LessEqual]", "1"}], ",", "90000", 
               ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"1", "<", "Bi", "\[LessEqual]", "4"}], ",", "50000", 
                 ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"4", "<", "Bi", "\[LessEqual]", "15"}], ",", "400",
                    ",", "20000"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tmaxCooled", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Bi", "\[LessEqual]", ".15"}], ",", "10000", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{".15", "<", "Bi", "\[LessEqual]", ".6"}], ",", "4500", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{".6", "<", "Bi", "\[LessEqual]", "1"}], ",", "3500", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"1", "<", "Bi", "\[LessEqual]", "4"}], ",", "2500", 
               ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"4", "<", "Bi", "\[LessEqual]", "15"}], ",", "1000", 
                 ",", "500"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"col", "[", "r_", "]"}], ":=", 
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0., 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0., 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0., 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0., 0],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0.30000000000000004`, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6666666666666666, 0.20000000000000004`, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0.30000000000000004, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0.30000000000000004`, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0.30000000000000004`, 0],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0.4, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6666666666666666, 0.2666666666666667, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0.4, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0.4, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0.4, 0],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6666666666666666, 0.33333333333333337`, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0.5, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0.5, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0.5, 0],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0.6000000000000001, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6666666666666666, 0.4000000000000001, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0.6000000000000001, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0.6000000000000001, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0.6000000000000001, 0],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0.8, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6666666666666666, 0.5333333333333334, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0.8, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0.8, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0.8, 0],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 0.9, 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6666666666666666, 0.6000000000000001, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 0.9, 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0.9, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 0.9, 0],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[1, 1., 0], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6666666666666666, 0.6666666666666667, 0.],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                 PlotRangePadding->None],
                "RGBColor[1, 1., 0]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 1., 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[1, 1., 0],
              Editable->False,
              Selectable->False]}], "}"}], ",", 
           RowBox[{"Rescale", "[", 
            RowBox[{
             RowBox[{"temp", "[", 
              RowBox[{"time", ",", "470", ",", "1100", ",", "r"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"90.87", ",", "1100"}], "}"}]}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"col", "[", "r_", "]"}], ":=", 
         RowBox[{"Blend", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.178927, 0.305394, 0.933501], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.11928466666666668`, 0.203596, 0.622334],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.178927, 0.305394, 0.933501]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.178927, 0.305394, 0.933501]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.178927, 0.305394, 0.933501],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.2568184, 0.3872628, 0.9379368], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.17121226666666667`, 0.25817520000000005`, 0.6252912],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.2568184, 0.3872628, 0.9379368]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.2568184, 0.3872628, 0.9379368]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.2568184, 0.3872628, 0.9379368],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.3376604, 0.46688620000000003`, 0.9427364], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.22510693333333337`, 0.3112574666666667, 
                   0.6284909333333334],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.3376604, 0.46688620000000003, 0.9427364]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.3376604, 0.46688620000000003`, 0.9427364]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.3376604, 0.46688620000000003`, 0.9427364],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.42440360000000005`, 0.5420188, 0.9482636], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.2829357333333334, 0.3613458666666667, 0.6321757333333333],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.42440360000000005, 0.5420188, 0.9482636]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.42440360000000005`, 0.5420188, 0.9482636]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.42440360000000005`, 0.5420188, 0.9482636],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.5289344, 0.6284518, 0.9560588], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.3526229333333334, 0.4189678666666667, 0.6373725333333333],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.5289344, 0.6284518, 0.9560588]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.5289344, 0.6284518, 0.9560588]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.5289344, 0.6284518, 0.9560588],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.642359, 0.720535, 0.964988], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.42823933333333336`, 0.4803566666666667, 
                   0.6433253333333333],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.642359, 0.720535, 0.964988]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.642359, 0.720535, 0.964988]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.642359, 0.720535, 0.964988],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[
                   0.7489340000000002, 0.8037922000000001, 0.9756104], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.4992893333333335, 0.5358614666666668, 0.6504069333333333],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.7489340000000002, 0.8037922000000001, 0.9756104]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[
                    0.7489340000000002, 0.8037922000000001, 0.9756104]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.7489340000000002, 0.8037922000000001, 0.9756104],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.8431270000000001, 0.8777506, 0.9848994], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.5620846666666668, 0.5851670666666667, 0.6565996000000001],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.8431270000000001, 0.8777506, 0.9848994]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.8431270000000001, 0.8777506, 0.9848994]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.8431270000000001, 0.8777506, 0.9848994],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.9125559999999999, 0.9331114, 0.9915216], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6083706666666666, 0.6220742666666668, 0.6610144],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.9125559999999999, 0.9331114, 0.9915216]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.9125559999999999, 0.9331114, 0.9915216]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.9125559999999999, 0.9331114, 0.9915216],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.9550962, 0.9660314, 0.9608945999999999], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6367308, 0.6440209333333333, 0.6405964],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.9550962, 0.9660314, 0.9608945999999999]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.9550962, 0.9660314, 0.9608945999999999]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.9550962, 0.9660314, 0.9608945999999999],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.984192, 0.987731, 0.911643], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 FrameStyle->RGBColor[0.656128, 0.6584873333333334, 0.607762],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.984192, 0.987731, 0.911643]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.984192, 0.987731, 0.911643]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.984192, 0.987731, 0.911643],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.990846, 0.9904826, 0.8013689999999999], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 FrameStyle->RGBColor[0.660564, 0.6603217333333333, 0.534246],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.990846, 0.9904826, 0.8013689999999999]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.990846, 0.9904826, 0.8013689999999999]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.990846, 0.9904826, 0.8013689999999999],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.9947262, 0.9911282, 0.6673575999999998], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6631508, 0.6607521333333334, 0.4449050666666665],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.9947262, 0.9911282, 0.6673575999999998]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.9947262, 0.9911282, 0.6673575999999998]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.9947262, 0.9911282, 0.6673575999999998],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.9930588, 0.9875618, 0.48587139999999984`], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6620392, 0.6583745333333334, 0.32391426666666656`],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.9930588, 0.9875618, 0.48587139999999984]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.9930588, 0.9875618, 0.48587139999999984`]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.9930588, 0.9875618, 0.48587139999999984`],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.977887, 0.9370697999999998, 0.3685955999999998],
                    RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6519246666666667, 0.6247132, 0.24573039999999988`],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.977887, 0.9370697999999998, 0.3685955999999998]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.977887, 0.9370697999999998, 0.3685955999999998]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.977887, 0.9370697999999998, 0.3685955999999998],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.955963, 0.863115, 0.283425], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 FrameStyle->RGBColor[0.6373086666666667, 0.57541, 0.18895],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.955963, 0.863115, 0.283425]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.955963, 0.863115, 0.283425]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.955963, 0.863115, 0.283425],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.9249214, 0.7400454, 0.2584482], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.6166142666666667, 0.4933636, 0.17229880000000003`],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.9249214, 0.7400454, 0.2584482]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.9249214, 0.7400454, 0.2584482]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.9249214, 0.7400454, 0.2584482],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[
                   0.8950625999999999, 0.6163855999999999, 
                    0.23414999999999997`], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 FrameStyle->RGBColor[0.5967084, 0.41092373333333326`, 0.1561],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                
                "RGBColor[0.8950625999999999, 0.6163855999999999, \
0.23414999999999997]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[
                    0.8950625999999999, 0.6163855999999999, 
                    0.23414999999999997`]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[
              0.8950625999999999, 0.6163855999999999, 0.23414999999999997`],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[
                   0.8675693999999999, 0.4915453999999999, 
                    0.21120899999999998`], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 FrameStyle->RGBColor[0.5783796, 0.3276969333333333, 0.140806],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                
                "RGBColor[0.8675693999999999, 0.4915453999999999, \
0.21120899999999998]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[
                    0.8675693999999999, 0.4915453999999999, 
                    0.21120899999999998`]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[
              0.8675693999999999, 0.4915453999999999, 0.21120899999999998`],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[
                   0.8419705999999999, 0.3236099999999997, 
                    0.18782439999999995`], RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.5613137333333333, 0.2157399999999998, 
                   0.12521626666666663`],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                
                "RGBColor[0.8419705999999999, 0.3236099999999997, \
0.18782439999999995]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[
                    0.8419705999999999, 0.3236099999999997, 
                    0.18782439999999995`]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[
              0.8419705999999999, 0.3236099999999997, 0.18782439999999995`],
              Editable->False,
              Selectable->False], ",", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{
                  {GrayLevel[0], RectangleBox[{0, 0}]}, 
                  {GrayLevel[0], RectangleBox[{1, -1}]}, 
                  {RGBColor[0.817319, 0.134127, 0.164218], 
                   RectangleBox[{0, -1}, {2, 1}]}},
                 AspectRatio->1,
                 Frame->True,
                 
                 FrameStyle->RGBColor[
                  0.5448793333333334, 0.089418, 0.10947866666666667`],
                 FrameTicks->None,
                 
                 ImageSize->
                  Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}],
                 PlotRangePadding->None],
                "RGBColor[0.817319, 0.134127, 0.164218]"],
               Appearance->None,
               BaseStyle->{},
               BaselinePosition->Baseline,
               ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0.817319, 0.134127, 0.164218]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
               DefaultBaseStyle->{},
               Evaluator->Automatic,
               Method->"Preemptive"],
              RGBColor[0.817319, 0.134127, 0.164218],
              Editable->False,
              Selectable->False]}], "}"}], ",", 
           RowBox[{"Rescale", "[", 
            RowBox[{
             RowBox[{"temp", "[", 
              RowBox[{"time", ",", "470", ",", "1100", ",", "r"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"90.87", ",", "1100"}], "}"}]}], "]"}]}], "]"}]}], 
        ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cylinder", "=", 
       RowBox[{"Rasterize", "@", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "0", ",", 
            RowBox[{"2", "*", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "0", ",", "r0"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"ColorFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"col", "[", "#4", "]"}], "&"}], ")"}]}], ",", 
            RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ","}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"ColorFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
              RowBox[{"Rescale", "[", 
               RowBox[{
                RowBox[{"temp", "[", 
                 RowBox[{"time", ",", "470", ",", "1100", ",", "#4"}], "]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"90.87", ",", "1100"}], "}"}]}], "]"}], "]"}], "&"}],
             ")"}]}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", "None"}], ",", 
          RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"heatingplot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"t", ",", "470", ",", "1100", ",", "r0"}], "]"}], ",", 
           RowBox[{"lumpT", "[", 
            RowBox[{"t", ",", "470", ",", "1100"}], "]"}], ",", "1100"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmaxHeated"}], "}"}], ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Dashed", ",", "Green"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Dashed", ",", "Red"}], "}"}]}], "}"}]}], 
         ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Framed", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Column", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<transient\>\"", ",", "\"\<heating\>\""}], 
                    "}"}], ",", "Center"}], "]"}], ",", "14"}], "]"}], ",", 
                RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0.5", "*", "tmaxHeated"}], ",", 
                RowBox[{"temp", "[", 
                 RowBox[{
                  RowBox[{"0.5", "*", "tmaxHeated"}], ",", "470", ",", "1100",
                   ",", "r0"}], "]"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Inset", "[", 
             RowBox[{"cylinder", ",", 
              RowBox[{"Scaled", "@", 
               RowBox[{"{", 
                RowBox[{"0.75", ",", "0.25"}], "}"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"coolingplot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"t", ",", "700", ",", "273", ",", "r0"}], "]"}], ",", 
           RowBox[{"lumpT", "[", 
            RowBox[{"t", ",", "700", ",", "273"}], "]"}], ",", "273"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmaxCooled"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"PlotLabels", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<one-term approx.\>\"", ",", "\"\<lumped capacitance\>\"", 
              ",", "\"\<\!\(\*SubscriptBox[\(T\), \(Infinity\)]\)\>\""}], 
             "}"}]}], ","}], "*)"}], " ", "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Cyan"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Green"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Dashed", ",", "Blue"}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Switch", "[", 
         RowBox[{
         "tab", ",", "1", ",", "heatingplot", ",", "2", ",", "coolingplot"}], 
         "]"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<time (s)\>\"", ",", "\"\<centerline temperature (K)\>\""}], 
          "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"17", ",", "Black"}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"600", ",", "450"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"tab", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[Rule]", "\"\< heating \>\""}], ",", 
            RowBox[{"2", "\[Rule]", "\"\< cooling \>\""}]}], "}"}], ",", 
          "Setter"}], "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Bi", ",", "0.5", ",", "\"\<Biot number\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0.01", ",", "0.02", ",", "0.03", ",", "0.05", ",", "0.07", ",", 
            " ", "0.1", ",", "0.15", ",", "0.2", ",", "0.5", ",", "0.7", ",", 
            "1", ",", "2", ",", "5", ",", "9", ",", "10", ",", "20", ",", 
            "50", ",", "100", ",", "99999"}], "}"}], ",", "Slider", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PaneSelector", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"Grid", "@", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Control", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"time1", ",", "0", ",", "\"\<\>\""}], "}"}], ",", 
                   "0", ",", "tmaxHeated", ",", "Trigger"}], "}"}], "]"}], 
                ",", 
                RowBox[{"Control", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"tmaxHeated", ",", "90000"}], "}"}], ",", 
                   "None"}], "}"}], "]"}]}], "}"}], "}"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"2", "\[Rule]", 
            RowBox[{"Grid", "@", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Control", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"time2", ",", "0", ",", "\"\<\>\""}], "}"}], ",", 
                   "0", ",", "tmaxCooled", ",", "Trigger"}], "}"}], "]"}], 
                ",", 
                RowBox[{"Control", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"tmaxCooled", ",", "5000"}], "}"}], ",", "None"}],
                   "}"}], "]"}]}], "}"}], "}"}]}]}]}], "\[IndentingNewLine]", 
          "}"}], ",", 
         RowBox[{"Dynamic", "@", "tab"}]}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.6894495745706625`*^9, {3.6894496435116053`*^9, 3.689449696407631*^9}, {
   3.689449809477098*^9, 3.6894499187043457`*^9}, {3.6894500330308847`*^9, 
   3.689450130611466*^9}, {3.6894501907949085`*^9, 3.6894501978413115`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Bi$$ = 0.5, $CellContext`tab$$ = 
    1, $CellContext`time1$$ = 0, $CellContext`time2$$ = 
    0, $CellContext`tmaxCooled$$ = 4500, $CellContext`tmaxHeated$$ = 90000, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`tab$$], 1, ""}, {
      1 -> " heating ", 2 -> " cooling "}}, {{
       Hold[$CellContext`Bi$$], 0.5, "Biot number"}, {
      0.01, 0.02, 0.03, 0.05, 0.07, 0.1, 0.15, 0.2, 0.5, 0.7, 1, 2, 5, 9, 10, 
       20, 50, 100, 99999}}, {{
       Hold[$CellContext`time1$$], 0, ""}, 0, 
      Dynamic[$CellContext`tmaxHeated$$]}, {{
       Hold[$CellContext`tmaxHeated$$], 90000}, 0}, {{
       Hold[$CellContext`time2$$], 0, ""}, 0, 
      Dynamic[$CellContext`tmaxCooled$$]}, {{
       Hold[$CellContext`tmaxCooled$$], 5000}, 0}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          PaneSelector[{1 -> Grid[{{
                Manipulate`Place[3], 
                Manipulate`Place[4]}}], 2 -> Grid[{{
                Manipulate`Place[5], 
                Manipulate`Place[6]}}]}, 
           Dynamic[$CellContext`tab$$]]}}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    600., {222., 228.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`tab$8939$$ = 
    False, $CellContext`Bi$8940$$ = 0, $CellContext`time1$8941$$ = 
    0, $CellContext`time2$8942$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`Bi$$ = 0.5, $CellContext`tab$$ = 
        1, $CellContext`time1$$ = 0, $CellContext`time2$$ = 
        0, $CellContext`tmaxCooled$$ = 5000, $CellContext`tmaxHeated$$ = 
        90000}, "ControllerVariables" :> {
        Hold[$CellContext`tab$$, $CellContext`tab$8939$$, False], 
        Hold[$CellContext`Bi$$, $CellContext`Bi$8940$$, 0], 
        Hold[$CellContext`time1$$, $CellContext`time1$8941$$, 0], 
        Hold[$CellContext`time2$$, $CellContext`time2$8942$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`time$, $CellContext`\[Zeta]c$, $CellContext`Cc$, \
$CellContext`\[Rho]$, $CellContext`cap$, $CellContext`k$, $CellContext`r0$, \
$CellContext`rstar$, $CellContext`J$, $CellContext`\[Alpha]$, \
$CellContext`h$, $CellContext`lumpT$, $CellContext`fo$, \
$CellContext`\[Theta]star$, $CellContext`temp$, $CellContext`col$, \
$CellContext`cylinder$, $CellContext`heatingplot$, \
$CellContext`coolingplot$}, $CellContext`time$ = 
         If[$CellContext`tab$$ == 
           1, $CellContext`time1$$, $CellContext`time2$$]; $CellContext`\
\[Zeta]c$ = Quiet[
           
           Interpolation[{{0.01, 0.1412}, {0.02, 0.1995}, {0.03, 0.244}, {
             0.04, 0.2814}, {0.05, 0.3143}, {0.06, 0.3438}, {0.07, 0.3709}, {
             0.08, 0.396}, {0.09, 0.4195}, {0.1, 0.4417}, {0.15, 0.5376}, {
             0.2, 0.617}, {0.25, 0.6856}, {0.3, 0.7465}, {0.4, 0.8516}, {0.5, 
             0.9408}, {0.6, 1.0184}, {0.7, 1.0873}, {0.8, 1.149}, {0.9, 
             1.2048}, {1., 1.2558}, {2., 1.5994}, {3., 1.7887}, {4., 
             1.9081}, {5., 1.9898}, {6., 2.049}, {7., 2.0937}, {8., 2.1286}, {
             9., 2.1566}, {10., 2.1795}, {20., 2.2881}, {30., 2.3261}, {40., 
             2.3455}, {50., 2.3572}, {100., 2.3809}, {99999, 2.405}}, 
            InterpolationOrder -> 1]]; $CellContext`Cc$ = Quiet[
           
           Interpolation[{{0.01, 1.0025}, {0.02, 1.005}, {0.03, 1.0075}, {
             0.04, 1.0099}, {0.05, 1.0124}, {0.06, 1.0148}, {0.07, 1.0173}, {
             0.08, 1.0197}, {0.09, 1.0222}, {0.1, 1.0246}, {0.15, 1.0365}, {
             0.2, 1.0483}, {0.25, 1.0598}, {0.3, 1.0712}, {0.4, 1.0932}, {0.5,
              1.1143}, {0.6, 1.1345}, {0.7, 1.1539}, {0.8, 1.1724}, {0.9, 
             1.1902}, {1., 1.2071}, {2., 1.3384}, {3., 1.4191}, {4., 
             1.4698}, {5., 1.5029}, {6., 1.5253}, {7., 1.5411}, {8., 
             1.5526}, {9., 1.5611}, {10., 1.5677}, {20., 1.5919}, {30., 
             1.5973}, {40., 1.5993}, {50., 1.6002}, {100., 1.6015}, {
             99999, 1.6018}}, InterpolationOrder -> 1]]; $CellContext`\[Rho]$ = 
         7830; $CellContext`cap$ = 550; $CellContext`k$ = 
         48; $CellContext`r0$ = 0.5; $CellContext`rstar$ = 0; $CellContext`J$ = 
         1; $CellContext`\[Alpha]$ = $CellContext`k$/($CellContext`\[Rho]$ \
$CellContext`cap$); $CellContext`h$ = $CellContext`Bi$$ $CellContext`k$/(
          0.5 $CellContext`r0$); $CellContext`lumpT$[
           Pattern[$CellContext`t$, 
            Blank[]], 
           Pattern[$CellContext`ti$, 
            Blank[]], 
           Pattern[$CellContext`tinf$, 
            Blank[]]] := 
         Exp[-($CellContext`h$ $CellContext`t$/($CellContext`\[Rho]$ 
              0.5 $CellContext`r0$ $CellContext`cap$))] ($CellContext`ti$ - \
$CellContext`tinf$) + $CellContext`tinf$; $CellContext`fo$[
           Pattern[$CellContext`t$, 
            
            Blank[]]] := $CellContext`\[Alpha]$ \
($CellContext`t$/$CellContext`r0$^2); $CellContext`\[Theta]star$[
           Pattern[$CellContext`t$, 
            Blank[]], 
           Pattern[$CellContext`r$, 
            Blank[]]] := $CellContext`Cc$[$CellContext`Bi$$] 
          Exp[(-$CellContext`\[Zeta]c$[$CellContext`Bi$$]^2) \
$CellContext`fo$[$CellContext`t$]] $CellContext`J$ \
($CellContext`r$/$CellContext`r0$); $CellContext`temp$[
           Pattern[$CellContext`t$, 
            Blank[]], 
           Pattern[$CellContext`ti$, 
            Blank[]], 
           Pattern[$CellContext`tinf$, 
            Blank[]], 
           Pattern[$CellContext`r$, 
            
            Blank[]]] := $CellContext`\[Theta]star$[$CellContext`t$, \
$CellContext`r$] ($CellContext`ti$ - $CellContext`tinf$) + $CellContext`tinf$; \
$CellContext`tmaxHeated$$ = If[$CellContext`Bi$$ <= 0.02, 2500000, 
           If[0.03 <= $CellContext`Bi$$ <= 0.1, 200000, 
            If[0.12 <= $CellContext`Bi$$ <= 0.4, 150000, 
             If[
              Inequality[0.4, Less, $CellContext`Bi$$, LessEqual, 1], 90000, 
              If[
               Inequality[1, Less, $CellContext`Bi$$, LessEqual, 4], 50000, 
               If[
                Inequality[4, Less, $CellContext`Bi$$, LessEqual, 15], 400, 
                20000]]]]]]; $CellContext`tmaxCooled$$ = 
         If[$CellContext`Bi$$ <= 0.15, 10000, 
           If[
            Inequality[0.15, Less, $CellContext`Bi$$, LessEqual, 0.6], 4500, 
            If[
             Inequality[0.6, Less, $CellContext`Bi$$, LessEqual, 1], 3500, 
             If[
              Inequality[1, Less, $CellContext`Bi$$, LessEqual, 4], 2500, 
              If[
               Inequality[4, Less, $CellContext`Bi$$, LessEqual, 15], 1000, 
               500]]]]]; $CellContext`cylinder$ = Rasterize[
           
           ParametricPlot[{$CellContext`r 
             Cos[$CellContext`\[Theta]], $CellContext`r 
             Sin[$CellContext`\[Theta]]}, {$CellContext`\[Theta], 0, 2 
             Pi}, {$CellContext`r, 0, $CellContext`r0$}, 
            ColorFunction -> (ColorData["TemperatureMap"][
              Rescale[
               $CellContext`temp$[$CellContext`time$, 470, 1100, #4], {
               90.87, 1100}]]& ), ColorFunctionScaling -> False, 
            BoundaryStyle -> None, Axes -> False, FrameTicks -> None, 
            PerformanceGoal -> "Quality", ImageSize -> 
            200]]; $CellContext`heatingplot$ = Plot[{
            $CellContext`temp$[$CellContext`t, 470, 1100, $CellContext`r0$], 
            $CellContext`lumpT$[$CellContext`t, 470, 1100], 
            1100}, {$CellContext`t, 0, $CellContext`tmaxHeated$$}, 
           PlotStyle -> {{Thick, Black}, {Thick, Dashed, Green}, {
             Thick, Dashed, Red}}, PlotRange -> All, Epilog -> {
             Text[
              Framed[
               Style[
                Column[{"transient", "heating"}, Center], 14], Background -> 
               White], {0.5 $CellContext`tmaxHeated$$, 
               $CellContext`temp$[
               0.5 $CellContext`tmaxHeated$$, 470, 1100, $CellContext`r0$]}], 
             Inset[$CellContext`cylinder$, 
              Scaled[{0.75, 0.25}]]}]; $CellContext`coolingplot$ = Plot[{
            $CellContext`temp$[$CellContext`t, 700, 273, $CellContext`r0$], 
            $CellContext`lumpT$[$CellContext`t, 700, 273], 
            273}, {$CellContext`t, 0, $CellContext`tmaxCooled$$}, 
           PlotStyle -> {{Thick, Cyan}, {Thick, Green}, {
             Thick, Dashed, Blue}}, PlotRange -> All]; Show[
          
          Switch[$CellContext`tab$$, 1, $CellContext`heatingplot$, 
           2, $CellContext`coolingplot$], Axes -> False, Frame -> True, 
          FrameLabel -> {"time (s)", "centerline temperature (K)"}, 
          LabelStyle -> {17, Black}, ImageSize -> {600, 450}, AspectRatio -> 
          Full]], "Specifications" :> {{{$CellContext`tab$$, 1, ""}, {
         1 -> " heating ", 2 -> " cooling "}, ControlType -> Setter, 
         ControlPlacement -> 1}, {{$CellContext`Bi$$, 0.5, "Biot number"}, {
         0.01, 0.02, 0.03, 0.05, 0.07, 0.1, 0.15, 0.2, 0.5, 0.7, 1, 2, 5, 9, 
          10, 20, 50, 100, 99999}, ControlType -> Slider, Appearance -> 
         "Labeled", ControlPlacement -> 2}, {{$CellContext`time1$$, 0, ""}, 0, 
         Dynamic[$CellContext`tmaxHeated$$], ControlType -> Trigger, 
         ControlPlacement -> 3}, {{$CellContext`tmaxHeated$$, 90000}, 0, 
         ControlType -> None, ControlPlacement -> 
         4}, {{$CellContext`time2$$, 0, ""}, 0, 
         Dynamic[$CellContext`tmaxCooled$$], ControlType -> Trigger, 
         ControlPlacement -> 5}, {{$CellContext`tmaxCooled$$, 5000}, 0, 
         ControlType -> None, ControlPlacement -> 6}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           PaneSelector[{1 -> Grid[{{
                 Manipulate`Place[3], 
                 Manipulate`Place[4]}}], 2 -> Grid[{{
                 Manipulate`Place[5], 
                 Manipulate`Place[6]}}]}, 
            Dynamic[$CellContext`tab$$]]}}]}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{651., {268., 275.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.689449575326706*^9, 3.6894496445396643`*^9, 3.6894496977927103`*^9, 
   3.6894498125662746`*^9, 3.6894499220845385`*^9, {3.68945003452497*^9, 
   3.689450043302472*^9}, 3.6894501313805103`*^9, 3.6894502004174585`*^9, 
   3.6894502909446363`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", "#", 
    "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", 
   RowBox[{"0", ",", "1", ",", "0.05"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6894497570851016`*^9, 3.689449791613076*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.178927, 0.305394, 0.933501], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.11928466666666668`, 0.203596, 0.622334],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.178927, 0.305394, 0.933501]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.178927, 0.305394, 0.933501]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.178927, 0.305394, 0.933501],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.2568184, 0.3872628, 0.9379368], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.17121226666666667`, 0.25817520000000005`, 0.6252912],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.2568184, 0.3872628, 0.9379368]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.2568184, 0.3872628, 0.9379368]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2568184, 0.3872628, 0.9379368],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.3376604, 0.46688620000000003`, 0.9427364], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.22510693333333337`, 0.3112574666666667, 0.6284909333333334],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.3376604, 0.46688620000000003, 0.9427364]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.3376604, 0.46688620000000003`, 0.9427364]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.3376604, 0.46688620000000003`, 0.9427364],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.42440360000000005`, 0.5420188, 0.9482636], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.2829357333333334, 0.3613458666666667, 0.6321757333333333],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.42440360000000005, 0.5420188, 0.9482636]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.42440360000000005`, 0.5420188, 0.9482636]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.42440360000000005`, 0.5420188, 0.9482636],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5289344, 0.6284518, 0.9560588], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.3526229333333334, 0.4189678666666667, 0.6373725333333333],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5289344, 0.6284518, 0.9560588]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.5289344, 0.6284518, 0.9560588]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5289344, 0.6284518, 0.9560588],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.642359, 0.720535, 0.964988], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.42823933333333336`, 0.4803566666666667, 0.6433253333333333],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.642359, 0.720535, 0.964988]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.642359, 0.720535, 0.964988]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.642359, 0.720535, 0.964988],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.7489340000000002, 0.8037922000000001, 0.9756104], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.4992893333333335, 0.5358614666666668, 0.6504069333333333],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.7489340000000002, 0.8037922000000001, 0.9756104]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.7489340000000002, 0.8037922000000001, 0.9756104]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7489340000000002, 0.8037922000000001, 0.9756104],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8431270000000001, 0.8777506, 0.9848994], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5620846666666668, 0.5851670666666667, 0.6565996000000001],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8431270000000001, 0.8777506, 0.9848994]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.8431270000000001, 0.8777506, 0.9848994]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8431270000000001, 0.8777506, 0.9848994],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9125559999999999, 0.9331114, 0.9915216], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6083706666666666, 0.6220742666666668, 0.6610144],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9125559999999999, 0.9331114, 0.9915216]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9125559999999999, 0.9331114, 0.9915216]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9125559999999999, 0.9331114, 0.9915216],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9550962, 0.9660314, 0.9608945999999999], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6367308, 0.6440209333333333, 0.6405964],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9550962, 0.9660314, 0.9608945999999999]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9550962, 0.9660314, 0.9608945999999999]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9550962, 0.9660314, 0.9608945999999999],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.984192, 0.987731, 0.911643], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.656128, 0.6584873333333334, 0.607762],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.984192, 0.987731, 0.911643]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.984192, 0.987731, 0.911643]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.984192, 0.987731, 0.911643],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.990846, 0.9904826, 0.8013689999999999], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.660564, 0.6603217333333333, 0.534246],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.990846, 0.9904826, 0.8013689999999999]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.990846, 0.9904826, 0.8013689999999999]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.990846, 0.9904826, 0.8013689999999999],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9947262, 0.9911282, 0.6673575999999998], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6631508, 0.6607521333333334, 0.4449050666666665],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9947262, 0.9911282, 0.6673575999999998]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9947262, 0.9911282, 0.6673575999999998]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9947262, 0.9911282, 0.6673575999999998],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9930588, 0.9875618, 0.48587139999999984`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6620392, 0.6583745333333334, 0.32391426666666656`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9930588, 0.9875618, 0.48587139999999984]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9930588, 0.9875618, 0.48587139999999984`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9930588, 0.9875618, 0.48587139999999984`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.977887, 0.9370697999999998, 0.3685955999999998], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6519246666666667, 0.6247132, 0.24573039999999988`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.977887, 0.9370697999999998, 0.3685955999999998]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.977887, 0.9370697999999998, 0.3685955999999998]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.977887, 0.9370697999999998, 0.3685955999999998],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.955963, 0.863115, 0.283425], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6373086666666667, 0.57541, 0.18895],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.955963, 0.863115, 0.283425]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.955963, 0.863115, 0.283425]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.955963, 0.863115, 0.283425],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9249214, 0.7400454, 0.2584482], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6166142666666667, 0.4933636, 0.17229880000000003`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9249214, 0.7400454, 0.2584482]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.9249214, 0.7400454, 0.2584482]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9249214, 0.7400454, 0.2584482],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.8950625999999999, 0.6163855999999999, 0.23414999999999997`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.5967084, 0.41092373333333326`, 0.1561],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8950625999999999, 0.6163855999999999, 0.23414999999999997]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.8950625999999999, 0.6163855999999999, 0.23414999999999997`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8950625999999999, 0.6163855999999999, 0.23414999999999997`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.8675693999999999, 0.4915453999999999, 0.21120899999999998`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.5783796, 0.3276969333333333, 0.140806],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8675693999999999, 0.4915453999999999, 0.21120899999999998]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.8675693999999999, 0.4915453999999999, 0.21120899999999998`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8675693999999999, 0.4915453999999999, 0.21120899999999998`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.8419705999999999, 0.3236099999999997, 0.18782439999999995`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5613137333333333, 0.2157399999999998, 0.12521626666666663`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8419705999999999, 0.3236099999999997, 0.18782439999999995]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.8419705999999999, 0.3236099999999997, 0.18782439999999995`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8419705999999999, 0.3236099999999997, 0.18782439999999995`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.817319, 0.134127, 0.164218], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5448793333333334, 0.089418, 0.10947866666666667`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.817319, 0.134127, 0.164218]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.817319, 0.134127, 0.164218]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.817319, 0.134127, 0.164218],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.6894497684677525`*^9, 3.6894497924501243`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6894495683793077`*^9, 3.689449568494315*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Zeta]c", ",", "Cc", ",", "\[Rho]", ",", "cap", ",", "k", ",", "r0", 
       ",", "rstar", ",", "J", ",", "\[Alpha]", ",", "h", ",", "lumpT", ",", 
       "fo", ",", "\[Theta]star", ",", "temp", ",", "tmaxHeated", ",", 
       "tmaxCooled", ",", "col", ",", "cylinder", ",", "heatingplot", ",", 
       "coolingplot"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Zeta]c", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.01", ",", "0.1412"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.02", ",", "0.1995"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.03", ",", "0.244"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.04", ",", "0.2814"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.05", ",", "0.3143"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.06", ",", "0.3438"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.07", ",", "0.3709"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.08", ",", "0.396"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.09", ",", "0.4195"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.1", ",", "0.4417"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.15", ",", "0.5376"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.2", ",", "0.617"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "0.6856"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.3", ",", "0.7465"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "0.8516"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.9408"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "1.0184"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.7", ",", "1.0873"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.8", ",", "1.149"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "1.2048"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.", ",", "1.2558"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2.", ",", "1.5994"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3.", ",", "1.7887"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4.", ",", "1.9081"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"5.", ",", "1.9898"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6.", ",", "2.049"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"7.", ",", "2.0937"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"8.", ",", "2.1286"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"9.", ",", "2.1566"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10.", ",", "2.1795"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"20.", ",", "2.2881"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"30.", ",", "2.3261"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40.", ",", "2.3455"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.", ",", "2.3572"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"100.", ",", "2.3809"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"99999", ",", "2.405"}], "}"}]}], "}"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Cc", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.01", ",", "1.0025"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.02", ",", "1.005"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.03", ",", "1.0075"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.04", ",", "1.0099"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.05", ",", "1.0124"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.06", ",", "1.0148"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.07", ",", "1.0173"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.08", ",", "1.0197"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.09", ",", "1.0222"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.1", ",", "1.0246"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.15", ",", "1.0365"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.2", ",", "1.0483"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "1.0598"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.3", ",", "1.0712"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "1.0932"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "1.1143"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "1.1345"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.7", ",", "1.1539"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.8", ",", "1.1724"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "1.1902"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.", ",", "1.2071"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2.", ",", "1.3384"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3.", ",", "1.4191"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4.", ",", "1.4698"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"5.", ",", "1.5029"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6.", ",", "1.5253"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"7.", ",", "1.5411"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"8.", ",", "1.5526"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"9.", ",", "1.5611"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10.", ",", "1.5677"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"20.", ",", "1.5919"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"30.", ",", "1.5973"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40.", ",", "1.5993"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.", ",", "1.6002"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"100.", ",", "1.6015"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"99999", ",", "1.6018"}], "}"}]}], "}"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]", "=", "7830"}], " ", 
      RowBox[{"(*", 
       RowBox[{"kg", "/", 
        RowBox[{"m", "^", "3"}]}], "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cap", "=", "550"}], " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"J", "/", "kg"}], "*", "K"}], "*)"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "48"}], " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"W", "/", "m"}], "*", "K"}], "*)"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"r0", "=", "0.5"}], 
      RowBox[{"(*", "m", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"rstar", "=", "0"}], 
      RowBox[{"(*", "m", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"J", "=", "1"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", 
       FractionBox["k", 
        RowBox[{"\[Rho]", "*", "cap"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"h", "=", 
       FractionBox[
        RowBox[{"Bi", "*", "k"}], 
        RowBox[{"0.5", "*", "r0"}]]}], " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"W", "/", 
         RowBox[{"m", "^", "2"}]}], "*", "K"}], "*)"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lumpT", "[", 
        RowBox[{"t_", ",", "ti_", ",", "tinf_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"h", "*", "t"}], 
            RowBox[{"\[Rho]", "*", "0.5", "*", "r0", "*", "cap"}]]}], "]"}], 
         "*", 
         RowBox[{"(", 
          RowBox[{"ti", "-", "tinf"}], ")"}]}], "+", "tinf"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fo", "[", "t_", "]"}], ":=", 
       RowBox[{"\[Alpha]", "*", 
        RowBox[{"t", "/", 
         SuperscriptBox["r0", "2"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]star", "[", 
        RowBox[{"t_", ",", "r_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"Cc", "[", "Bi", "]"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"\[Zeta]c", "[", "Bi", "]"}], "2"]}], "*", 
          RowBox[{"fo", "[", "t", "]"}]}], "]"}], "*", "J", " ", "*", 
        RowBox[{"r", "/", "r0"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "[", 
        RowBox[{"t_", ",", "ti_", ",", "tinf_", ",", "r_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]star", "[", 
          RowBox[{"t", ",", "r"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"ti", "-", "tinf"}], ")"}]}], "+", "tinf"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tmaxHeated", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Bi", "\[LessEqual]", ".02"}], ",", "2500000", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{".03", "\[LessEqual]", "Bi", "\[LessEqual]", ".1"}], ",", 
           "200000", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{".12", "\[LessEqual]", "Bi", "\[LessEqual]", ".4"}], ",",
              "150000", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{".4", "<", "Bi", "\[LessEqual]", "1"}], ",", "90000", 
               ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"1", "<", "Bi", "\[LessEqual]", "4"}], ",", "50000", 
                 ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"4", "<", "Bi", "\[LessEqual]", "15"}], ",", "400",
                    ",", "20000"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tmaxCooled", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Bi", "\[LessEqual]", ".15"}], ",", "10000", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{".15", "<", "Bi", "\[LessEqual]", ".6"}], ",", "4500", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{".6", "<", "Bi", "\[LessEqual]", "1"}], ",", "3500", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"1", "<", "Bi", "\[LessEqual]", "4"}], ",", "2500", 
               ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"4", "<", "Bi", "\[LessEqual]", "15"}], ",", "1000", 
                 ",", "500"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"col", "[", "r_", "]"}], ":=", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0., 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0., 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0., 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0., 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.30000000000000004`, 0], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.20000000000000004`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.30000000000000004, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.30000000000000004`, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.30000000000000004`, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.4, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.2666666666666667, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.4, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.4, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.4, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.6000000000000001, 0], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.4000000000000001, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.6000000000000001, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.6000000000000001, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.6000000000000001, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.8, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.5333333333333334, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.8, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.8, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.8, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.9, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.6000000000000001, 0.],
               FrameTicks->None,
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.9, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.9, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.9, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 1., 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.6666666666666667, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 1., 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 1., 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 1., 0],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"Rescale", "[", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"time", ",", "470", ",", "1100", ",", "r"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"90.87", ",", "1100"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"cylinder", "=", 
       RowBox[{"Rasterize", "@", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "0", ",", 
            RowBox[{"2", "*", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "0", ",", "r0"}], "}"}], ",", 
          RowBox[{"ColorFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"col", "[", "#4", "]"}], "&"}], ")"}]}], ",", 
          RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"ColorFunction", "\[Rule]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], 
                "[", "#4", "]"}], "&"}], ")"}]}], ","}], "*)"}], 
          RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", "None"}], ",", 
          RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"heatingplot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"t", ",", "470", ",", "1100", ",", "r0"}], "]"}], ",", 
           RowBox[{"lumpT", "[", 
            RowBox[{"t", ",", "470", ",", "1100"}], "]"}], ",", "1100"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmaxHeated"}], "}"}], ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Dashed", ",", "Green"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Dashed", ",", "Red"}], "}"}]}], "}"}]}], 
         ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"temp", "[", 
               RowBox[{"0", ",", "470", ",", "1100", ",", "r0"}], "]"}], ",", 
              RowBox[{"temp", "[", 
               RowBox[{"tmaxHeated", ",", "470", ",", "1100", ",", "r0"}], 
               "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"temp", "[", 
               RowBox[{"0", ",", "470", ",", "1100", ",", "0"}], "]"}], ",", 
              RowBox[{"temp", "[", 
               RowBox[{"tmaxHeated", ",", "470", ",", "1100", ",", "0"}], 
               "]"}]}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Framed", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Column", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<transient\>\"", ",", "\"\<heating\>\""}], 
                    "}"}], ",", "Center"}], "]"}], ",", "14"}], "]"}], ",", 
                RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0.5", "*", "tmaxHeated"}], ",", 
                RowBox[{"temp", "[", 
                 RowBox[{
                  RowBox[{"0.5", "*", "tmaxHeated"}], ",", "470", ",", "1100",
                   ",", "r0"}], "]"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Inset", "[", 
             RowBox[{"cylinder", ",", 
              RowBox[{"Scaled", "@", 
               RowBox[{"{", 
                RowBox[{"0.75", ",", "0.25"}], "}"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"coolingplot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"t", ",", "700", ",", "273", ",", "r0"}], "]"}], ",", 
           RowBox[{"lumpT", "[", 
            RowBox[{"t", ",", "700", ",", "273"}], "]"}], ",", "273"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmaxCooled"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"PlotLabels", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<one-term approx.\>\"", ",", "\"\<lumped capacitance\>\"", 
              ",", "\"\<\!\(\*SubscriptBox[\(T\), \(Infinity\)]\)\>\""}], 
             "}"}]}], ","}], "*)"}], " ", "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Cyan"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Green"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Dashed", ",", "Blue"}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Switch", "[", 
         RowBox[{
         "tab", ",", "1", ",", "heatingplot", ",", "2", ",", "coolingplot"}], 
         "]"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<time (s)\>\"", ",", "\"\<centerline temperature (K)\>\""}], 
          "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"17", ",", "Black"}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"600", ",", "450"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Inset", "[", 
          RowBox[{"cylinder", ",", 
           RowBox[{"Scaled", "@", 
            RowBox[{"{", 
             RowBox[{"0.8", ",", "0.2"}], "}"}]}]}], "]"}]}], "*)"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"tab", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[Rule]", "\"\< heating \>\""}], ",", 
            RowBox[{"2", "\[Rule]", "\"\< cooling \>\""}]}], "}"}], ",", 
          "Setter"}], "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Bi", ",", "0.5", ",", "\"\<Biot number\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0.01", ",", "0.02", ",", "0.03", ",", "0.05", ",", "0.07", ",", 
            " ", "0.1", ",", "0.15", ",", "0.2", ",", "0.5", ",", "0.7", ",", 
            "1", ",", "2", ",", "5", ",", "9", ",", "10", ",", "20", ",", 
            "50", ",", "100", ",", "99999"}], "}"}], ",", "Slider", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"time", ",", "0", ",", "\"\<\>\""}], "}"}], ",", "0", ",", 
          "90000"}], 
         RowBox[{"(*", "2500000", "*)"}], "}"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.689446963042291*^9, 3.6894470297641077`*^9}, {
  3.6894470933007417`*^9, 3.689447494412684*^9}, {3.6894475336009254`*^9, 
  3.6894476180657563`*^9}, {3.6894477351544533`*^9, 3.689447981818562*^9}, {
  3.6894480451371837`*^9, 3.6894480778240533`*^9}, {3.689448115239193*^9, 
  3.689448117909346*^9}, {3.6894490247712154`*^9, 3.689449074799077*^9}, {
  3.6894491556176996`*^9, 3.689449167901402*^9}, {3.689449202900404*^9, 
  3.6894492590516157`*^9}, {3.6894493062683163`*^9, 3.6894495421198063`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Bi$$ = 2, $CellContext`tab$$ = 
    2, $CellContext`time$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`tab$$], 1, ""}, {
      1 -> " heating ", 2 -> " cooling "}}, {{
       Hold[$CellContext`Bi$$], 0.5, "Biot number"}, {
      0.01, 0.02, 0.03, 0.05, 0.07, 0.1, 0.15, 0.2, 0.5, 0.7, 1, 2, 5, 9, 10, 
       20, 50, 100, 99999}}, {{
       Hold[$CellContext`time$$], 0, ""}, 0, 90000}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3]}}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {222., 228.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`tab$67213$$ = False, $CellContext`Bi$67214$$ = 
    0, $CellContext`time$67215$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`Bi$$ = 0.5, $CellContext`tab$$ = 
        1, $CellContext`time$$ = 0}, "ControllerVariables" :> {
        Hold[$CellContext`tab$$, $CellContext`tab$67213$$, False], 
        Hold[$CellContext`Bi$$, $CellContext`Bi$67214$$, 0], 
        Hold[$CellContext`time$$, $CellContext`time$67215$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`\[Zeta]c$, $CellContext`Cc$, $CellContext`\[Rho]$, \
$CellContext`cap$, $CellContext`k$, $CellContext`r0$, $CellContext`rstar$, \
$CellContext`J$, $CellContext`\[Alpha]$, $CellContext`h$, \
$CellContext`lumpT$, $CellContext`fo$, $CellContext`\[Theta]star$, \
$CellContext`temp$, $CellContext`tmaxHeated$, $CellContext`tmaxCooled$, \
$CellContext`col$, $CellContext`cylinder$, $CellContext`heatingplot$, \
$CellContext`coolingplot$}, $CellContext`\[Zeta]c$ = Quiet[
           
           Interpolation[{{0.01, 0.1412}, {0.02, 0.1995}, {0.03, 0.244}, {
             0.04, 0.2814}, {0.05, 0.3143}, {0.06, 0.3438}, {0.07, 0.3709}, {
             0.08, 0.396}, {0.09, 0.4195}, {0.1, 0.4417}, {0.15, 0.5376}, {
             0.2, 0.617}, {0.25, 0.6856}, {0.3, 0.7465}, {0.4, 0.8516}, {0.5, 
             0.9408}, {0.6, 1.0184}, {0.7, 1.0873}, {0.8, 1.149}, {0.9, 
             1.2048}, {1., 1.2558}, {2., 1.5994}, {3., 1.7887}, {4., 
             1.9081}, {5., 1.9898}, {6., 2.049}, {7., 2.0937}, {8., 2.1286}, {
             9., 2.1566}, {10., 2.1795}, {20., 2.2881}, {30., 2.3261}, {40., 
             2.3455}, {50., 2.3572}, {100., 2.3809}, {99999, 2.405}}, 
            InterpolationOrder -> 1]]; $CellContext`Cc$ = Quiet[
           
           Interpolation[{{0.01, 1.0025}, {0.02, 1.005}, {0.03, 1.0075}, {
             0.04, 1.0099}, {0.05, 1.0124}, {0.06, 1.0148}, {0.07, 1.0173}, {
             0.08, 1.0197}, {0.09, 1.0222}, {0.1, 1.0246}, {0.15, 1.0365}, {
             0.2, 1.0483}, {0.25, 1.0598}, {0.3, 1.0712}, {0.4, 1.0932}, {0.5,
              1.1143}, {0.6, 1.1345}, {0.7, 1.1539}, {0.8, 1.1724}, {0.9, 
             1.1902}, {1., 1.2071}, {2., 1.3384}, {3., 1.4191}, {4., 
             1.4698}, {5., 1.5029}, {6., 1.5253}, {7., 1.5411}, {8., 
             1.5526}, {9., 1.5611}, {10., 1.5677}, {20., 1.5919}, {30., 
             1.5973}, {40., 1.5993}, {50., 1.6002}, {100., 1.6015}, {
             99999, 1.6018}}, InterpolationOrder -> 1]]; $CellContext`\[Rho]$ = 
         7830; $CellContext`cap$ = 550; $CellContext`k$ = 
         48; $CellContext`r0$ = 0.5; $CellContext`rstar$ = 0; $CellContext`J$ = 
         1; $CellContext`\[Alpha]$ = $CellContext`k$/($CellContext`\[Rho]$ \
$CellContext`cap$); $CellContext`h$ = $CellContext`Bi$$ $CellContext`k$/(
          0.5 $CellContext`r0$); $CellContext`lumpT$[
           Pattern[$CellContext`t$, 
            Blank[]], 
           Pattern[$CellContext`ti$, 
            Blank[]], 
           Pattern[$CellContext`tinf$, 
            Blank[]]] := 
         Exp[-($CellContext`h$ $CellContext`t$/($CellContext`\[Rho]$ 
              0.5 $CellContext`r0$ $CellContext`cap$))] ($CellContext`ti$ - \
$CellContext`tinf$) + $CellContext`tinf$; $CellContext`fo$[
           Pattern[$CellContext`t$, 
            
            Blank[]]] := $CellContext`\[Alpha]$ \
($CellContext`t$/$CellContext`r0$^2); $CellContext`\[Theta]star$[
           Pattern[$CellContext`t$, 
            Blank[]], 
           Pattern[$CellContext`r$, 
            Blank[]]] := $CellContext`Cc$[$CellContext`Bi$$] 
          Exp[(-$CellContext`\[Zeta]c$[$CellContext`Bi$$]^2) \
$CellContext`fo$[$CellContext`t$]] $CellContext`J$ \
($CellContext`r$/$CellContext`r0$); $CellContext`temp$[
           Pattern[$CellContext`t$, 
            Blank[]], 
           Pattern[$CellContext`ti$, 
            Blank[]], 
           Pattern[$CellContext`tinf$, 
            Blank[]], 
           Pattern[$CellContext`r$, 
            
            Blank[]]] := $CellContext`\[Theta]star$[$CellContext`t$, \
$CellContext`r$] ($CellContext`ti$ - $CellContext`tinf$) + $CellContext`tinf$; \
$CellContext`tmaxHeated$ = If[$CellContext`Bi$$ <= 0.02, 2500000, 
           If[0.03 <= $CellContext`Bi$$ <= 0.1, 200000, 
            If[0.12 <= $CellContext`Bi$$ <= 0.4, 150000, 
             If[
              Inequality[0.4, Less, $CellContext`Bi$$, LessEqual, 1], 90000, 
              If[
               Inequality[1, Less, $CellContext`Bi$$, LessEqual, 4], 50000, 
               If[
                Inequality[4, Less, $CellContext`Bi$$, LessEqual, 15], 400, 
                20000]]]]]]; $CellContext`tmaxCooled$ = 
         If[$CellContext`Bi$$ <= 0.15, 10000, 
           If[
            Inequality[0.15, Less, $CellContext`Bi$$, LessEqual, 0.6], 4500, 
            If[
             Inequality[0.6, Less, $CellContext`Bi$$, LessEqual, 1], 3500, 
             If[
              Inequality[1, Less, $CellContext`Bi$$, LessEqual, 4], 2500, 
              If[
               Inequality[4, Less, $CellContext`Bi$$, LessEqual, 15], 1000, 
               500]]]]]; $CellContext`col$[
           Pattern[$CellContext`r$, 
            Blank[]]] := Blend[{
            RGBColor[1, 0., 0], 
            RGBColor[1, 0.30000000000000004`, 0], 
            RGBColor[1, 0.4, 0], 
            RGBColor[1, 0.5, 0], 
            RGBColor[1, 0.6000000000000001, 0], 
            RGBColor[1, 0.8, 0], 
            RGBColor[1, 0.9, 0], 
            RGBColor[1, 1., 0]}, 
           Rescale[
            $CellContext`temp$[$CellContext`time$$, 470, 
             1100, $CellContext`r$], {90.87, 1100}]]; $CellContext`cylinder$ = 
         Rasterize[
           
           ParametricPlot[{$CellContext`r 
             Cos[$CellContext`\[Theta]], $CellContext`r 
             Sin[$CellContext`\[Theta]]}, {$CellContext`\[Theta], 0, 2 
             Pi}, {$CellContext`r, 0, $CellContext`r0$}, 
            ColorFunction -> ($CellContext`col$[#4]& ), ColorFunctionScaling -> 
            False, BoundaryStyle -> None, Axes -> False, FrameTicks -> None, 
            PerformanceGoal -> "Quality", ImageSize -> 
            200]]; $CellContext`heatingplot$ = Plot[{
            $CellContext`temp$[$CellContext`t, 470, 1100, $CellContext`r0$], 
            $CellContext`lumpT$[$CellContext`t, 470, 1100], 
            1100}, {$CellContext`t, 0, $CellContext`tmaxHeated$}, 
           PlotStyle -> {{Thick, Black}, {Thick, Dashed, Green}, {
             Thick, Dashed, Red}}, PlotRange -> All, PlotLabel -> {{
              $CellContext`temp$[0, 470, 1100, $CellContext`r0$], 
              $CellContext`temp$[$CellContext`tmaxHeated$, 470, 
               1100, $CellContext`r0$]}, {
              $CellContext`temp$[0, 470, 1100, 0], 
              $CellContext`temp$[$CellContext`tmaxHeated$, 470, 1100, 0]}}, 
           Epilog -> {
             Text[
              Framed[
               Style[
                Column[{"transient", "heating"}, Center], 14], Background -> 
               White], {0.5 $CellContext`tmaxHeated$, 
               $CellContext`temp$[
               0.5 $CellContext`tmaxHeated$, 470, 1100, $CellContext`r0$]}], 
             Inset[$CellContext`cylinder$, 
              Scaled[{0.75, 0.25}]]}]; $CellContext`coolingplot$ = Plot[{
            $CellContext`temp$[$CellContext`t, 700, 273, $CellContext`r0$], 
            $CellContext`lumpT$[$CellContext`t, 700, 273], 
            273}, {$CellContext`t, 0, $CellContext`tmaxCooled$}, 
           PlotStyle -> {{Thick, Cyan}, {Thick, Green}, {
             Thick, Dashed, Blue}}, PlotRange -> All]; Show[
          
          Switch[$CellContext`tab$$, 1, $CellContext`heatingplot$, 
           2, $CellContext`coolingplot$], Axes -> False, Frame -> True, 
          FrameLabel -> {"time (s)", "centerline temperature (K)"}, 
          LabelStyle -> {17, Black}, ImageSize -> {600, 450}, AspectRatio -> 
          Full]], "Specifications" :> {{{$CellContext`tab$$, 1, ""}, {
         1 -> " heating ", 2 -> " cooling "}, ControlType -> Setter, 
         ControlPlacement -> 1}, {{$CellContext`Bi$$, 0.5, "Biot number"}, {
         0.01, 0.02, 0.03, 0.05, 0.07, 0.1, 0.15, 0.2, 0.5, 0.7, 1, 2, 5, 9, 
          10, 20, 50, 100, 99999}, ControlType -> Slider, Appearance -> 
         "Labeled", ControlPlacement -> 2}, {{$CellContext`time$$, 0, ""}, 0, 
         90000, ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           Manipulate`Place[3]}}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{710., {268., 275.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellOpen->False,
 CellChangeTimes->{{3.6894469752779913`*^9, 3.689447023254735*^9}, 
   3.6894471625677032`*^9, 3.689447199186798*^9, 3.689447291217062*^9, 
   3.6894473408389*^9, 3.68944737527787*^9, 3.6894474510122013`*^9, 
   3.689447509220531*^9, 3.689447539839282*^9, 3.689447620561899*^9, 
   3.68944767092978*^9, 3.6894477833902125`*^9, {3.6894478223664417`*^9, 
   3.6894478294248457`*^9}, {3.689447860144603*^9, 3.689447982349592*^9}, {
   3.6894480471773005`*^9, 3.6894480785350943`*^9}, 3.689448118523381*^9, 
   3.689449106920914*^9, 3.689449260305687*^9, {3.689449471781783*^9, 
   3.6894494968292155`*^9}, 3.6894495432268696`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"90.87", ",", "1100"}], "}"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.689449280615849*^9, 3.6894492991149073`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellOpen->False,
 CellChangeTimes->{3.689446958749046*^9}],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Zeta]c", ",", "Cc", ",", "\[Rho]", ",", "cap", ",", "k", ",", "r0", 
       ",", "rstar", ",", "J", ",", "\[Alpha]", ",", "h", ",", "lumpT", ",", 
       "fo", ",", "\[Theta]star", ",", "temp", ",", "tmaxHeated", ",", 
       "tmaxCooled", ",", "heatingplot", ",", "coolingplot", ",", 
       "cylinder"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Zeta]c", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.01", ",", "0.1412"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.02", ",", "0.1995"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.03", ",", "0.244"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.04", ",", "0.2814"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.05", ",", "0.3143"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.06", ",", "0.3438"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.07", ",", "0.3709"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.08", ",", "0.396"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.09", ",", "0.4195"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.1", ",", "0.4417"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.15", ",", "0.5376"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.2", ",", "0.617"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "0.6856"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.3", ",", "0.7465"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "0.8516"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.9408"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "1.0184"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.7", ",", "1.0873"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.8", ",", "1.149"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "1.2048"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.", ",", "1.2558"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2.", ",", "1.5994"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3.", ",", "1.7887"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4.", ",", "1.9081"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"5.", ",", "1.9898"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6.", ",", "2.049"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"7.", ",", "2.0937"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"8.", ",", "2.1286"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"9.", ",", "2.1566"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10.", ",", "2.1795"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"20.", ",", "2.2881"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"30.", ",", "2.3261"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40.", ",", "2.3455"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.", ",", "2.3572"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"100.", ",", "2.3809"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"99999", ",", "2.405"}], "}"}]}], "}"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Cc", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.01", ",", "1.0025"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.02", ",", "1.005"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.03", ",", "1.0075"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.04", ",", "1.0099"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.05", ",", "1.0124"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.06", ",", "1.0148"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.07", ",", "1.0173"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.08", ",", "1.0197"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.09", ",", "1.0222"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.1", ",", "1.0246"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.15", ",", "1.0365"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.2", ",", "1.0483"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "1.0598"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.3", ",", "1.0712"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.4", ",", "1.0932"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "1.1143"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "1.1345"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.7", ",", "1.1539"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.8", ",", "1.1724"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.9", ",", "1.1902"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.", ",", "1.2071"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2.", ",", "1.3384"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3.", ",", "1.4191"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4.", ",", "1.4698"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"5.", ",", "1.5029"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6.", ",", "1.5253"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"7.", ",", "1.5411"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"8.", ",", "1.5526"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"9.", ",", "1.5611"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10.", ",", "1.5677"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"20.", ",", "1.5919"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"30.", ",", "1.5973"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40.", ",", "1.5993"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.", ",", "1.6002"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"100.", ",", "1.6015"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"99999", ",", "1.6018"}], "}"}]}], "}"}], ",", 
          RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]", "=", "7830"}], " ", 
      RowBox[{"(*", 
       RowBox[{"kg", "/", 
        RowBox[{"m", "^", "3"}]}], "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"cap", "=", "550"}], " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"J", "/", "kg"}], "*", "K"}], "*)"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"k", "=", "48"}], " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"W", "/", "m"}], "*", "K"}], "*)"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"r0", "=", "0.5"}], 
      RowBox[{"(*", "m", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"rstar", "=", "0"}], 
      RowBox[{"(*", "m", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"J", "=", "1"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", 
       FractionBox["k", 
        RowBox[{"\[Rho]", "*", "cap"}]]}], ";", "\[IndentingNewLine]", 
      RowBox[{"h", "=", 
       FractionBox[
        RowBox[{"Bi", "*", "k"}], 
        RowBox[{"0.5", "*", "r0"}]]}], " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"W", "/", 
         RowBox[{"m", "^", "2"}]}], "*", "K"}], "*)"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lumpT", "[", 
        RowBox[{"t_", ",", "ti_", ",", "tinf_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"h", "*", "t"}], 
            RowBox[{"\[Rho]", "*", "0.5", "*", "r0", "*", "cap"}]]}], "]"}], 
         "*", 
         RowBox[{"(", 
          RowBox[{"ti", "-", "tinf"}], ")"}]}], "+", "tinf"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"fo", "[", "t_", "]"}], ":=", 
       RowBox[{"\[Alpha]", "*", 
        RowBox[{"t", "/", 
         SuperscriptBox["r0", "2"]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]star", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"Cc", "[", "Bi", "]"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"\[Zeta]c", "[", "Bi", "]"}], "2"]}], "*", 
          RowBox[{"fo", "[", "t", "]"}]}], "]"}], "*", "J"}]}], " ", ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "[", 
        RowBox[{"t_", ",", "ti_", ",", "tinf_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]star", "[", "t", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"ti", "-", "tinf"}], ")"}]}], "+", "tinf"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tmaxHeated", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Bi", "\[LessEqual]", ".02"}], ",", "2500000", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{".03", "\[LessEqual]", "Bi", "\[LessEqual]", ".1"}], ",", 
           "200000", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{".12", "\[LessEqual]", "Bi", "\[LessEqual]", ".4"}], ",",
              "150000", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{".4", "<", "Bi", "\[LessEqual]", "1"}], ",", "90000", 
               ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"1", "<", "Bi", "\[LessEqual]", "4"}], ",", "50000", 
                 ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"4", "<", "Bi", "\[LessEqual]", "15"}], ",", "400",
                    ",", "20000"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tmaxCooled", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Bi", "\[LessEqual]", ".15"}], ",", "10000", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{".15", "<", "Bi", "\[LessEqual]", ".6"}], ",", "4500", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{".6", "<", "Bi", "\[LessEqual]", "1"}], ",", "3500", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"1", "<", "Bi", "\[LessEqual]", "4"}], ",", "2500", 
               ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"4", "<", "Bi", "\[LessEqual]", "15"}], ",", "1000", 
                 ",", "500"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"cylinder", "=", 
       RowBox[{"Rasterize", "@", 
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "0", ",", 
            RowBox[{"2", "*", "\[Pi]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "0", ",", "r0"}], "}"}], ",", 
          RowBox[{"ColorFunction", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
              "#4", "]"}], "&"}], ")"}]}], ",", 
          RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"FrameTicks", "\[Rule]", "None"}], ",", 
          RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "200"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"heatingplot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"t", ",", "470", ",", "1100"}], "]"}], ",", 
           RowBox[{"lumpT", "[", 
            RowBox[{"t", ",", "470", ",", "1100"}], "]"}], ",", "1100"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmaxHeated"}], "}"}], ",", " ", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Dashed", ",", "Green"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Dashed", ",", "Red"}], "}"}]}], "}"}]}], 
         ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Framed", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Column", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<transient\>\"", ",", "\"\<heating\>\""}], 
                    "}"}], ",", "Center"}], "]"}], ",", "14"}], "]"}], ",", 
                RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0.5", "*", "tmaxHeated"}], ",", 
                RowBox[{"temp", "[", 
                 RowBox[{
                  RowBox[{"0.5", "*", "tmaxHeated"}], ",", "470", ",", 
                  "1100"}], "]"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Inset", "[", 
             RowBox[{"cylinder", ",", 
              RowBox[{"Scaled", "@", 
               RowBox[{"{", 
                RowBox[{"0.75", ",", "0.25"}], "}"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"coolingplot", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"temp", "[", 
            RowBox[{"t", ",", "700", ",", "273"}], "]"}], ",", 
           RowBox[{"lumpT", "[", 
            RowBox[{"t", ",", "700", ",", "273"}], "]"}], ",", "273"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "tmaxCooled"}], "}"}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"PlotLabels", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<one-term approx.\>\"", ",", "\"\<lumped capacitance\>\"", 
              ",", "\"\<\!\(\*SubscriptBox[\(T\), \(Infinity\)]\)\>\""}], 
             "}"}]}], ","}], "*)"}], " ", "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Cyan"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Green"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Dashed", ",", "Blue"}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Switch", "[", 
         RowBox[{
         "tab", ",", "1", ",", "heatingplot", ",", "2", ",", "coolingplot"}], 
         "]"}], ",", 
        RowBox[{"Axes", "\[Rule]", "False"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<time (s)\>\"", ",", "\"\<centerline temperature (K)\>\""}], 
          "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"17", ",", "Black"}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"600", ",", "450"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], 
       RowBox[{"(*", 
        RowBox[{",", 
         RowBox[{"Inset", "[", 
          RowBox[{"cylinder", ",", 
           RowBox[{"Scaled", "@", 
            RowBox[{"{", 
             RowBox[{"0.8", ",", "0.2"}], "}"}]}]}], "]"}]}], "*)"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"tab", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "\[Rule]", "\"\< heating \>\""}], ",", 
            RowBox[{"2", "\[Rule]", "\"\< cooling \>\""}]}], "}"}], ",", 
          "Setter"}], "}"}], "]"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Bi", ",", "0.5", ",", "\"\<Biot number\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "0.01", ",", "0.02", ",", "0.03", ",", "0.05", ",", "0.07", ",", 
            " ", "0.1", ",", "0.15", ",", "0.2", ",", "0.5", ",", "0.7", ",", 
            "1", ",", "2", ",", "5", ",", "9", ",", "10", ",", "20", ",", 
            "50", ",", "100", ",", "99999"}], "}"}], ",", "Slider", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellOpen->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Rasterize", "@"}], "*)"}], 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "*", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
      RowBox[{"r", "*", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"2", "*", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", "#4", 
        "]"}], "&"}], ")"}]}], ",", 
    RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.684957788490037*^9, 3.6849578107955856`*^9}, 
   3.6857150586079097`*^9, {3.685727761338415*^9, 3.6857277634345603`*^9}, 
   3.687480717618626*^9, {3.687483752291337*^9, 3.6874837595865283`*^9}, 
   3.688946856533499*^9, {3.6894479875758915`*^9, 3.689448034425571*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJytnQeQVdXy7hHMAQFzVrKKEbNHW0SuiAkJihlFVARUEESuIiBIEpEkSXLO
MAwzpAMNQ84zMOScczIrhuf/rN+3qT23br1Xr/6WVbvm7L26v+619zm7v6/X
4oY3P6hSO3++fPnSzs+X73+O/0v/tfhf+vv/9fj/7adr8Sf++X+S6YNfmp35
RuemE+20Oy9u9kRygB2v8WmpSsuHW/+iO1dM7znWShX44Nh3/+psl/3w6dYF
q9OsePjb9fexcL0P5HrseQHs4c+fm/T9a71vfiuh83/dkTrvJxjfL4z3G+P2
vWjcvx8BH/5c+M8I/lzxBX+NkuHvrDzxzibeCcSbSbxJ4h2IvznEO9D1d4g3
k3iTxDubeCcQbxbxNkrofIh3AvFmEm+SeCP7xBv5J95M4k268Id4J7jiC/5a
Jzdl1v/n/6VRvD8k23epkbnIWpRYec29y6fY5C/69vvlijn2S+8br1rWYL5N
b11y34E6I23I4WlPj565xDLD366/08P1/ivXfx/s+RfYw583Pa9ewbfLfZ7A
nzcP5z2D8T+H8T4rbt/T4/59Evjw5/iz1thTfMFfJ+Z3VZ75zWZ+nfldwPwu
Y34nkt8c5nei6+8wvwuY32XMbzbz68zvKua3dULnw/w687uA+V3G/Eb2md/I
P/O7gPld5sIf5tdd8QV/3ZOp8DetjeJtfE3Fpj/2zLVHBpQ5Om7NXLv5tpfS
+rZYZkOqPz0nd2uOHZ9b6dCjNSbb5mNX9phaca0dCX+7/r4pXO+6vlGw5+Ww
hz/f/dqEzOb3tE/gzy2c9zKMHxzG+w9x+34w7t9Lx/E5/qw89hRf8Nc7uTF8
EMUb7of13M8LuT9zLNxfa2xa6n6aaoNT99NG7ueprr/D/ZXjv3D9iWDPW2IP
f/5JuL8S+PPPw3mfzPifwnifGbfvk+L+PQ18+HP8WSvsKb7gr3/yr7//579t
UbwfvLJ0VDJ3s/mYBk/PnrfUco58tXPgD6vtia1nNJ57+gb7okL+XZ0/Tdo7
B2qc0ffObfZ5+Nv1d3a43itx/fvBns/BHv78zFcuLltyeJcE/nxmOO+rGF8x
jPe2cfv+77h/Xwk+/Dn+bC72FF/wNyjZJXV/74zi/Tl1/2+3v1PP00o7mno+
1lp4njZbydTzM9suTT0/O6xY+Nv1d3ie1np/rseeh++DlYY/rxyep4TO/xn8
+XHG9w3jeX4j+35D3L8fBh/+XPjD98VKV3zB39Bksf/5s+vuKN6Mp0vVz2q3
06575eXnD2zIsfPnvVfvh+Eb7JOyr1/84iXbrcOuV+p/8GyWNW3w5HQruNva
hb9df58XrvemXD852PMbsIc/73N2Tofz03ok8OfXhvN+AeObhPHeKW7fv4z7
93PAhz/HnxXFnuIL/oYnM1K3994o3vC877bw/bGa75/NFr4/dtix1PfFPNuU
+r7Ya4fD366/w/fHZr6vdthHwR7fV6sNf74rfH8k8OcPh/N+M+MHhfH+fdy+
H4j791Lgw5/jzx7FnuIL/kYlH099YR+I4r3zyLtflhyx117f+eeXDXPW2ON9
nvi5wkvbbFmTB9+vPHKXVRt6X51L31hgD79/sMEdrfZb5fC36+9/hetd198R
7HlN2Qv+/JaMr3d+P+O7BP781XDen2D80jDeX4jb96fj/v2xOD7Hn72JPcUX
/I1Jbkh9fx2K4g3fb/st/P6v4/t2h4Xvyz02NfX9uMgGpb4fD1pG+Nv1N9fz
vrDHjgd73gJ7+PMm4fsygT9vFs57OuN/DOM9GbfvaXH/fD/v4Pdjj+PPvsCe
4gv+xifrpl5AjkTxTuw4ul+H+QdtwLsDM04u2mDl7rv4kWVt/nmek5ctevzB
fXZN7Ytrz2y4xArUbX9jsV8P2xXhb9ffj4Tr/XqunxDs+UDs4c+3316iX71a
AxP4837hvD/K+GvDeL8hbt8vift3Ax/+HH82GHuKL/ibmAxRHo/ibZD6Pj9s
4fdjk4Xfh132ZOr7/oC1Tv0eLLM6qd+DY9Yi/O36O/x+7fKnuP7DYM/nYg9/
flb4fUjgz8Pv3yZfzfjw+3LA28ft+2dx/54NPvw5/mw+9hRf8JeWzFMv8T45
kPfJb6I6qAR1SXg/G2x5x+m/8HvSg9+HvlFdRd30H+PC+2kL/Ayy/NRRqnPy
Xh/eX1u4rg/vidUSeeq8Fro++O3B+21fy0fdlMd+dD3x8/77jalOOx7HH11P
Plw4VLeVJl95rm8h++H9+Zuo7itGHZj3+hPgDzj6qu5UXfgf198Yz4+fHo/3
P64vGs8/dc37SdWxedLf4gjzSz55jxhgv8btR9frfgrv99+o7rUTcfzR9bq/
qJ+Tuv9uJj+h3prK+/CIqG4tQR0Z6qUZ0X0T3l/TeB/NiOpe6lrqwV7UY9O5
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
6eSx6A0Nzv7hpn1Wquz3Y2pVXmvhPe2AvZd6b/un3kg936f6z9pNzypW4+zt
9ny+Ji9OuHK3hfe+XdGx/tWTKz65a4Gte3rryJWFD/CevOqU3XDedX576r1s
qt+Uek87ZG2DfX8B++H9bwvvef/cZwGv3whePvfD4Tp+7w9IJ0tg1w8FP9H4
kmE876UHeL9d5cTnxAePsMuNY4M4fq/PuPzYeScev6/Hr3C0IX/E5/vArTg0
HzeDbwlxHyEPxGchvrFJ5e178rjjeJeLSzxwwB7/eG750k+tt/JPz6v6x3mH
LT13ZcP5A1fbv1LP96n18Zd9+MCCMo13WIuitc+8efceazOlzwOb8586rvpj
0IJrDy+yB5aNa13xqUM2GTuyuyKcd52/pvoP537bb7qXH7pky5ltj9ilwb63
xP4fF+ZceVv/bd62XPlf9pf+Z/4DXn8CvG3C5/53uI7f+0N+7qBaG7J29k9g
128Mfox4vUIY7+DyiQGnE583D/69bYjLv+S4No7fMxn3KHaWxuP3S/ArHJeQ
P+Lz38FNfE589iT4viTu0wqFPBCfhfjGJ5W3O8jjwNmTrn/hiUP2zrTumw4/
vtHapN67j1JnrKE+PxbN57ASk949bedOG/1Y1fTh4/ZZeJ/fGx3v2fLNY9//
uMT6VWpWc06bI/Y3dmS3bDjvOv9q6j076a+n3ruP2dBg38dgv33qPX2HV0i9
tx+yAQGv1wHvY+FzD+/z6g896qNPDsx/1eSBCez6e8GPEa/XDuMdXH4y4PTh
+B8V/PuKEJcv4/hgHL+fNjqM+xI7t8Xj92r4FY4h5I/4vB24ic+Jz+qCrzxx
dyQPxGchvolJ5a0heczD37P/10j6snpKR7Cj6Ari9/OO03+hT2oQ64qHSVew
fnH9Jfov9OG2Y93y6Oi6Gf9F3wl9yO1c1x+P6x3/cX3oExvEOuBh9nVcT/mP
60Of2Uj6xHqadJo8+ld0PXqa+uQS0mm6ooPlub4F+WU9ek/pXn4AfSTv9Rng
D31zw6R7ed+4/hJdPyueH+lePuO/6Dvp8fz7T3E97j+un8T8kk/qvEjv+4/r
ySfr23tS942yF+P6V3S99Ento6B56s68hT6yJOujx0jn4P7sLD0mz/rodPrW
pkn34D5LZ310X/rOPPocnYd1gH1d54/H9RX64NLpU5vG/RXpM6xrS7I+eoxJ
15F+FVDOdvXNSdfpio5FvKyPHiPdivulM+uj0+lzmybdyqVjtY/jl27l0rE+
i8fP/Ef6GH136ayPnsZ8R/oafXhJ1kePYX6nmXQs4qMvsGVSeelOnkJf2QLW
eWRI57A96B7SKzSfoe/M6UObK93DDqODhPW0w+lDWxR9js7DetrhrvP74/oK
fXFO39pc3jsnSedhHcoC1m1kmHQd6VfoXa4+OulD0rGIl/W0GdKtfAv6SyX8
E590K5eOVSOOX7qVS8d6Jh6/H4/rY/ThOetp5/KeGelr9OUtYD1tBjzqXJOO
JT2P9cJJdCv7gDzdnur7WmFhPeNM6Rw8nwOlx0TzGfrC5lvjVJ/YEukePIdz
LfSljbe9qb6x7OhzdB7bHc67zh+P6ysW+tzm+8fY/zquz9CntsJ3gVe6jvQr
9C4vQ1+ddJ2u6FjE62G96UzpVjyfA/1N/Ic+uiXSrVw61tE4fulWLh1rezx+
ns9IH/PXyR/x8XxG+poTn+0BX3Xiko4lPa8M6+iVl+7kKfSBraZPLUs6h9VB
95BeofkMfWJLWW+WLd3D5qGDhD61dBuT6iNbE30uHST0yaW7zteL6ysW+t6W
uuxPjOsz9NGtps8tS7qV9B3pXT6bPjvpOpnoWMTroe8uS7qV10J/6Yf/0MeX
Ld3KpWPNieOXbiWdx6fG4/eGcX3Me8fzB08T6Wv07a22dPBlEJd0LOl5Ib6e
SeVlGnm6KNUXto6+tQXSOWw3uof0Cs1n6BvLZn1SrnQPO4QOEvrWptiHqb6y
DdHn0kHC+q4prvP74/qKhT64bN+J/TroM9KfQh/bOvreFph0HelX6F1elb47
6UP10bGI10Mf3gLpVr4Z/eUI/kOfXK50K5eO9VUcv3Qr6TzeIh6/H4vrY36Q
/BGfdCvpa/QFrrMfwGfEJR1Lel6Ir28S3cqkY4U+sk30qS2RzmGvo3tIr9B8
hr631fTBrZfuQd2UY5VTfWUzLPSZbY0+R+exp8J51/lacX3FQp/bavre1ttJ
dB3pT98EvH4HeKXrSL9C72JdcpeE9KG/0bGIlz65JdKt/Hn0l3PxH/rm1ku3
culY1eP4pVu5dKyK8fi9Xlwf87PIH/H5b3F9zYnPyoJvCXFJx5Kep3XX6FZ2
GjrW+d3/mNH20DZ7v/PNd7wza4V0DjuC7iG9QvNZ8nNbu+3Stda2cN1f/5i0
SboHfRKr7fJL9123op1bs4vajShdYUf0OTqPXRzOu84fi+srViLY93bY7xjX
Z+y8gNc/BK90HelX6F0+8+qT3RIduiWk63RBxyJerxfGS7fy/egvpfDfJviX
buXSsa6N45du5dKxLozHz+9npI95cfJHfN4hrq858dlH4KtGXNKxpOeF+IYk
lZdu5Gn+Fdcd/On0nfbCee/c/utLOdI57GZ0D+kVms/HDtx6Vfvj621T9cer
/Fhhm3QPm4gO0qDujq8fWD7Htnd5odWg5ruiz9F57P1w3nX+lri+YuWDfd+M
/Wvi+ozNC3i9Bnil60i/Qu/ysz7a4BMu7JGQrlMUHYt4/fkwXrqVl0B/qYD/
DcG/dCuXjtUojl+6lUvHqheP38vG9TF/lPwRn18V19ec+OxF8G0lLulY0vNC
fMOTyksJ8tTqgP1c6uLd1uSZ+xYln18tncPeRfeQXqH5fLPatTXvXLLJLlte
eG3jejuke9D3st7WPLnyvIJr59qjhUq9fuX0PdHnum51OO86Xzeur1jNYN8v
x/4E9BnpT+D1T8ArXUf6FXoX61h7JaQPTZaOxfjGYbx0K38T/aUW/i8N/qVb
uXSsDXH80q2i67Lj8XuDuD7mr5M/4vOxcX0tmo+m4Jsc1+dcep7W6aJb2RTy
9Oi0mvlfKrbXenY5p2bLKmukc9hwdA/pFZrP5n7BsE1Dtlq5Y39/ceLuXdI9
bB06yANlZrbfsXW+Dev08wPdftwXfY7OY/eG867zo+L6in0e7LvsX48+I/2p
XMDrvcArXUf6FXqX97mux2U9rvwuIX2oGDoW8fq3Ybx0Kx+A/tIS/48E/9Kt
XDrWw3H80q1cOtZd8fh9Ylwf88/i+fNr4/qaE5/1Ad9vxCUdS3peiG9MEt3K
SpCn09q3LNjxzv2WmbvxlwrPrJPOYbvQPaRXaD6f+favRlmzttt7hY/eVv/v
3dI96BvdYgPOH3NWxr6FdvYFCy49/7aD0ee67rtw3nV+X1xfMex7XezXQZ+R
/pQv4PWp4JWuI/0Kvct3N25U/pyB/RLSh+qhYxGvZ4Tx0q14v53qz+Kf+KRb
uXSsIXH80q2i63rF4/ejcX3MnyZ/xOfvxPU1Jz6bDj7iM+lY0vNCfOOS6Fa8
367y2TUGXzmr3EFbe9nYb86ttEE6h92A7iG9QvO5pdLHl/X8572le9nNm/cv
2ivdw/5EBylwpNeX7Y4vtve++vb71nUOR5+j89jfh1PnXeeLx/UV2xzs+7fY
T0Ofkf7kAa+vB690HelX6F1aV5aQPpSBjkW8nhvGS7fyy9FftuK/W/Av3cql
Y519JIZfupVLx/rjcCx+vyWuj/km8kd8PiGurznx2UbwtSYu6VjS80J8E5Po
VjaFPLUsPbfk8cqH7beXmpVaWWGTdA57A91DeoXm8/18R6fV7bXLZldf0v6t
f5576Tod0EHeW96mwCu/LbXsc2qv+HPI0ehzdB57O5x3na8d11esfrDvc7D/
B7qO9KcWAa+fBK90HelX6F3+UJdey5tUH5SQPhT60tYY8fovYbx0K6+B/vIB
/j34l27l0rE+iOOXbuXSsWrF4/f34/qY1yN/xEefXaSvOfHZn+BbSlzSsaTn
hfjSkuhWlh8dK/BFg+gPbxetAyrBuhTpNFPRGQJvNRg+8EP6xHtHR607Yt1P
pCOh48AP9ocH7EY/eTsTjvys+9G6lZboONK1NG4GdkK/+YcuXGHdyl0J6VxB
h3gmIV3iOLh1fainurlw5WOdjPyjo7n8B/6xXZQ3cMD7dTOtE9I6LOk+0tVC
XdXblS9w0M9+ah1Q6Xj+2T83yhP85am/O4JL44uxDknjM9CV5O8AeXsRPMKl
dUWsM5Luxn48g5QnV966xfPB/hNR/tift6dLlyNPrrzti88HOtwzSa3rCusc
3k5Kp/spPt/Ukd10X7G/RXP2t+jM/r492d93JPzqqbxNZ94Hgov5M637Yv5M
Ol515k150330K7j0/NxM/gfz/Mwm/7pvupO3wCNNo69lcLQO6ijrgt5Ft2qJ
zhN4qRnwfe34HU6PjloHxboo9muYZtKBAj82BZ5vHP3ig004tE5K67yk00kn
0ril2An95O08wpVaZ/RiQjpe2B/zjUTgJR3+sF0UR+DpxrlwaZ2V/Es3k//w
/jU4yhs44PXGmdZhad3ZE+he6Hzwj+mufIGDfvV20TqsE/H8+5fkH7/wk1He
4AUHR+u8DrPuS+OboePJ32by9ih4hEvrvFj35eie7N+Zrjy58vY+fguA41Hy
p3Vv6JbsP5pUnlx52xCfD/YbaZjUurjQ9/7vJPMHPxrNN++h43RfsT9JdP/w
7wqNiXTQd/PkTffRUXAxf6Z1dcwf+4em8/6Zbsqb7qMfwKXn5yfy/w7PTwfy
T55MeQt16Hz6PsdH69Y6sI5LOmNVdLnA8y9AP+lOnTo7OmpdHOvYIp0TXRI9
ZS66yVTW34w34dC6Nq3Lk04pnVXjqmEnrM/p7sLF92VCumvQ+eompPvVA7eu
D3zFVBcu1gFG6wJfR0eU/6DXjI/yBg50kqmmdXMXxON36b7kyZUvcLD+p3u0
bq5jPP/sTzJceULvifLG+qDx0bq8tqzT0/jK6K7yV4u8TYnj0bpDrdOTjizd
VXly5W1KPB/s/5KmdXzsl5IhXVZ5cuWtZnw+2C+mZVLrGMP+Kq2T0qUbxueb
9UlTdV+xv0x0/7AfSwb7sSxAjzqVN91HC8HF/JnWQer+la6dwbwpb7qPGoOr
Kc9PZ/L/MM/PS+Rf98008hbeY1fQf5YRrTO8lnV30oX3oqOG9+KV1Bt94eUX
REetY2TdYaRLoyNTfyylzphDv1qGCcdg1iFqHeVOdGXp4hr3GHZCP1tfF66w
ju/DhHTyoMs2TEinrQ1uXR/qhDkuXANZJyj/29F95T/UNxlR3sBBXTHHtM5R
6zqlW0unD/XPAle+wEG/XN9oneMN8fz7IfKPX+qjKG/002VE6yivZF2lxu9E
J5e/GuRtBXiES+soWVcp3V86ufLkylvQXTLox1vhQ8mf1pXuJn/qEyBPrrxV
i8+HV03xjO2SWnc6J9UX2zGpPoL34/ONLjVH9xX7ck+zdPxv5f65A/+/x+83
9K2l9PvN0TpV07pV5s/Uh7CUeVPedB81BNcZPD8lyf8e9VWQf/JE/Zfh5VP8
+GrWscyI1oXWYJ2kdPwkuveOFE+fa2VSvP1gePfl0VHrTlknGvURoPtbn5QO
kGNBF5hvxfArHFo3qnWv6gNQH4PG9cbOjQGHC1dYd9k4ob6GoKM3SUhXvxXc
uj7oL/NduFhnG627VR+B/F8X8EZ5A4dPApfWpWodrvoM1FcRdJjlrnyBw+8A
l9alvhTPvzv5xy/rcqK8+TXg0vjqrIPV+Gn0NchfSfK2CzzCpXWvrINVn4b6
GpQnV95KxPPhXcmf1gFPIn/q6yBPrrwVi8+HX57inTontU447G/UJam+j7vi
843uNF/3Ffs7RfcP+zZnWQ/8X50nb72Y93RwMX+mdcbMn6lvZDvzFuWN++ge
cOn5eZX8j+b5ySL/um9Kkrd5Kf57HetUZkfreG9gXav6Lr6kT+GiFA+/3kak
ePnh8Oo50VHrhFnXG/V90KdhhVM8/xoLvP8SK4Zf4dA6X61TVt+G+k40rhB2
wvqZ4S5c1AsJ9aGEvofPEuqDGA1uXb822HPhWsk6XPk/Rl+F/N8Q8EZ5A4dv
AJfWEWvdtPpC1AcTdJYcV77A4ePBpXXExeP593bkH7+su4ny5teDS+OvZd2y
xn9BH4r8DSRv4HDh0jpl1i2rr0Z9KMqTK28l8DsXHKvIn9Ztf0/+1IdDnlx5
6xufD2+b2m+rW1Lruh9O7U/1bVJ9Omnx+fZc8i5crPO26vg/Er9/WOd0Km8X
Mu+bwKX7V+vCmT9Tn8/v8fs9uu8mg+sCnp9S8fyzX9YU5cmUt8dS/PZm1qHM
jdZdH2QdsvpknqGv5LEUz77FiqZ499Gsa1kTHbWum3XYUZ8OfTXWLsXjb7C/
Urz+SsvAr3BoHbnWld9On436hDSuLXauDThcuMK65uYJ9Q2FPpWWCfWtlAC3
rg/6yT/vMdi7kHXT8n8rfTDyPyngjfIGDs9XKODSum+tc1cfj/qWgp6yxpUv
cPhN4NK67yPx/HsV5T/4ZV1NlDdPA5fG72WducZXom9I/q4gb23BI1xaV846
c/VBqW9IeXLlbQp+y4OjCPnTOvs7yZ/6psiTK2+XxueD/dJ6JrUOf1xqf7He
SfVV3Rqfbz/J/SBcF3D/rMJ/Ge6fLvifmCdvbZj3/OBi/kzr+Jk/U19Wa+ZN
edN9dAe4VvH8fE/+7+b5eYH8kyebSt52Xv7p8Kdu3W4Vmhcomj1sQbROPp11
4+prupQ+oAfnfH7N72fvsH7t33l5dcZ4Kzy7VteaD6+PjlqHz7r5qK+KPij7
u+G66TlnbbGLLtqUOfWhVfY4foXjOdbRax+AD+iLUl+Xxv2FnV4BhwtXWIf+
RUJ9XqGvqFVCfUaDwK3riwR7LlzPss5d/uvTtyT/5QPeKG/g8IvBpXX62pdA
fVfqMysU8uTKFzh8OLi0Tn9KPP9+JfnHr1eM580fBZfGT2BfAI0vQp+X/HUj
b0XAI1zaB4B9AdS3pj4v5cmVtyfi+fCq5E/7IjQgf+pzI0+uvH0Tnw+vfbBw
s8fqfpfUvglXjfl1y0vP9kuqD25MfL69EHkXrqe5fyrjvy73zwX4L5cnb38y
75eAi/kz7bvA/Jn66C5k3pQ33UcTwPUUz89M8v8Zz8/15F/3TSXyVvS8i4t9
9/xOW3fjvTkbRy+O9jV4mHX+6kP7gL6tardfvuzDZ3bZ+duOrDn7nTT7blGZ
g7ubboqO2jeBfQ6iPjj61uzBVXfbqx9tt5L9n97+4thcW49f4dA+DdonQH1s
6sPTuAewc07A4cIV9g1onVBfXugDa5NQX1hBcOv6EsGeC5f2TZB/9cHJ/5qA
N8obOLwUuLSvgvaRUJ+c+gL7hDy58gUOLwwu7avwSDz/3pD849c3xvPmq8Gl
8Qn2cdD4+vTlyd+Z5K0feIRL+zawj4P6DNWXpzy58rYpng9fEs+fq09PfYnk
yZW30+Pz4bl1tz3coOyApPa5qHDprpVzvxqYVN/ixfH59uLkXbgWcP/sw3/1
+P3jq/LkTfdRaXAxf6Z9Mpg/U99jb+ZNedN9dCm49PyUJ//beH4ak3/dN5vJ
25t/jh1w4PPdVif3vRZ7JiyL9qEYwr4M6hvMpc+u3oC0f+/rtsee+K3UX6U+
SreSOT+Vq5OxNTpqnwv2pYj6FukztF8O/j0w5x989984+5yTV66z9/ArHNpX
Q/tsqE9SfXoa9zN2Hg84XLjCPg9tE+qjDH177RLq43sK3Lr+vmDPhWsf+0jI
/8f0Bcr/2wFvlDdw+IPg0j4Y2vdDfY3q4ywR8uTKFzi8Mri0D8aweP59HfnH
r9eN581rg0vjB7Lvhsbn0Ecpf+XJWynwCJf22WDfDfWFqo9SeXLlrX48H659
OLTvSNN4/pQnV97KxefDB338fL6VzQYltS/JH2sX377xg8FJ9ZlWic+330ve
hYt9Smw4/uk7tdb4r5Unbz8x7wlwMX+mfU2YP1OfajHmTXnTfVQdXIV5fkbF
828byb/um/fJ25BjFa6+b8Re+/3z/rcdn7wy2jfkLPbRUJ/nffRFflnwyRtf
27DP2l70ZsnHm2fY+nrbln386/boqH1D2Eck6jOlL9QmFViS/19VdtvTk+8s
27f9BvsDv8JxNvuKaF8U9bWqz1Xj0rDTOuBw4Qr7crRPqO819Fl+lVDfZQdw
6/ongz0XLvZhifZl6UEfp/z/EvBGeQOHPwMu7VuifVrUh6q+W/Lkyhc4vBO4
tG/JufH8+4PkH7/+Zzxv/jO4NP509knR+Lvpe5W/FuRtQxyP9n3RPinq41Xf
q/Lkytvf+B0MDu2bon1iepM/9f2SJ1femsXnw2vc+9Abe94YktQ+Muk9J3Y5
XnVoUn3BXeLz7ZXIu3CdEb9/vDv3T3n8/5gnb7qPKoOL+TPtQ8P8mfqK1zFv
ypvuo+7gasTzU5D8D+X5MfJPnixf85C3XTu29mqzcr8tuLjOB3++khPt81KP
fU/Ul9uPPtb+zXavy732oM27pe8zb381xa49MffX+3rsjI7aR4Z9X6K+YPUJ
v39197eml9trNW3YKw/9uskW4lc4SrMPjPZNmUJfr/qSNa4+duYEHC5cYR+V
jgn1KYe+2K8T6pNdBG5d/3qw58LFvjnRvi30QUd90fMC3ihv4PA3waV9ZtrF
43fFf03Ikytf4PBl4NI+Mx/E8+8DyT9+fVE8by5cGv8u+9pofG/6lOVvJnkD
hwuX9rFhXxv1XatPWXly5Q0cvhMcN8Xz59PIn/q0yZMrb9Pj8+GFfi2WdbLC
sKT2/albo+f3Z943PKk+7pXx+fZXybtwleD+KYb/ydw/+fE/N0/e6jHvb4FL
96/2DdL9qz7wq+P3e3TfrQLXWp6fj8j/WTw/Q8k/ebLF5K1YbpNL1vxy0C48
mH/hF9tWRfvyZLNPjfqoT6PvesrhZm2efOuw5a+49uMve06zWo1HFj9Zdnd0
1L4/7NMT9XHTd2033v3aglvv2G+NllzWZuvbW60QfoWjIvv2aN+hdfRhq49c
40pj56/HUzhcuMK+N50S6isPfcydE+prPhPcur5hsOfC9S/21ZH/NfRJy/8F
AW+UN3B4Y3BpXyDtg6Q+b/W1vxny5MoXOPxccGlfoNXx/PsZ5B+/XjieNz8f
XBq/jH2INP4v+uLl73fy9hZ4hEv7DrEPkfrk1VeuPLnyBg4vCo5K5E/7MG0g
f+qrJ0+uvP38eGw+fOHUc4sVuWlEUvs0Fb3i86rXXD0yqb77ghVj8+0fknfh
Yt8m24n/1fH7x8/Lk7dSzHsTcDF/pn2emD9T3/4bzJvypvuoMLju5/lZT/7r
8PycS18/ebIi5K32gkJdi11/xF70vtee/WZutI/SXewrpL73d+kTX/XyZXdn
jTpq5d4sNGDokBk2+reOlWfm7Dl1ZB8l9lWK+u7pk7e9T5cuPeT6gzb/pvnr
/L3t9hJ+heNd9lnSPlG/0zevvn+N24OdhwIOF66wT1HnhNYBhL7zLgn1oVcA
t66fF+y5cL3NPkjy/yt97fL/QsAb5Q0cvgBc2sdJ+1apL1/rEEaFPLnyBQ6v
BC7t43RfPP9ej/zj11+O582fB5fG38G+URpfm3UA8nc/eRsDHuHSPlHsG6V1
DVoHoDy58vYKft8Cx3vkT/tm/UH+tA6CPLnydnd8PvzzpidalS44Kql9tTZv
eGty2Xyjk1on8Ux8vn0ueReut7h/BuH/Z+6fL/BfPU/edjPvC8HF/Jn25WL+
TOssRjJvypvuoyrg6svz8xD5X8nz04D8kyd7lbyF/u2urGeoSR95J9YZtIqO
M/j8ONdpXFgP8Al93V3o729Pf397+sy70K//icbRf1+TfvpO9NO3oj++Ff3x
neh3rymc9K9/EtmtjJ+a+D0dHK3AFfrzMulXbU2fYDp9pCOjYzU+r8d1Ghf6
PfvTt5dB/+ZE+iUn0keYQT9mf42jv7I1/ZLp9EuOpP9xJH2H6fQzthZO+hP7
R3bT8DMDv1+CYwi4Qv/FPPqRutIHMoc+oYzo2JvPb+U6jQv9PGPoy5hLf85M
+nNm0icyl36bMRpH/0xX+mHm0A+TQX9LBv0tc+hX6Sqc9J+MiexuwM8h/FYA
x0Xg+ldKX1tuxVL6Wh9rn9LrFrPfn0dHfV6K6zQu7NOY7v9K6W7L0O3me7tw
ND5Hx0zXOL8q2HHssg7NPeiEHn1+O9dpXJrsYLclfjrhtyI4xoCreoo/XW0X
pPjTQZZI8bHZFnjiedHxQT6/kOs0bm2KR53mxVK86irrm+Jll8JrLzU+h6ee
pnF+VrDj+POgK8zz0hzx55dwncblYkd2u+NnGH6Lg2MpuNqk6uN11i5VHw+z
9FS9nWuBB1gcHSfx+Vdcp3G/pep196Gpunkt/Ek2vEW28Tk8hGuctwx2HH/+
VPDjz3LEn3flOo37GTuym4ufrfgdBo5D4Jqaev/ZbAVS7z+j7KbU+9R6C+95
K6LjjXx+JtdpXMHUe1CWF0+9F22kjsjlvTTX+Jz3zCyN85Op98ZRjj//KPjx
Jhzx5xcGf8LJe3JWZPdV/LyH35LgOBNcjWuvb9C3yXZr/lmlhXMnjLPBb3/f
/rJCm+2ZDz+vV2hwTnQcxOetuE7jBna/5+Ovd8/3YVNHFWxYcZsdbdbgs+Yf
rPNj4Wh87kPDdRrnHwc7jj9/OvjxZznizztyncb1x47s7sfPz/gdAY4e4OqU
2+D6i2butGY1tp132u6JdkWvNk/nO7bN3jx5/Nu0QrnR8XI+b851GneHvVei
14FF3m3FkVZtl+2wT9o8kFtgzEb/dzgan/s94TqN80+CHcefvxH8eC2O+PMv
uU7jbsOO7DbAzxf47Q6OkuAaUf68le3z77HpDa+46/rjk2zRW1+3+3HvDmvc
ppZXab42Oi7k85lcp3FZB/rlDj661FfPbpNv7Y+7rMA3Bcq027vFTw9H43Nf
FK7TOM8Idhx/3ij48Y854s/ncp3GzcaO7J7sFPxcgN9ccGSCa/akoc3yVdxn
v3as+or9MdlaN3vh4Ltrd1n7wmv3/3BkfXRsxecnuU7jqnXPaTXuhxV+Ufp1
zYpfs9cWPrm33JldtjtH43N/KVyncX4i2HH8edvgxztwxJ/n/zpcp3HPYUd2
s/CzDL+XgONxcK2/4eEyTb4+YPeM+Lr1a2dPMetxw1Nb5u+xvn0rFvn2lU3R
8WE+v5/rNO6jAV9c8cof2V512NTfGlbYb+dnL6m/6NadfkE4Gp/7x+E6jfNb
gx3Hn/cJfrw/R/z5I1yncQ2wI7tn4acIfquDoy64TnRet/HIqkP20ZyFY5td
PM1Ojj807rmMfTah1IwH71m6JTr+zudNuE7jZjS6usGOz1d5t57PfTyn/kF7
rtqE3h2W7fIq4Wh87h6u0zivG+w4/nx88ONpHPHnn3Odxk3Djuw+hZ8a+P0W
HOngOjdfg/ZvXX7U0jadtqbv9TMsc2HGhQuGHrA3NvSYdOjq7dExg88nc53G
nV4pc9Hbp+V6bvuD31/Y47D1WN9t/lPv7fGe4Wh87meH6zTORwY7jj+vGfz4
mxzx5zO5TuPyY0d2u+CnP37XgOPkEwGX3vs7814e9mEcxbrKruxLOYb9MD8x
1QU6hnVsQ6Jj2C9yBPte9mN9dPS+z7+n1jXyo+uWaVy8XuDfV/vEhWM/OPS3
6g7VPWF/jH4uHGH/zK4uf6pLqFPkl30s+7EOdYgrHtUtP1A34Zd/jy3Klysu
1TUdqV90vg44NH4Lcb1I3aO6qzz+hYM4XHF1i9drrJ/synrSUYrDFde+eL3H
v+cW5Y/9OaP8sh65lepI1mn207yy/jGaP9Yfd2L9cSvWQ47g33vrx7rQIaa4
NK+/Ms+axx/BQRzs59k1qtvSqavC+o9Z/PtEw+y11PoRt5qp9SMdVd9Fx7Au
JzM6hnUzM1i3lMb6xaheYx3XsMiPrivPuLfj9Z69Evy6cLwFDv2tulF1a1hv
k+bCEdYdDXP5U11JnSm/7BOXxn51ma54VHd+SN2LX68DDuyyf92wqC6dQP2p
87+DQ+NfIK4p8XqZdVeZLhzE4YprSrzeZp3VMPbfm6U4XHHVjNfrXjWeP68f
zy/rBUeKB+DfT0rTvLIfXjR/qtNZHziSffZm8O8ppbE/XqYpLs1rY+ZZ89gA
HMTBfnnDorr7Buri+an+7IWsS5hoF6f6uxfZyFR/dw9TXa5j6AOfEx2LpPrJ
51voc5/O+qKo3rbi2JUfXVeYcTfG63UbGvy6cIwBh/5W3S/eIewXNd2FI6xX
mOjyJ14AnkB+fSM4iMMVj3iDO+At8OsTwIFdV1ziFa6BP9B54dD4gcS1C95B
vMefcf+KwxVXiThfwvqDiazHWKg4XHEVi/Mt3i+eP58Uzy/reTLE47DOYbrm
lXUW0fyxfmcO63cyWNcw3zaD4yR5VFya13uYZ81jBjiIw0oSl3iTDHiNXan+
yWz6hjMtkeq/zLEBqf7L/iZeRcfQp7koOp720f/0ey630IeaZZlxvsQqYld+
dF3oL11u18f5FusT/LpwDAGH/hZvI34o9C9nuXCEvutMlz/xOvA88uuXgCP0
DS9yxSPepwy8E359JDiwS59uZsQLTYL/0fnHwKHx3xJXe3gj8VYX4V84iMMV
11TsVsBPpXh8isMV12Vxvsy7xPPnY+P5pe8/4tvoQ87SvHr5+PyxXmCxnQ5v
9hfzeCk4CpFHxaV5Lcs8ax7TwKF5epK4xHuth5eqlepvyqWvL2n1U/1Ra6xS
qj9qiIkX0zH0Ua2IjqGPa5WFPrGFtjHOd1ld7MqPrtO4c+N8mVUMfl04ngaH
/hbvJt4v9BcudNl7J/jzyB+8HDyd/HoCHKGvb4UrHvF2ReAN8Uu/3xDFQR9d
MuL11sDf6fzb4ND4x4irP7yfeMcb8S8cwqe4Nsf5Sn8/Hp/iiMadEec7/dF4
/rxqPL/05c4Tj0qfYDQ/9ClG8yee025iHn4m7w+BowR5VFya18uYZ83j8+DQ
PH1AXOIt/4RXDH0P6+n3mUPfxUb6eUbYRvhGHUOfw6roGPos1tKHs9T+ivOV
9PPMifzouvqMawPf2RZ+NfTvjHDhWAQO/Q0/65PhZ0PfyVIXjtD3MsflT3xr
ZXhd/NJ3spT+m1WueMDhneF98Us/zgjFQZ/LnIiX/RX+VeeFQ+NnEtfGOF8s
vy4cxOGKK3/zGN8sv/SNrFccrriag1txTI/nj36ZKL/ioY180j+zVPNKf0w0
f+KprQrzUI+8vwWOq+P3RzSvPZhnzeMqcBAH/S9z6OPYSP9LFrrkFvT4eeii
W9Hbx4ifjo5BR14THYMOuhGdPJv+liyTn5ewKz+6bg/j/oLXngI/HvT1MS4c
FcChvxvG+W709GwXjqCXz3P5Kw0vLl4ev+jC2ejja1zxgIP+lFHyi14+RnGg
h89TnOLZ5Rd9fJ7iQP8eI56f/pNc9PA1LhzE4YoLHYA+io3o3/PQdbcoDldc
ob9kVBTH3fH8oWdH+aWfJNIr0LezNa/o19H80T+y3qQ77CbvC8ExkjwqLs1r
YXQJzWMV5YN5epW4pBsMhtdvWH1QhZpTt9uBOtnLi7yz0E67psTiF/rssBk9
Wh/bOWOCSVfQsWz+50eWu2BDdHylefLQV39vsXUZ9572xoZVNiSuF9hB7MqP
rnuZcZ/G9QbLDH5dOBwc+lu6hXSTtcGeC8e+4M/lT7oGOof8+npw3BnicMUj
3aMdugt+fT44sOuHiEu6yAD0D53fCw6NTyOu4+gm0m3uwr9wEIcrrmHYHYqf
I9htgB/icMXVIK4X+dh4/nxxPL/+FHmRLrSGvAjHnvj8+UDyXpl5eIm8bwDH
HeRRcWleOzPPmsfl4CAOO0pcXdFb7kSXmfT4A1njt++0Ty8+vdk19ZbYlR1n
NVmxbZf1rf3HgEIH06QPRceZ516Xb0HFzdHxvRojX3jg2HY79Mjom/JXXGNl
sSs/n2FXfnSdxv0bvehr9Klewa9fAY7+4BCu19GbLkPfOhDseR3ZC/48HX+X
oktJF+M6PwyOWSEOd+IBh7eUvhb8+kBwYNebExdxSudy4vQm4AC39yCupuhe
TTji15McyYsfJC50OO+CH/x6Gn6OcJ3GNQK34ugGbsUxFBzC9Rp5IZ++n7wo
T8QRxX0JeZfu9y55Fw7isNnEo3ltI/2QeRwGDt0XLYlLut18dLXv71/98J9n
77Hz/d4ypRsstztPvlCyQom9tr75PYtu+zndpOvpWPGi/S9Uar0tOpZo0HDa
+K077a+lV1cbkrnOFsT1OiuIXfnRdcUZNzWu99na4NeFYxM49Ld0Q+mWfwR7
LhznBn8uf9IV0Rnl1/8Gx+MhDlc8ke6I7olf3wYO7PqFxCVdcg76o86fDQ6N
X0VcZ6BbSjd9Av/CQRyuuBZjdxV+CmP3BH6IwxXXpLhe6yvj+fMd8fx6Q/Ii
XfYkeRGOs+LzJ532n++rMA+ax9OWBRwVyKPi0rwuYJ41j7vBQRxWhLiKoHdW
Rxe9s0y9GU/esc9WTs6of8WD2fbUeydyZ7y33y7r8+HxZ/JnSp+Njge+Xv/C
vtd3RMcd7RNXFVux24q88E2zx0r88/6HXfnJxq786DqN+xFd19GHLwp+/Ulw
XAkO4WoT13utULDnsrci+POy+PsCXVi69PZwnV8EDuLwg8QDDv8L3Rocfg04
sOs5xEWc0pmdOH05OMDthYhLevcCjvh14SAOL0xc6OBeGD/49Tvwc3E8fj8K
bsVxPrgVxw3gEK4v43q9F4zPj+KI4m5J3qW7byPvwrGfPB4iHs3r6ejymtdi
4NB9sZq4pJs3QtdueO0Z9/V58YBd3uHZ+f1n5thbGzq0unPiQas6efTl7xec
atLVdbytyMxWo/48dew7+MxmPWfutRI7Txuxp9tmaxzXy+0K7MqPrvuOcXfG
9XarHPy6cLwADv0t3V59A8WCPReOS4M/lz/p+uj88uslwXFriMMVj3T/h+g7
wK+/DA7s+pXEpb6Ahuj/On8JODT+KeIij66+Bfy6cBCHK64m2K2CH/x6A/wQ
hyuum+P9Ev5EPH/+Wjy/3pu8qC/iBvIiHJfE5099EjaAeehD3kuD45b4/RHN
a3nmWfP4JjiIw64irq70GyTpS0gv1H/y/paH7I3XD1xd/JHV9nnF4neO+unw
P+9Vux/5+srp6o+Ijo17DJpQ97vd0bHGjOyt543bb/fXb5TdJv82m4ld+XkT
u/Kj6zTuA/oljtOf0Sn4deH4Fhz6e1y838LuDfZc9moGfy5/v9GXMZG+EK7z
B8HRKMThigcc/m/6RvDrfcCBXa9FXMTp0+nf0PnXwaHxHYiLPhOvzPFj/AuH
8Cku+lA0b/5WPD7FEY17B9yKo008f94/nl8fE++X8bvj8+OvxefPfyXvk5iH
F8j7Q+D4iDwqLs1rS+ZZ8zgIHJqn2sSlvpUz6Sv5Kf+9d9w7+oiNuatVo1FZ
udZryszt1z14zHL2X1tnbMmk9aLfRMcZV7bZdMv9e6Pjpbl9HmnR96CV+uyH
P7r9U4edFe9XsbHYlR9ddwnjxtPvch79NcuDXxeONcLB3/Tn+BT6c0oGey4c
o4M/lz/129Sirwe/Xhoc00McrnjA4dPp+8GvbwQHdn0ccakvR31BOj8KHBq/
iLh6x/uFPIl/4SAOV1znxPuNfHw8PsXhimsYuBXHvHj+fGs8v+pDMvLpJciL
cIyMz5/6lP75Pg7zcDF5vxEc08ij4tK8ZjHPmsed4NA8TSCu/wMdE7y5
   "], {
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1], EdgeForm[None], GraphicsGroupBox[
      TagBox[PolygonBox[CompressedData["
1:eJxNnQn4VdP3xs+59577vefeY8o8KyQhRUjmSiIqkqJIERGVIUOJiJRKEopE
hIjM8yzjzzzP8zzPc4b/++ldnuf/PN/n2ftde+219z7DXd9zzrvXaj54xF7D
S0mS7FgkSUXljGqSHFJPknNVTlDDTJWHCV+g8kzh2SqPEL5I5UThe1SeLny3
ynOEH0BP+H6V04XnqTxa+HKVZwnPVzlK+CqVk4UvVTlC+BKVk4RvUXmy8M0q
zxa+Q+WpwrernCZ8g8oxwternCr8MHaFF6k8V/gjlZcLf6jyIuGnmJfwkyrP
E35O5QzhZ1WeL9y9KUm+F95N5a3C70l+qfC7Ki8UfpxxhB+jn/BryIVfVTlT
+CWVFwi/SCn8mcorhT9VOVv4LZUXC7+pcpbwtSpPEF6gcorwVyqvFv4SPeHv
VF4r/K3KOcJNmtd9wlWV84QXS36r8J8q5wr/q/IO4X9UXib8m8qbhH9lHcJl
9btbuKTycuHVVT4tvJrKq4UbKh8Urqu8Qnh5lY8JN1N5lfDKKv8nvJLK+cJr
q3xOeC2V1whvoPIV4ZYqrxXeQeVnwturvEl4I5WvC7dWeZ3wpirfEm6jcqHw
T5rn9cI/qrxEeCvJPxDeUuUNwpurfFd4M5XXC2+j8mPhjipvFO6s8kvhTipv
Ft5F5TfCXVXeIryuyheFW6hcwPpquq4bWp/KT4WXkfxhtS+t8krhnip/Eu6h
8jbOr8p9pP+iyleF+6v8S+37qbxTeKDKf4UPUHmX8CkqV5b+ySofEh6vcjXh
01QuEj5UZSZ8iMp7hIeprAkfrvJe4YNUloQHc96Ej1e5nPBxKh8QHqNyBeHR
nDfhY1QuLXy0yvuFz1S5pvAE1sX9pnIL4atUPiU8TeW6wmerfFR4hsqWwudy
3oV7q/xV69lL5e3cvyo3U/vlKp8UnqxyHeGzVD7C74HKjYUvUvkEvxcqNxS+
QOXjXO8qOwgv4Lrjfle5qfAlXFfCI1Q2hIdznXN/q9xG+HqVz/B7oHJ74ZtV
Psv9rLKX8JMqX+b3RuUuwverfIHfA5W7CS/ivPP7pLKL8N0qn+d+VrmH8GMq
X+J+VzlQ+F2Vb/D7oLK38LNc19zvKvcVflXla9zPKgcIv8l1ze+NysHCH6p8
k/tZ5VDhL1W+zf2n62y0cEnlh9zfkg8T/lblO1z/KocL/8h1zu+dyp2Eb+c+
435Xeazwnyrf5/5WeZTwryrf4/5XebzwP9w3/F5onLHCVZUfcX+rHCdcV/kx
v0/SGyL8KfehcF+Vf+h876PyDtZX1jxz/TYKH5Pq/lC/8dJfWuUnnF+1XSNf
cYHKXaS7tuTT1L6Wyi+431SeK9xC5ZfcnyoXCHdS+SP3p8qFwl1V/sTvg8pZ
wq1Vfs3vg8rZwm1UfsPvi8rzhVuq/Ir7X+UVwh1Vfs/vjcr5wtur/IHfD5WX
CW+p8jt+31XeKLybyp+531Q+wf2m8i+ud5W3C++l8leOh8q7hPdR+Rv3v8qV
tN4XKbXeQ1U+yv2rcjG/FypvEe6h8hd+D1Q+IHyAyj/4vVB5r/B+Kn/nelf5
FNe7yr+531Uu4n5X+Se/dyovEd5M5bfc3yqf5f5W+Q+/Bypf4PdA5b/cz5xn
7meVmeY3XuWb/N6oLAmfqfIdfg9UloVPUfkav08qU+HJKt/nflZZEZ7HeeJ+
V1kXnsHvJL8PKqvCszlP3O8qa8KXcpy5n1XmwvM5DvzeqGwI38Bx4n5WuZTw
45Q6no+pXF74FtbF/a1yaeE7mJfab1e5jPAYlS/ze6cyEX5AZZPa71e5nPA9
zFv4bpXLCj/MvIUXqWwm/BRy4SdVriD8HOMKP6tyReFrOS/8PqkshFdXOUV4
NZWf4/9UThJeSeVn/B6oXFX9X1W5svT76z44SXg/lR2EP5K8hfCHKlcT/kzl
+sKfqlxduEl62wlXVa4r3Mj9v1dd5XrC30lvI+FvVa4p/JPKNsI/qlxL+CuV
rYS/VLmG8L8qtxL+R2Vz4bLsdBQuqWwhvFjy9sJ/qlxHeBnJOwsvrXJ94U1V
9hduo3IT4ZVV7iq8ksoNOB4qdxdeTWUr4bcYV/hNlasIbyR5P+HWKjcWXl5l
V+FmKlsKr6tyL+EWKlvze6Gyp/BaKjcU3lzlAcKbqWwjvIHKPsItVW4k/JvG
aSf8q8q1hbeSfJDwlio3Fd5G5cHCHVW2Fe6t8jjhvVRuKbyLyiOFu6rcXLi7
ypHCu6lsL9xZ5eHCnVRuJtxT5THCPVRuwf2u8gzhQ1RuI9xX5YnC+6jcSnig
ylOED1C5tfBBKk8THsx5EB6mcqLw4Sq3FT5G5dnCR6vcnvtP5Vzhs1R2ET5e
5XTh41TuwPWv8jzh0VwnwjuoPFR4e5XtuN9VXiR8mspO3N8qZwqfrHIn7n+V
c4QncN6Fp6mcJ3y2yp25v1VeJXwu5014hMrJwsO5ToXf47gLv8t1LzyT33n8
O/chvwfSu07tF6nsVvb/fZ/Ln+wY//+dp//rhgqfH88TP+gh4/Lc+BPd0nNV
HqX2y+L//71k48rc+Eu1z1I5TO0XxvNHd36jcuOPEj+XHF63Hu091X4Faxb+
LPFzxci6x8H+xSqH193O8wvPJccIXxHPJ/3V/2r1Xyj8k/r3Eb5K+ErhbxI/
txwn/avj+eV5niOEX4jnietUjq67P//fY/fYuvtjvx+/kfhQ4e8T2zm+bow9
nmtOEr4xnm94TjixbrvY47nryLrXwfzRGyt8U+gfIPvX5Ma/yv7B/MYJ3yX8
l/Ag4QXCtwn/kfi56jT1vzOer25VOa7udp6/kI+vuz/tD3IchR+K5zue+84Q
vjee/w6V/etk/z7hfxM/B06sux/6h6t9Ye7+Jf1/8QjrUvuj8fz2NKXwM/G8
dqT0r8/dnqV+Djtb7U/E8xjPiafUPW/mOxKfI/3/CddS602rG6PPc+D0usfB
/uqZjmHu8ZZJ/Vx4Xj3Oa8nPlZPrnifz47noceEV4vmIdU+oe72sf5TGvyn3
9bCU7E0Rvlf4b+H1hE8Qvln4FeFlUz9HXqT+r8fz5Mlqv03tHwivlPo5dp7a
P47n2dH4TLW/Idws9XPlHLW/Hc+X2Jlddzv2eI6dK/x+PM9SXla3ffBJsner
7L0jvELqca5Q+ycxHs+h1wl/H8+jPNdeJfx5PN9Szhf+IjDPwTOFX47n4dNl
/07Z/0Z4DdkfJ3x7bvurpH7uvUb6X8fz72n8D5Db3mqpx12o9h9ifPQW1G0P
fdZ9Sd3zZ/0T1P+u3PprpX6uvEHtP8fzJc/Ntwn/Fc/PPCffLPx7PC9T3iL8
R+CJsne37P0ivI7sncX/HLnbWwifLXyfcMpzVGq7t9d9vrHPc/mdwkmTn88p
76pbH8xz+T3ClSY/n3fQ9Xi/7GU8V8ne+bL/oPBSwpukfg9wv/RrTX4fQPmA
cB6Ydd5Y93xZL8/1DwkXTX6+P5f/oXLrt04tX1S3fdp5Dn5EeNl4HqZ8VHi5
wMzz3rrnx3w5z7Pqvp4537w3OrTu3/0l74803kO5+2+q8S5V/Qb5i0v4P6Ps
9wpPSn+VJr9foHxKeNXAPLe/JLxePL9Tviy8fmDeYzwjvEaT32dQPiu8ZuDZ
/E+Y297mGn8dnhPV3rzJ7y8uVfujufFWqd9rPF+3Hu2Xqf2x3ONtrfa2PLep
vV2T31+04rlQeMMmv/+Yx/+4ufE2qZ+jf1P73vE8zXuPt+u2Q3/em7xatx36
b8xzpPAmTX5fwnuTN+qWg+fL/v9yj7+D7F8p/ERu/e2E5wg/knv9W6R+b/Ke
+rdv8vsTyveFtwi8rcpPhbdr8vuUDio/Et66ye9fruV/6Ny4c+r3Mh/WrUc7
72E+qdsO/XkP85Vwlya/j+mj6/np3PZ3Tf1/wRdq3yn+P7hB9p/JjXdJ3e9r
te8c/XmP861wtya/z+G9zM/CvZr8fgb5d8K7Rvut/I+fG+8ue9cIP5l7vTsJ
767yR+nv0eT3fbz3+6FuOfh26T+fu71H6nF+UfueMd6dan8hN+6l9puFn809
392ELxReJLyicLvUfuKJujH+guvgd+E+cT2MU7mq/p86tcnvi/qpXKz2feN5
/F7Zeyk33lv2DlZZkf6QJr8fWqT2V3Pj/dQ+QOU/6r9/k99P3a/2l3PjfVK/
t/q7bj3aH1T7K/xPLdwv9XuncsPjYP9AlWnD7bzf4r1VVXhok99fPaH+b6j/
UcIH4s+FXxM+THhA6vdaufSPaPL7rbvV/mLu9e+l9pEql2q4P+9/sNvUcH/s
Pyb91/kfXviA1HbqDWPs8d5rGeFjm/z+i/dIRcN2scd7uaThdTB/9JYVHhX6
R+v6fDM3PkT2n9N4bwuPFT5U+GmeefifX/jg1O/dVlT/k5r8/u0Elcs33M77
OeQrNdyf9tNVriF8RpPf//FecJWGzzvn+wXZfyf3+T8s9XvC1Rvuh/5Lan83
d/9hap+ocm21T2ry+71zVK4vPL3J7/Ne4X/23O1Hpn5P11ztU5r8vo73iM0a
njfzfU3670t/qvCI1HotGsbo855wvYbHwf4b0v8g93hHpX5vuIHaz2vy+0Pe
O67V8DyZH++V/qz7uuZ6nsv/pvr9vyx+/+nXquH3TfTHL9xYWI/2d3im5v99
tY9K/Z5xE+lf3OT3jR+p/VP+Pxcek/o955Zqv7rJ7zvfU/vHPA8IH5/6vWNb
tc9t8vtH7LRpuB17vOfcXPiKJr/vpGzfsH3wB7L3Cc8nwiemHmcrtV8T4/Ge
cgfhW5v8vpL3nlsLX9fk95+UHYUXBv5L9n7k/0Hh82TvC+EvOEbCpwp/wjuE
3PbHpn4vuq3639jk96PTdP1+ntve+NTj7qj222J89LZr2B76rLtdw/Nn/V/L
/pe59U9P/d6xk9rvbPL7R96rdhN+sMnvV3mPurPwvU1+n0rZVfi+wN/yjoLn
DeEJ/P8m/HXu9onCPwt/y//zwlNS291V/R8K+7y37S78SJPf31Lu3rA+mPe2
PYSfaPL72195Z8L/+8Jny96fwj/w/7fwuanfE+8p/aeb/L6Yci/hZwKzzs4N
z5f18t53b+Hnm/z+93fZ+z63/jmp5X0atk873wX6Cr/c5O8DlP0aPp9g5tmz
4fkx31X03DxZeNV4n/Sj7H+Te/1npX7PvJ/aX2/y+2beG48RrsT7Y9477y/8
dpPfP1MeIPxOYN7rHiL8eZPf71IeKvxFYN5zHyj8fpPfd1MOEv4gMB8Bf85t
bxbPAyoPVvsnTX6/fZ2ut19z47mp33sf1LAe7VX1/y33eJdwvlWOVPsvTX6/
/bXKw4W/afL78Vz6v+fGl6Ved3+1vxHr5734iIbt0J/36oc1bIf+3/M7J/xD
k9+n8179iIbl4KVk/8/c418p+w3hP3LrzxMuCf+Se/0XpX6vfrT6/97k9+uU
xwj/ETjReThROK35fftfkh8n/HeT388vJ3t/5cbXpH5vP6phPdp5T39Cw3bo
z3v6k4VrNb+vX179/85t/9rU5/0ktWdx/ldU+z+58cLU/U5Rex79ec9/qnBR
8/t+vnOdKbxCzd+7kJ8mvFS0r8pH37rxTbzvF16ce73zhZeV/AzpL1fz+3++
A5zesBy8uvTTuttvST3ORLWvGOOtqfZS3fg2ta8s/G/u+d4g/A/vOHOf7wuE
Z6ncqOHfe74f8d71rIbvG+6Xweq/Lu+DeF8u/TVUnq32NeN97f90fVbqxvep
vZXKmWrfsObvB63Uv6lu/CDPAyqnq715Lb5fqD2rG9+T+rvGOQ3r0d5S7VWe
P4TvT/1d4oKGx8H+eirPa7id7x9817hQeOOav2+0Uf86/38LP6b+rYVr/L8v
vCj1d4+Lpd+25u8f/ZiH8L41f49or3Juw/35PoDdixruj/2NZS/n+UT4kdR2
5jSMscd3kcuFO9T8fYTvDJc2bBd7fLeZ0fA6mD9684S3Dv22st+oGz8h++2F
l+L/eeGned4QLnieEH4y9XeZq9V/x5q/z2yr8qqG2/l+g/yahvvT3o3rQnjX
mr8P8d3oWuEuNX8/2lL2l+b5QPjZ1N+Rrm+4H/od1L5M3f2f5/99lTerfY+a
v//srfJO4T41f+/pKP1l625/MfV3nFvV3qvm7zl8Z7qy4Xkz322lvxzPA8Iv
p9a7rWGMPt+R7mh4HOx/quuxWd3jvZn6u9LdDZ9XziffpW5qeJ7Mj+8OUxu+
rrme19Z45br9xR08PwkvX/f18LpwX+G1hM/g/Ah3Fl6B//+F30r9HepB/v+t
+XvUrmpfWe2H8fuT+jvY//j/vObvYTurfUW1DxJ+J/V3qYd5Hqj5+xR2Hmq4
HXt8B3uM54Gav4dRPt6wffAusreS7A0Rfi/1OE/y/3uMx3esF/l/tObvWXwX
e5r/32v+Pkb5DM8HgfmOdp/wgJq/p/WU/dVkfxS/D7LfXXiVuu1/lPq72XM8
H9T8/WwPta9at71PUo/7Ev+/x/joPd+wPfRZ9yMNz5/176n+q9et/0Xq71Kv
8DxQ8/cpvru9xf/vNX9/4zvb6/y/X/P3Nso3hE8N3Fv21pC9sfx+yF4f4TXr
bv9GeF/htYUncX+ktvt2w+cb+3zXe5f/t2v+vkf5XsP6YL7rfcD//zV/3yvz
Hkv2pnL9yd6Bst9C+HyOZ+rviB/z/37N3xMpP+H5IjDrfLXh+bJevgt+xv//
NX8f3F/2mtet/0tq+ecN26ed7wZfCs+q+fsB5VcN/56DmeeHDc+P+XKe72/4
euZ8wyto3bCfwD/wHfIb4Ytr/h55n8bvyf3PM2bJ3yW/5//9mr9PUv7A/7+B
+e73B/+f1/z9j/JP/j8PzHfQn4SvqPl7KOXPwlcGPkTjrV+3vX94HuC4qv2a
mr9/Hq72DerGpZK/i/7asB7tR6i9Vd3jVfh/lPOm55+7av7+eSPXPf+/1/z9
dLj0N6wbV0v+Drem9N+u+Xsc301Lhe3Qn++ufzVsh/63ct7UflvN31v57vpv
w3Lw0bK/Ud3j17n/hFvXrV/j/hZuWff6k5K/u2ayd2/N318pq8L3BX6E4yj8
aM3fYx/kuAs/VPP32+Nkb5O68dIlf9etFdajne+4jcJ26M933OWEn675e+46
up7b1G1/Bf7fZt1q/1/N35dHy/6mdeNmJfdrpvZnoj/fgVcQfr7m78F8111N
+PWav+8ukQu/EO2nyF67uvHK/F4Ib1z3egv+/+c8SP+VmvkC8AZWLiwHnyr9
zepuX7XkcVZX+xsx3ni1b143Xl3tY4Xb1j3fFbl+hLvw/w3fD0v+jr504XWz
Xq6DtYTfieuhxndE4Tz39+b3JW8u/EHN3/POlL0t6sZr8/+5ytZq/6bm78tT
1d6hbry+2j9WuZ7aP6n5+/YktW9ZN25e8nfvdQvr0T5Z7VvxfQB5yd+tNyw8
DvY/V7lB4Xa+j/Pde2Ph72v+/j1D/bfhfbzwRjzvCm/N9wD6lfxdfFPp/1zz
9/Ez1N6+7vWvyf/vKjcv3J/vx9jdpHB/7E+XfkfelzOvku20LYyxx3fzLYT/
qvn7Od+hNytsF3t8129ZeB3MH70thf8O/e10fW5bN27H75XG25735zofmwnP
FN6O7wHCm5b83X4buJi5v98nvHst3M73feTbFu5Pe8F3X+GlcvMH4BVsX/i8
c74vlv0d6j7/7UvmGexUuB/6l6h9x7r7b6n2ZXmXqfblcvMDVlHZXXjV3HyA
udLfqe72DiV/599F7Svk/t4PD6FD4Xkz38ul34n//4U7lqzXrTBGH57BboXH
wf4V0u9c93jblsw72EPta+TmH8Bb6FJ4nsyP79LrFL6uuZ4PVv/11H8Ov3up
+/UofL/QHz/xbcPt+Iurpb8z/++rfceSeQq9pb9ebr7C9Wrvxv/nwl1L5kkM
UHvb3HyJBWrvyvMA56Fk3sI+am+Vm7+Anb0Lt2MPnsS+whvn5ktQ7lfYPvg6
2duF5xPWWfI4+6u9XYwHz2GI8La5+Q7wJgYKt8/Nn6A8UHiLwI/L3t78P4ie
7N0q3J3/34V3F75ReNe67XcrmVcxWP075OZX7Kfrd7e67fUoedxD1L5djI/e
QYXtoc+6+xaeP+u/Q/Z3r1u/Z8m8haFq3zE3fwFexnDhbrn5GfAwhgl3yc3H
oDxCeOfAd8neHjxvCO8pe/cI96i7vbfwA8K9+H+eeZRsd0Th/wewD+/jKOHd
c/M/KI8urA+G93GscK/c/I+HZG9P/t/nvMneo8K9+f+b81Iyz+R46e+dm29C
eYJwn8Cs87DC82W98EZGC/fLzR95WPb2qlu/f8nyMYXt0w6vaKzwgNz8IsqT
C59PMPMcVXh+zHcdjkvh6xl+DTybXoXlYHgq44QPzM1XgXdymfCU3PwTeCvj
hQ/OzV+hPF14SGB4IVOER+bmh1BOFT4qMDyZCcJDc/NlKM8UPizwU1rvPnXb
O0jrPULlWWo/Mjc/5nhdb/3qxsNK5s1MKqxH+wvqv2/d4x2m9pNUXqD2sbn5
MceqPEd4VG5+zcvS369ufETJ6z5V7YNi/fBqzi9sh/7wcqYVtkP/E1TOED4x
Nx8HXs65heXg12V/QN3jj5T9V4X7160Psf4Z4b51r39IybycWeo/Ljc/h/JC
4VMDT1R5qfCk3Hyd01VeLHxGbn7P27J3QN342JJ5P7ML69EOz+eSwnboD8/n
CuFzcvN93lX/gXXbP67k83652qfG+X9f7QfWjU8oud+Vap8e/eEJzRc+Lzdf
CN7PQuGLc/N/kF8tfH60fyx7g+vGJ/H/qvD+da/3aOFZKq+V/oW5+aTwShcU
loM/lf5BdbefXPI416t9Toz3udoPrhuP4/8P4UF1z3c074OE+9R9vgeV/B7h
uobfH/A+4Uu1D6n7e8RpPB9X/fvB78g9sR8CvtJuGuvDxPUZ8W0bDhP7F+Ar
7a32rxPXkcE1gsPE/gn4Sj1YS+I6MrhKcJiQI4PXJNES7tLs4PbAUcIuNuFF
8aqONnT2FP5CuG/Z/CR4Slli7tK1wRWCg0QbezDgHsFB2q9s/hE8JMEl+yHg
q/ws458n7ouN/dX+S+K+2GCc7xL3ZQ8HXCU4S9SRYfdHtR9YNv8IHhKPCNjB
HrwqPbItmTfzh6fFvzfs50Cffr8nriODywSHCe7SHcE9goMEd+mW4PrAUTqk
bB14TjptS9rQOUh4ceK+tKP3T+L9KfCPjuB46v+Dw8rmK8Fb4rUs9XuCywOn
Bz304S3xbw31B4LLBIeJ/Sfwk0awvtT7TeATfa/j+XHitoeDOwSH6eiy+Unw
lJZOPE/mCy8rT9z2eHCV4CxRR0a/emq72Ie3tGzi+lPBZYLDxHnkfMJDWi7x
vJgDPKqlhNfN/H2a79TrJl4ra+Y4pKn7PhfcJzhMcJcWB5cFTgvcpZeC6wHn
48+K+UjwkpZPzF16L7hFcIzKmfk+8H5WSqz7WnCT4Cj9XTH/CB7SConb0MHu
t8Jc1NiEF7ViYttg5D8n7vtWcH/gALH/h/EY9zcedTPzgeAFrSpczcwvgme0
cuL9OmDkfwr/VvEa4Wk1S8xd+iq4Rt+E7Y+CGwWHKc+sA89plcS2PgsuFBwm
9vMwPvNIUttCn35/J547a+A4/JBY97vgOsFhWiYz/wge0mpqXzHzOYFXtoZw
s8x8JHhJqyfe/wNGXk3d96fgAv0Sbb8FtwkOE9wl9hDBRYKTtDjOOePk6r9K
Zh14Tmsm1gUjL9S+WvCV4C2tnbjOniO4QXCE4C6xxwhuERyjNTPzj+AhrZN4
fxMY+XKp58qcWXdZeO3MNuBBNU+sSx+4TnCYGjEGestLv3lmvhG8oxaJ9/eA
ka+Yem7MkXkvnfpa5nxz3r9KvPeBPTF8iz4/+mID7hMcJtrQGaL++6r/+pn5
RfCM1ku8XwqMfFW1b5SZPwSPaIPE+5HAyNdW+waZ+TrwdtZPvD8LjHz11Law
CRcKDhP7r+Arbaj2NVPXkcFVgsOEHBm8ppaJx2JMuFJwmNh/tYQ/JL31U+/f
gq+0iXDz1HVkcJHgMHXJzNeAt9E+cT/6w0NqnbgffeA9tUq83ws+0qaSr5u6
BMNT2jBxX+YA96ld6NIHbtMmsXaOAdwtOEybZ+bvwOPZKPF+MDDyDVLvB4Nf
tJXwRqn3j8FX2kJ4w9R1ZHCV4DAhRwavaePE/egPT6mN8LaZ+TzwetombmMM
uE1wmNjfBl+pI/qp68jgMsFhYj8a/bHTlu8fmflI8JLayV6nzPwheESbJ96v
Rjt6m6WuI4PLtOt/a20yVwsOE/sV4SftKP32qUswvKXNEtfRgcsEh4n9bIzH
uFumriODy7RnzJU5w7WCw4RvYA8gXCU4S8uHDL+xcur9YVwPXBcdUu93g7/S
X7hn6v1E8JW6CndMXUcG9wMOE/vb4CvtrvYdU9eRwTWCw8T+OvhK3dS+beo6
MrhKcJiQI4PXtGVi7hJ78OD2wFHCLjbhRXVI3IbObpJvz/edzPwkeEpbJ+Yu
sQcNrhAcJNrYowf3CA5Sr8z8I3hIHROvnWMAdwsOE32xsZf0uqbuiw3G6ZS6
L3v84CrBWaKODLtd1L538I/gIW2X2A724FVtk3jezB+e1laJ9/uhT79uqevI
4DLBYYK7xB5BuEdwkOAusYcQrg8cpX0z68Bz2iFxGzp9Je+eui/t6O2Rev8i
/KP9hfdMfZ453/CWdkxc5xqAywSHCT304S3tlLiODbhMcJjYnwg/aaD0eqfe
jwif6CDhvqnb0IE7BIdpUGZ+EjylzonnyXzhZW2fuI09iXCV4CxRR0a/Pqnt
Yh/eUpfEdcaEywSHid9xfs/Z97Zz4nkxB3hUnRJfx1zD8PC2SHzfc8/DW9xU
+NDM/CR4Sl0Tf5vsHM8WPGPQNjO+VfBN+7DMfCR4Sbsk5i6xxxJuERyjEZn5
PvB+dkusyx5LuElwlIZl5h/BQ+qWuA0d7O6v9R6Z2Sa8qF0T2wYjH5S6L3sw
4f7AAWJ/KOMx7kFqPy4zHwheUA/1Pyr4RfCMdk+8nxOMfEhq7hJ7ZOG6wHmB
u8QeTrhGN4VtxoAbBYfp2Mw68Jz2SGwLm3Ch4DCx35PxmcfhqW2hT7+hqefO
GjgOA1Pr0geuExymEzLzj+Ah9ZT9kzLza+DZ7Ck8OjMfCV5Sr8T7Q8HIh6fu
yx5MuEB3RRs6cJvgMMFdYo8pXCQ4Sew/xT7jjFT/kzPrwHPaK7EuGPnRah+X
ma8Eb6l34jp7UuEGwRGCu8QeVLhFcIxOy8w/goe0d+L9r2Dkx6WeK3Nm3Ufw
fTCzDXhQfRLr0geuExym52IM9E6Q/oTM5xAe2j6JzyUY+ejUc2OOzPtY4YmZ
+RrwNvomXjvHAO4WHCb2y9KO3kmcr8x8FXgrB0l/Sma+DbybfYXPysw34uG2
X+L9tWDkJ6v/9Mx8InhFAxK3oQPXCY4SXCT24MI9gpPEfl7sM844vmdm1oG3
1D+xLhj5aal16QP3CQ4Q+2MZj3HPUPvMzPwheEQDeR+Qma8Eb2n/xPt9wcjP
TF1HBjfpm7CFTbhXcKLOz8w/god0QOI6e4LhKsFJoo4MvUmp9wczPvOYnLqO
DC4UnKYLM/N14O0cmLjOHmG4SnB4zq6abzld5fuJ9wvDL5qjftNT7y+GrzRb
eFrqOjK4SnCY2E8MX+cytZ+fuh/94SkNTiynHV7PwYnbGANuExwm9j9z/rkO
ZqSuI4PLlIVtxoC7BCdoXmY+ErykIYn368Mfmi/57NRt7GmGuwRn6crM/CN4
SIckXgdrgIc1KLEufbA7M/V+ZvTpd2HqOjK4TMvFWIwJdwnO0jWZ+RfwMIYm
ngc68JoOTXytc83DVYPDxG89v/n4hf6p94/SHztzhK/NzE+Cp3R44jp7TuF6
wFm6PjP/CB7SsMRcJfZAwy2Cs3RrZr4QvKHhiXXZgw03Cc7SjZn5SfCUjkjc
hg52L9f4N2e2CQ/qyMS2wcivSt2XPdxwf+AwsT+b8Rj3ap4nM/N/4AEdpf63
Z+YbwTsakXj/Nhj5gtRcFfZUw3WBswL3iT3OcI22CNuMAXcJDtOdmXXgSY1M
bAubcJfgMLG/m/GZx/WpbaFPv+tSz501cByuSK1LH7hLcJbuzcxPgqd0tOw/
mNlnwys6lufXzHwmeE3HJN5fDkZ+c+q+7EGHC7RdtKEDdwkOE9wj9rjDRYKD
xP8C2GecW9V/UWYdeEqjEuuCkd+u9kcy85HgJR2XuM4edrhBcJTgErFnHW4R
nKLHMvOR4CUdn3g/Ohj53annypxZ943CT2S2AS/pxMS69IG7BIepd4yB3r08
P2U+h/CORic+l2DkD6SeG3Nk3nemvpa5prnOL0197XMPwN2Dw/RMZn4SPKUx
/B5n5rfAc5kg/Fxm/hE8pJMS76cHI39Y9l7JzO+B53NK4v38YOT/4/kmM98I
3tHYxPvrwcgfTW0Lm3CX4DCxnx8+1Etqfzx1HRncJThMyJHBmzo58ViMCXcJ
jhH78eEDvSW951Lv74df9JrwU6nryOAuwTkiHgDr5zg8lLof/eEVnZa4H33g
KY1LvP8fftMb/N+ZugTDezo1cV/mAHfpxNClD9ylUbF2jgHcJThM72TmG8E7
Gp94fz0Y+Qup4wfAJ/tA+JXU8QLgI73H/8Gp68jgLsFRQo4M3tLpifvRH17a
GcKfZOYbwTuamLiNMeAuwWEiPgHnn+vgtdR1ZHCX4DARn4D+2HlD7Z9n5hfB
M5oke19n5oPCC52cOB4C7ei9nbqODO7S9Fgra+blMxwm4hvAf/pS+u+mLsHw
os5KXEcH7hIcJvY/Mx7jvp+6jgzu0oUxV+YMd2lqnGvOOdwlOEx8R+AbAvug
cWffZv5ezXfrKYnrs+PbNN+oia8Av+h76X2cuo4M7hKcI+IXwB/6Ve1fpq4j
g7sEp4h4DvB1flT7p6nryOAuweFBjgxez9mJuUrEcICbBGcJu9iEp3RO4jZ0
fpb8c/7fycxHgpc0PTF3iBgOcI/gENFGDAi4R3CW/szMJ4JXdG7ieALwNZbh
XXHJfbHxF//3pu6LDcb5OnVfYkbAVYKTRB0Zdr/l/4vMfBx4OecltoM9eE0z
Es+b+cPLmpY4fgT69PsxdR0Z3CU4PXCLiCkB9wiOEVwlYlDATYKzVAr+ETyk
mYnb0OHjys+p+9KO3q+p41HA52kSXiycVc1Pgqc0K3GdGBlweeAsoYc+PKAL
E9exAXcJThDxLOAj5bxLTx2fAv7QUsJpyW3owF2Cs9Somn8ED2l24nkyX3hY
5yduWxLzpGyOEnVk9Ps3tV3sw1O6OHGdMeEuwVniPHI+4eHMSTwv5gBv6iLs
V823gHdxQ+K1smaOwx+p+3JNwF2CwwN3hZgZcFngsMBVIiYBXA84S8tXzT+C
h3RpYq4SMTLgFsFZWrVqvhC8ocsT6xKjA24SnKUVq+YnwVOam7gNHew26fit
XLVNeFCXJbYNRt4ouS8xPuD+wGEifgfjMe5Sal87+D/wgK7i97pqvhG8o3mJ
43uAkS/D/6BVrxFe1iWJuU/EwIBr9EfYZgy4S0s4TFXrwJO6IrEtbMJdgsNE
/A/GZx7Ll2wLffotV/LcWQPHIS9Zlz5wl+AstaianwRPab7st6z6nMAruobf
q6r5TPCark4cfwSMfJWS+xKjBC5QGm3owF2CwwT3iBgocJHgIHGusc84q6l/
q6p14CktSCJeSt3yNdTeumo+ErykaxPXiXECNwiOElwiYprALYJTtHHVfCR4
SdcljlcCRr5OyXNlzqx7JeE2VduAl7QwsS594C7BYVo5xkCvhfTbVs3Pg6d3
feL4KWDk65U8N+bIvNcq+VrmfHPes5J/5/mNh1c6NXFfbMBdgsPE/mm+Vx8r
/aHSb181/wge0o2J462AkbdSe8eq+T3wfG5JHO8FjLyN2resmm8E7+imxPFX
wMhbl2wLm3CX4DAR7wU+VAe1b1xyHRncJThMyJHBm7o58ViMCXcJjhHxWuAD
7cR1XnL8F/hF2/I7V3IdGdwlOEe9q/5+z3f8BxP3oz+8ojsS96MPPKXbEseH
gd+0A79TJZdgeE+3J+7LHOAubRe69IG7tHWsnWMAdwkOU+eq+Ubwju5MHH8F
jHyrkuPLwDfehfuw5HgyS/hI/O6UXEcGdwmOEnJk8JbuStyP/vCW7xbuXjXf
CN7RvUnYzs1dgsNE/Br4CfAUtiu5jgzuEhwm4tfQHzs78MxQNb8IntF9srdn
1XwweGEPJI6XQzt6O5VcRwZ3qU+slTXDXYLDRPwb+E89uS9KLsHwou5PXEcH
7hIcJuIjMR7j7lxyHRncpf1jrswZ7hIcJnwDMYLgKsFhWjtk+I2WJcfb4Xrg
util5Pg58FUOFz6g5Pg78Iv6cN2XXEcGdwnOEfFt4A8NUHuvkuvI4C7BKSLe
D3ydvlw3JdeRwV2Cw4McGbyeRYm5SsT4gZsEZwm72ISn9GjiNnT25TqSvQOq
5iPBS3osMXeIGD9wj+AQ0UaMILhHcJYOrJpPBK/o8cRr5xjAXYLTQl9sDJbe
PiX3xQbj7FVyX2IKwVWCk0QdGXb3VvvBVfNx4OX8L7Ed7MFreiLxvJk/vKxH
EscXQp9+/UquI4O7BKcHbhExh+AewTGCq0SMIrhJcJaGVq0DD+mpxG3oHMJx
Kbkv7egNKDleEXyeI4QPLPk8c77hKT2duM41AHcJzhJ66MMDeiZxHRtwl+AE
Ee8IPtJw6Q0uOX4R/KGjhQ8puQ0duEtwlkZWzT+Ch/Rc4nkyX3hYTyZuIyYe
XCU4StSR0e/gku1iH57S84nrjAl3Cc4Sv+P8nsNDeiGJedXNm3o28XXMNQxv
7qHEzwY8I/Dc8GHqvvgE9krDYTqu7Pg2q2b+vk4sV7hFHyWOzfFdxfE5qCMj
titcnM8Sx1L6qeJ4StSRobt72VwWYnrAPyGeE3VktKGDXfgmP1ZsE47Tp4lt
g5GruqTvHmXHfoI/1avs8RgXvsWvFcc3Is7Rl4n5LMR/Ir7T54nHAf8c4xFL
Fm4RsZqIzURsWrhS9MUGthmDvtj4pWIdeFRfJLaFTY4FfKzeZY/PPOCzYAt9
+ulvydxZA8cB/g269IE7QEwmeATEl6KO7I+K408Rh4r4Ub9XHO8Wjhh8MXhb
YOS8+hwex4JjD/+LNnToi42jYm6sD37ZPmXbZxz4M/Bm0CHe1bdxPMF/xnoW
VxyPF14XfC7qcMGIRUUsrGPDFuPBF/ur4vhYtKGzb9kYOXycn2K9v8X5g8eC
DeJewWdBlz7Ukf0R7X/HfP+p+BzCI4M/xrkEI29KPDfmyLyr/P+XOd4S/BD4
MKydY8BaWfO/Fcfn4lrgmqhnjh8MDwz+FweZeFvE3YI/xDrAyFkPvCHidxFv
C/4Q9sDI4S+lmeP3wpODHwfPDYyc1wrHx7HhWMGPG1h2/K5SZr4RdWTYZgzk
yIjzRbwuxmJM5r4w2onvVY3+8MSIf1zJzBejjoxYXsQOG1D2+rHBfKvRnzhh
8JvoRx84dvDtBpcdbyzLzF+iBGMLm2Nj7swNPh5t9MEWNlk7x4B21tCUOX4z
PDz4d/DywMjrYZ/4YnmMN6Ts+F21zPws6sjgRhHTCzky4nwRvyyP/rT9HdcD
8cuIY0a8sXGxFuYOPxBeH+ef6wB+H3Vk6NJnaNn9G3E9wdMi3hlxz3hBs3Tm
+GbEOSNeWS3ai5jv+Jg7c4OfyFpZM5g5wxskPvZSmfmDlGB4d/DtqKODbcYY
VvZ4jAufizoyuFDEGmOuzJm5MUfONeeca5lrmt96fvO/rZhPukzcL/TFBnLa
4bB+mJgXSLzuZTPzA6kjI9YasdvgKRJfe/nMfEXqyIitRmy04WXHd1suMx+N
OjK4Z8R8Q44MW9icFGtjvfAnsYtNOJJNcbzRaRbrXyFz/DXGYkxicR8j+43U
seBoO6psrhox2uCtEU+OOjJ4iRfEbzS/f/TFxkq8h0/cFxuMA79tSqyFuT4a
80e2Yqxv5czx5xibOWAHe/A04Wc2i/mzdo7BsWXr02+txHVkcOeITUdscria
xIojNt20mAtrhf+Jf0XnqfC3tKGzSsx3VLSjhz88vuz4efDb4OPxfwD/D2Cb
MajzPwLcN2LgoYc+dWTUsUEsPPik8CBnhA9tFvaId7hm/H9BGzrEsiN23hqZ
4+dRR7ZKzJe1smbaTiyb60eMPerI6Nc8sV3s04YOdcZk7i+Ef+Z8vhT+tVfM
77n4/4DrmGsYji783glxb3O/w+elL9cEsfOIVUcsvBaZY+3BVyV23ZiyuYTE
NoNXSHwz6siI1Te2bC4hsfbgFRJvjzqyWbEW1v5K+Gfixb8W/niNsLd2rHed
zDaJA0j8PWyDka+buO8SbmxqnbViPMZtkZiXRfw74uDBz8LXEm/+rfC/JwdG
jn+jP2tk7RwDYgeeUnZfbGAbHdrg53Js0CHOIMcIW9ikjmydGH/dmC+25sQx
XS/x3C8MH42/vyTWxnreCX9FvP33wh/Dm+ScEKcQ/uR6meMXEseQeIGnlo2R
r5+4L9xi2v6LdYgOfbFBLgC4vsQS/DDWg/31Y374YnQ+Cn9/WmDk+NuWmeMv
0hcb1MeXzc0kViKx/uH+EtuQ2IjwNomfSNvqMX/wBjHfcbFe1r1S+F9sfBb+
+YpYG+uBX3x6tKOHv2yVOf4iYzHmGWVj5BsknhtzZN4tE1/LM+Occr2gSx+4
o8RuhC9K/EbqyFoG3jD6t84cn5E4jcRTxDeTr+Cr8L8TAiPHH+KbyF/wXfhP
2tChLzYWxFyZO3zqM8u2zzitEvNi0SHOI/zYVoE3ivWhSx/a0JkY4zEu/htf
ST6Bn8LfbZw5fiVxLInfOKlsjHzDxHVkcF+JNYktbKJLH/itxJ+kDZ2FMVfW
Az+7dbRvEvM/K8ZnHvgv6siIFUksyjaZ41FSRza5bIy8deI6MrizP4d/JZ/D
b+FPpgRGjj9iHcR73DTWc2OsjfnD90aXPsQe/S/W5dSyub/EuoTPS7xL6sja
ZtZBlz7ogpHDv900xmNuzLFN9G8X88efkp9icfjfaWXH29wsM9/27GhHD/9F
HRmxM4nNiR761JFRxwZcX2Jr3hLHimMHfx0eMPE2adsg5g/ePOZ7e8ydtbB/
Ad9Lvox/wx9dXHY81x0y83GpI4NbS+y+9pnjdxLHs1Xq+RG/c4tYz/Sy29Hb
JHEdGdxjHmBmlB3fc8vMfMEtoj9t6CCnnTigxOO8K44Va4ePD0/+7vDZ+Fvq
yNClz3HRDq8d/40txoQLTazOC8qOF7p1Zj7zeWXH74T3DN+ZOjJijcLXxx+T
bwSOPf4XPXSwhc3zox09/Bd2sU9cUuKT0obO/49VyhzgShOrFP4k8Uqpt4n1
gzvG8XkgjhXrg9/P7xf5SeD5439nlR3PdJvMfGrqyOBaE8sUXbj/xBol9il6
6FBHBi+beKfotg1/S/4POP747wsDI1831of+tnH8FsWxZH3sZ5gZ82Oe/L7S
FxvEfiSW6kVlx1PdLjM/+9GYO3NhPwFt6MD9JtYqPHB0qCPbJvD2sV78K/lZ
4GXjs7GLDcZizNnRjh7+jToyYp8Su5jrnGucOrJz4n7gvuD/U+rIuNa55uGX
E79yyb2Qmvf/evxGcb+TG4a9C8QaJZbrE7FW5gJ/HF+MDnsY8MlP/Xevpd7P
MCfa0cM/0oZOp7gfd8ocHxbbjEH9krK57MSK7RT61JHRhg792oc/JN8Newrw
x89GG7bYX0AbeyWI/Uos2c6Z48lSRza3bIwc/u+lYQ+7+Efa0IELT+xZbDNG
lxi/S2DaOoS/Jn8Oezbwt5cFRo5/o46MWLPEot05czxa6sguLxsjh//+QsyN
ubL/A99Ivhv2fOAj4S+jQzxb+PidA3eN9cwLffrhv64oO97uLpn55tSRwcUn
9i669CG2LbF50UOHOjLmxhwZizGX8PXr7ruEzx9zZy3sR9k1c/xb4uBuF/6Z
fELsQcHfXhkYOf6NOjJ06XNV2f2xA99/5xivWxwf2tCB+0+MXfj0xOuljmyX
wLvFel+LtbMW9r/skzmePXHtd4v7jWt8x7ifuRe4J4jFS6xe9h8Qv5d4vexv
6J45fi9t6FxdNkbO/oM9MscDJi4w8WlpQ4e+2CBXEntfaGsTxwv7u8d68c/o
sKcG/31NYOT4vzfj2HC82F+zoOzxGJf9DD0zxwcmTjDxfdm3QHxj4hN3ivmD
e8R834m5sxb272ALm+jSB19Nvib2rOCPqbPXBtuMcW20o4f/vK7s8ZkH+x2o
I2NvBLGK2SdBvGLqyPYI3Cvm/36shePD/pg9M8cnJk7xzpJdXzZGvq30F5ad
Xwofjb+mjgzd/2Ib04e9HP/FQmZuzH/r8Ofkn9om/CH7NdBBlz49A+8V65ke
420V/v6G6I8d/F3vzPGTiaNM/OObyo7HzP4O9oPcWHY7eux3oI6MvR/EXEYP
ferIqGODWMvsV2IsxsR2x/h/gPxcO4T/vTkwcvwbdWRc61zzk+P3nj1a/L/H
vgXyOz1c9v4F6siIrUpsJvZnEN+ZOM/sJ2Hf05fho9vFemnvG+v5ItbG/HaK
+434z+w/YX/KrOjfOfz1vtFOnGj2p9DGGMR6Jvb0bWXHn+6XeX8KdWTo0gc5
MnTpgy3GZL07RzvxpPtHf/ZVffOfj05cR0ZsaGJT75c5PjV1ZBeF/i7hv+8o
ux29nRLbxT5xq9kvRRs61P+LZc0cmBv7v/hflPx03cP/3hkYOf6ROjJiURPL
ekDmeNbUkTEu8a73j/F/jLkwV/aHoXtX2Xt7iIG9f+hT3zP8KfnQeoZ/PSBz
/G3icBO/+Z6yMfLOifcJ/hQ+Gv9HHRm69GEsxmSe7K+hLzbYC9Qr5k+87YHR
Ti4y9t4Q+5pY6r9EX9bG/jV8Lzq9w7/eGxg5/u3AzPHX6YuNgWGfsRjzvrLb
0euSuI6MvUPE6mYfEfG6qfeJ9YMHxXrJ3cZeLWJfE+v6iMzxrqkjY5/aH+ET
8UfEQn6g7L1OxESmDR1icxMreXBmHerIyDXH3i9icxO7m760o7dz4ra/wkfj
v9jvRPxwbDPG4lgba2f/3RWh3z/88YGhf1Cs/+DM8cEZizHJbcdeOmKLE0ub
tofK3vtKDHH2TxFvnDqywYGHxPzQpQ92uyZuQ4e1sZ8P2/+Gj8afXRV4YPjn
Q6TLi3vGZg787oCR8/uTxG8RXHtifMO7J145dWQHBz40xie3Hnv/iE1OrPOh
meOdUx8Q/hmdg8J/PxIYOf7v0bL16dct8TyIx35YzKcSc2Ou7GdElz7szSKm
+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
oTsu5kv/v2J++M83G455ib8lziD5e8njS7zBfaMdPfwVdWTk+iWXMGtlzcyV
Oe9XcX7hvzPH66MEo0sf6uhgmzEWx3j/xHzfjrmzHuJvvhHHkmNLPM9n4t7g
XiZe6Q/hL36O+6V/XA9cF/jrStX5fYlTSHzCARXnI/5X+hckriMjFiK5iQ+o
OB9xWnW8Q+rIiI1I7l/WQ/5ign2wvvdirayNeKDIkWELm+83HAuUXMPkOsYu
Nqkjo+398On4N+Iwkl+YsRiTXMeDKo49SK5j2gZWnBt5avjfjxqOIYq/Ze0c
g59S516mLzYqsX76YoNxiAdJX2KJ/pdb+cCwh138G3EPya/M2MwBO9hD9/fw
z8x/cvz/kYZ+FsfvkziWrJX4puRiPqji2JLkXv604diof6bO1VytWoc6Mto+
DZ/O7x99aUePeI3EJf0ifDr+qynON7YZ4/NYO3MlPmq30J8Z/p46NsjFSe7n
IRXnf65VHX+SOHdfh4/F39CGDrEsyQ1N/EjyQ1NH1jXmOyP+3/gq5spaLoz1
Ictj/ruF/dnh/6kzJrmayR3N7zi/59SRMS/mwFyZM9cx1zDnmnPOvcM9z28B
9xB98QnExiS3KHEvVyXfYcXxL7+NtWKLeK743u8ajuGKD/4hfAljE88V//Rj
wzFal/jHhmOzEsyDXNZF1fmsqSMbGvawi/8kPic2yXNN/M964KXCX9GXudGG
zuExHuNyf+Prfmk4zis+b+mq81+TB5v81cMqxsiJT0lu6mZV56Imviu5sZkj
c1sSX7bhMeiLDeKDokMebeK9Ygub1JEdEeMzD/xbEfr043gy9+9jDDC69CF3
Nrm1l606vzZ1ZPiS3xuOiYtPIc4i+bnJv028xaUDLxfroe+RFbf9l8sbHeZP
PFxyhY+oODYoucKHh33Gwd9xLNAhrzjHBN0/4hjNTRxXlPzi9MUGdebMXInX
S67uoyqOxUnObnzx4obj4OI/RwZGjn9jrr+GDeKfrlC1DfJ+k68bXfpQR4Zt
2tG7LHHcT84hYzFms8ArxnyXjfkuH/ZPrjjfdPOq432ydo4Ba2XN+Kp/Go7L
i88izij5vpfk85bOSlXnGyfvOPnFj6kYIyc+6ypV5y8njzn5tEdVjJHPSxx3
lUA65Csn/uoKgVeO9WALm7ShQxzgtLCPxv9RR4bt28OfI7sj/D1jMSaxW8mh
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
x/0f8MAmBA==
        "]],
       Annotation[#, "Charting`Private`Tag$36776#1"]& ]]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1: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
    "]],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{360, 352},
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{-1., 1.}, {-1., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellOpen->False,
 CellChangeTimes->{
  3.6889468585923147`*^9, {3.6894479900450325`*^9, 3.6894480348015924`*^9}}]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 83453, 1899, 1472, "Input"],
Cell[84036, 1923, 11229, 211, 560, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95302, 2139, 298, 8, 30, "Input"],
Cell[95603, 2149, 34400, 903, 30, "Output"]
}, Open  ]],
Cell[130018, 3055, 148, 2, 69, "Input"],
Cell[CellGroupData[{
Cell[130191, 3061, 36709, 880, 19, "Input",
 CellOpen->False],
Cell[166903, 3943, 10839, 203, 19, "Output",
 CellOpen->False]
}, Open  ]],
Cell[177757, 4149, 165, 4, 19, "Input",
 CellOpen->False],
Cell[177925, 4155, 105, 2, 19, "Input",
 CellOpen->False],
Cell[178033, 4159, 18928, 458, 19, "Input",
 CellOpen->False],
Cell[CellGroupData[{
Cell[196986, 4621, 1141, 29, 19, "Input",
 CellOpen->False],
Cell[198130, 4652, 62373, 1038, 19, "Output",
 CellOpen->False]
}, Open  ]]
}
]
*)

