(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    750261,      15682]
NotebookOptionsPosition[    745763,      15547]
NotebookOutlinePosition[    747391,      15597]
CellTagsIndexPosition[    747047,      15585]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Principal Stresses and Mohr's Circle for Plane Stress", "DemoTitle",
 CellChangeTimes->{{3.561692255837164*^9, 3.5616922604221697`*^9}, {
  3.5618731854022675`*^9, 3.561873257464918*^9}, {3.5621665287709694`*^9, 
  3.562166610736878*^9}, {3.5621668029047804`*^9, 3.5621668033048315`*^9}, {
  3.562166850064769*^9, 3.562166895104988*^9}, {3.56268744022224*^9, 
  3.562687445846136*^9}}],

Cell["", "InitializationSection"],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "z", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"z", "=", 
       RowBox[{"\[Theta]", "*", 
        RowBox[{"Pi", "/", "180"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"plotType", "==", "\"\<stress section\>\""}], "||", 
         RowBox[{"plotType", "==", "\"\<Mohr circle/stress section\>\""}], "||", 
         RowBox[{"plotType", "==", "\"\<Mohr circle\>\""}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"angleSelection", "==", "\"\<specific plane\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"z", "=", 
            RowBox[{"getAngleAtSpecificPlane", "[", 
             RowBox[{
             "specificPlaneAngle", ",", "\[Sigma]x", ",", "\[Sigma]y", ",", 
              "\[Tau]xy"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"\[Theta]", "=", 
            RowBox[{"z", "*", 
             RowBox[{"180.", "/", "Pi"}]}]}]}]}], "\[IndentingNewLine]", 
         "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Sigma]x1", ",", "\[Sigma]y1", ",", "\[Tau]xy1"}], "}"}], 
       "=", 
       RowBox[{"rotationStress", "[", 
        RowBox[{
         RowBox[{"N", "@", "\[Sigma]x"}], ",", 
         RowBox[{"N", "@", "\[Sigma]y"}], ",", 
         RowBox[{"N", "@", "\[Tau]xy"}], ",", 
         RowBox[{"N", "@", "\[Theta]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Text", "@", 
       RowBox[{"makeDiagrams", "[", 
        RowBox[{
         RowBox[{"N", "@", "\[Sigma]x"}], ",", 
         RowBox[{"N", "@", "\[Sigma]y"}], ",", 
         RowBox[{"N", "@", "\[Tau]xy"}], ",", "z", ",", "annotate", ",", 
         "onPositiveSideOnly", ",", "plotType", ",", "limit", ",", 
         "gridLines"}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{"\"\<stresses at 0\>\"", ",", "Degree"}], "}"}], 
                 "]"}], ",", "12"}], "]"}], ",", "SpanFromLeft"}], "}"}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", ",", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Sigma]x", ",", "14", ",", "\"\<\>\""}], "}"}], 
                 ",", 
                 RowBox[{"-", "20"}], ",", "20", ",", "0.1", ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], 
              ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Dynamic", "@", 
                 RowBox[{"padIt1", "[", 
                  RowBox[{"\[Sigma]x", ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "11"}], 
               "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)\>\"", ",", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Sigma]y", ",", "4", ",", "\"\<\>\""}], "}"}], 
                 ",", 
                 RowBox[{"-", "20"}], ",", "20", ",", "0.1", ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], 
              ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Dynamic", "@", 
                 RowBox[{"padIt1", "[", 
                  RowBox[{"\[Sigma]y", ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "11"}], 
               "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(xy\)]\)\>\"", ",", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Tau]xy", ",", "10", ",", "\"\<\>\""}], "}"}], 
                 ",", 
                 RowBox[{"-", "20"}], ",", "20", ",", "0.1", ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "}"}], "]"}], 
              ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Dynamic", "@", 
                 RowBox[{"padIt1", "[", 
                  RowBox[{"\[Tau]xy", ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], ",", "11"}], 
               "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Text", "@", 
                    RowBox[{"TraditionalForm", "@", 
                    RowBox[{"HoldForm", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["\[Sigma]", "x"], ",", 
                    SubscriptBox["\[Tau]", 
                    RowBox[{"x", "\[InvisibleComma]", "y"}]]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox["\[Tau]", 
                    RowBox[{"x", "\[InvisibleComma]", "y"}]], ",", 
                    SubscriptBox["\[Sigma]", "y"]}], "}"}]}], "}"}], 
                    "]"}]}]}], ",", "\"\< = \>\"", ",", 
                   RowBox[{"Dynamic", "@", 
                    RowBox[{"TraditionalForm", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "\[Sigma]x", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], ",", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "\[Tau]xy", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "\[Tau]xy", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], ",", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"N", "[", "\[Sigma]y", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], "}"}]}], 
                    "\[IndentingNewLine]", "}"}], "]"}]}]}], 
                  "\[IndentingNewLine]", "}"}], "]"}], ",", "11"}], "]"}], 
              ",", "SpanFromLeft"}], "}"}]}], "\[IndentingNewLine]", "}"}], 
          ",", 
          RowBox[{"Spacings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{".5", ",", ".5"}], "}"}]}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
            "]"}]}]}], "]"}], "\[IndentingNewLine]", "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<select plot type\>\"", ",", "12"}], "]"}], ",", 
               "SpanFromLeft"}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"PopupMenu", "[", 
                RowBox[{
                 RowBox[{"Dynamic", "[", "plotType", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", " ", 
                  RowBox[{
                   RowBox[{"\"\<stress section\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<stress section\>\"", ",", "11"}], "]"}]}], 
                   ",", "\[IndentingNewLine]", " ", 
                   RowBox[{"\"\<Mohr circle\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", " ", 
                    RowBox[{"\"\<Mohr circle\>\"", ",", "11"}], "]"}]}], ",", 
                   "\[IndentingNewLine]", " ", 
                   RowBox[{"\"\<Mohr circle/stress section\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", " ", 
                    RowBox[{"\"\<Mohr circle/stress section\>\"", ",", "11"}],
                     "]"}]}], ",", "\[IndentingNewLine]", " ", 
                   RowBox[{"\"\<normal stress trajectory\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", " ", 
                    RowBox[{"\"\<normal stress trajectory\>\"", ",", "11"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", " ", 
                   RowBox[{"\"\<shear stress trajectory\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<shear stress trajectory\>\"", ",", "11"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", " ", 
                   RowBox[{"\"\<normal/shear trajectory\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<normal/shear trajectory\>\"", ",", "11"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
                 RowBox[{"ImageSize", "->", "All"}], ",", 
                 RowBox[{"ContinuousAction", "->", "False"}]}], "]"}], ",", 
               "SpanFromLeft"}], "\[IndentingNewLine]", "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<annotate\>\"", ",", "12"}], "]"}], ",", 
                  RowBox[{"Spacer", "[", "1", "]"}], ",", 
                  RowBox[{"Checkbox", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "annotate", "]"}], ",", 
                    RowBox[{"Enabled", "->", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{"plotType", "==", "\"\<stress section\>\""}], "||", 
                    RowBox[{
                    "plotType", "==", 
                    "\"\<Mohr circle/stress section\>\""}]}], "]"}]}]}], 
                   "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Column", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<display stresses on\>\"", ",", 
                    "\"\<positive sides only\>\""}], "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], ",", 
                    "11"}], "]"}], ",", 
                  RowBox[{"Spacer", "[", "1", "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Checkbox", "[", 
                   RowBox[{
                    RowBox[{"Dynamic", "[", "onPositiveSideOnly", "]"}], ",", 
                    RowBox[{"Enabled", "->", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{"plotType", "==", "\"\<stress section\>\""}], "||", 
                    RowBox[{
                    "plotType", "==", 
                    "\"\<Mohr circle/stress section\>\""}]}], "]"}]}]}], 
                   "]"}]}], "}"}], "]"}], ",", "SpanFromLeft"}], 
              "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], 
           ",", 
           RowBox[{"Spacings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{".5", ",", ".5"}], "}"}]}], ",", 
           RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameStyle", "->", 
            RowBox[{"Directive", "[", 
             RowBox[{
              RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
             "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", "SpanFromLeft"}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Grid", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<rotate to new angle\>\"", " ", ",", "12"}], 
                    "]"}], "}"}], "]"}], ",", "SpanFromLeft"}], "}"}], ",", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"RadioButtonBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "angleSelection", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\"\<slider\>\"", "\[Rule]", "\"\<\>\""}], ",", 
                    RowBox[{
                    "\"\<specific plane\>\"", "\[Rule]", "\"\<\>\""}]}], 
                    "}"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Vertical\>\""}], 
                    ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{"plotType", "==", "\"\<stress section\>\""}], "||", 
                    RowBox[{
                    "plotType", "==", "\"\<Mohr circle/stress section\>\""}], 
                    "||", 
                    RowBox[{"plotType", "==", "\"\<Mohr circle\>\""}]}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"Grid", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\[Theta]", ",", "45", ",", "\"\<\>\""}], "}"}], 
                    ",", 
                    RowBox[{"-", "360"}], ",", "360", ",", "0.1", ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"plotType", "==", "\"\<stress section\>\""}], "||", 
                    RowBox[{
                    "plotType", "==", "\"\<Mohr circle/stress section\>\""}], 
                    "||", 
                    RowBox[{"plotType", "==", "\"\<Mohr circle\>\""}]}], 
                    ")"}], "&&", 
                    RowBox[{
                    "angleSelection", "\[Equal]", "\"\<slider\>\""}]}], 
                    "]"}]}]}], "}"}], "]"}], ",", 
                    RowBox[{"Spacer", "[", "4", "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"\[Theta]", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}]}], ",", 
                    "Degree"}], "}"}], "]"}], ",", "11"}], "]"}]}], "}"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Button", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<0\>\"", ",", "Degree"}], "}"}], "]"}], ",", 
                    RowBox[{"\[Theta]", "=", "0"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Palette\>\""}], ",", 
                    RowBox[{"Background", "\[Rule]", "LightBlue"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"25", ",", "18"}], "}"}]}]}], "]"}]}], 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{"PopupMenu", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"specificPlaneAngle", " ", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"specificPlaneAngle", "=", "#"}], ";", 
                    RowBox[{"\[Theta]", "=", " ", 
                    RowBox[{"getAngleAtSpecificPlane", "[", 
                    RowBox[{
                    "specificPlaneAngle", ",", "\[Sigma]x", ",", "\[Sigma]y", 
                    ",", "\[Tau]xy"}], "]"}]}]}], "}"}], "&"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", " ", 
                    RowBox[{
                    RowBox[{"\"\<first principal plane\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<first principal plane\>\"", ",", "11"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", " ", 
                    RowBox[{"\"\<second principal plane\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<second principal plane\>\"", ",", "11"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", " ", 
                    RowBox[{"\"\<first maximum shear plane\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", " ", 
                    RowBox[{"\"\<first shear plane\>\"", ",", "11"}], "]"}]}],
                     ",", "\[IndentingNewLine]", "  ", 
                    RowBox[{"\"\<second maximum shear plane\>\"", "\[Rule]", 
                    RowBox[{"Style", "[", " ", 
                    RowBox[{"\"\<second shear plane\>\"", ",", "11"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "All"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"plotType", "==", "\"\<stress section\>\""}], "||", 
                    RowBox[{
                    "plotType", "==", 
                    "\"\<Mohr circle/stress section\>\""}]}], ")"}], "&&", 
                    RowBox[{
                    "angleSelection", "\[Equal]", 
                    "\"\<specific plane\>\""}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
                    "}"}], "]"}], ",", "SpanFromLeft"}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                    "}"}], "\[IndentingNewLine]", "]"}]}], 
                  "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                "}"}], ",", 
               RowBox[{"Spacings", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{".15", ",", ".5"}], "}"}]}], ",", 
               RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
               RowBox[{"Frame", "\[Rule]", "None"}]}], "\[IndentingNewLine]", 
              "]"}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Text", "@", 
                   RowBox[{"Style", "[", 
                    RowBox[{"TraditionalForm", "@", 
                    RowBox[{"HoldForm", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"\[Sigma]", "'"}], "x"], ",", 
                    SubscriptBox[
                    RowBox[{"\[Tau]", "'"}], 
                    RowBox[{"x", "\[InvisibleComma]", "y"}]]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    SubscriptBox[
                    RowBox[{"\[Tau]", "'"}], 
                    RowBox[{"x", "\[InvisibleComma]", "y"}]], ",", 
                    SubscriptBox[
                    RowBox[{"\[Sigma]", "'"}], "y"]}], "}"}]}], "}"}], 
                    "]"}]}], "]"}]}], ",", "\"\< = \>\"", ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Dynamic", "@", 
                   RowBox[{"TraditionalForm", "[", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"padIt1", "[", 
                    RowBox[{"\[Sigma]x1", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], ",", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"\[Tau]xy1", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"padIt1", "[", 
                    RowBox[{"\[Tau]xy1", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], ",", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{"\[Sigma]y1", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], "}"}]}], 
                    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
                    "]"}]}]}], "}"}], "]"}], ",", "11"}], "]"}], 
             "\[IndentingNewLine]", "}"}]}], "}"}], ",", 
          RowBox[{"Spacings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{".5", ",", ".5"}], "}"}]}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameStyle", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
            "]"}]}]}], "]"}], "\[IndentingNewLine]", "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Grid", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<zoom\>\"", ",", "12"}], "]"}], ",", 
                    RowBox[{"Spacer", "[", "13", "]"}], ",", 
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"limit", ",", "30", ",", "\"\<\>\""}], "}"}], ",",
                     "5", ",", "50", ",", "0.1", ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}],
                     ",", 
                    RowBox[{"Spacer", "[", "12", "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<in\>\"", ",", 
                    RowBox[{"Spacer", "[", "75", "]"}], ",", "\"\<out\>\""}], 
                    "}"}], "]"}], ",", "11"}], "]"}], ",", "SpanFromLeft"}], 
                   "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
                RowBox[{"Spacings", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{".1", ",", ".1"}], "}"}]}], ",", 
                RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameStyle", "->", 
                 RowBox[{"Directive", "[", 
                  RowBox[{
                   RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
                  "]"}]}]}], "]"}], "\[IndentingNewLine]", "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Grid", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<gridlines\>\"", ",", "12"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"gridLines", ",", "0.5", ",", "\"\<\>\""}], "}"}],
                     ",", "0", ",", "1", ",", "0.1", ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], 
                    RowBox[{"Spacer", "[", "8", "]"}]}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<less\>\"", ",", 
                    RowBox[{"Spacer", "[", "70", "]"}], ",", "\"\<more\>\""}],
                     "}"}], "]"}], ",", "11"}], "]"}]}], "}"}]}], 
                 "\[IndentingNewLine]", "}"}], ",", 
                RowBox[{"Spacings", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{".1", ",", ".1"}], "}"}]}], ",", 
                RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameStyle", "->", 
                 RowBox[{"Directive", "[", 
                  RowBox[{
                   RowBox[{"Thickness", "[", ".005", "]"}], ",", "Gray"}], 
                  "]"}]}]}], "]"}], "\[IndentingNewLine]", "}"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"Spacings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{".1", ",", ".5"}], "}"}]}], ",", 
           RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
           RowBox[{"Frame", "\[Rule]", "None"}]}], "\[IndentingNewLine]", 
          "]"}], ",", "SpanFromLeft"}], "\[IndentingNewLine]", "}"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{".2", ",", "1.4"}], "}"}]}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"annotate", ",", "True"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"plotType", ",", "\"\<Mohr circle\>\""}], "}"}], ",", "None"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"onPositiveSideOnly", ",", "True"}], "}"}], ",", "None"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"principalPlaneAngle", ",", "False"}], "}"}], ",", "None"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"maxShearPlane", ",", "False"}], "}"}], ",", "None"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"specificPlaneAngle", ",", "\"\<first principal plane\>\""}], 
      "}"}], ",", "None"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"angleSelection", ",", "\"\<slider\>\""}], "}"}], ",", "None"}],
     "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]x1", ",", "0"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]y1", ",", "0"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Tau]xy1", ",", "0"}], "}"}], ",", "None"}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SynchronousInitialization", "\[Rule]", "False"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ContinuousAction", "\[Rule]", "True"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Alignment", "->", "Center"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameMargins", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Paneled", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AutorunSequencing", "\[Rule]", " ", 
    RowBox[{"{", "1", "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"--", 
         RowBox[{"-", " ", "constant"}]}], " ", "parameters", " ", "size", 
        " ", "and", " ", "width", " ", "of", " ", 
        RowBox[{"display", " ", "--"}]}], "-"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"contentSizeW", "=", "425"}], ";", "\[IndentingNewLine]", 
      RowBox[{"contentSizeH", "=", "425"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"helper", " ", "function", " ", "for", " ", "formatting"}], 
       "             ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"padIt2", "[", 
        RowBox[{
         RowBox[{"v_", "?", "numeric"}], ",", "f_List"}], "]"}], ":=", 
       RowBox[{"AccountingForm", "[", 
        RowBox[{
         RowBox[{"Chop", "[", "v", "]"}], " ", ",", "f", ",", 
         RowBox[{"NumberSigns", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
         RowBox[{"NumberPadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<0\>\"", ",", "\"\<0\>\""}], "}"}]}], ",", 
         RowBox[{"SignPadding", "\[Rule]", "True"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"padIt2", "[", 
        RowBox[{
         RowBox[{"v_", "?", "numeric"}], ",", "f_Integer"}], "]"}], ":=", 
       RowBox[{"AccountingForm", "[", 
        RowBox[{
         RowBox[{"Chop", "[", "v", "]"}], " ", ",", "f", ",", 
         RowBox[{"NumberSigns", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
         RowBox[{"NumberPadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<0\>\"", ",", "\"\<0\>\""}], "}"}]}], ",", 
         RowBox[{"SignPadding", "\[Rule]", "True"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"padIt2s", "[", 
        RowBox[{
         RowBox[{"v_", "?", "numeric"}], ",", "f_Integer"}], "]"}], ":=", 
       RowBox[{"AccountingForm", "[", 
        RowBox[{
         RowBox[{"Chop", "[", "v", "]"}], " ", ",", "f", ",", 
         RowBox[{"NumberSigns", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<-\>\"", ",", "\"\<+\>\""}], "}"}]}], ",", 
         RowBox[{"NumberPadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<0\>\"", ",", "\"\<0\>\""}], "}"}]}], ",", 
         RowBox[{"SignPadding", "\[Rule]", "True"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"padIt1", "[", 
        RowBox[{
         RowBox[{"v_", "?", "numeric"}], ",", "f_List"}], "]"}], ":=", 
       RowBox[{"AccountingForm", "[", 
        RowBox[{
         RowBox[{"Chop", "[", "v", "]"}], " ", ",", "f", ",", 
         RowBox[{"NumberSigns", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<-\>\"", ",", "\"\<+\>\""}], "}"}]}], ",", 
         RowBox[{"NumberPadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<0\>\"", ",", "\"\<0\>\""}], "}"}]}], ",", 
         RowBox[{"SignPadding", "\[Rule]", "True"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "definitions", " ", "used", " ", "for", " ", "parameter", " ", 
        "checking"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"integerStrictPositive", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"integerPositive", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerQ", "[", "#", "]"}], "&&", 
          RowBox[{"#", "\[GreaterEqual]", "0"}]}], "&"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numericStrictPositive", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Element", "[", 
           RowBox[{"#", ",", "Reals"}], "]"}], "&&", 
          RowBox[{"#", ">", "0"}]}], "&"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numericPositive", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Element", "[", 
           RowBox[{"#", ",", "Reals"}], "]"}], "&&", 
          RowBox[{"#", "\[GreaterEqual]", "0"}]}], "&"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numericStrictNegative", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Element", "[", 
           RowBox[{"#", ",", "Reals"}], "]"}], "&&", 
          RowBox[{"#", "<", "0"}]}], "&"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numericNegative", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Element", "[", 
           RowBox[{"#", ",", "Reals"}], "]"}], "&&", 
          RowBox[{"#", "\[LessEqual]", "0"}]}], "&"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bool", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Element", "[", 
          RowBox[{"#", ",", "Booleans"}], "]"}], "&"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numeric", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Element", "[", 
          RowBox[{"#", ",", "Reals"}], "]"}], "&"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"integer", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Element", "[", 
          RowBox[{"#", ",", "Integers"}], "]"}], "&"}], ")"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"makeDiagrams", "[", 
        RowBox[{
         RowBox[{"\[Sigma]x_", "?", "numeric"}], ",", 
         RowBox[{"\[Sigma]y_", "?", "numeric"}], ",", 
         RowBox[{"\[Tau]xy_", "?", "numeric"}], ",", 
         RowBox[{"\[Theta]_", "?", "numeric"}], ",", 
         RowBox[{"annotate_", "?", "bool"}], ",", 
         RowBox[{"onPositiveSideOnly_", "?", "bool"}], ",", "plotType_String",
          ",", 
         RowBox[{"limit_", "?", "numericStrictPositive"}], ",", 
         RowBox[{"gridLines_", "?", "numericPositive"}]}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"Which", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"plotType", "==", "\"\<stress section\>\""}], ",", 
           RowBox[{"make2DStressDiagram", "[", 
            RowBox[{
            "\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy", ",", "\[Theta]", 
             ",", "annotate", ",", "onPositiveSideOnly", ",", "limit", ",", 
             "gridLines", ",", 
             RowBox[{"{", 
              RowBox[{"contentSizeW", ",", "contentSizeH"}], "}"}]}], "]"}], 
           ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"plotType", "==", "\"\<Mohr circle\>\""}], ",", 
           RowBox[{"makeMohrCircle", "[", 
            RowBox[{
            "\[Theta]", ",", "\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy", 
             ",", "limit", ",", "gridLines", ",", 
             RowBox[{"{", 
              RowBox[{"contentSizeW", ",", "contentSizeH"}], "}"}], ",", " ", 
             RowBox[{"makeMohrCircleTitle", "[", 
              RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], 
              "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"plotType", "==", "\"\<Mohr circle/stress section\>\""}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"makeMohrCircleTitle", "[", 
                  RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], 
                  "]"}], ",", "SpanFromLeft"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"make2DStressDiagram", "[", 
                  RowBox[{
                  "\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy", ",", 
                   "\[Theta]", ",", "annotate", ",", "onPositiveSideOnly", 
                   ",", "limit", ",", "gridLines", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0.5", "contentSizeW"}], ",", 
                    RowBox[{"0.87", "contentSizeH"}]}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"makeMohrCircle", "[", 
                  RowBox[{
                  "\[Theta]", ",", "\[Sigma]x", ",", "\[Sigma]y", ",", 
                   "\[Tau]xy", ",", "limit", ",", "gridLines", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0.499", "contentSizeW"}], ",", 
                    RowBox[{".87", "contentSizeH"}]}], "}"}], ",", 
                   RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
                "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
            "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"plotType", "==", "\"\<normal stress trajectory\>\""}], 
           ",", 
           RowBox[{"makeNormalStressPolarPlot", "[", 
            RowBox[{
            "\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy", ",", "limit", ",",
              "gridLines"}], "]"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"plotType", "==", "\"\<shear stress trajectory\>\""}], ",", 
           RowBox[{"makeShearStressPolarPlot", "[", 
            RowBox[{
            "\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy", ",", "limit", ",",
              "gridLines"}], "]"}], ",", " ", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"plotType", "==", "\"\<normal/shear trajectory\>\""}], ",", 
           RowBox[{"makeShearAndNormalStressPolarPlot", "[", 
            RowBox[{
            "\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy", ",", "limit", ",",
              "gridLines"}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"getAngleAtSpecificPlane", "[", 
        RowBox[{
        "specificPlaneAngle_", ",", "\[Sigma]x_", ",", "\[Sigma]y_", ",", 
         "\[Tau]xy_"}], "]"}], ":=", "\[IndentingNewLine]", 
       RowBox[{"N", "@", 
        RowBox[{"Which", "[", 
         RowBox[{
          RowBox[{
          "specificPlaneAngle", "==", "\"\<first principal plane\>\""}], ",", 
          RowBox[{
           RowBox[{"principalStresses", "[", 
            RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}], 
           "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{
          "specificPlaneAngle", "==", "\"\<second principal plane\>\""}], ",", 
          RowBox[{
           RowBox[{"principalStresses", "[", 
            RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}], 
           "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{
          "specificPlaneAngle", "==", "\"\<first maximum shear plane\>\""}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"principalStresses", "[", 
             RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}], 
            "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], "+", 
           RowBox[{"Pi", "/", "4"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
          "specificPlaneAngle", "==", "\"\<second maximum shear plane\>\""}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"principalStresses", "[", 
             RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}], 
            "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}], "+", 
           RowBox[{
            FractionBox["3", "4"], "Pi"}]}]}], "\[IndentingNewLine]", 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "finds", " ", "the", " ", "2", " ", "Principal", " ", "stresses", " ", 
        "in", " ", "plane", " ", "stress", " ", "2", "D", " ", "setting"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"principalStresses", "[", 
        RowBox[{
         RowBox[{"\[Sigma]x_", "?", "numeric"}], ",", 
         RowBox[{"\[Sigma]y_", "?", "numeric"}], ",", 
         RowBox[{"\[Tau]xy_", "?", "numeric"}]}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\[Theta]p", ",", "\[Sigma]", ",", "\[Sigma]1", ",", "\[Sigma]2", 
           ",", "\[Sigma]1max", ",", "r", ",", "c", ",", "tmp", ",", 
           "\[Theta]1", ",", "\[Theta]2"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"r", "=", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[Sigma]x", "-", "\[Sigma]y"}], "2"], ")"}], "2"], 
             "+", 
             SuperscriptBox["\[Tau]xy", "2"]}]]}], ";", "\[IndentingNewLine]", 
          RowBox[{"c", "=", 
           FractionBox[
            RowBox[{"\[Sigma]x", "+", "\[Sigma]y"}], "2"]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Sigma]1", ",", "\[Sigma]2"}], "}"}], "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c", "+", "r"}], ",", 
             RowBox[{"c", "-", "r"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "\[Sigma]1", " ", "is", " ", "the", " ", "largest", " ", "stress", 
            " ", "regadless", " ", "of", " ", "sign"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", "\[Sigma]2", "]"}], ">", 
             RowBox[{"Abs", "[", "\[Sigma]1", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"tmp", "=", "\[Sigma]1"}], ";", "\[IndentingNewLine]", 
             RowBox[{"\[Sigma]1", "=", "\[Sigma]2"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"\[Sigma]2", "=", "tmp"}]}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"\[Sigma]x", "-", "\[Sigma]y"}], "]"}], "\[LessEqual]", 
             "$MachineEpsilon"}], ",", 
            RowBox[{"\[Theta]p", "=", 
             RowBox[{"Pi", "/", "4"}]}], ",", 
            RowBox[{"\[Theta]p", "=", 
             FractionBox[
              RowBox[{"ArcTan", "[", 
               FractionBox[
                RowBox[{"2", " ", 
                 RowBox[{"Abs", "[", "\[Tau]xy", "]"}]}], 
                RowBox[{"Abs", "[", 
                 RowBox[{"\[Sigma]x", "-", "\[Sigma]y"}], "]"}]], "]"}], 
              "2"]}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Sigma]1", ">", "\[Sigma]2"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"\[Tau]xy", ">", "0"}], ",", 
              RowBox[{"(*", "below", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"\[Sigma]x", ">", "c"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"\[Theta]p", ",", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Pi", "/", "2"}], "-", "\[Theta]p"}], ")"}]}]}], 
                  "}"}]}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Pi", "/", "2"}], "-", "\[Theta]p"}], ",", 
                   RowBox[{"-", "\[Theta]p"}]}], "}"}]}]}], "]"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"\[Sigma]x", ">", "c"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]p"}], ",", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Pi", "/", "2"}], "-", "\[Theta]p"}], ")"}]}], 
                  "}"}]}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Pi", "/", "2"}], "-", "\[Theta]p"}], ")"}]}], 
                   ",", "\[Theta]p"}], "}"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"\[Tau]xy", ">", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"\[Sigma]x", ">", "c"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Pi", "/", "2"}], "-", "\[Theta]p"}], ")"}]}], 
                   ",", "\[Theta]p"}], "}"}]}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "\[Theta]p"}], ",", 
                   RowBox[{
                    RowBox[{"Pi", "/", "2"}], "-", "\[Theta]p"}]}], "}"}]}]}],
                "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"\[Sigma]x", ">", "c"}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Pi", "/", "2"}], "-", "\[Theta]p"}], ")"}], ",", 
                   RowBox[{"-", "\[Theta]p"}]}], "}"}]}], ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], "=", 
                 RowBox[{"{", 
                  RowBox[{"\[Theta]p", ",", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Pi", "/", "2"}], "-", "\[Theta]p"}], ")"}]}]}], 
                  "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Sigma]1", ",", "\[Theta]1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Sigma]2", ",", "\[Theta]2"}], "}"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "finds", " ", "the", " ", "maximum", " ", "and", " ", "minumum", " ", 
        "shear", " ", "stresses", " ", "in", " ", "plane", " ", "stress", " ",
         "2", "D", " ", "setting"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"maxAndMinShearStress", "[", 
        RowBox[{
         RowBox[{"\[Sigma]x_", "?", "numeric"}], ",", 
         RowBox[{"\[Sigma]y_", "?", "numeric"}], ",", 
         RowBox[{"\[Tau]xy_", "?", "numeric"}]}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "r", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"r", "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox[
                RowBox[{"\[Sigma]x", "-", "\[Sigma]y"}], "2"], ")"}], "2"], 
             "+", 
             SuperscriptBox["\[Tau]xy", "2"]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"r", ",", 
            RowBox[{"-", "r"}]}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"plot", "[", 
        RowBox[{"data_List", ",", 
         RowBox[{"limit_", "?", "numericStrictPositive"}], ",", 
         RowBox[{"gridLines_", "?", "numericPositive"}], ",", "color_"}], 
        "]"}], ":=", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ListPolarPlot", "[", 
        RowBox[{"data", ",", "\[IndentingNewLine]", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AxesOrigin", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"contentSizeW", ",", "contentSizeH"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"20", ",", "10"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"20", ",", "5"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"gridLines", "\[Equal]", "0"}], ",", 
           RowBox[{"GridLines", "\[Rule]", "None"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GridLines", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "limit"}], ",", "limit", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"2", "*", "limit"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"gridLines", "*", "20"}], ")"}]}]}], "]"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"-", "limit"}], ",", "limit", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"2", "*", "limit"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"gridLines", "*", "20"}], ")"}]}]}], "]"}]}], 
               "}"}]}], ",", 
             RowBox[{"GridLinesStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Thickness", "[", ".001", "]"}], ",", "LightGray"}], 
               "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "limit"}], ",", "limit"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "limit"}], ",", "limit"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", "color"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"makeArrowForAngle", "[", 
        RowBox[{"r_", ",", "center_", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Sigma]1_", ",", "\[Theta]1_"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]2_", ",", "\[Theta]2_"}], "}"}]}], "}"}], ",", 
         RowBox[{"\[Tau]xy_", "?", "numeric"}]}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"phi", ",", "tbl", ",", "align"}], "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Sigma]1", ">", "\[Sigma]2"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"\[Tau]xy", ">", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"tbl", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"center", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"r", "/", "3"}], "*", 
                    RowBox[{"Cos", "[", "phi", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"r", "/", "3"}], "*", 
                    RowBox[{"Sin", "[", "phi", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"phi", ",", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "\[Theta]1"}], ",", "0", ",", 
                    RowBox[{"Pi", "/", "100"}]}], "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"align", "=", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"tbl", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"center", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"r", "/", "3"}], "*", 
                    RowBox[{"Cos", "[", "phi", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"r", "/", "3"}], "*", 
                    RowBox[{"Sin", "[", "phi", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"phi", ",", 
                    RowBox[{
                    RowBox[{"-", "2"}], "*", "\[Theta]1"}], ",", "0", ",", 
                    RowBox[{
                    RowBox[{"-", "Pi"}], "/", "100"}]}], "}"}]}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"align", "=", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}]}], "}"}]}]}]}], "\[IndentingNewLine]", 
             "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"\[Tau]xy", ">", " ", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"tbl", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"center", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"r", "/", "3"}], "*", 
                    RowBox[{"Cos", "[", "phi", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"r", "/", "3"}], "*", 
                    RowBox[{"Sin", "[", "phi", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"phi", ",", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"Pi", "+", 
                    RowBox[{"2", "*", "\[Theta]1"}]}], ")"}]}], ",", 
                    RowBox[{"-", "Pi"}], ",", 
                    RowBox[{
                    RowBox[{"-", "Pi"}], "/", "100"}]}], "}"}]}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"align", "=", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}], "\[IndentingNewLine]", 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"tbl", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"center", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"r", "/", "3"}], "*", 
                    RowBox[{"Cos", "[", "phi", "]"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"r", "/", "3"}], "*", 
                    RowBox[{"Sin", "[", "phi", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"phi", ",", 
                    RowBox[{"(", 
                    RowBox[{"Pi", "-", 
                    RowBox[{"2", "*", "\[Theta]1"}]}], ")"}], ",", "Pi", ",", 
                    RowBox[{"Pi", "/", "100"}]}], "}"}]}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"align", "=", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "1"}]}], "}"}]}]}]}], "\[IndentingNewLine]", 
             "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
             "\"\<2\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "tbl", "]"}], ">", "1"}], ",", 
                RowBox[{"tbl", "[", 
                 RowBox[{"[", "   ", 
                  RowBox[{"Round", "[", " ", 
                   RowBox[{
                    RowBox[{"Length", "[", "tbl", "]"}], "/", "2"}], " ", 
                   "]"}], " ", "]"}], "]"}], ",", 
                RowBox[{"First", "@", "tbl"}]}], "]"}], " ", ",", " ", 
              "align"}], " ", "]"}], ",", "tbl"}], "}"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"makeMohrCircleTitle", "[", 
        RowBox[{
         RowBox[{"\[Sigma]x_", "?", "numeric"}], ",", 
         RowBox[{"\[Sigma]y_", "?", "numeric"}], ",", 
         RowBox[{"\[Tau]xy_", "?", "numeric"}]}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\[Sigma]1", ",", "\[Sigma]2", ",", "\[Theta]1", ",", "\[Theta]2", 
           ",", "r", ",", "center", ",", "ptA"}], "}"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]1", ",", "\[Theta]1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Sigma]2", ",", "\[Theta]2"}], "}"}]}], "}"}], "=", 
           RowBox[{"principalStresses", "[", 
            RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"center", "=", 
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Sigma]1", "+", "\[Sigma]2"}], "2"], ",", "0"}], 
            "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ptA", "=", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]x", ",", 
             RowBox[{"-", "\[Tau]xy"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"r", "=", 
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"center", ",", "ptA"}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Grid", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", "#", "]"}], "]"}], "&"}], "/@", 
               RowBox[{"{", 
                RowBox[{
                "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\
\)\>\"", ",", "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)\>\"", ",", 
                 "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)\>\""}], 
                "}"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"padIt1", "[", 
                 RowBox[{"\[Sigma]x", ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"padIt1", "[", 
                 RowBox[{"\[Sigma]y", ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"padIt1", "[", 
                 RowBox[{"\[Tau]xy", ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"padIt1", "[", 
                 RowBox[{"\[Sigma]1", ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"padIt1", "[", 
                 RowBox[{"\[Sigma]2", ",", 
                  RowBox[{"{", 
                   RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"\[PlusMinus]", 
                 RowBox[{"padIt2", "[", 
                  RowBox[{"r", ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]1", "*", 
                    RowBox[{"180", "/", "Pi"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", "Degree"}], 
                  "}"}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]2", "*", 
                    RowBox[{"180", "/", "Pi"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", "Degree"}], 
                  "}"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
             "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"Spacings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{".5", ",", "1"}], "}"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "All"}], ",", 
            RowBox[{"FrameStyle", "->", 
             RowBox[{"Directive", "[", "Thin", "]"}]}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"getRadiusOfCircle", "[", 
        RowBox[{
         RowBox[{"\[Sigma]x_", "?", "numeric"}], ",", 
         RowBox[{"\[Sigma]y_", "?", "numeric"}], ",", 
         RowBox[{"\[Tau]xy_", "?", "numeric"}]}], "]"}], ":=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"\[Sigma]x", "-", "\[Sigma]y"}], "2"], ")"}], "2"], "+", 
         SuperscriptBox["\[Tau]xy", "2"]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "find", " ", "normal", " ", "and", " ", "shear", " ", "stress", " ", 
        "for", " ", "plane", " ", "at", " ", "angle", " ", "theta", " ", 
        "from", " ", 
        RowBox[{"normal", ".", " ", "plain"}], " ", "stress"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "use", " ", "standard", " ", "stress", " ", "angle", " ", 
        "transformation", " ", "for", " ", "2", "D"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rotationStress", "[", 
        RowBox[{
        "\[Sigma]x_", ",", "\[Sigma]y_", ",", "\[Tau]xy_", ",", "\[Theta]_"}],
         "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Sigma]xx", ",", "\[Sigma]yy", ",", "\[Tau]"}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"\[Sigma]xx", "=", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"(", 
              RowBox[{"\[Sigma]x", "+", "\[Sigma]y"}], ")"}]}], "+", 
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"(", 
              RowBox[{"\[Sigma]x", "-", "\[Sigma]y"}], ")"}], 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"\[Tau]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", "\[Theta]"}], "]"}]}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Tau]", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["1", "2"]}], 
             RowBox[{"(", 
              RowBox[{"\[Sigma]x", "-", "\[Sigma]y"}], ")"}], 
             RowBox[{"Sin", "[", 
              RowBox[{"2", "\[Theta]"}], "]"}]}], "+", 
            RowBox[{"\[Tau]xy", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "\[Theta]"}], "]"}]}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Sigma]yy", "=", 
           RowBox[{
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"(", 
              RowBox[{"\[Sigma]x", "+", "\[Sigma]y"}], ")"}]}], "-", 
            RowBox[{
             FractionBox["1", "2"], 
             RowBox[{"(", 
              RowBox[{"\[Sigma]x", "-", "\[Sigma]y"}], ")"}], 
             RowBox[{"Cos", "[", 
              RowBox[{"2", "\[Theta]"}], "]"}]}], "-", 
            RowBox[{"\[Tau]xy", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", "\[Theta]"}], "]"}]}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\[Sigma]xx", ",", "\[Sigma]yy", ",", "\[Tau]"}], 
           "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"makeMohrCircle", "[", 
        RowBox[{
         RowBox[{"\[Theta]_", "?", "numeric"}], ",", 
         RowBox[{"\[Sigma]x_", "?", "numeric"}], ",", 
         RowBox[{"\[Sigma]y_", "?", "numeric"}], ",", 
         RowBox[{"\[Tau]xy_", "?", "numeric"}], ",", 
         RowBox[{"limit_", "?", "numericStrictPositive"}], ",", 
         RowBox[{"gridLines_", "?", "numericPositive"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"contentSizeW_", "?", "numericStrictPositive"}], ",", 
           RowBox[{"contentSizeH_", "?", "numericStrictPositive"}]}], "}"}], 
         ",", "plotTitle_"}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ptA", ",", "ptB", ",", "center", ",", "\[Sigma]1", ",", 
           "\[Sigma]2", ",", "\[Theta]1", ",", "\[Theta]2", ",", "r", ",", 
           "z", ",", "ptD1", ",", "ptD2", ",", "\[Sigma]x1", ",", "\[Tau]xy1",
            ",", "\[Sigma]y1"}], "}"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]1", ",", "\[Theta]1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Sigma]2", ",", "\[Theta]2"}], "}"}]}], "}"}], "=", 
           RowBox[{"principalStresses", "[", 
            RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"center", "=", 
           RowBox[{"{", 
            RowBox[{
             FractionBox[
              RowBox[{"\[Sigma]1", "+", "\[Sigma]2"}], "2"], ",", "0"}], 
            "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ptA", "=", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]x", ",", 
             RowBox[{"-", "\[Tau]xy"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"r", "=", 
           RowBox[{"getRadiusOfCircle", "[", 
            RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Sigma]x1", ",", "\[Sigma]y1", ",", "\[Tau]xy1"}], 
            "}"}], "=", 
           RowBox[{"rotationStress", "[", 
            RowBox[{
            "\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy", ",", "\[Theta]"}],
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"z", "=", 
           RowBox[{"\[Sigma]x", "-", 
            RowBox[{"First", "@", "center"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ptB", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ptA", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "-", 
              RowBox[{"2", "z"}]}], ",", 
             RowBox[{"-", 
              RowBox[{"ptA", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ptD1", "=", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]x1", ",", 
             RowBox[{"-", "\[Tau]xy1"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ptD2", "=", 
           RowBox[{"{", 
            RowBox[{"\[Sigma]y1", ",", "\[Tau]xy1"}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Circle", "[", 
               RowBox[{"center", ",", "r"}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Black", ",", 
                RowBox[{"PointSize", "[", ".02", "]"}], ",", 
                RowBox[{"Point", "[", "ptA", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Black", ",", 
                RowBox[{"PointSize", "[", ".02", "]"}], ",", 
                RowBox[{"Point", "[", "center", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Black", ",", 
                RowBox[{"PointSize", "[", ".02", "]"}], ",", 
                RowBox[{"Point", "[", "ptB", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"ptA", ",", "ptB"}], "}"}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"Circle", "[", 
               RowBox[{"ptD1", ",", ".8"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Red", ",", "Dashed", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"ptD1", ",", "ptD2"}], "}"}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Circle", "[", 
               RowBox[{"ptD2", ",", ".8"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{"\"\<(\>\"", ",", 
                   RowBox[{"padIt1", "[", 
                    RowBox[{"\[Sigma]x1", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", "\"\<,\>\"",
                    ",", 
                   RowBox[{"padIt1", "[", 
                    RowBox[{"\[Tau]xy1", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                   "\"\<)\>\""}], "}"}], "]"}], ",", "ptD1", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"\[Sigma]x1", ">", 
                   RowBox[{"center", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1.2"}], ",", 
                    RowBox[{"-", "1.2"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1.2", ",", 
                    RowBox[{"-", "1.2"}]}], "}"}]}], "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{"\"\<(\>\"", ",", 
                   RowBox[{"padIt1", "[", 
                    RowBox[{"\[Sigma]y1", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", "\"\<,\>\"",
                    ",", 
                   RowBox[{"padIt1", "[", 
                    RowBox[{"\[Tau]xy1", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                   "\"\<)\>\""}], "}"}], "]"}], ",", "ptD2", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"\[Sigma]y1", ">", 
                   RowBox[{"center", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1.2"}], ",", 
                    RowBox[{"-", "1.2"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1.2", ",", 
                    RowBox[{"-", "1.2"}]}], "}"}]}], "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"PointSize", "[", ".02", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"\[Sigma]1", ",", "0"}], "}"}], "]"}]}], "}"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"TraditionalForm", "[", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)\>\"", ",", 
                    "12"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Sigma]1", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}], "}"}], 
              ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Red", ",", 
                RowBox[{"PointSize", "[", ".02", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"\[Sigma]2", ",", "0"}], "}"}], "]"}]}], "}"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"TraditionalForm", "[", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)\>\"", ",", 
                    "12"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Sigma]2", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1.2", ",", "1.3"}], "}"}]}], "]"}], "}"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", 
                RowBox[{"PointSize", "[", ".02", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"center", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "r"}], "}"}], 
                 "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"TraditionalForm", "[", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)\>\"", ",", 
                    "12"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"center", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "r"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"-", "1.5"}]}], "}"}]}], "]"}], "}"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", 
                RowBox[{"PointSize", "[", ".02", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"center", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"-", "r"}]}], "}"}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"TraditionalForm", "[", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)\>\"", ",", 
                    "12"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"center", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"-", "r"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1.5"}], "}"}]}], "]"}], "}"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<tension\>\"", ",", "11"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"limit", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<compression\>\"", ",", "11"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "limit"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "]"}], "}"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"gridLines", "\[Equal]", "0"}], ",", 
              RowBox[{"GridLines", "\[Rule]", "None"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"GridLines", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"-", "limit"}], ",", "limit", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "limit"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"gridLines", "*", "20"}], ")"}]}]}], "]"}], ",", 
                   RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"-", "limit"}], ",", "limit", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "limit"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"gridLines", "*", "20"}], ")"}]}]}], "]"}]}], 
                  "}"}]}], ",", 
                RowBox[{"GridLinesStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{
                   RowBox[{"Thickness", "[", ".001", "]"}], ",", 
                   "LightGray"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "limit"}], ",", "limit"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "limit"}], ",", "limit"}], "}"}]}], "}"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
            RowBox[{"AxesOrigin", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"TicksStyle", "\[Rule]", "8"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotLabel", "->", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"plotTitle", "===", 
                RowBox[{"{", "}"}]}], ",", "\"\<\>\"", ",", "plotTitle"}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"contentSizeW", ",", " ", "contentSizeH"}], "}"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"20", ",", "10"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"20", ",", "5"}], "}"}]}], "}"}]}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"makeShearAndNormalStressPolarPlot", "[", 
        RowBox[{
         RowBox[{"\[Sigma]x_", "?", "numeric"}], ",", 
         RowBox[{"\[Sigma]y_", "?", "numeric"}], ",", 
         RowBox[{"\[Tau]xy_", "?", "numeric"}], ",", 
         RowBox[{"limit_", "?", "numericStrictPositive"}], ",", 
         RowBox[{"gridLines_", "?", "numericPositive"}]}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "pts", ",", "\[Theta]", ",", "\[Sigma]1", ",", "\[Sigma]2", ",", 
           "\[Sigma]1Abs", ",", "\[Sigma]2Abs", ",", "\[Theta]p1", ",", 
           "\[Theta]p2", ",", "p1", ",", "p2", ",", "p3", ",", "p4", ",", 
           "plotTitle", ",", "coord1", ",", "coord2", ",", "\[Tau]1", ",", 
           "\[Tau]2"}], "}"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"pts", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"rotationStress", "[", 
                RowBox[{
                "\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy", ",", 
                 "\[Theta]"}], "]"}], ",", "\[Theta]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Theta]", ",", "0", ",", 
               RowBox[{"2", " ", "Pi"}], ",", 
               RowBox[{"Pi", "/", "40"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]1", ",", "\[Theta]p1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Sigma]2", ",", "\[Theta]p2"}], "}"}]}], "}"}], "=", 
           RowBox[{"principalStresses", "[", 
            RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"p1", "=", 
           RowBox[{"plot", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"pts", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"pts", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}]}], "}"}], 
              "]"}], ",", "limit", ",", "gridLines", ",", "Red"}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"coord1", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "\[Sigma]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]p1", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Abs", "[", "\[Sigma]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]p1", "]"}]}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"coord2", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "\[Sigma]2", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]p2", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Abs", "[", "\[Sigma]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]p2", "]"}]}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"p2", "=", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"\[Sigma]x", ",", "0"}], "}"}], "]"}]}], "}"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", ",", 
                   "12"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[Sigma]x", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1.2"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "\[Sigma]y"}], "}"}], "]"}]}], "}"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)\>\"", ",", 
                   "12"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "\[Sigma]y"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.2", ",", "0"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", "coord1", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)\>\"", ",", 
                   "12"}], "]"}], "]"}], ",", "coord1", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.4"}], ",", "0"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", "coord2", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)\>\"", ",", 
                   "12"}], "]"}], "]"}], ",", "coord2", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.4"}], ",", "0"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Thin", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"coord1", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"coord1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"coord1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], 
                 "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Thin", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"coord2", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"coord2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"coord2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], 
                 "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Tau]1", ",", "\[Tau]2"}], "}"}], "=", 
           RowBox[{"maxAndMinShearStress", "[", 
            RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"p3", "=", 
           RowBox[{"plot", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"pts", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"pts", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1", ",", "3"}], "]"}], "]"}]}], "}"}], 
              "]"}], ",", "limit", ",", "gridLines", ",", "Blue"}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"coord1", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "\[Tau]1", "]"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]p1", "+", 
                RowBox[{"Pi", "/", "4"}]}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Abs", "[", "\[Tau]1", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]p1", "+", 
                RowBox[{"Pi", "/", "4"}]}], "]"}]}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"coord2", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "\[Tau]1", "]"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]p2", "+", 
                RowBox[{"Pi", "/", "4"}]}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Abs", "[", "\[Tau]1", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]p2", "+", 
                RowBox[{"Pi", "/", "4"}]}], "]"}]}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"p4", "=", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"\[Tau]xy", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \
\(x\[InvisibleComma]y\)]\)\>\"", ",", "12"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[Tau]xy", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1.2"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "\[Tau]xy"}], "}"}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \
\(y\[InvisibleComma]x\)]\)\>\"", ",", "12"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "\[Tau]xy"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.2", ",", "0"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", "coord1", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)\>\"", ",", 
                   "12"}], "]"}], "]"}], ",", "coord1", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.4"}], ",", "0"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Thin", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"coord1", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"coord1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"coord1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], 
                 "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Thin", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"coord2", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"coord2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"coord2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], 
                 "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"plotTitle", "=", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Grid", "[", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<normal (red) and shear (blue) polar (stress vs. angle) \
trajectory\>\"", ",", "SpanFromLeft"}], "}"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"TraditionalForm", "[", 
                    RowBox[{"Style", "[", "#", "]"}], "]"}], "&"}], "/@", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\
\)]\)\>\"", ",", "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)\>\""}], 
                   "}"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"padIt1", "[", 
                    RowBox[{"\[Sigma]x", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"padIt1", "[", 
                    RowBox[{"\[Sigma]y", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"padIt1", "[", 
                    RowBox[{"\[Tau]xy", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"padIt1", "[", 
                    RowBox[{"\[Sigma]1", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]p1", "*", 
                    RowBox[{"180", "/", "Pi"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", "Degree"}], 
                    "}"}], "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"padIt1", "[", 
                    RowBox[{"\[Sigma]2", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]p2", "*", 
                    RowBox[{"180", "/", "Pi"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", "Degree"}], 
                    "}"}], "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"\[PlusMinus]", 
                    RowBox[{"padIt2", "[", 
                    RowBox[{"\[Tau]1", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}]}]}], 
                  "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                "}"}], ",", 
               RowBox[{"Spacings", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"0.4", ",", "1.1"}], "}"}]}], ",", 
               RowBox[{"Frame", "\[Rule]", "All"}], ",", 
               RowBox[{"FrameStyle", "->", 
                RowBox[{"Directive", "[", "Thin", "]"}]}]}], "]"}], ",", 
             "12"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Show", "[", 
           RowBox[{"p1", ",", "p2", ",", "p3", ",", "p4", ",", 
            RowBox[{"PlotLabel", "->", "plotTitle"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"makeNormalStressPolarPlot", "[", 
        RowBox[{
         RowBox[{"\[Sigma]x_", "?", "numeric"}], ",", 
         RowBox[{"\[Sigma]y_", "?", "numeric"}], ",", 
         RowBox[{"\[Tau]xy_", "?", "numeric"}], ",", 
         RowBox[{"limit_", "?", "numericStrictPositive"}], ",", 
         RowBox[{"gridLines_", "?", "numericPositive"}]}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "pts", ",", "\[Theta]", ",", "\[Sigma]1", ",", "\[Sigma]2", ",", 
           "\[Sigma]1Abs", ",", "\[Sigma]2Abs", ",", "\[Theta]p1", ",", 
           "\[Theta]p2", ",", "p1", ",", "p2", ",", "plotTitle", ",", 
           "coord1", ",", "coord2"}], "}"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"pts", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"rotationStress", "[", 
                RowBox[{
                "\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy", ",", 
                 "\[Theta]"}], "]"}], ",", "\[Theta]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Theta]", ",", "0", ",", 
               RowBox[{"2", " ", "Pi"}], ",", 
               RowBox[{"Pi", "/", "40"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]1", ",", "\[Theta]p1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Sigma]2", ",", "\[Theta]p2"}], "}"}]}], "}"}], "=", 
           RowBox[{"principalStresses", "[", 
            RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}]}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"p1", "=", 
           RowBox[{"plot", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"pts", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"pts", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}]}], "}"}], 
              "]"}], ",", "limit", ",", "gridLines", ",", "Red"}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"coord1", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "\[Sigma]1", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]p1", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Abs", "[", "\[Sigma]1", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]p1", "]"}]}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"coord2", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "\[Sigma]2", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]p2", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Abs", "[", "\[Sigma]2", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]p2", "]"}]}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"p2", "=", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"\[Sigma]x", ",", "0"}], "}"}], "]"}]}], "}"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", ",", 
                   "12"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[Sigma]x", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1.2"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "\[Sigma]y"}], "}"}], "]"}]}], "}"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)\>\"", ",", 
                   "12"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "\[Sigma]y"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.2", ",", "0"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", "coord1", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)\>\"", ",", 
                   "12"}], "]"}], "]"}], ",", "coord1", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.4"}], ",", "0"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", "coord2", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)\>\"", ",", 
                   "12"}], "]"}], "]"}], ",", "coord2", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.4"}], ",", "0"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Thin", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"coord1", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"coord1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"coord1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], 
                 "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Thin", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"coord2", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"coord2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"coord2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], 
                 "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"plotTitle", "=", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "\"\<normal stress polar (stress vs. angle) trajectory\>\"", 
                 ",", "SpanFromLeft"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"TraditionalForm", "[", 
                  RowBox[{"Style", "[", "#", "]"}], "]"}], "&"}], "/@", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \
\(x\[InvisibleComma]y\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)\>\"", ",", 
                  "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)\>\""}], 
                 "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"padIt1", "[", 
                  RowBox[{"\[Sigma]x", ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"padIt1", "[", 
                  RowBox[{"\[Sigma]y", ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"padIt1", "[", 
                  RowBox[{"\[Tau]xy", ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"padIt1", "[", 
                  RowBox[{"\[Sigma]1", ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]p1", "*", 
                    RowBox[{"180", "/", "Pi"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", "Degree"}], 
                   "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"padIt1", "[", 
                  RowBox[{"\[Sigma]2", ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"\[Theta]p2", "*", 
                    RowBox[{"180", "/", "Pi"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", "Degree"}], 
                   "}"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
              "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0.8", ",", "1"}], "}"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", "All"}], ",", 
             RowBox[{"FrameStyle", "->", 
              RowBox[{"Directive", "[", "Thin", "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Show", "[", 
           RowBox[{"p1", ",", "p2", ",", 
            RowBox[{"PlotLabel", "->", "plotTitle"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"makeShearStressPolarPlot", "[", 
        RowBox[{
         RowBox[{"\[Sigma]x_", "?", "numeric"}], ",", 
         RowBox[{"\[Sigma]y_", "?", "numeric"}], ",", 
         RowBox[{"\[Tau]xy_", "?", "numeric"}], ",", 
         RowBox[{"limit_", "?", "numericStrictPositive"}], ",", 
         RowBox[{"gridLines_", "?", "numericPositive"}]}], "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "pts", ",", "\[Theta]", ",", "\[Sigma]1", ",", "\[Tau]1", ",", 
           "\[Tau]2", ",", "\[Sigma]2", ",", "\[Sigma]1Abs", ",", 
           "\[Sigma]2Abs", ",", "\[Theta]p1", ",", "\[Theta]p2", ",", "p1", 
           ",", "p2", ",", "plotTitle", ",", "coord1", ",", "coord2"}], "}"}],
          ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"pts", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"rotationStress", "[", 
                RowBox[{
                "\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy", ",", 
                 "\[Theta]"}], "]"}], ",", "\[Theta]"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Theta]", ",", "0", ",", 
               RowBox[{"2", " ", "Pi"}], ",", 
               RowBox[{"Pi", "/", "40"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]1", ",", "\[Theta]p1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Sigma]2", ",", "\[Theta]p2"}], "}"}]}], "}"}], "=", 
           RowBox[{"principalStresses", "[", 
            RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Tau]1", ",", "\[Tau]2"}], "}"}], "=", 
           RowBox[{"maxAndMinShearStress", "[", 
            RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"p1", "=", 
           RowBox[{"plot", "[", 
            RowBox[{
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"pts", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"pts", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1", ",", "3"}], "]"}], "]"}]}], "}"}], 
              "]"}], ",", "limit", ",", "gridLines", ",", "Blue"}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"coord1", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "\[Tau]1", "]"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]p1", "+", 
                RowBox[{"Pi", "/", "4"}]}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Abs", "[", "\[Tau]1", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]p1", "+", 
                RowBox[{"Pi", "/", "4"}]}], "]"}]}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"coord2", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "\[Tau]1", "]"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]p2", "+", 
                RowBox[{"Pi", "/", "4"}]}], "]"}]}], ",", 
             RowBox[{
              RowBox[{"Abs", "[", "\[Tau]1", "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]p2", "+", 
                RowBox[{"Pi", "/", "4"}]}], "]"}]}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"p2", "=", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"\[Tau]xy", ",", "0"}], "}"}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \
\(x\[InvisibleComma]y\)]\)\>\"", ",", "12"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"\[Tau]xy", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "1.2"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "\[Tau]xy"}], "}"}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \
\(y\[InvisibleComma]x\)]\)\>\"", ",", "12"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "\[Tau]xy"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.2", ",", "0"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
                RowBox[{"Point", "[", "coord1", "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"TraditionalForm", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)\>\"", ",", 
                   "12"}], "]"}], "]"}], ",", "coord1", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1.4"}], ",", "0"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Thin", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"coord1", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"coord1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"coord1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], 
                 "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Thin", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{"coord2", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"coord2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"-", 
                    RowBox[{"coord2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}], 
                 "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"plotTitle", "=", 
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "\"\<shear stress polar (stress vs. angle) trajectory\>\"", 
                 ",", "SpanFromLeft"}], "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Flatten", "@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"TraditionalForm", "[", 
                    RowBox[{"Style", "[", "#", "]"}], "]"}], "&"}], "/@", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\
\)]\)\>\"", ",", "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(max\)]\)\>\""}], 
                    "}"}]}], ",", "SpanFromLeft"}], "}"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"padIt1", "[", 
                  RowBox[{"\[Sigma]x", ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"padIt1", "[", 
                  RowBox[{"\[Sigma]y", ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"\[PlusMinus]", 
                  RowBox[{"padIt2", "[", 
                   RowBox[{"\[Tau]xy", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"padIt1", "[", 
                  RowBox[{"\[Tau]1", ",", 
                   RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Theta]p1", "+", 
                    RowBox[{"Pi", "/", "4"}]}], ")"}], "*", 
                    RowBox[{"180", "/", "Pi"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", "Degree", 
                    ",", "\"\<,\>\"", ",", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"\[Theta]p1", "+", 
                    RowBox[{
                    FractionBox["3", "4"], "Pi"}]}], ")"}], "*", 
                    RowBox[{"180", "/", "Pi"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "1"}], "}"}]}], "]"}], ",", "Degree"}], 
                   "}"}], "]"}], ",", "SpanFromLeft"}], "}"}]}], 
              "\[IndentingNewLine]", "}"}], ",", 
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], ",", 
             RowBox[{"Frame", "\[Rule]", "All"}], ",", 
             RowBox[{"FrameStyle", "->", 
              RowBox[{"Directive", "[", "Thin", "]"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Show", "[", 
           RowBox[{"p1", ",", "p2", ",", 
            RowBox[{"PlotLabel", "->", "plotTitle"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"make2DStressDiagram", "[", 
        RowBox[{
         RowBox[{"\[Sigma]x_", "?", "numeric"}], ",", 
         RowBox[{"\[Sigma]y_", "?", "numeric"}], ",", 
         RowBox[{"\[Tau]xy_", "?", "numeric"}], ",", 
         RowBox[{"\[Theta]_", "?", "numeric"}], ",", 
         RowBox[{"annotate_", "?", "bool"}], ",", 
         RowBox[{"onPositiveSideOnly_", "?", "bool"}], ",", 
         RowBox[{"limit_", "?", "numericStrictPositive"}], ",", 
         RowBox[{"gridLines_", "?", "numericPositive"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"contentSizeW_", "?", "numericStrictPositive"}], ",", 
           RowBox[{"contentSizeH_", "?", "numericStrictPositive"}]}], "}"}]}],
         "]"}], ":=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\[Sigma]1", ",", "\[Sigma]2", ",", "\[Sigma]xx", ",", "\[Sigma]yy",
            ",", "\[Tau]xyxy", ",", "r", ",", "\[Sigma]xxRightArrow", ",", 
           "\[Sigma]xxLeftArrow", ",", "\[Sigma]yyTopArrow", ",", 
           "\[Sigma]yyBottomArrow", ",", "\[Tau]RightArrow", ",", 
           "\[Tau]LeftArrow", ",", "\[Tau]TopArrow", ",", "\[Tau]BottomArrow",
            ",", "\[Tau]1", ",", "\[Tau]2", ",", "color", ",", 
           RowBox[{"textSize", "=", "11"}], ",", "colorShear", ",", 
           "\[Sigma]xxRightArrowText", ",", "\[Sigma]xxLeftArrowText", ",", 
           "\[Sigma]yyTopArrowText", ",", "\[Sigma]yyBottomArrowText", ",", 
           "\[Tau]RightArrowText", ",", "\[Tau]LeftArrowText", ",", 
           "\[Tau]TopArrowText", ",", "\[Tau]BottomArrowText", ",", 
           "rotationMatrix", ",", "coordinates", ",", "from", ",", "to", ",", 
           "rotatedAxisXText", ",", "rotatedAxisYText", ",", 
           "maxAbsoluteprincipalShearStress", ",", 
           RowBox[{"thickness", "=", "Thick"}], ",", 
           RowBox[{"eps", "=", 
            RowBox[{"10", "^", 
             RowBox[{"-", "9"}]}]}], ",", "\[Theta]p1", ",", "\[Theta]p2"}], 
          "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rotationMatrix", "=", 
           RowBox[{"RotationMatrix", "[", 
            RowBox[{"-", "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rotatedAxisXText", "=", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<x\>\"", ",", "Italic", ",", "textSize"}], "]"}], 
             ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0.3", ",", "0"}], "}"}], ".", "rotationMatrix"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"rotatedAxisYText", "=", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<y\>\"", ",", "Italic", ",", "textSize"}], "]"}], 
             ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0.3"}], "}"}], ".", "rotationMatrix"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]1", ",", "\[Theta]p1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Sigma]2", ",", "\[Theta]p2"}], "}"}]}], "}"}], "=", 
           RowBox[{"principalStresses", "[", 
            RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Tau]1", ",", "\[Tau]2"}], "}"}], "=", 
           RowBox[{"maxAndMinShearStress", "[", 
            RowBox[{"\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy"}], "]"}]}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"maxAbsoluteprincipalShearStress", "=", 
           RowBox[{"Max", "[", 
            RowBox[{"Abs", "[", 
             RowBox[{"{", 
              RowBox[{"\[Tau]1", ",", "\[Tau]2"}], "}"}], "]"}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Sigma]xx", ",", "\[Sigma]yy", ",", "\[Tau]xyxy"}], 
            "}"}], "=", 
           RowBox[{"rotationStress", "[", 
            RowBox[{
            "\[Sigma]x", ",", "\[Sigma]y", ",", "\[Tau]xy", ",", "\[Theta]"}],
             "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", "\[Sigma]1", "]"}], ">", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]xx", ",", "\[Sigma]yy"}], "}"}], "=", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Sigma]xx", ",", "\[Sigma]yy"}], "}"}], "/", 
              RowBox[{"Abs", "[", "\[Sigma]1", "]"}]}]}]}], 
           RowBox[{"(*", "scale", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
          " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"maxAbsoluteprincipalShearStress", ">", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"\[Tau]xyxy", "=", 
             RowBox[{
             "\[Tau]xyxy", "/", "maxAbsoluteprincipalShearStress"}]}]}], 
           RowBox[{"(*", "scale", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"color", "=", "Red"}], ";", "\[IndentingNewLine]", 
          RowBox[{"colorShear", "=", "Blue"}], ";", "\[IndentingNewLine]", 
          RowBox[{"r", "=", 
           RowBox[{"{", 
            RowBox[{"White", ",", 
             RowBox[{"EdgeForm", "[", 
              RowBox[{"{", 
               RowBox[{"Thin", ",", "Gray"}], "}"}], "]"}], ",", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.5"}], ",", 
                 RowBox[{"-", "0.5"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", "0.5"}], "}"}]}], "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", "--"}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Sigma]xx", "\[GreaterEqual]", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"from", "=", 
              RowBox[{"{", 
               RowBox[{"0.6", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"to", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0.6", "+", "\[Sigma]xx"}], ",", "0"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"coordinates", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"annotate", ",", "0.78", ",", "0.68"}], "]"}], "+",
                   "\[Sigma]xx"}], ",", "0"}], "}"}], ".", 
               "rotationMatrix"}]}]}], "\[IndentingNewLine]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"from", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0.6", "+", 
                 RowBox[{"Abs", "@", "\[Sigma]xx"}]}], ",", "0"}], "}"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"to", "=", 
              RowBox[{"{", 
               RowBox[{"0.6", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"coordinates", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"annotate", ",", "0.78", ",", "0.68"}], "]"}], "+", 
                  RowBox[{"Abs", "@", "\[Sigma]xx"}]}], ",", "0"}], "}"}], 
               ".", "rotationMatrix"}]}]}]}], "\[IndentingNewLine]", "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"\[Sigma]xxRightArrowText", "=", 
           RowBox[{"If", "[", 
            RowBox[{"annotate", ",", "\[IndentingNewLine]", " ", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Column", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"TraditionalForm", "[", 
                    RowBox[{
                    "Style", "[", 
                    "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", 
                    "]"}], "]"}], ",", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"\[Sigma]xx", "*", 
                    RowBox[{"Abs", "[", "\[Sigma]1", "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
                   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
                 "textSize"}], "]"}], ",", "coordinates", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", " ", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"TraditionalForm", "[", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", ",", 
                  "textSize"}], "]"}], "]"}], ",", "coordinates", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Sigma]xxRightArrow", "=", 
           RowBox[{"{", 
            RowBox[{"thickness", ",", 
             RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", "color", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"from", ",", "to"}], "}"}], ",", "0"}], "]"}]}], 
            "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", "--"}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Sigma]xx", "\[GreaterEqual]", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"from", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.6"}], ",", "0"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"to", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "0.6"}], "-", "\[Sigma]xx"}], ",", "0"}], 
               "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"coordinates", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"annotate", ",", 
                    RowBox[{"-", "0.78"}], ",", 
                    RowBox[{"-", "0.68"}]}], "]"}], "-", "\[Sigma]xx"}], ",", 
                 "0"}], "}"}], ".", "rotationMatrix"}]}]}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"from", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "0.6"}], "-", 
                 RowBox[{"Abs", "@", "\[Sigma]xx"}]}], ",", "0"}], "}"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"to", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "0.6"}], ",", "0"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"coordinates", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"annotate", ",", 
                    RowBox[{"-", "0.78"}], ",", 
                    RowBox[{"-", "0.68"}]}], "]"}], "-", 
                  RowBox[{"Abs", "@", "\[Sigma]xx"}]}], ",", "0"}], "}"}], 
               ".", "rotationMatrix"}]}]}]}], "\[IndentingNewLine]", "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"\[Sigma]xxLeftArrowText", "=", 
           RowBox[{"If", "[", 
            RowBox[{"annotate", ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Column", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"TraditionalForm", "[", 
                    RowBox[{
                    "Style", "[", 
                    "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", 
                    "]"}], "]"}], ",", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"\[Sigma]xx", "*", 
                    RowBox[{"Abs", "[", "\[Sigma]1", "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
                   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
                 "textSize"}], "]"}], ",", "coordinates"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"TraditionalForm", "[", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)\>\"", ",", 
                  "textSize"}], "]"}], "]"}], ",", "coordinates"}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Sigma]xxLeftArrow", "=", 
           RowBox[{"{", 
            RowBox[{"thickness", ",", 
             RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", "color", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"from", ",", "to"}], "}"}], ",", "0"}], "]"}]}], 
            "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", "--"}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Sigma]yy", "\[GreaterEqual]", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"from", "=", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0.6"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"to", "=", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"0.6", "+", "\[Sigma]yy"}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"coordinates", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"annotate", ",", "0.75", ",", "0.68"}], "]"}], "+",
                   "\[Sigma]yy"}]}], "}"}], ".", "rotationMatrix"}]}]}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"from", "=", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"0.6", "+", 
                 RowBox[{"Abs", "@", "\[Sigma]yy"}]}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"to", "=", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0.6"}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"coordinates", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"annotate", ",", "0.75", ",", "0.68"}], "]"}], "+", 
                  RowBox[{"Abs", "@", "\[Sigma]yy"}]}]}], "}"}], ".", 
               "rotationMatrix"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"\[Sigma]yyTopArrowText", "=", 
           RowBox[{"If", "[", 
            RowBox[{"annotate", ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Column", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"TraditionalForm", "[", 
                    RowBox[{
                    "Style", "[", 
                    "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)\>\"", 
                    "]"}], "]"}], ",", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"\[Sigma]yy", "*", 
                    RowBox[{"Abs", "[", "\[Sigma]1", "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
                   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
                 "textSize"}], "]"}], ",", "coordinates"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"TraditionalForm", "[", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)\>\"", ",", 
                  "textSize"}], "]"}], "]"}], ",", "coordinates"}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Sigma]yyTopArrow", "=", 
           RowBox[{"{", 
            RowBox[{"thickness", ",", 
             RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", "color", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"from", ",", "to"}], "}"}], ",", "0"}], "]"}]}], 
            "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", "--"}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Sigma]yy", "\[GreaterEqual]", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"from", "=", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "0.6"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"to", "=", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{
                 RowBox[{"-", "0.6"}], "-", "\[Sigma]yy"}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"coordinates", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"-", "0.75"}], "-", "\[Sigma]yy"}]}], "}"}], ".", 
               "rotationMatrix"}]}]}], "\[IndentingNewLine]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"from", "=", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{
                 RowBox[{"-", "0.6"}], "-", 
                 RowBox[{"Abs", "@", "\[Sigma]yy"}]}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"to", "=", 
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"-", "0.6"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"coordinates", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"-", "0.75"}], "-", 
                  RowBox[{"Abs", "@", "\[Sigma]yy"}]}]}], "}"}], ".", 
               "rotationMatrix"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"\[Sigma]yyBottomArrowText", "=", 
           RowBox[{"If", "[", 
            RowBox[{"annotate", ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Column", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"TraditionalForm", "[", 
                    RowBox[{
                    "Style", "[", 
                    "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)\>\"", 
                    "]"}], "]"}], ",", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{"\[Sigma]yy", "*", 
                    RowBox[{"Abs", "[", "\[Sigma]1", "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
                   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
                 "textSize"}], "]"}], ",", "coordinates"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"TraditionalForm", "[", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)\>\"", ",", 
                  "textSize"}], "]"}], "]"}], ",", "coordinates"}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Sigma]yyBottomArrow", "=", 
           RowBox[{"{", 
            RowBox[{"thickness", ",", 
             RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", "color", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"from", ",", "to"}], "}"}], ",", "0"}], "]"}]}], 
            "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", "--"}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Tau]xyxy", "\[GreaterEqual]", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"from", "=", 
              RowBox[{"{", 
               RowBox[{"0.6", ",", 
                RowBox[{"0.5", "-", "\[Tau]xyxy"}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"to", "=", 
              RowBox[{"{", 
               RowBox[{"0.6", ",", "0.5"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"coordinates", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"annotate", ",", "0.8", ",", "0.7"}], "]"}], ",", 
                 "0.45"}], "}"}], ".", "rotationMatrix"}]}]}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"from", "=", 
              RowBox[{"{", 
               RowBox[{"0.6", ",", "0.5"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"to", "=", 
              RowBox[{"{", 
               RowBox[{"0.6", ",", 
                RowBox[{"0.5", "-", 
                 RowBox[{"Abs", "@", "\[Tau]xyxy"}]}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"coordinates", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{"annotate", ",", "0.8", ",", "0.7"}], "]"}], ",", 
                 "0.45"}], "}"}], ".", "rotationMatrix"}]}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Tau]RightArrowText", "=", 
           RowBox[{"If", "[", 
            RowBox[{"annotate", ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Column", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"TraditionalForm", "[", 
                    RowBox[{
                    "Style", "[", 
                    "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\
\)]\)\>\"", "]"}], "]"}], ",", 
                    RowBox[{"padIt1", "[", 
                    RowBox[{
                    RowBox[{
                    "\[Tau]xyxy", "*", "maxAbsoluteprincipalShearStress"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
                   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
                 "textSize"}], "]"}], ",", "coordinates"}], "]"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"TraditionalForm", "[", 
                RowBox[{"Style", "[", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\
\)\>\"", ",", "textSize"}], "]"}], "]"}], ",", "coordinates"}], "]"}]}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Tau]RightArrow", "=", 
           RowBox[{"{", 
            RowBox[{"thickness", ",", 
             RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", "colorShear", 
             ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"from", ",", "to"}], "}"}], ",", "0"}], "]"}]}], 
            "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", "--"}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Tau]xyxy", "\[GreaterEqual]", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"from", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0.5", "-", "\[Tau]xyxy"}], ",", "0.6"}], "}"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"to", "=", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.6"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"coordinates", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.5", ",", "0.75"}], "}"}], ".", 
               "rotationMatrix"}]}]}], "\[IndentingNewLine]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"from", "=", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", "0.6"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"to", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0.5", "-", 
                 RowBox[{"Abs", "@", "\[Tau]xyxy"}]}], ",", "0.6"}], "}"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"coordinates", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.5", ",", "0.75"}], "}"}], ".", 
               "rotationMatrix"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"\[Tau]TopArrowText", "=", 
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"TraditionalForm", "[", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)\
\>\"", ",", "textSize"}], "]"}], "]"}], ",", "coordinates"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Tau]TopArrow", "=", 
           RowBox[{"{", 
            RowBox[{"thickness", ",", 
             RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", "colorShear", 
             ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"from", ",", "to"}], "}"}], ",", "0"}], "]"}]}], 
            "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"\[Tau]LeftArrow", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"\[Tau]xyxy", "\[GreaterEqual]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{"thickness", ",", "colorShear", ",", 
                 RowBox[{"Arrow", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.6"}], ",", 
                    RowBox[{
                    RowBox[{"-", "0.5"}], "+", "\[Tau]xyxy"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.6"}], ",", 
                    RowBox[{"-", "0.5"}]}], "}"}]}], "}"}], ",", "0"}], 
                  "]"}]}], "\[IndentingNewLine]", "}"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{"thickness", ",", "colorShear", ",", 
                 RowBox[{"Arrow", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.6"}], ",", 
                    RowBox[{"-", "0.5"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.6"}], ",", 
                    RowBox[{
                    RowBox[{"-", "0.5"}], "+", 
                    RowBox[{"Abs", "@", "\[Tau]xyxy"}]}]}], "}"}]}], "}"}], 
                   ",", "0"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
              "\[IndentingNewLine]", "]"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"\[Tau]BottomArrow", "=", 
           RowBox[{"{", 
            RowBox[{
            "thickness", ",", "\[IndentingNewLine]", "colorShear", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"\[Tau]xyxy", "\[GreaterEqual]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Arrow", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.5"}], "+", "\[Tau]xyxy"}], ",", 
                    RowBox[{"-", "0.6"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5"}], ",", 
                    RowBox[{"-", "0.6"}]}], "}"}]}], "}"}], ",", "0"}], "]"}],
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"Arrow", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.5"}], ",", 
                    RowBox[{"-", "0.6"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "0.5"}], "+", 
                    RowBox[{"Abs", "@", "\[Tau]xyxy"}]}], ",", 
                    RowBox[{"-", "0.6"}]}], "}"}]}], "}"}], ",", "0"}], 
                "]"}]}], "\[IndentingNewLine]", "]"}]}], 
            "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"from", "=", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{"limit", "/", "40"}], ")"}]}], "*", "1.9"}]}], ";", " ",
           "\[IndentingNewLine]", 
          RowBox[{"to", "=", 
           RowBox[{"-", "from"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{"r", ",", "\[Theta]", ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "@", "\[Sigma]xx"}], ">", "eps"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Rotate", "[", 
                   RowBox[{"\[Sigma]xxRightArrow", ",", "\[Theta]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", "\[Sigma]xxRightArrowText", ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{"onPositiveSideOnly", ",", 
                    RowBox[{"Sequence", " ", "@@", " ", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{"\[Sigma]xxLeftArrow", ",", "\[Theta]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}]}], 
                 "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Sequence", " ", "@@", " ", 
                 RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "]"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "@", "\[Sigma]yy"}], ">", "eps"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Rotate", "[", 
                   RowBox[{"\[Sigma]yyTopArrow", ",", "\[Theta]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", "\[Sigma]yyTopArrowText", ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{"onPositiveSideOnly", ",", 
                    RowBox[{"Sequence", " ", "@@", " ", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{"\[Sigma]yyBottomArrow", ",", "\[Theta]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "]"}]}], 
                 "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Sequence", " ", "@@", " ", 
                 RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "]"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Abs", "@", "\[Tau]xyxy"}], ">", "eps"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Rotate", "[", 
                   RowBox[{"\[Tau]RightArrow", ",", "\[Theta]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", "\[Tau]RightArrowText", ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Rotate", "[", 
                   RowBox[{"\[Tau]TopArrow", ",", "\[Theta]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{"onPositiveSideOnly", ",", 
                    RowBox[{"Sequence", " ", "@@", " ", 
                    RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Rotate", "[", 
                    RowBox[{"\[Tau]LeftArrow", ",", "\[Theta]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Rotate", "[", 
                    RowBox[{"\[Tau]BottomArrow", ",", "\[Theta]", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
                   "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Sequence", " ", "@@", " ", 
                 RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "]"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Gray", ",", "Thin", ",", "Dashed", ",", 
                RowBox[{"Rotate", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Arrowheads", "[", "Small", "]"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.25"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.25", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
                   "}"}], ",", "\[Theta]", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Gray", ",", "Thin", ",", "Dashed", ",", 
                RowBox[{"Rotate", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Arrowheads", "[", "Small", "]"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "0.25"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0.25"}], "}"}]}], "}"}], "]"}]}], 
                   "}"}], ",", "\[Theta]", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
              "\[IndentingNewLine]", "rotatedAxisXText", ",", 
              "\[IndentingNewLine]", "rotatedAxisYText", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}]}], 
             "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"from", ",", "to"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"from", " ", ",", "to"}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"contentSizeW", ",", "contentSizeH"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"10", ",", "10"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"10", ",", "10"}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"gridLines", "\[Equal]", "0"}], ",", 
              RowBox[{"GridLines", "\[Rule]", "None"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"GridLines", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Range", "[", 
                    RowBox[{"from", ",", "to", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"to", "-", "from"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"gridLines", "*", "20"}], ")"}]}]}], "]"}], ",", 
                   RowBox[{"Range", "[", 
                    RowBox[{"from", ",", "to", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"to", "-", "from"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"gridLines", "*", "20"}], ")"}]}]}], "]"}]}], 
                  "}"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"GridLinesStyle", "\[Rule]", 
                 RowBox[{"Directive", "[", 
                  RowBox[{
                   RowBox[{"Thickness", "[", ".001", "]"}], ",", 
                   "LightGray"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", "False"}]}], "\[IndentingNewLine]", 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]",
      "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.5612278116438103`*^9, 3.561227818081628*^9}, {
   3.5612292732669125`*^9, 3.5612294080355263`*^9}, {3.561229439004959*^9, 
   3.561229545685005*^9}, {3.5612295805569334`*^9, 3.561229837800599*^9}, {
   3.561229992817284*^9, 3.5612300081932364`*^9}, {3.5612304305448685`*^9, 
   3.561230467814601*^9}, {3.5612336767645855`*^9, 3.5612339737678003`*^9}, {
   3.5612340110875397`*^9, 3.561234017982915*^9}, {3.56123407873963*^9, 
   3.5612341326399746`*^9}, {3.561234664363495*^9, 3.56123476504278*^9}, {
   3.5612347954326386`*^9, 3.56123484608007*^9}, {3.5612348833293*^9, 
   3.561234888890006*^9}, {3.5612349614337177`*^9, 3.56123507437706*^9}, {
   3.5612637992436547`*^9, 3.561263810835127*^9}, 3.5612640992047453`*^9, 
   3.561264241809354*^9, {3.5612643327123966`*^9, 3.561264568048781*^9}, {
   3.561265517186306*^9, 3.561265517705872*^9}, {3.5612656114057703`*^9, 
   3.5612656414465847`*^9}, {3.561265947921502*^9, 3.561266035096072*^9}, {
   3.56131040386569*^9, 3.561310404341751*^9}, {3.5613105895942745`*^9, 
   3.561310596622167*^9}, {3.5613106452653437`*^9, 3.5613106826790953`*^9}, {
   3.5613107486524725`*^9, 3.5613108480640965`*^9}, {3.561310971707797*^9, 
   3.561311060818613*^9}, {3.561311092327114*^9, 3.561311092894186*^9}, {
   3.5613422180175743`*^9, 3.5613422756638947`*^9}, 3.5613423337662725`*^9, {
   3.5613423830405297`*^9, 3.561342412615785*^9}, {3.5613425521119995`*^9, 
   3.561342559994*^9}, {3.5613437465336714`*^9, 3.561343823394932*^9}, {
   3.56134428091803*^9, 3.5613444053793344`*^9}, {3.561344579786981*^9, 
   3.561344725473981*^9}, {3.561345265785092*^9, 3.5613454180774307`*^9}, {
   3.561345457077383*^9, 3.561345536426459*^9}, {3.561345595235427*^9, 
   3.5613456632425623`*^9}, {3.5613513824209604`*^9, 3.561351647721649*^9}, {
   3.561351696015782*^9, 3.5613517689990497`*^9}, {3.5613518228588886`*^9, 
   3.5613518589594727`*^9}, {3.5613519314841824`*^9, 
   3.5613519401492825`*^9}, {3.5613520328810587`*^9, 
   3.5613520331850967`*^9}, {3.5613520694226985`*^9, 3.561352092390115*^9}, {
   3.561352145487858*^9, 3.5613521665785356`*^9}, {3.5613522264351363`*^9, 
   3.561352252119898*^9}, {3.56135231474135*^9, 3.5613523637345715`*^9}, {
   3.5613524913167725`*^9, 3.561352538976324*^9}, {3.5613526238295994`*^9, 
   3.5613526326627207`*^9}, {3.5613527640154004`*^9, 
   3.5613528232559233`*^9}, {3.5613528563601265`*^9, 3.561352885071273*^9}, {
   3.561352968716894*^9, 3.561353008724475*^9}, {3.5613531351835327`*^9, 
   3.561353204427826*^9}, {3.5613575086108875`*^9, 3.5613575544907136`*^9}, {
   3.561359619376421*^9, 3.5613598484760127`*^9}, {3.5613598825893445`*^9, 
   3.5613598834769573`*^9}, {3.561359961797403*^9, 3.5613600793548307`*^9}, {
   3.561360131552459*^9, 3.5613603471103315`*^9}, {3.5613603843515606`*^9, 
   3.5613604115200105`*^9}, {3.5613604578993998`*^9, 
   3.5613605122818055`*^9}, {3.561360543541275*^9, 3.5613605500826054`*^9}, {
   3.5613605959704323`*^9, 3.5613606043209925`*^9}, {3.5613606432909417`*^9, 
   3.5613606704688926`*^9}, {3.561360716696263*^9, 3.5613607197761536`*^9}, {
   3.5613607560602612`*^9, 3.5613607837672796`*^9}, {3.5613902099774337`*^9, 
   3.561390222920577*^9}, {3.5613903091475267`*^9, 3.5613903920550547`*^9}, {
   3.56139386332835*^9, 3.561393944195119*^9}, {3.5613940499430475`*^9, 
   3.5613940541810856`*^9}, {3.561394086535194*^9, 3.561394162934396*^9}, {
   3.5613942148129835`*^9, 3.561394428468614*^9}, {3.5613944844647245`*^9, 
   3.561394561719535*^9}, {3.5613946116758785`*^9, 3.5613948142125974`*^9}, {
   3.5613948521019087`*^9, 3.561394874149208*^9}, {3.5613949059092417`*^9, 
   3.5613949930378056`*^9}, {3.56139582160602*^9, 3.561395906662821*^9}, {
   3.5613959481740923`*^9, 3.5613959860459013`*^9}, {3.5613960507976236`*^9, 
   3.561396164974122*^9}, {3.5613961988394227`*^9, 3.5613962049581995`*^9}, {
   3.5613963581596537`*^9, 3.561396389462629*^9}, {3.5613969771837597`*^9, 
   3.5613970311206093`*^9}, {3.5613970687358856`*^9, 3.56139708940701*^9}, {
   3.5613971210090237`*^9, 3.561397142568261*^9}, {3.5613971747683496`*^9, 
   3.561397316094296*^9}, {3.5613974195034275`*^9, 3.56139742039154*^9}, {
   3.56139746921524*^9, 3.5613974776863155`*^9}, {3.5613975342635*^9, 
   3.5613975956477947`*^9}, 3.561397657704675*^9, {3.561397701889786*^9, 
   3.561397705502245*^9}, {3.561397771568634*^9, 3.561397814150041*^9}, {
   3.5613979083430023`*^9, 3.56139794651985*^9}, {3.5613979849762335`*^9, 
   3.5613980139584136`*^9}, {3.5613980722628174`*^9, 3.56139809031911*^9}, {
   3.5613981642790017`*^9, 3.561398190842375*^9}, {3.5614076965354447`*^9, 
   3.5614078083501434`*^9}, {3.561407843672629*^9, 3.561407902461594*^9}, {
   3.5614079780386915`*^9, 3.5614080072759037`*^9}, {3.5614080590464773`*^9, 
   3.561408132134759*^9}, {3.5614082195873637`*^9, 3.5614082469608397`*^9}, {
   3.56140828783403*^9, 3.5614082933157263`*^9}, {3.5614083667045455`*^9, 
   3.561408367088594*^9}, {3.5614084032761893`*^9, 3.5614084186126366`*^9}, {
   3.5614085828604937`*^9, 3.561408584610216*^9}, {3.561408681629036*^9, 
   3.56140868693921*^9}, {3.561408719713872*^9, 3.5614087599384794`*^9}, {
   3.561408798466872*^9, 3.5614088347289767`*^9}, {3.5614088807703238`*^9, 
   3.561408918033555*^9}, 3.5614089649385114`*^9, 3.5614090178342285`*^9, {
   3.561409059994082*^9, 3.561409077737335*^9}, {3.5614091694209776`*^9, 
   3.5614092513803844`*^9}, {3.5614092848846397`*^9, 3.561409293569742*^9}, {
   3.5614093381649055`*^9, 3.5614093742834916`*^9}, {3.561409416553859*^9, 
   3.561409468802994*^9}, {3.5614270897765737`*^9, 3.561427281352401*^9}, {
   3.5614273697126207`*^9, 3.5614273785762463`*^9}, {3.561427409593685*^9, 
   3.561427517489386*^9}, {3.5614275517392354`*^9, 3.5614275582270594`*^9}, {
   3.5614276244904737`*^9, 3.561427771546647*^9}, {3.561428327435236*^9, 
   3.561428330393612*^9}, 3.5614284645186434`*^9, {3.561478389323289*^9, 
   3.561478499478777*^9}, {3.5614787260095425`*^9, 3.5614787603524036`*^9}, {
   3.561478805105586*^9, 3.5614788096316614`*^9}, {3.561478936401759*^9, 
   3.561478955437676*^9}, {3.56147900626413*^9, 3.561479135273012*^9}, {
   3.5614792930615487`*^9, 3.561479441787935*^9}, 3.561479565812684*^9, {
   3.5614796198580465`*^9, 3.5614796507039633`*^9}, {3.5614796985940447`*^9, 
   3.5614797311951847`*^9}, 3.561479761427024*^9, {3.561479793596109*^9, 
   3.5614797941711817`*^9}, {3.5614800794429064`*^9, 3.561480110873398*^9}, {
   3.561480150337909*^9, 3.561480196786807*^9}, {3.5614802392657013`*^9, 
   3.5614802920209007`*^9}, {3.561480358378327*^9, 3.561480421623858*^9}, {
   3.5614804742085357`*^9, 3.561480476391813*^9}, {3.561480550049666*^9, 
   3.5614806731773014`*^9}, {3.561480703728181*^9, 3.561480704736309*^9}, {
   3.5614816340498166`*^9, 3.561481801415069*^9}, {3.5614818504722986`*^9, 
   3.5614819142658997`*^9}, {3.561481947170078*^9, 3.5614819869206257`*^9}, {
   3.5614821999286737`*^9, 3.561482243821748*^9}, {3.5614822812019944`*^9, 
   3.561482336947073*^9}, {3.561482370666355*^9, 3.5614823952574778`*^9}, {
   3.5614824768878436`*^9, 3.561482495027647*^9}, {3.5614825270667152`*^9, 
   3.5614825288909473`*^9}, {3.56148256978664*^9, 3.5614826170581427`*^9}, {
   3.5614827029860544`*^9, 3.5614827539470253`*^9}, {3.5614827866271753`*^9, 
   3.5614828260981874`*^9}, {3.5614828980428233`*^9, 
   3.5614829668195567`*^9}, {3.5614830512987843`*^9, 
   3.5614831215622067`*^9}, {3.5614831637400627`*^9, 3.5614832111555834`*^9}, 
   3.5614832474556932`*^9, {3.5614833536286755`*^9, 3.5614833629458585`*^9}, {
   3.5614834450747876`*^9, 3.5614834745210266`*^9}, {3.5614847051317945`*^9, 
   3.5614847342734947`*^9}, {3.5614847667306166`*^9, 3.56148476935495*^9}, {
   3.561484871363903*^9, 3.5614848763230333`*^9}, {3.561484934226886*^9, 
   3.5614849429059877`*^9}, {3.561484988154234*^9, 3.5614849899629636`*^9}, 
   3.5614850260435452`*^9, {3.5614850650184946`*^9, 3.561485076474949*^9}, {
   3.5614957379427834`*^9, 3.5614958308105764`*^9}, {3.561495864420844*^9, 
   3.561495949554655*^9}, {3.561496023283517*^9, 3.561496033329293*^9}, {
   3.5614961198977857`*^9, 3.5614962494412355`*^9}, {3.5614962815228095`*^9, 
   3.5614963102594585`*^9}, {3.5614964412845964`*^9, 3.561496458178742*^9}, {
   3.5614965063873634`*^9, 3.561496512177599*^9}, {3.5614965637216444`*^9, 
   3.5614965680021877`*^9}, {3.5614966044998226`*^9, 3.5614966203973413`*^9}, 
   3.5614966579531097`*^9, {3.5614967090000925`*^9, 3.5614969311112967`*^9}, {
   3.5614969620052195`*^9, 3.561496974947363*^9}, {3.5614970158505573`*^9, 
   3.5614970210742207`*^9}, {3.5614970558441358`*^9, 
   3.5614971341605806`*^9}, {3.5614983254523554`*^9, 
   3.5614983446502934`*^9}, {3.561498478017229*^9, 3.561498490375798*^9}, {
   3.56151523606223*^9, 3.5615152589961424`*^9}, 3.561515289365999*^9, {
   3.56151532938008*^9, 3.5615156099827123`*^9}, {3.5615156782483807`*^9, 
   3.561515756840861*^9}, {3.5615158240783987`*^9, 3.561515879886986*^9}, {
   3.5615159982555165`*^9, 3.5615160131419067`*^9}, {3.5615160554732823`*^9, 
   3.561516193911862*^9}, {3.561516225807912*^9, 3.561516307150241*^9}, {
   3.561516895506453*^9, 3.561516939183999*^9}, {3.5615171556824913`*^9, 
   3.561517208347679*^9}, {3.5615172576959453`*^9, 3.5615172587650805`*^9}, {
   3.561517376064476*^9, 3.561517376543537*^9}, {3.5615174409677176`*^9, 
   3.5615174824564857`*^9}, {3.561517592303935*^9, 3.5615176888391933`*^9}, {
   3.561517744651781*^9, 3.5615178130319643`*^9}, {3.5615178619321737`*^9, 
   3.561517862761279*^9}, {3.561517909501214*^9, 3.561517909901265*^9}, {
   3.5616901020729413`*^9, 3.561690136946024*^9}, {3.561690175551078*^9, 
   3.5616901808360853`*^9}, {3.561690394916385*^9, 3.561690446876458*^9}, {
   3.5616904788215027`*^9, 3.5616904966115274`*^9}, {3.5616905329465785`*^9, 
   3.561690898447091*^9}, {3.5616909376021457`*^9, 3.5616909803172054`*^9}, {
   3.561691011387249*^9, 3.5616910847423515`*^9}, {3.5616911359224234`*^9, 
   3.5616912694186106`*^9}, 3.5616913020986557`*^9, {3.561691339753709*^9, 
   3.561691407783804*^9}, {3.5616914506788645`*^9, 3.5616916144250937`*^9}, {
   3.56169175600536*^9, 3.561691804300428*^9}, {3.5616918461235204`*^9, 
   3.561691876883563*^9}, {3.56169195296367*^9, 3.561692034707819*^9}, {
   3.5616920714478703`*^9, 3.561692074027874*^9}, {3.5616921040429163`*^9, 
   3.561692111057926*^9}, {3.5616921514479823`*^9, 3.561692155917989*^9}, {
   3.5616974487970524`*^9, 3.561697449650161*^9}, {3.561697540418187*^9, 
   3.5616978195556326`*^9}, {3.5616978598202457`*^9, 
   3.5616978733359623`*^9}, {3.56169791363608*^9, 3.5616981545356703`*^9}, {
   3.5616982541838236`*^9, 3.561698256087065*^9}, {3.5616982877795897`*^9, 
   3.5616983167352667`*^9}, {3.56169840795335*^9, 3.561698564019168*^9}, {
   3.561698620878888*^9, 3.5616986221970553`*^9}, {3.561698656596924*^9, 
   3.561698728120006*^9}, {3.561698783685562*^9, 3.561698784115116*^9}, {
   3.56170296183962*^9, 3.561702989496132*^9}, {3.5617030226473417`*^9, 
   3.5617030856233387`*^9}, {3.5617031172968607`*^9, 
   3.5617033181328635`*^9}, {3.5617033552545776`*^9, 
   3.5617034127063727`*^9}, {3.5617424500509863`*^9, 3.561742805066067*^9}, {
   3.561742858134306*^9, 3.561742923113057*^9}, 3.5617429689238744`*^9, {
   3.561752393746175*^9, 3.5617525149885707`*^9}, {3.561752545317422*^9, 
   3.561752550789117*^9}, {3.561752588717433*^9, 3.5617526122954273`*^9}, {
   3.561752659030362*^9, 3.561752736552206*^9}, {3.561752790963115*^9, 
   3.5617527967703524`*^9}, {3.5617528428242006`*^9, 
   3.5617528629812603`*^9}, {3.561753123871889*^9, 3.5617531413326063`*^9}, {
   3.561753188950653*^9, 3.5617531933727145`*^9}, {3.561753947044419*^9, 
   3.561753952708638*^9}, {3.5617540438107066`*^9, 3.561754084917426*^9}, {
   3.5617541170060015`*^9, 3.561754181669712*^9}, {3.5617542744519944`*^9, 
   3.5617543092804165`*^9}, {3.5617543798923836`*^9, 
   3.5617543837508736`*^9}, {3.561754441580717*^9, 3.561754459517995*^9}, {
   3.561754504783743*^9, 3.561754535754676*^9}, {3.5617545830061755`*^9, 
   3.561754609350521*^9}, {3.5617547178057933`*^9, 3.5617547685482364`*^9}, {
   3.561754810814604*^9, 3.5617548468541803`*^9}, {3.5617549121344695`*^9, 
   3.56175491599646*^9}, {3.561754947597973*^9, 3.561754951213932*^9}, {
   3.5617550723118095`*^9, 3.56175510413385*^9}, {3.5617551365964727`*^9, 
   3.561755151267336*^9}, 3.5617551916219597`*^9, {3.56175535951828*^9, 
   3.561755399143312*^9}, {3.5617555099803867`*^9, 3.5617555155800977`*^9}, {
   3.5617555691999063`*^9, 3.561755602743166*^9}, {3.5617556661037116`*^9, 
   3.5617556760744777`*^9}, {3.561755750203891*^9, 3.561755750698454*^9}, {
   3.561755781435357*^9, 3.5617558859421277`*^9}, {3.561755949576708*^9, 
   3.56175620694839*^9}, {3.5617644593348103`*^9, 3.561764687266754*^9}, {
   3.5617647207485056`*^9, 3.5617647796444845`*^9}, {3.5617648158380804`*^9, 
   3.5617648259423637`*^9}, {3.5617649051414204`*^9, 3.561764913570491*^9}, {
   3.561764956145397*^9, 3.5617649602349167`*^9}, {3.5617650062522597`*^9, 
   3.561765094335945*^9}, 3.561765143822729*^9, {3.561765210793233*^9, 
   3.5617652131595335`*^9}, {3.5617652603615274`*^9, 
   3.5617652615516787`*^9}, {3.5617652978277855`*^9, 
   3.5617652985133724`*^9}, {3.561765354121934*^9, 3.5617653921082573`*^9}, {
   3.5617654257935348`*^9, 3.5617655421993165`*^9}, {3.5617662279713984`*^9, 
   3.5617662324664693`*^9}, {3.56176640186348*^9, 3.561766447092723*^9}, {
   3.561766478432703*^9, 3.561766499329857*^9}, {3.5617672363609476`*^9, 
   3.561767274347271*^9}, {3.5617673051106777`*^9, 3.561767550112289*^9}, {
   3.5617676465695376`*^9, 3.561767653789954*^9}, {3.5617677028741875`*^9, 
   3.5617677148277054`*^9}, {3.5617678260073233`*^9, 3.5617679230411453`*^9}, 
   3.5617679944827166`*^9, {3.5617680292911367`*^9, 3.561768034819339*^9}, 
   3.5617680726476426`*^9, {3.5617681111715345`*^9, 3.561768112617218*^9}, {
   3.5617681549550943`*^9, 3.561768221826586*^9}, 3.5617682561869493`*^9, {
   3.561768561618734*^9, 3.561768677438941*^9}, {3.5617687334680557`*^9, 
   3.5617690053380795`*^9}, {3.5617690527961054`*^9, 
   3.5617690675679817`*^9}, {3.5617691070855*^9, 3.561769144436242*^9}, {
   3.561769174917613*^9, 3.5617691827971134`*^9}, {3.561769544240011*^9, 
   3.5617696043441434`*^9}, {3.5617696598081865`*^9, 
   3.5617696606067877`*^9}, {3.561769740830975*^9, 3.561769817824752*^9}, {
   3.5617698869805336`*^9, 3.5617698873325787`*^9}, {3.5617699524338455`*^9, 
   3.5617699982456627`*^9}, {3.5617700367010455`*^9, 3.561770119491559*^9}, {
   3.561774408604207*^9, 3.561774420071663*^9}, {3.5617744980840693`*^9, 
   3.5617745020850773`*^9}, {3.561774549371582*^9, 3.5617746359920816`*^9}, {
   3.5617746850358095`*^9, 3.561774690584014*^9}, {3.5617747410024157`*^9, 
   3.561774772084863*^9}, 3.561774841974238*^9, {3.5617760951918764`*^9, 
   3.561776135031435*^9}, {3.5617763095450954`*^9, 3.5617763363585005`*^9}, {
   3.5617763880655665`*^9, 3.5617763889771824`*^9}, {3.561776664632186*^9, 
   3.561776676183153*^9}, {3.561776712144719*^9, 3.5617767854310255`*^9}, {
   3.5617772286038017`*^9, 3.561777302517187*^9}, {3.5617773560589857`*^9, 
   3.5617773563460226`*^9}, {3.5617773980903234`*^9, 
   3.5617774163766456`*^9}, {3.561777462473999*^9, 3.5617774975524535`*^9}, {
   3.5617775300665827`*^9, 3.5617776498122883`*^9}, {3.5617777854650135`*^9, 
   3.5617778462987385`*^9}, {3.561777891473975*^9, 3.5617781364585843`*^9}, {
   3.561778168659173*^9, 3.5617782422065125`*^9}, {3.561778286334116*^9, 
   3.561778493429914*^9}, {3.5617785484268975`*^9, 3.561778578535721*^9}, {
   3.5617788705242987`*^9, 3.5617789038965364`*^9}, {3.5617803792718854`*^9, 
   3.5617806752999763`*^9}, {3.561780720726245*^9, 3.561780837156029*^9}, {
   3.5617808710518336`*^9, 3.5617810099309688`*^9}, {3.5617810424986043`*^9, 
   3.561781119986944*^9}, {3.5617813232042494`*^9, 3.561781327233261*^9}, {
   3.561781418203813*^9, 3.5617814241315656`*^9}, {3.5617825215184164`*^9, 
   3.5617825255829325`*^9}, {3.561782655539435*^9, 3.5617830567638836`*^9}, {
   3.5617831558859706`*^9, 3.5617831838035154`*^9}, {3.561783225910863*^9, 
   3.5617832269389935`*^9}, {3.5617834043730245`*^9, 
   3.5617834056206827`*^9}, {3.561783452113587*^9, 3.5617835559722753`*^9}, {
   3.5617858146155863`*^9, 3.56178582740421*^9}, {3.5617858576465507`*^9, 
   3.561785952525099*^9}, {3.561786011928142*^9, 3.5617861610325756`*^9}, {
   3.5617863778071027`*^9, 3.5617864338922243`*^9}, {3.561786481134224*^9, 
   3.5617864857163057`*^9}, {3.561786515963146*^9, 3.5617865203467026`*^9}, 
   3.5617866080863447`*^9, {3.5617866843585296`*^9, 3.561786737856823*^9}, {
   3.5617868693150163`*^9, 3.5617869144267445`*^9}, {3.5617869463572993`*^9, 
   3.5617871845045404`*^9}, {3.5617872243531003`*^9, 3.561787248084114*^9}, {
   3.561787306494031*^9, 3.5617873880118823`*^9}, {3.561787423519391*^9, 
   3.561787448905115*^9}, {3.561787514832486*^9, 3.561787580747357*^9}, {
   3.561787735376492*^9, 3.561787736468131*^9}, {3.5617878325838356`*^9, 
   3.56178785317395*^9}, {3.561787906272193*^9, 3.5617879493426623`*^9}, {
   3.561788381222004*^9, 3.561788381363022*^9}, {3.561788614792164*^9, 
   3.5617886494945707`*^9}, {3.561788704581065*^9, 3.561788748679665*^9}, 
   3.561788795342591*^9, {3.561788996206097*^9, 3.5617890019598274`*^9}, {
   3.561789339445683*^9, 3.5617893970860023`*^9}, {3.5617894824738455`*^9, 
   3.561789491496991*^9}, {3.5617895253862944`*^9, 3.5617895426629887`*^9}, {
   3.5618208328578386`*^9, 3.5618208790382023`*^9}, {3.56182091855272*^9, 
   3.5618210475170965`*^9}, {3.5618211011514072`*^9, 3.561821115134183*^9}, 
   3.561821152184888*^9, {3.5618237689136705`*^9, 3.561823773071198*^9}, {
   3.561823844206731*^9, 3.561823881982028*^9}, {3.5618239145236607`*^9, 
   3.5618239369430075`*^9}, {3.561824024878174*^9, 3.561824054318412*^9}, {
   3.561824094128467*^9, 3.5618241002942505`*^9}, {3.5618242374801702`*^9, 
   3.561824237990735*^9}, {3.561824301193261*^9, 3.5618243017593327`*^9}, {
   3.561824420695436*^9, 3.5618244668637986`*^9}, {3.5618245209626684`*^9, 
   3.561824560469185*^9}, {3.561824590583009*^9, 3.5618246438372717`*^9}, {
   3.5618247066972537`*^9, 3.5618247181392064`*^9}, {3.5618247510798893`*^9, 
   3.5618247588293734`*^9}, {3.5618248167527285`*^9, 3.561824827198555*^9}, {
   3.561824885440451*^9, 3.561824931674822*^9}, {3.561824978678791*^9, 
   3.5618253320136585`*^9}, {3.5618253641027336`*^9, 
   3.5618253696124334`*^9}, {3.561825417293988*^9, 3.5618254194877663`*^9}, {
   3.561828391823705*^9, 3.5618284506391735`*^9}, {3.561828500340485*^9, 
   3.5618285628354206`*^9}, {3.5618286483752832`*^9, 3.56182866008577*^9}, {
   3.5618286900900803`*^9, 3.5618287613211255`*^9}, {3.561828817969319*^9, 
   3.5618289785957155`*^9}, {3.5618290090940886`*^9, 3.5618291025524564`*^9}, 
   3.5618291542420197`*^9, {3.5618292476308784`*^9, 3.561829251760403*^9}, {
   3.5618293001835527`*^9, 3.561829499970422*^9}, {3.5618299137224617`*^9, 
   3.5618299482523465`*^9}, {3.561829981537073*^9, 3.5618299990332947`*^9}, {
   3.5618300367455835`*^9, 3.561830059956031*^9}, {3.5618301616269417`*^9, 
   3.561830187474724*^9}, {3.561830501282072*^9, 3.5618305287995667`*^9}, {
   3.5618306137403526`*^9, 3.5618306407877874`*^9}, {3.561832633595842*^9, 
   3.5618326774724135`*^9}, {3.561832714801654*^9, 3.561832824020023*^9}, {
   3.56183287872847*^9, 3.5618329143504934`*^9}, {3.561832963178694*^9, 
   3.5618329715132523`*^9}, {3.561833007418311*^9, 3.5618330394583797`*^9}, {
   3.5618330721220274`*^9, 3.561833262361185*^9}, {3.5618333107108245`*^9, 
   3.561833359180479*^9}, {3.5618335146612225`*^9, 3.5618335963285933`*^9}, {
   3.5618336736919174`*^9, 3.561833711253187*^9}, {3.56183376459046*^9, 
   3.5618337783697095`*^9}, {3.561840710529982*^9, 3.5618407389310884`*^9}, {
   3.5618412210843143`*^9, 3.5618415108861146`*^9}, {3.561841591206314*^9, 
   3.5618416318149705`*^9}, {3.5618416972962856`*^9, 3.561841773571471*^9}, {
   3.5618419462308965`*^9, 3.561841972179191*^9}, {3.5618420030681133`*^9, 
   3.561842049211973*^9}, {3.561842262041499*^9, 3.561842481610881*^9}, {
   3.5618425425656214`*^9, 3.5618425456460123`*^9}, {3.5618425891005306`*^9, 
   3.5618426117724094`*^9}, {3.561842657012154*^9, 3.5618427266714993`*^9}, {
   3.561842780054778*^9, 3.5618428219741015`*^9}, {3.5618428686635303`*^9, 
   3.561842871465886*^9}, {3.5618429202375793`*^9, 3.561842920628129*^9}, {
   3.561843898310779*^9, 3.561843906262789*^9}, {3.5618439649567423`*^9, 
   3.5618439651087613`*^9}, {3.561844054542118*^9, 3.561844060275846*^9}, {
   3.561844095346299*^9, 3.561844129409125*^9}, {3.5618441703573246`*^9, 
   3.561844178375843*^9}, {3.5618442425244884`*^9, 3.5618442534918814`*^9}, {
   3.5618453557258472`*^9, 3.5618453641759205`*^9}, {3.561845395287871*^9, 
   3.56184542402252*^9}, 3.5618461221466703`*^9, {3.5618463006493373`*^9, 
   3.5618463008048573`*^9}, {3.5618463553007774`*^9, 3.561846654321748*^9}, 
   3.5618467485182095`*^9, {3.561846818596108*^9, 3.5618468292944665`*^9}, {
   3.561846865003001*^9, 3.5618468656435823`*^9}, {3.561847000004644*^9, 
   3.561847032614785*^9}, {3.56184713124531*^9, 3.5618471366639977`*^9}, {
   3.5618473149751406`*^9, 3.5618473178285027`*^9}, {3.5618473501076016`*^9, 
   3.5618473806634817`*^9}, {3.5618474306863337`*^9, 
   3.5618474615622544`*^9}, {3.561847509692366*^9, 3.561847512129676*^9}, {
   3.5618602283174267`*^9, 3.561860274352772*^9}, {3.561860317836294*^9, 
   3.5618603182533464`*^9}, 3.5618603974344015`*^9, {3.561860838246378*^9, 
   3.5618608760071726`*^9}, {3.5618609373614635`*^9, 
   3.5618609624356475`*^9}, {3.5618610629749146`*^9, 
   3.5618610807636733`*^9}, {3.561861140798297*^9, 3.561861162844096*^9}, {
   3.5618673646521263`*^9, 3.5618674385935154`*^9}, {3.5618675287949696`*^9, 
   3.561867581783698*^9}, {3.561867756599897*^9, 3.561867784920493*^9}, {
   3.5618680013409753`*^9, 3.5618680308987284`*^9}, {3.561868783985358*^9, 
   3.5618687948232346`*^9}, {3.561868852627575*^9, 3.5618688545388174`*^9}, {
   3.5618688934277554`*^9, 3.5618689696814384`*^9}, {3.5618690358473406`*^9, 
   3.5618690420976343`*^9}, 3.561869099683947*^9, {3.561869131609501*^9, 
   3.5618691433849964`*^9}, {3.5618694137393265`*^9, 3.561869447271085*^9}, {
   3.5618695846670322`*^9, 3.5618696017717037`*^9}, {3.561869638077814*^9, 
   3.561869648581148*^9}, {3.5618697807209277`*^9, 3.561869796112882*^9}, {
   3.5618698462082434`*^9, 3.561869847069353*^9}, 3.5618698818087645`*^9, {
   3.5618699206741996`*^9, 3.56186992209588*^9}, {3.5618699534813657`*^9, 
   3.5618699551600785`*^9}, {3.5618699922672906`*^9, 3.561869993574957*^9}, {
   3.56187285459626*^9, 3.5618728592303486`*^9}, {3.5618729012526846`*^9, 
   3.5618729538148594`*^9}, {3.561873004338275*^9, 3.561873022928136*^9}, 
   3.561873101154569*^9, {3.561874238173952*^9, 3.561874273579448*^9}, {
   3.561915167128333*^9, 3.561915258138893*^9}, {3.5619153486502523`*^9, 
   3.5619153494302535`*^9}, {3.5619154906105013`*^9, 
   3.5619157945936356`*^9}, {3.561915975787954*^9, 3.56191623546601*^9}, {
   3.5619163076941366`*^9, 3.5619163216873612`*^9}, {3.5619172081911182`*^9, 
   3.5619174218490934`*^9}, {3.561917456075554*^9, 3.5619176057110167`*^9}, {
   3.5619177113388023`*^9, 3.5619177126648045`*^9}, {3.561917858604061*^9, 
   3.561917896387327*^9}, {3.5619179291161847`*^9, 3.561917979941074*^9}, {
   3.561918021515147*^9, 3.561918059672814*^9}, {3.561918093134873*^9, 
   3.5619181478129687`*^9}, {3.561918192460247*^9, 3.5619184013914146`*^9}, {
   3.5619184401418824`*^9, 3.5619185216832256`*^9}, {3.561918870985039*^9, 
   3.561918880953457*^9}, {3.5619358472505956`*^9, 3.561935933455717*^9}, {
   3.5619359983458076`*^9, 3.561936007980821*^9}, {3.561936055655888*^9, 
   3.5619360561058884`*^9}, {3.561936129553009*^9, 3.5619361986431055`*^9}, {
   3.5619362307031507`*^9, 3.5619363138482666`*^9}, {3.5619363476583147`*^9, 
   3.561936574583633*^9}, {3.561936617326727*^9, 3.5619366545817785`*^9}, {
   3.5619367279218817`*^9, 3.561936747646909*^9}, {3.5619367810869565`*^9, 
   3.561936854082059*^9}, {3.561936983626875*^9, 3.5619370946054697`*^9}, {
   3.561937127562928*^9, 3.561937129996533*^9}, {3.5619371832170258`*^9, 
   3.561937192389842*^9}, {3.5619372382071223`*^9, 3.5619372929330187`*^9}, {
   3.5619373697663536`*^9, 3.561937415708434*^9}, {3.561937494824973*^9, 
   3.5619375294726334`*^9}, {3.5619375820623255`*^9, 3.56193759067354*^9}, {
   3.5619376255240016`*^9, 3.561937677144492*^9}, {3.561937759171436*^9, 
   3.5619377681726513`*^9}, {3.561937853974802*^9, 3.5619378743328376`*^9}, {
   3.5619379149485083`*^9, 3.561937924526925*^9}, {3.561937968331402*^9, 
   3.561937983416628*^9}, {3.5619381814497747`*^9, 3.561938203586214*^9}, {
   3.5619383049031897`*^9, 3.561938339746851*^9}, {3.5619384386286244`*^9, 
   3.5619384464910383`*^9}, {3.561938586953685*^9, 3.561938591446493*^9}, {
   3.561938724311926*^9, 3.561938728196333*^9}, {3.561938758397986*^9, 
   3.5619387612683907`*^9}, {3.561938826866506*^9, 3.5619388408441305`*^9}, {
   3.561938921387072*^9, 3.561938946378316*^9}, {3.561946767717718*^9, 
   3.561946814612784*^9}, {3.5619468607128487`*^9, 3.5619469040379095`*^9}, {
   3.5619469493329735`*^9, 3.5619469863980255`*^9}, {3.561947045843108*^9, 
   3.5619470544131203`*^9}, {3.561947112283201*^9, 3.5619472703334227`*^9}, {
   3.561947307228474*^9, 3.5619473195884914`*^9}, 3.561947369758562*^9, {
   3.5619482336617727`*^9, 3.561948287486848*^9}, {3.561951583075856*^9, 
   3.5619515880908637`*^9}, {3.5619516473451014`*^9, 3.561951666354188*^9}, {
   3.561951717996142*^9, 3.561951732085948*^9}, {3.5619517918473663`*^9, 
   3.5619518942022204`*^9}, {3.5619519243509445`*^9, 3.561951925037984*^9}, {
   3.5619519763449187`*^9, 3.561951978899065*^9}, {3.561952023559619*^9, 
   3.5619520885323353`*^9}, {3.5619521186950607`*^9, 3.561952119429103*^9}, {
   3.56195215032787*^9, 3.561952178961508*^9}, {3.5619522293433895`*^9, 
   3.5619522297164106`*^9}, {3.5619522716928115`*^9, 
   3.5619523157453313`*^9}, {3.5619523804060297`*^9, 3.56195240139723*^9}, {
   3.5619524495529847`*^9, 3.5619530520384445`*^9}, {3.5619530856893697`*^9, 
   3.561953111681856*^9}, {3.561953155160343*^9, 3.561953221789154*^9}, {
   3.561953355345793*^9, 3.561953463760994*^9}, {3.5619546671198225`*^9, 
   3.561954670067991*^9}, {3.561954732488561*^9, 3.5619547464503593`*^9}, {
   3.561954785133572*^9, 3.561954790284867*^9}, {3.5619548272919836`*^9, 
   3.561954858402763*^9}, {3.5619549063075027`*^9, 3.561954915100006*^9}, {
   3.561955103906805*^9, 3.561955162147136*^9}, {3.5619552677831783`*^9, 
   3.5619552954497604`*^9}, {3.561955329690719*^9, 3.5619553704880524`*^9}, {
   3.5619566186204414`*^9, 3.561956624112756*^9}, {3.5619567243964915`*^9, 
   3.5619569862404685`*^9}, {3.56195709326859*^9, 3.5619571532130184`*^9}, {
   3.561957200130702*^9, 3.561957245601303*^9}, {3.561957326868951*^9, 
   3.5619573317542305`*^9}, {3.5619660148349333`*^9, 
   3.5619660178343143`*^9}, {3.561966064230206*^9, 3.5619660647317696`*^9}, {
   3.561966111518711*^9, 3.5619661128763833`*^9}, {3.5619661736991067`*^9, 
   3.561966178701242*^9}, {3.561966512389115*^9, 3.5619665233875113`*^9}, {
   3.562007208551371*^9, 3.5620072310187244`*^9}, {3.562014433128276*^9, 
   3.5620145099525313`*^9}, {3.5620146068013296`*^9, 3.562014624821118*^9}, {
   3.5620146628559475`*^9, 3.5620149983750534`*^9}, {3.562015081486107*^9, 
   3.562015085331095*^9}, {3.5620151321765437`*^9, 3.562015138901898*^9}, {
   3.5620157246172743`*^9, 3.562015742387531*^9}, {3.562016542679655*^9, 
   3.5620166343202915`*^9}, {3.562016703409565*^9, 3.562016727871171*^9}, {
   3.5620167763193235`*^9, 3.5620167923273563`*^9}, {3.562016823315791*^9, 
   3.562016941207762*^9}, {3.5620169769212966`*^9, 3.5620170238732586`*^9}, {
   3.5620190640608296`*^9, 3.562019148216516*^9}, {3.5620191814982424`*^9, 
   3.5620192472250886`*^9}, {3.562019287153659*^9, 3.562019366200697*^9}, {
   3.5620200064054923`*^9, 3.5620201189262805`*^9}, {3.5620201680395174`*^9, 
   3.562020210130862*^9}, {3.562022083461745*^9, 3.562022106321148*^9}, {
   3.5620221387882705`*^9, 3.5620221634899073`*^9}, {3.562022196934154*^9, 
   3.5620222016272497`*^9}, {3.5620223121652865`*^9, 3.562022360410913*^9}, 
   3.562022421355652*^9, {3.5620224667139115`*^9, 3.562022492395173*^9}, {
   3.562022697847262*^9, 3.5620227061568174`*^9}, {3.5620227813203616`*^9, 
   3.562022833316964*^9}, {3.5620228806619763`*^9, 3.5620229350558834`*^9}, {
   3.5620229667994146`*^9, 3.5620229761376004`*^9}, {3.5620230590721316`*^9, 
   3.5620230879738016`*^9}, {3.5620231191252575`*^9, 3.562023244694703*^9}, {
   3.5620233109276133`*^9, 3.562023312125265*^9}, 3.56202334602557*^9, {
   3.562038462373603*^9, 3.562038608251627*^9}, {3.5620386836852055`*^9, 
   3.5620386859319906`*^9}, {3.5620390307602787`*^9, 
   3.5620390782228055`*^9}, {3.562039112945715*^9, 3.562039141314317*^9}, {
   3.562039349972313*^9, 3.5620393657713194`*^9}, {3.5620394706276345`*^9, 
   3.562039472726901*^9}, {3.5620395064391823`*^9, 3.5620395983828573`*^9}, {
   3.5620397065155883`*^9, 3.5620397193802223`*^9}, {3.562039790027193*^9, 
   3.5620398105047936`*^9}, {3.562039844451604*^9, 3.562039848385604*^9}, {
   3.562040156705755*^9, 3.56204016926185*^9}, {3.562040424894811*^9, 
   3.5620405336671233`*^9}, {3.562040573905233*^9, 3.562040637204771*^9}, {
   3.562040674742038*^9, 3.5620407490414724`*^9}, {3.5620411738514166`*^9, 
   3.562041189024843*^9}, {3.562041304394493*^9, 3.5620413115834064`*^9}, {
   3.5620414065234623`*^9, 3.5620414075920978`*^9}, {3.5620416552380447`*^9, 
   3.562041671154566*^9}, {3.5620417947087555`*^9, 3.562041816911575*^9}, {
   3.5620421051176724`*^9, 3.5620421683346996`*^9}, 3.562042260593915*^9, {
   3.562042319158352*^9, 3.562042320680545*^9}, {3.562042357342701*^9, 
   3.562042390894461*^9}, {3.5620424237431326`*^9, 3.5620424997822886`*^9}, {
   3.562042889033717*^9, 3.56204289220662*^9}, {3.5620429243126965`*^9, 
   3.5620429715466948`*^9}, {3.5620430204429035`*^9, 
   3.5620430245604267`*^9}, {3.562043058344717*^9, 3.5620430584612317`*^9}, {
   3.562043192434744*^9, 3.5620432044642715`*^9}, {3.562043241819515*^9, 
   3.5620432537685328`*^9}, {3.5620439535373917`*^9, 3.562043953878935*^9}, 
   3.5620440070186834`*^9, {3.56204403825815*^9, 3.5620440425571957`*^9}, {
   3.562044273223487*^9, 3.5620443089900284`*^9}, {3.562045013981051*^9, 
   3.5620450275307713`*^9}, {3.5620451229813924`*^9, 3.562045155322999*^9}, {
   3.5620454102303686`*^9, 3.5620455954293857`*^9}, {3.562092300928231*^9, 
   3.5620923322907133`*^9}, 3.562092736160498*^9, 3.5620935028498554`*^9, {
   3.562093584084171*^9, 3.5620935947600265`*^9}, {3.5620984804704328`*^9, 
   3.562098480882985*^9}, {3.562098831411497*^9, 3.5620988375362744`*^9}, {
   3.5620988982284813`*^9, 3.5620989059094567`*^9}, {3.5620990866814117`*^9, 
   3.562099102320898*^9}, {3.562099148909314*^9, 3.5620992502091775`*^9}, {
   3.562099333068199*^9, 3.562099418158004*^9}, {3.562099487780845*^9, 
   3.5620995037623744`*^9}, {3.562099620317175*^9, 3.5620996338353915`*^9}, 
   3.562099686303054*^9, {3.5620997528305025`*^9, 3.562099764588995*^9}, {
   3.56209979651705*^9, 3.562099831516994*^9}, 3.5620998902414513`*^9, {
   3.5621000155008574`*^9, 3.562100039186365*^9}, {3.562100228085352*^9, 
   3.5621002361693783`*^9}, {3.562100439413187*^9, 3.562100488018359*^9}, 
   3.5621006601422157`*^9, 3.562100698805626*^9, {3.562100767947406*^9, 
   3.5621007932956247`*^9}, {3.5621009670506887`*^9, 3.5621009702911*^9}, {
   3.56210238118126*^9, 3.5621024158786664`*^9}, 3.562102471443222*^9, {
   3.5621025198538694`*^9, 3.562102525075032*^9}, {3.5621025884850845`*^9, 
   3.5621026100618243`*^9}, 3.5621026869415865`*^9, {3.562102738048577*^9, 
   3.5621027514757814`*^9}, {3.5621027875963683`*^9, 
   3.5621028314674397`*^9}, {3.5621029518687286`*^9, 
   3.5621029655814695`*^9}, {3.5621030173200397`*^9, 3.562103051485878*^9}, {
   3.5621098620377083`*^9, 3.562109929072221*^9}, {3.562109967094549*^9, 
   3.56210998159589*^9}, {3.5621100134989414`*^9, 3.562110103606884*^9}, {
   3.562110159346962*^9, 3.5621101774472604`*^9}, {3.5621245038164783`*^9, 
   3.5621245088441167`*^9}, {3.5621245635905685`*^9, 
   3.5621246056179056`*^9}, {3.562124667373747*^9, 3.562124788293602*^9}, {
   3.562124870380526*^9, 3.5621248705025415`*^9}, {3.5621250907640114`*^9, 
   3.562125099998684*^9}, {3.562125148016281*^9, 3.562125161149449*^9}, {
   3.562125208495961*^9, 3.562125217960163*^9}, 3.562125347045555*^9, {
   3.5621254134859915`*^9, 3.562125485796674*^9}, {3.5621255222868075`*^9, 
   3.56212557908652*^9}, {3.5621256618480296`*^9, 3.56212577509591*^9}, {
   3.562125838896512*^9, 3.562125927121215*^9}, {3.562126027136915*^9, 
   3.5621260637965703`*^9}, {3.562126099583615*^9, 3.56212612112335*^9}, {
   3.562126168175325*^9, 3.562126199693327*^9}, {3.562126248341505*^9, 
   3.5621262676794605`*^9}, {3.5621264593127947`*^9, 3.562126483141821*^9}, {
   3.562126730448224*^9, 3.5621269548277173`*^9}, {3.5621270174381676`*^9, 
   3.5621270389058933`*^9}, {3.562127112807778*^9, 3.5621272916324863`*^9}, {
   3.562127351805127*^9, 3.562127384141733*^9}, {3.562127419674245*^9, 
   3.562127419926277*^9}, 3.562127481973156*^9, {3.562127564643654*^9, 
   3.5621275708079367`*^9}, {3.5621276008272486`*^9, 3.562127694367627*^9}, {
   3.5621277259226336`*^9, 3.5621278320446095`*^9}, {3.562127938226093*^9, 
   3.562127971789355*^9}, {3.5621280034048696`*^9, 3.5621280096386614`*^9}, {
   3.5621283669065285`*^9, 3.5621283670730495`*^9}, {3.5621286869491687`*^9, 
   3.562128707310254*^9}, {3.5621287786258097`*^9, 3.562128786058754*^9}, 
   3.562128894126977*^9, {3.5621301959262843`*^9, 3.562130241843115*^9}, 
   3.562130278034711*^9, {3.562130382426467*^9, 3.5621304448633957`*^9}, {
   3.5621304786481857`*^9, 3.562130582366356*^9}, {3.5621306292048035`*^9, 
   3.562130666124992*^9}, {3.562130757878643*^9, 3.562130890331463*^9}, {
   3.5621309439882765`*^9, 3.5621310753999634`*^9}, {3.5621311097588263`*^9, 
   3.562131121267788*^9}, {3.562131164487276*^9, 3.5621311775634365`*^9}, 
   3.56213571123814*^9, {3.562138194221439*^9, 3.5621381953035765`*^9}, {
   3.5621382289323463`*^9, 3.562138233438419*^9}, {3.562138328512992*^9, 
   3.562138333941681*^9}, {3.562138404682664*^9, 3.5621384169472218`*^9}, {
   3.5621386198489866`*^9, 3.562138685419813*^9}, {3.5621387345810556`*^9, 
   3.562138767810275*^9}, {3.5621388078608613`*^9, 3.562138833892167*^9}, {
   3.5621388698302307`*^9, 3.5621388905438604`*^9}, {3.562138921185752*^9, 
   3.5621389238530903`*^9}, 3.56213987814427*^9, 3.562141752659303*^9, {
   3.5621418324764385`*^9, 3.5621422114010563`*^9}, {3.562142348473962*^9, 
   3.5621423677219057`*^9}, {3.5621424086266003`*^9, 
   3.5621424946085186`*^9}, {3.562142527258665*^9, 3.56214255612033*^9}, {
   3.5621425861516433`*^9, 3.5621428291980057`*^9}, {3.5621428684164863`*^9, 
   3.56214288971119*^9}, {3.5621429364421244`*^9, 3.562142955111995*^9}, {
   3.562142985530858*^9, 3.562143091348795*^9}, {3.5621431276404037`*^9, 
   3.5621431784738584`*^9}, {3.5621468277327557`*^9, 
   3.5621468833078127`*^9}, {3.562147119741336*^9, 3.562147121542565*^9}, {
   3.5621471526660166`*^9, 3.5621473163603034`*^9}, {3.5621473562768717`*^9, 
   3.562147369212015*^9}, {3.5621475390580826`*^9, 3.5621475494624033`*^9}, {
   3.5621476107836905`*^9, 3.5621476545702505`*^9}, 3.5621477161040645`*^9, {
   3.5621479167200394`*^9, 3.5621480434431314`*^9}, {3.562148101225969*^9, 
   3.5621481062366047`*^9}, {3.562148318302034*^9, 3.5621483744301615`*^9}, {
   3.5621486776206617`*^9, 3.5621486965045595`*^9}, {3.562148777498844*^9, 
   3.562148786073433*^9}, {3.562148823086133*^9, 3.5621488346396008`*^9}, {
   3.562168746433077*^9, 3.5621690213284845`*^9}, {3.562169063040781*^9, 
   3.562169069205564*^9}, 3.562169169075246*^9, {3.5621693993829913`*^9, 
   3.562169399894556*^9}, 3.5621694700629663`*^9, {3.562169526453127*^9, 
   3.5621695845665064`*^9}, 3.562169618285288*^9, {3.562169672202635*^9, 
   3.562169678275906*^9}, {3.562169733387904*^9, 3.5621697615874853`*^9}, {
   3.5621723259421167`*^9, 3.562172347884903*^9}, {3.562172400763618*^9, 
   3.5621724271509686`*^9}, 3.562178492270141*^9, {3.562178530260465*^9, 
   3.5621785495549154`*^9}, {3.562178582949156*^9, 3.562178649469603*^9}, {
   3.562178770320449*^9, 3.562178883402809*^9}, {3.562179660315464*^9, 
   3.5621796679174294`*^9}, {3.562179724016553*^9, 3.562179747807074*^9}, {
   3.5621798531389494`*^9, 3.5621799351718664`*^9}, {3.562194569036631*^9, 
   3.5621946498263903`*^9}, {3.5621950771181498`*^9, 3.562195184875333*^9}, {
   3.5624429019148026`*^9, 3.5624429026948805`*^9}, {3.562687161907879*^9, 
   3.562687191485998*^9}, {3.5626872326266317`*^9, 3.562687392593623*^9}, {
   3.5626874697623796`*^9, 3.5626874709288282`*^9}, 3.562866032171628*^9, {
   3.562895639817505*^9, 3.562895676204126*^9}, {3.5628958067392015`*^9, 
   3.562895807022238*^9}, 3.562895874883855*^9, {3.562895910685401*^9, 
   3.562895934210388*^9}, {3.563183046364085*^9, 3.563183055035186*^9}, {
   3.563183154653336*^9, 3.563183164364569*^9}, {3.563183332705946*^9, 
   3.5631835023234844`*^9}, {3.5631835947197175`*^9, 3.56318370506973*^9}, {
   3.563183913528201*^9, 3.56318392753898*^9}, {3.5631839806607256`*^9, 
   3.5631840290918756`*^9}, {3.563184214694444*^9, 3.5631842290227633`*^9}, {
   3.563184260998824*^9, 3.563184472026621*^9}, {3.5631845137314167`*^9, 
   3.563184748802267*^9}, {3.5631848545196915`*^9, 3.563184855504317*^9}, {
   3.5631849300802865`*^9, 3.5631849525651417`*^9}, {3.5631849887727394`*^9, 
   3.563184990948516*^9}, {3.5867668756343794`*^9, 3.5867669018847127`*^9}, {
   3.5867669560485907`*^9, 3.586766974808973*^9}, {3.5867670289248447`*^9, 
   3.5867670853630114`*^9}, {3.5867673179210424`*^9, 
   3.5867673738186407`*^9}, {3.586767533542923*^9, 3.5867676041558895`*^9}, {
   3.5867677008036623`*^9, 3.586767701420241*^9}, {3.5867677524172163`*^9, 
   3.586767781533414*^9}, {3.5867678914763746`*^9, 3.586767907276881*^9}, {
   3.5867679652697453`*^9, 3.586768005061798*^9}, {3.586768091266745*^9, 
   3.586768092557409*^9}, {3.586768230708952*^9, 3.586768261887411*^9}, {
   3.5867683652860413`*^9, 3.5867683750717835`*^9}, {3.5867684055531545`*^9, 
   3.5867684532447104`*^9}, 3.586768487294034*^9, {3.586768523353113*^9, 
   3.5867685518517323`*^9}, {3.5867686353253317`*^9, 3.586768643871917*^9}, {
   3.586975200887827*^9, 3.5869752123897877`*^9}, {3.5869752540275745`*^9, 
   3.5869752553162384`*^9}, {3.586975516730934*^9, 3.586975561077565*^9}, {
   3.5869755958789845`*^9, 3.5869756003055463`*^9}, {3.5869758365560465`*^9, 
   3.586975854971385*^9}, {3.586975961615427*^9, 3.58697597731192*^9}, {
   3.586976159262525*^9, 3.586976167609085*^9}, {3.586976301977648*^9, 
   3.5869763581652822`*^9}, {3.586976392428633*^9, 3.586976691080557*^9}, {
   3.586976903215495*^9, 3.586976941726385*^9}, {3.5869770851330957`*^9, 
   3.5869771136887217`*^9}, {3.586977569191063*^9, 3.586977602331271*^9}, {
   3.5869777690449414`*^9, 3.5869778799590254`*^9}, {3.586978056015382*^9, 
   3.5869780656196012`*^9}, {3.5869781341838083`*^9, 3.586978136521105*^9}, {
   3.5869781868809996`*^9, 3.58697822334313*^9}, {3.586978256660361*^9, 
   3.586978295204255*^9}, {3.5869791815723095`*^9, 3.586979185836851*^9}, {
   3.586986495769595*^9, 3.5869865372318597`*^9}, {3.58698671064038*^9, 
   3.5869867395525513`*^9}, {3.586986796385268*^9, 3.586986892168431*^9}, {
   3.5869869464328213`*^9, 3.5869871600199437`*^9}, {3.586987312985868*^9, 
   3.5869874402000217`*^9}, {3.586987479573022*^9, 3.5869877867060227`*^9}, {
   3.586988002371909*^9, 3.586988023896642*^9}, {3.5869880773964357`*^9, 
   3.5869881327554655`*^9}, {3.586988197201149*^9, 3.586988226869416*^9}, {
   3.5869882696708517`*^9, 3.58698827186313*^9}, {3.586988335643729*^9, 
   3.5869885886623583`*^9}, {3.5869886233457623`*^9, 
   3.5869886586432447`*^9}, {3.5869889282424793`*^9, 
   3.5869890335733547`*^9}, {3.586989098514101*^9, 3.5869892728232355`*^9}, {
   3.586989322247512*^9, 3.5869893366463404`*^9}, {3.5869894657727375`*^9, 
   3.5869894694517045`*^9}, {3.5869895925213323`*^9, 3.58698960817432*^9}, {
   3.5869896827317877`*^9, 3.586989776803233*^9}, {3.5869907824999404`*^9, 
   3.586990786096897*^9}, {3.5869909585082903`*^9, 3.586990963217889*^9}, {
   3.586991032640204*^9, 3.5869912538662963`*^9}, {3.5869913112440825`*^9, 
   3.5869913123967285`*^9}, {3.5869913486033263`*^9, 3.586991543482073*^9}, {
   3.586991599007124*^9, 3.5869916519188423`*^9}, {3.5869923031210346`*^9, 
   3.586992398476143*^9}, {3.586992448937551*^9, 3.5869924584162545`*^9}, {
   3.586992491106906*^9, 3.5869925664214697`*^9}, 3.5869925976829395`*^9, {
   3.5869926485163946`*^9, 3.586992684676486*^9}, {3.5869927242205076`*^9, 
   3.586992828589761*^9}, {3.5869928669641333`*^9, 3.5869928993362446`*^9}, {
   3.586992933977643*^9, 3.586992949637632*^9}, {3.5870080294835973`*^9, 
   3.587008031573363*^9}, 3.587008132684702*^9, {3.5870081812998753`*^9, 
   3.587008182092476*^9}, {3.5870082488119483`*^9, 3.587008265161525*^9}, {
   3.587008341770753*^9, 3.587008344072545*^9}, {3.5870084165647507`*^9, 
   3.587008421860923*^9}, {3.5870084939335747`*^9, 3.587008522833745*^9}, {
   3.587008668996805*^9, 3.5870086986285677`*^9}, {3.5870087330879436`*^9, 
   3.5870087334874945`*^9}, 3.5870087668757343`*^9, {3.587008814754814*^9, 
   3.5870088218387136`*^9}, {3.587008972498845*^9, 3.5870090105206733`*^9}, {
   3.5870090798909817`*^9, 3.5870090825628214`*^9}, {3.5870102569614515`*^9, 
   3.5870103027687683`*^9}, {3.587011348440051*^9, 3.58701135323166*^9}, {
   3.5870114212402954`*^9, 3.5870114458939266`*^9}, {3.587011505546501*^9, 
   3.5870115272572584`*^9}, {3.58701171375244*^9, 3.5870117344525685`*^9}, {
   3.5870117852445183`*^9, 3.5870117853785353`*^9}, {3.587013124592094*^9, 
   3.587013132956156*^9}, {3.587013191362073*^9, 3.587013198619994*^9}, {
   3.5870132682918415`*^9, 3.587013285860072*^9}, {3.5870133364659986`*^9, 
   3.587013337192091*^9}, {3.587013373826743*^9, 3.5870134378398714`*^9}, {
   3.587013480872836*^9, 3.587013563696853*^9}, {3.587013599238366*^9, 
   3.58701366518174*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`angleSelection$$ = 
    "slider", $CellContext`annotate$$ = True, $CellContext`gridLines$$ = 
    0.5, $CellContext`limit$$ = 30, $CellContext`maxShearPlane$$ = 
    False, $CellContext`onPositiveSideOnly$$ = True, $CellContext`plotType$$ =
     "Mohr circle", $CellContext`principalPlaneAngle$$ = 
    False, $CellContext`specificPlaneAngle$$ = 
    "first principal plane", $CellContext`\[Theta]$$ = 
    45, $CellContext`\[Sigma]x$$ = 14, $CellContext`\[Sigma]x1$$ = 
    15.699598555359728`, $CellContext`\[Sigma]y$$ = 
    4, $CellContext`\[Sigma]y1$$ = 
    2.300401444640272, $CellContext`\[Tau]xy$$ = 
    10, $CellContext`\[Tau]xy1$$ = -8.950719479294492, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Sigma]x$$], 14, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Sigma]y$$], 4, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Tau]xy$$], 10, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Theta]$$], 45, ""}, -360, 360, 0.1}, {{
       Hold[$CellContext`limit$$], 30, ""}, 5, 50, 0.1}, {{
       Hold[$CellContext`gridLines$$], 0.5, ""}, 0, 1, 0.1}, {
      Hold[
       Grid[{{
          Grid[{{
             Style[
              Row[{"stresses at 0", Degree}], 12], SpanFromLeft}, {
            "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
             Manipulate`Place[1], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Sigma]x$$, {3, 1}]], 11]}, {
            "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
             Manipulate`Place[2], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Sigma]y$$, {3, 1}]], 11]}, {
            "\!\(\*SubscriptBox[\(\[Tau]\), \(xy\)]\)", 
             Manipulate`Place[3], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Tau]xy$$, {3, 1}]], 11]}, {
             Style[
              Row[{
                Text[
                 TraditionalForm[
                  HoldForm[{{
                    Subscript[$CellContext`\[Sigma], $CellContext`x], 
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y]}, {
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y], 
                    Subscript[$CellContext`\[Sigma], $CellContext`y]}}]]], 
                " = ", 
                Dynamic[
                 TraditionalForm[{{
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]x$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}]}, {
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]y$$], {3, 1}]}}]]}], 11], 
             SpanFromLeft}}, Spacings -> {0.5, 0.5}, Alignment -> Center, 
           Frame -> True, FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]]}, {
          Grid[{{
             Style["select plot type", 12], SpanFromLeft}, {
             PopupMenu[
              Dynamic[$CellContext`plotType$$], {
              "stress section" -> Style["stress section", 11], "Mohr circle" -> 
               Style["Mohr circle", 11], "Mohr circle/stress section" -> 
               Style["Mohr circle/stress section", 11], 
               "normal stress trajectory" -> 
               Style["normal stress trajectory", 11], 
               "shear stress trajectory" -> 
               Style["shear stress trajectory", 11], 
               "normal/shear trajectory" -> 
               Style["normal/shear trajectory", 11]}, ImageSize -> All, 
              ContinuousAction -> False], SpanFromLeft}, {
             Row[{
               Style["annotate", 12], 
               Spacer[1], 
               Checkbox[
                Dynamic[$CellContext`annotate$$], Enabled -> Dynamic[
                  
                  Or[$CellContext`plotType$$ == 
                   "stress section", $CellContext`plotType$$ == 
                   "Mohr circle/stress section"]]]}], 
             Row[{
               Style[
                
                Column[{"display stresses on", "positive sides only"}, 
                 Alignment -> Left], 11], 
               Spacer[1], 
               Checkbox[
                Dynamic[$CellContext`onPositiveSideOnly$$], Enabled -> Dynamic[
                  
                  Or[$CellContext`plotType$$ == 
                   "stress section", $CellContext`plotType$$ == 
                   "Mohr circle/stress section"]]]}], SpanFromLeft}}, 
           Spacings -> {0.5, 0.5}, Alignment -> Center, Frame -> True, 
           FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]], SpanFromLeft}, {
          Grid[{{
             Grid[{{
                Row[{
                  Style["rotate to new angle", 12]}], SpanFromLeft}, {
                RadioButtonBar[
                 Dynamic[$CellContext`angleSelection$$], {
                 "slider" -> "", "specific plane" -> ""}, Appearance -> 
                 "Vertical", Enabled -> Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section", $CellContext`plotType$$ == 
                    "Mohr circle"]]], 
                Grid[{{
                   Row[{
                    Manipulate`Place[4], 
                    Spacer[4], 
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt1[$CellContext`\[Theta]$$, {4, 1}]], 
                    Degree}], 11]}], 
                   Button[
                    Row[{"0", Degree}], $CellContext`\[Theta]$$ = 0, 
                    Appearance -> "Palette", Background -> 
                    RGBColor[0.87, 0.94, 1], ImageSize -> {25, 18}]}, {
                   Row[{
                    PopupMenu[
                    
                    Dynamic[$CellContext`specificPlaneAngle$$, \
{$CellContext`specificPlaneAngle$$ = #; $CellContext`\[Theta]$$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]}& \
], {"first principal plane" -> Style["first principal plane", 11], 
                    "second principal plane" -> 
                    Style["second principal plane", 11], 
                    "first maximum shear plane" -> 
                    Style["first shear plane", 11], 
                    "second maximum shear plane" -> 
                    Style["second shear plane", 11]}, ImageSize -> All, 
                    Enabled -> Dynamic[
                    And[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"], \
$CellContext`angleSelection$$ == "specific plane"]]]}], SpanFromLeft}}]}}, 
              Spacings -> {0.15, 0.5}, Alignment -> Center, Frame -> None]}, {
             Style[
              Row[{
                Text[
                 Style[
                  TraditionalForm[
                   HoldForm[{{
                    Subscript[
                    Derivative[1][$CellContext`\[Sigma]], $CellContext`x], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, \
$CellContext`y]}, {
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, $CellContext`y], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Sigma]], $CellContext`y]}}]]]], " = ", 
                Dynamic[
                 TraditionalForm[{{
                    $CellContext`padIt1[$CellContext`\[Sigma]x1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}]}, {
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Sigma]y1$$, {3, 
                    1}]}}]]}], 11]}}, Spacings -> {0.5, 0.5}, Alignment -> 
           Center, Frame -> True, FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]]}, {
          Grid[{{
             Grid[{{
                Style["zoom", 12], 
                Spacer[13], 
                Manipulate`Place[5], 
                Spacer[12]}, {"", 
                Style[
                 Row[{"in", 
                   Spacer[75], "out"}], 11], SpanFromLeft}}, 
              Spacings -> {0.1, 0.1}, Alignment -> Center, Frame -> True, 
              FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]]}, {
             Grid[{{
                Style["gridlines", 12], Manipulate`Place[6] Spacer[8]}, {"", 
                Style[
                 Row[{"less", 
                   Spacer[70], "more"}], 11]}}, Spacings -> {0.1, 0.1}, 
              Alignment -> Center, Frame -> True, FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]]}}, Spacings -> {0.1, 0.5}, Alignment -> Left,
            Frame -> None], SpanFromLeft}}, Spacings -> {0.2, 1.4}, Alignment -> 
        Center]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`annotate$$], True}, 0}, {{
       Hold[$CellContext`plotType$$], "Mohr circle"}, 0}, {{
       Hold[$CellContext`onPositiveSideOnly$$], True}, 0}, {{
       Hold[$CellContext`principalPlaneAngle$$], False}, 0}, {{
       Hold[$CellContext`maxShearPlane$$], False}, 0}, {{
       Hold[$CellContext`specificPlaneAngle$$], "first principal plane"}, 
      0}, {{
       Hold[$CellContext`angleSelection$$], "slider"}, 0}, {{
       Hold[$CellContext`\[Sigma]x1$$], 0}, 0}, {{
       Hold[$CellContext`\[Sigma]y1$$], 0}, 0}, {{
       Hold[$CellContext`\[Tau]xy1$$], 0}, 0}}, Typeset`size$$ = {
    425., {209., 216.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`\[Sigma]x$302854$$ = 
    0, $CellContext`\[Sigma]y$302855$$ = 0, $CellContext`\[Tau]xy$302856$$ = 
    0, $CellContext`\[Theta]$302857$$ = 0, $CellContext`limit$302858$$ = 
    0, $CellContext`gridLines$302859$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`angleSelection$$ = 
        "slider", $CellContext`annotate$$ = True, $CellContext`gridLines$$ = 
        0.5, $CellContext`limit$$ = 30, $CellContext`maxShearPlane$$ = 
        False, $CellContext`onPositiveSideOnly$$ = 
        True, $CellContext`plotType$$ = 
        "Mohr circle", $CellContext`principalPlaneAngle$$ = 
        False, $CellContext`specificPlaneAngle$$ = 
        "first principal plane", $CellContext`\[Theta]$$ = 
        45, $CellContext`\[Sigma]x$$ = 14, $CellContext`\[Sigma]x1$$ = 
        0, $CellContext`\[Sigma]y$$ = 4, $CellContext`\[Sigma]y1$$ = 
        0, $CellContext`\[Tau]xy$$ = 10, $CellContext`\[Tau]xy1$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]x$302854$$, 0], 
        Hold[$CellContext`\[Sigma]y$$, $CellContext`\[Sigma]y$302855$$, 0], 
        Hold[$CellContext`\[Tau]xy$$, $CellContext`\[Tau]xy$302856$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$302857$$, 0], 
        Hold[$CellContext`limit$$, $CellContext`limit$302858$$, 0], 
        Hold[$CellContext`gridLines$$, $CellContext`gridLines$302859$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`z$}, $CellContext`z$ = $CellContext`\[Theta]$$ (Pi/
           180); If[
          
          Or[$CellContext`plotType$$ == 
           "stress section", $CellContext`plotType$$ == 
           "Mohr circle/stress section", $CellContext`plotType$$ == 
           "Mohr circle"], 
          If[$CellContext`angleSelection$$ == 
           "specific plane", $CellContext`z$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]; \
$CellContext`\[Theta]$$ = $CellContext`z$ (180./
              Pi)]]; {$CellContext`\[Sigma]x1$$, $CellContext`\[Sigma]y1$$, \
$CellContext`\[Tau]xy1$$} = $CellContext`rotationStress[
           N[$CellContext`\[Sigma]x$$], 
           N[$CellContext`\[Sigma]y$$], 
           N[$CellContext`\[Tau]xy$$], 
           N[$CellContext`\[Theta]$$]]; Text[
          $CellContext`makeDiagrams[
           N[$CellContext`\[Sigma]x$$], 
           N[$CellContext`\[Sigma]y$$], 
           
           N[$CellContext`\[Tau]xy$$], $CellContext`z$, \
$CellContext`annotate$$, $CellContext`onPositiveSideOnly$$, \
$CellContext`plotType$$, $CellContext`limit$$, $CellContext`gridLines$$]]], 
      "Specifications" :> {{{$CellContext`\[Sigma]x$$, 14, ""}, -20, 20, 0.1, 
         ImageSize -> Tiny, ControlPlacement -> 
         1}, {{$CellContext`\[Sigma]y$$, 4, ""}, -20, 20, 0.1, ImageSize -> 
         Tiny, ControlPlacement -> 
         2}, {{$CellContext`\[Tau]xy$$, 10, ""}, -20, 20, 0.1, ImageSize -> 
         Tiny, ControlPlacement -> 
         3}, {{$CellContext`\[Theta]$$, 45, ""}, -360, 360, 0.1, ImageSize -> 
         Tiny, Enabled -> Dynamic[
           And[
            
            Or[$CellContext`plotType$$ == 
             "stress section", $CellContext`plotType$$ == 
             "Mohr circle/stress section", $CellContext`plotType$$ == 
             "Mohr circle"], $CellContext`angleSelection$$ == "slider"]], 
         ControlPlacement -> 4}, {{$CellContext`limit$$, 30, ""}, 5, 50, 0.1, 
         ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`gridLines$$, 0.5, ""}, 0, 1, 0.1, ImageSize -> 
         Small, ControlPlacement -> 6}, 
        Grid[{{
           Grid[{{
              Style[
               Row[{"stresses at 0", Degree}], 12], SpanFromLeft}, {
             "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
              Manipulate`Place[1], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Sigma]x$$, {3, 1}]], 
               11]}, {"\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
              Manipulate`Place[2], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Sigma]y$$, {3, 1}]], 
               11]}, {"\!\(\*SubscriptBox[\(\[Tau]\), \(xy\)]\)", 
              Manipulate`Place[3], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Tau]xy$$, {3, 1}]], 11]}, {
              Style[
               Row[{
                 Text[
                  TraditionalForm[
                   HoldForm[{{
                    Subscript[$CellContext`\[Sigma], $CellContext`x], 
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y]}, {
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y], 
                    Subscript[$CellContext`\[Sigma], $CellContext`y]}}]]], 
                 " = ", 
                 Dynamic[
                  TraditionalForm[{{
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]x$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}]}, {
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]y$$], {3, 1}]}}]]}], 11], 
              SpanFromLeft}}, Spacings -> {0.5, 0.5}, Alignment -> Center, 
            Frame -> True, FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]]}, {
           Grid[{{
              Style["select plot type", 12], SpanFromLeft}, {
              PopupMenu[
               Dynamic[$CellContext`plotType$$], {
               "stress section" -> Style["stress section", 11], "Mohr circle" -> 
                Style["Mohr circle", 11], "Mohr circle/stress section" -> 
                Style["Mohr circle/stress section", 11], 
                "normal stress trajectory" -> 
                Style["normal stress trajectory", 11], 
                "shear stress trajectory" -> 
                Style["shear stress trajectory", 11], 
                "normal/shear trajectory" -> 
                Style["normal/shear trajectory", 11]}, ImageSize -> All, 
               ContinuousAction -> False], SpanFromLeft}, {
              Row[{
                Style["annotate", 12], 
                Spacer[1], 
                Checkbox[
                 Dynamic[$CellContext`annotate$$], Enabled -> Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"]]]}], 
              Row[{
                Style[
                 
                 Column[{"display stresses on", "positive sides only"}, 
                  Alignment -> Left], 11], 
                Spacer[1], 
                Checkbox[
                 Dynamic[$CellContext`onPositiveSideOnly$$], Enabled -> 
                 Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"]]]}], SpanFromLeft}}, 
            Spacings -> {0.5, 0.5}, Alignment -> Center, Frame -> True, 
            FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]], SpanFromLeft}, {
           Grid[{{
              Grid[{{
                 Row[{
                   Style["rotate to new angle", 12]}], SpanFromLeft}, {
                 RadioButtonBar[
                  Dynamic[$CellContext`angleSelection$$], {
                  "slider" -> "", "specific plane" -> ""}, Appearance -> 
                  "Vertical", Enabled -> Dynamic[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section", $CellContext`plotType$$ == 
                    "Mohr circle"]]], 
                 Grid[{{
                    Row[{
                    Manipulate`Place[4], 
                    Spacer[4], 
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt1[$CellContext`\[Theta]$$, {4, 1}]], 
                    Degree}], 11]}], 
                    Button[
                    Row[{"0", Degree}], $CellContext`\[Theta]$$ = 0, 
                    Appearance -> "Palette", Background -> 
                    RGBColor[0.87, 0.94, 1], ImageSize -> {25, 18}]}, {
                    Row[{
                    PopupMenu[
                    
                    Dynamic[$CellContext`specificPlaneAngle$$, \
{$CellContext`specificPlaneAngle$$ = #; $CellContext`\[Theta]$$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]}& \
], {"first principal plane" -> Style["first principal plane", 11], 
                    "second principal plane" -> 
                    Style["second principal plane", 11], 
                    "first maximum shear plane" -> 
                    Style["first shear plane", 11], 
                    "second maximum shear plane" -> 
                    Style["second shear plane", 11]}, ImageSize -> All, 
                    Enabled -> Dynamic[
                    And[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"], \
$CellContext`angleSelection$$ == "specific plane"]]]}], SpanFromLeft}}]}}, 
               Spacings -> {0.15, 0.5}, Alignment -> Center, Frame -> None]}, {
              Style[
               Row[{
                 Text[
                  Style[
                   TraditionalForm[
                    HoldForm[{{
                    Subscript[
                    Derivative[1][$CellContext`\[Sigma]], $CellContext`x], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, \
$CellContext`y]}, {
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, $CellContext`y], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Sigma]], $CellContext`y]}}]]]], " = ", 
                 Dynamic[
                  TraditionalForm[{{
                    $CellContext`padIt1[$CellContext`\[Sigma]x1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}]}, {
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Sigma]y1$$, {3, 
                    1}]}}]]}], 11]}}, Spacings -> {0.5, 0.5}, Alignment -> 
            Center, Frame -> True, FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]]}, {
           Grid[{{
              Grid[{{
                 Style["zoom", 12], 
                 Spacer[13], 
                 Manipulate`Place[5], 
                 Spacer[12]}, {"", 
                 Style[
                  Row[{"in", 
                    Spacer[75], "out"}], 11], SpanFromLeft}}, 
               Spacings -> {0.1, 0.1}, Alignment -> Center, Frame -> True, 
               FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}, {
              Grid[{{
                 Style["gridlines", 12], Manipulate`Place[6] Spacer[8]}, {"", 
                 Style[
                  Row[{"less", 
                    Spacer[70], "more"}], 11]}}, Spacings -> {0.1, 0.1}, 
               Alignment -> Center, Frame -> True, FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}}, Spacings -> {0.1, 0.5}, Alignment -> 
            Left, Frame -> None], SpanFromLeft}}, Spacings -> {0.2, 1.4}, 
         Alignment -> Center], {{$CellContext`annotate$$, True}, 0, 
         ControlType -> None}, {{$CellContext`plotType$$, "Mohr circle"}, 0, 
         ControlType -> None}, {{$CellContext`onPositiveSideOnly$$, True}, 0, 
         ControlType -> None}, {{$CellContext`principalPlaneAngle$$, False}, 
         0, ControlType -> None}, {{$CellContext`maxShearPlane$$, False}, 0, 
         ControlType -> 
         None}, {{$CellContext`specificPlaneAngle$$, "first principal plane"},
          0, ControlType -> None}, {{$CellContext`angleSelection$$, "slider"},
          0, ControlType -> None}, {{$CellContext`\[Sigma]x1$$, 0}, 0, 
         ControlType -> None}, {{$CellContext`\[Sigma]y1$$, 0}, 0, 
         ControlType -> None}, {{$CellContext`\[Tau]xy1$$, 0}, 0, ControlType -> 
         None}}, "Options" :> {
       ControlPlacement -> Left, SynchronousUpdating -> False, 
        SynchronousInitialization -> False, ContinuousAction -> True, 
        Alignment -> Center, ImageMargins -> 0, FrameMargins -> 0, Paneled -> 
        True, Frame -> False, AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{654., {239., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`contentSizeW = 
        425; $CellContext`contentSizeH = 425; $CellContext`padIt2[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[List]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"", ""}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt2[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[Integer]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"", ""}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt2s[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[Integer]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"-", "+"}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt1[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[List]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"-", "+"}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`integerStrictPositive = And[
          IntegerQ[#], # > 0]& ; $CellContext`integerPositive = And[
          IntegerQ[#], # >= 0]& ; $CellContext`numericStrictPositive = And[
          Element[#, Reals], # > 0]& ; $CellContext`numericPositive = And[
          Element[#, Reals], # >= 0]& ; $CellContext`numericStrictNegative = 
        And[
          Element[#, Reals], # < 0]& ; $CellContext`numericNegative = And[
          Element[#, Reals], # <= 0]& ; $CellContext`bool = 
        Element[#, Booleans]& ; $CellContext`numeric = 
        Element[#, Reals]& ; $CellContext`integer = 
        Element[#, Integers]& ; $CellContext`makeDiagrams[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`annotate, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`onPositiveSideOnly, 
            Blank[]], $CellContext`bool], 
          Pattern[$CellContext`plotType, 
           Blank[String]], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := Module[{}, 
          Which[$CellContext`plotType == "stress section", 
           $CellContext`make2DStressDiagram[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta], \
$CellContext`annotate, $CellContext`onPositiveSideOnly, $CellContext`limit, \
$CellContext`gridLines, {$CellContext`contentSizeW, \
$CellContext`contentSizeH}], $CellContext`plotType == "Mohr circle", 
           $CellContext`makeMohrCircle[$CellContext`\[Theta], $CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines, {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, 
            $CellContext`makeMohrCircleTitle[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]], $CellContext`plotType == 
           "Mohr circle/stress section", 
           Grid[{{
              $CellContext`makeMohrCircleTitle[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], SpanFromLeft}, {
              $CellContext`make2DStressDiagram[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta], \
$CellContext`annotate, $CellContext`onPositiveSideOnly, $CellContext`limit, \
$CellContext`gridLines, {
               0.5 $CellContext`contentSizeW, 
                0.87 $CellContext`contentSizeH}], 
              $CellContext`makeMohrCircle[$CellContext`\[Theta], \
$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, \
$CellContext`limit, $CellContext`gridLines, {
               0.499 $CellContext`contentSizeW, 
                0.87 $CellContext`contentSizeH}, {}]}}, 
            Spacings -> {0, 0}], $CellContext`plotType == 
           "normal stress trajectory", 
           $CellContext`makeNormalStressPolarPlot[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines], $CellContext`plotType == "shear stress trajectory", 
           $CellContext`makeShearStressPolarPlot[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines], $CellContext`plotType == "normal/shear trajectory", 
           $CellContext`makeShearAndNormalStressPolarPlot[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines]]]; $CellContext`getAngleAtSpecificPlane[
          Pattern[$CellContext`specificPlaneAngle, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]x, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]y, 
           Blank[]], 
          Pattern[$CellContext`\[Tau]xy, 
           Blank[]]] := N[
          Which[$CellContext`specificPlaneAngle == "first principal plane", 
           Part[
            $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 
            2], $CellContext`specificPlaneAngle == "second principal plane", 
           Part[
            $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 2, 
            2], $CellContext`specificPlaneAngle == 
           "first maximum shear plane", Part[
             $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 2] + 
           Pi/4, $CellContext`specificPlaneAngle == 
           "second maximum shear plane", Part[
             $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 2] + (3/4) 
            Pi]]; $CellContext`principalStresses[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`\[Theta]p, $CellContext`\[Sigma], $CellContext`\
\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1max, $CellContext`r, \
$CellContext`c, $CellContext`tmp, $CellContext`\[Theta]1, $CellContext`\
\[Theta]2}, $CellContext`r = 
           Sqrt[(($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)/
               2)^2 + $CellContext`\[Tau]xy^2]; $CellContext`c = \
($CellContext`\[Sigma]x + $CellContext`\[Sigma]y)/
            2; {$CellContext`\[Sigma]1, $CellContext`\[Sigma]2} = \
{$CellContext`c + $CellContext`r, $CellContext`c - $CellContext`r}; 
          If[Abs[$CellContext`\[Sigma]2] > 
            Abs[$CellContext`\[Sigma]1], $CellContext`tmp = $CellContext`\
\[Sigma]1; $CellContext`\[Sigma]1 = $CellContext`\[Sigma]2; $CellContext`\
\[Sigma]2 = $CellContext`tmp]; 
          If[Abs[$CellContext`\[Sigma]x - $CellContext`\[Sigma]y] <= \
$MachineEpsilon, $CellContext`\[Theta]p = Pi/4, $CellContext`\[Theta]p = 
            ArcTan[2 Abs[$CellContext`\[Tau]xy]/
               Abs[$CellContext`\[Sigma]x - $CellContext`\[Sigma]y]]/2]; 
          If[$CellContext`\[Sigma]1 > $CellContext`\[Sigma]2, 
            If[$CellContext`\[Tau]xy > 0, 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {$CellContext`\[Theta]p, -(
                 Pi/2 - $CellContext`\[Theta]p)}, {$CellContext`\[Theta]1, \
$CellContext`\[Theta]2} = {
               Pi/2 - $CellContext`\[Theta]p, -$CellContext`\[Theta]p}], 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {-$CellContext`\[Theta]p, 
                Pi/2 - $CellContext`\[Theta]p}, {$CellContext`\[Theta]1, \
$CellContext`\[Theta]2} = {-(
                 Pi/2 - $CellContext`\[Theta]p), $CellContext`\[Theta]p}]], 
            If[$CellContext`\[Tau]xy > 0, 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {-(
                 Pi/2 - $CellContext`\[Theta]p), $CellContext`\[Theta]p}, \
{$CellContext`\[Theta]1, $CellContext`\[Theta]2} = {-$CellContext`\[Theta]p, 
                Pi/2 - $CellContext`\[Theta]p}], 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {
               Pi/2 - $CellContext`\[Theta]p, -$CellContext`\[Theta]p}, \
{$CellContext`\[Theta]1, $CellContext`\[Theta]2} = {$CellContext`\[Theta]p, -(
                 Pi/2 - $CellContext`\[Theta]p)}]]]; \
{{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, {$CellContext`\[Sigma]2, \
$CellContext`\[Theta]2}}]; $CellContext`maxAndMinShearStress[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`r}, $CellContext`r = 
           Sqrt[(($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)/
               2)^2 + $CellContext`\[Tau]xy^2]; {$CellContext`r, \
-$CellContext`r}]; $CellContext`plot[
          Pattern[$CellContext`data, 
           Blank[List]], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], 
          Pattern[$CellContext`color, 
           Blank[]]] := 
        ListPolarPlot[$CellContext`data, Joined -> True, AxesOrigin -> {0, 0},
           ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, ImagePadding -> {{20, 10}, {20, 5}}, ImageMargins -> 
          0, AspectRatio -> 1, Frame -> True, 
          If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
              
              Range[-$CellContext`limit, $CellContext`limit, (
                2 $CellContext`limit)/($CellContext`gridLines 20)], 
              
              Range[-$CellContext`limit, $CellContext`limit, (
                2 $CellContext`limit)/($CellContext`gridLines 20)]}, 
            GridLinesStyle -> Directive[
              Thickness[0.001], LightGray]}], 
          PlotRange -> {{-$CellContext`limit, $CellContext`limit}, \
{-$CellContext`limit, $CellContext`limit}}, 
          PlotStyle -> $CellContext`color]; $CellContext`makeArrowForAngle[
          Pattern[$CellContext`r, 
           Blank[]], 
          Pattern[$CellContext`center, 
           Blank[]], {{
            Pattern[$CellContext`\[Sigma]1, 
             Blank[]], 
            Pattern[$CellContext`\[Theta]1, 
             Blank[]]}, {
            Pattern[$CellContext`\[Sigma]2, 
             Blank[]], 
            Pattern[$CellContext`\[Theta]2, 
             Blank[]]}}, 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`phi, $CellContext`tbl, $CellContext`align}, 
          If[$CellContext`\[Sigma]1 > $CellContext`\[Sigma]2, 
            
            If[$CellContext`\[Tau]xy > 
             0, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, (-2) \
$CellContext`\[Theta]1, 0, Pi/100}]; $CellContext`align = {-1, 
               1}, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, (-2) \
$CellContext`\[Theta]1, 0, (-Pi)/100}]; $CellContext`align = {-1, -1}], 
            
            If[$CellContext`\[Tau]xy > 
             0, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, -(Pi + 
                  2 $CellContext`\[Theta]1), -Pi, (-Pi)/
                 100}]; $CellContext`align = {1, 1}, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, Pi - 
                 2 $CellContext`\[Theta]1, Pi, Pi/
                 100}]; $CellContext`align = {1, -1}]]; {
            Text["2\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
             If[Length[$CellContext`tbl] > 1, 
              Part[$CellContext`tbl, 
               Round[Length[$CellContext`tbl]/2]], 
              
              First[$CellContext`tbl]], $CellContext`align], \
$CellContext`tbl}]; $CellContext`makeMohrCircleTitle[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\
\[Theta]1, $CellContext`\[Theta]2, $CellContext`r, $CellContext`center, \
$CellContext`ptA}, {{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`center = \
{($CellContext`\[Sigma]1 + $CellContext`\[Sigma]2)/2, 
             0}; $CellContext`ptA = {$CellContext`\[Sigma]x, -$CellContext`\
\[Tau]xy}; $CellContext`r = 
           EuclideanDistance[$CellContext`center, $CellContext`ptA]; Grid[{
             Map[TraditionalForm[
               Style[#]]& , {
              "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
               "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
               "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
               "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
               "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)"}], {
              $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
              PlusMinus[
               $CellContext`padIt2[$CellContext`r, {4, 1}]], 
              Row[{
                $CellContext`padIt1[$CellContext`\[Theta]1 (180/Pi), {4, 1}], 
                Degree}], 
              Row[{
                $CellContext`padIt1[$CellContext`\[Theta]2 (180/Pi), {4, 1}], 
                Degree}]}}, Spacings -> {0.5, 1}, Frame -> All, FrameStyle -> 
            Directive[Thin]]]; $CellContext`getRadiusOfCircle[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Sqrt[(($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)/
            2)^2 + $CellContext`\[Tau]xy^2]; $CellContext`rotationStress[
          Pattern[$CellContext`\[Sigma]x, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]y, 
           Blank[]], 
          Pattern[$CellContext`\[Tau]xy, 
           Blank[]], 
          Pattern[$CellContext`\[Theta], 
           Blank[]]] := 
        Module[{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy, \
$CellContext`\[Tau]}, $CellContext`\[Sigma]xx = (1/
              2) ($CellContext`\[Sigma]x + $CellContext`\[Sigma]y) + (1/
              2) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y) 
             Cos[2 $CellContext`\[Theta]] + $CellContext`\[Tau]xy 
             Sin[2 $CellContext`\[Theta]]; $CellContext`\[Tau] = (-(1/
               2)) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y) 
             Sin[2 $CellContext`\[Theta]] + $CellContext`\[Tau]xy 
             Cos[2 $CellContext`\[Theta]]; $CellContext`\[Sigma]yy = (1/
              2) ($CellContext`\[Sigma]x + $CellContext`\[Sigma]y) - (1/
             2) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y) 
            Cos[2 $CellContext`\[Theta]] - $CellContext`\[Tau]xy 
            Sin[2 $CellContext`\[Theta]]; {$CellContext`\[Sigma]xx, \
$CellContext`\[Sigma]yy, $CellContext`\[Tau]}]; $CellContext`makeMohrCircle[
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], {
           PatternTest[
            Pattern[$CellContext`contentSizeW, 
             Blank[]], $CellContext`numericStrictPositive], 
           PatternTest[
            Pattern[$CellContext`contentSizeH, 
             Blank[]], $CellContext`numericStrictPositive]}, 
          Pattern[$CellContext`plotTitle, 
           Blank[]]] := 
        Module[{$CellContext`ptA, $CellContext`ptB, $CellContext`center, \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Theta]1, \
$CellContext`\[Theta]2, $CellContext`r, $CellContext`z, $CellContext`ptD1, \
$CellContext`ptD2, $CellContext`\[Sigma]x1, $CellContext`\[Tau]xy1, \
$CellContext`\[Sigma]y1}, {{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`center = \
{($CellContext`\[Sigma]1 + $CellContext`\[Sigma]2)/2, 
             0}; $CellContext`ptA = {$CellContext`\[Sigma]x, -$CellContext`\
\[Tau]xy}; $CellContext`r = $CellContext`getRadiusOfCircle[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\
\[Sigma]x1, $CellContext`\[Sigma]y1, $CellContext`\[Tau]xy1} = \
$CellContext`rotationStress[$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, \
$CellContext`\[Tau]xy, $CellContext`\[Theta]]; $CellContext`z = $CellContext`\
\[Sigma]x - First[$CellContext`center]; $CellContext`ptB = {
            Part[$CellContext`ptA, 1] - 2 $CellContext`z, -
             Part[$CellContext`ptA, 
               2]}; $CellContext`ptD1 = {$CellContext`\[Sigma]x1, \
-$CellContext`\[Tau]xy1}; $CellContext`ptD2 = {$CellContext`\[Sigma]y1, \
$CellContext`\[Tau]xy1}; Graphics[{
             Circle[$CellContext`center, $CellContext`r], {Black, 
              PointSize[0.02], 
              Point[$CellContext`ptA]}, {Black, 
              PointSize[0.02], 
              Point[$CellContext`center]}, {Black, 
              PointSize[0.02], 
              Point[$CellContext`ptB]}, {Dashed, 
              Line[{$CellContext`ptA, $CellContext`ptB}]}, 
             Circle[$CellContext`ptD1, 0.8], {Red, Dashed, 
              Line[{$CellContext`ptD1, $CellContext`ptD2}]}, 
             Circle[$CellContext`ptD2, 0.8], 
             Text[
              Row[{"(", 
                $CellContext`padIt1[$CellContext`\[Sigma]x1, {4, 1}], ",", 
                $CellContext`padIt1[$CellContext`\[Tau]xy1, {4, 1}], 
                ")"}], $CellContext`ptD1, 
              
              If[$CellContext`\[Sigma]x1 > 
               Part[$CellContext`center, 1], {-1.2, -1.2}, {1.2, -1.2}]], 
             Text[
              Row[{"(", 
                $CellContext`padIt1[$CellContext`\[Sigma]y1, {4, 1}], ",", 
                $CellContext`padIt1[$CellContext`\[Tau]xy1, {4, 1}], 
                ")"}], $CellContext`ptD2, 
              
              If[$CellContext`\[Sigma]y1 > 
               Part[$CellContext`center, 1], {-1.2, -1.2}, {1.2, -1.2}]], {
             Red, 
              PointSize[0.02], 
              Point[{$CellContext`\[Sigma]1, 0}]}, {
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], {$CellContext`\[Sigma]1, 0}, {-1.5, 1.5}]}, {Red, 
              PointSize[0.02], 
              Point[{$CellContext`\[Sigma]2, 0}]}, {
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], {$CellContext`\[Sigma]2, 0}, {1.2, 1.3}]}, {Blue, 
              PointSize[0.02], 
              Point[{
                Part[$CellContext`center, 1], $CellContext`r}]}, {
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 12]], {
                Part[$CellContext`center, 1], $CellContext`r}, {0, -1.5}]}, {
             Blue, 
              PointSize[0.02], 
              Point[{
                Part[$CellContext`center, 1], -$CellContext`r}]}, {
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 12]], {
                Part[$CellContext`center, 1], -$CellContext`r}, {0, 1.5}]}, {
              Text[
               Style["tension", 11], {$CellContext`limit, 0}, {1, 3}]}, {
              Text[
               Style["compression", 11], {-$CellContext`limit, 0}, {-1, 3}]}}, 
            If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
                
                Range[-$CellContext`limit, $CellContext`limit, (
                  2 $CellContext`limit)/($CellContext`gridLines 20)], 
                
                Range[-$CellContext`limit, $CellContext`limit, (
                  2 $CellContext`limit)/($CellContext`gridLines 20)]}, 
              GridLinesStyle -> Directive[
                Thickness[0.001], LightGray]}], 
            PlotRange -> {{-$CellContext`limit, $CellContext`limit}, \
{-$CellContext`limit, $CellContext`limit}}, Axes -> True, 
            AxesOrigin -> {0, 0}, TicksStyle -> 8, PlotLabel -> 
            If[$CellContext`plotTitle === {}, "", $CellContext`plotTitle], 
            ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, 
            ImagePadding -> {{20, 10}, {20, 
             5}}]]; $CellContext`makeShearAndNormalStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, \
$CellContext`\[Sigma]2Abs, $CellContext`\[Theta]p1, $CellContext`\[Theta]p2, \
$CellContext`p1, $CellContext`p2, $CellContext`p3, $CellContext`p4, \
$CellContext`plotTitle, $CellContext`coord1, $CellContext`coord2, \
$CellContext`\[Tau]1, $CellContext`\[Tau]2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                1]}], $CellContext`limit, $CellContext`gridLines, 
             Red]; $CellContext`coord1 = {
            Abs[$CellContext`\[Sigma]1] Cos[$CellContext`\[Theta]p1], 
             Abs[$CellContext`\[Sigma]1] 
             Sin[$CellContext`\[Theta]p1]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Sigma]2] Cos[$CellContext`\[Theta]p2], 
             Abs[$CellContext`\[Sigma]2] 
             Sin[$CellContext`\[Theta]p2]}; $CellContext`p2 = Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Sigma]x, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 12]], {$CellContext`\[Sigma]x, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Sigma]y}]}, 
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 12]], {
               0, $CellContext`\[Sigma]y}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord2]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], $CellContext`coord2, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 
                    2]}}]}}]; {$CellContext`\[Tau]1, $CellContext`\[Tau]2} = \
$CellContext`maxAndMinShearStress[$CellContext`\[Sigma]x, $CellContext`\
\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p3 = $CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                3]}], $CellContext`limit, $CellContext`gridLines, 
             Blue]; $CellContext`coord1 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p1 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p1 + Pi/4]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p2 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p2 + Pi/4]}; $CellContext`p4 = 
           Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Tau]xy, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 12]], {$CellContext`\[Tau]xy, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Tau]xy}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", 
                 12]], {0, $CellContext`\[Tau]xy}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Style[
             
             Grid[{{"normal (red) and shear (blue) polar (stress vs. angle) \
trajectory", SpanFromLeft}, 
               Map[TraditionalForm[
                 Style[#]]& , {
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)"}], {
                $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
                Row[{
                  $CellContext`padIt1[$CellContext`\[Theta]p1 (180/Pi), {4, 
                   1}], Degree}], 
                $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
                Row[{
                  $CellContext`padIt1[$CellContext`\[Theta]p2 (180/Pi), {4, 
                   1}], Degree}], 
                PlusMinus[
                 $CellContext`padIt2[$CellContext`\[Tau]1, {4, 1}]]}}, 
              Spacings -> {0.4, 1.1}, Frame -> All, FrameStyle -> 
              Directive[Thin]], 12]; 
          Show[$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`makeNormalStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, \
$CellContext`\[Sigma]2Abs, $CellContext`\[Theta]p1, $CellContext`\[Theta]p2, \
$CellContext`p1, $CellContext`p2, $CellContext`plotTitle, \
$CellContext`coord1, $CellContext`coord2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                1]}], $CellContext`limit, $CellContext`gridLines, 
             Red]; $CellContext`coord1 = {
            Abs[$CellContext`\[Sigma]1] Cos[$CellContext`\[Theta]p1], 
             Abs[$CellContext`\[Sigma]1] 
             Sin[$CellContext`\[Theta]p1]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Sigma]2] Cos[$CellContext`\[Theta]p2], 
             Abs[$CellContext`\[Sigma]2] 
             Sin[$CellContext`\[Theta]p2]}; $CellContext`p2 = Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Sigma]x, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 12]], {$CellContext`\[Sigma]x, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Sigma]y}]}, 
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 12]], {
               0, $CellContext`\[Sigma]y}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord2]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], $CellContext`coord2, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Grid[{{"normal stress polar (stress vs. angle) trajectory", 
               SpanFromLeft}, 
              Map[TraditionalForm[
                Style[#]]& , {
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)"}], {
               $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
               Row[{
                 $CellContext`padIt1[$CellContext`\[Theta]p1 (180/Pi), {4, 
                  1}], Degree}], 
               $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
               Row[{
                 $CellContext`padIt1[$CellContext`\[Theta]p2 (180/Pi), {4, 
                  1}], Degree}]}}, Spacings -> {0.8, 1}, Frame -> All, 
             FrameStyle -> Directive[Thin]]; 
          Show[$CellContext`p1, $CellContext`p2, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`makeShearStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Tau]1, $CellContext`\[Tau]2, \
$CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, $CellContext`\[Sigma]2Abs, \
$CellContext`\[Theta]p1, $CellContext`\[Theta]p2, $CellContext`p1, \
$CellContext`p2, $CellContext`plotTitle, $CellContext`coord1, \
$CellContext`coord2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\[Tau]1, \
$CellContext`\[Tau]2} = $CellContext`maxAndMinShearStress[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                3]}], $CellContext`limit, $CellContext`gridLines, 
             Blue]; $CellContext`coord1 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p1 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p1 + Pi/4]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p2 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p2 + Pi/4]}; $CellContext`p2 = 
           Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Tau]xy, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 12]], {$CellContext`\[Tau]xy, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Tau]xy}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", 
                 12]], {0, $CellContext`\[Tau]xy}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Grid[{{"shear stress polar (stress vs. angle) trajectory", 
               SpanFromLeft}, 
              Flatten[{
                Map[TraditionalForm[
                  Style[#]]& , {
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)",
                   "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Theta]\), \(max\)]\)"}], 
                SpanFromLeft}], {
               $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
               PlusMinus[
                $CellContext`padIt2[$CellContext`\[Tau]xy, {4, 1}]], 
               $CellContext`padIt1[$CellContext`\[Tau]1, {4, 1}], 
               Row[{
                 $CellContext`padIt1[($CellContext`\[Theta]p1 + Pi/4) (180/
                   Pi), {4, 1}], Degree, ",", 
                 $CellContext`padIt1[($CellContext`\[Theta]p1 + (3/4) Pi) (
                   180/Pi), {4, 1}], Degree}], SpanFromLeft}}, 
             Spacings -> {1, 1}, Frame -> All, FrameStyle -> Directive[Thin]]; 
          Show[$CellContext`p1, $CellContext`p2, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`make2DStressDiagram[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`annotate, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`onPositiveSideOnly, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], {
           PatternTest[
            Pattern[$CellContext`contentSizeW, 
             Blank[]], $CellContext`numericStrictPositive], 
           PatternTest[
            Pattern[$CellContext`contentSizeH, 
             Blank[]], $CellContext`numericStrictPositive]}] := 
        Module[{$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\
\[Sigma]xx, $CellContext`\[Sigma]yy, $CellContext`\[Tau]xyxy, $CellContext`r, \
$CellContext`\[Sigma]xxRightArrow, $CellContext`\[Sigma]xxLeftArrow, \
$CellContext`\[Sigma]yyTopArrow, $CellContext`\[Sigma]yyBottomArrow, \
$CellContext`\[Tau]RightArrow, $CellContext`\[Tau]LeftArrow, $CellContext`\
\[Tau]TopArrow, $CellContext`\[Tau]BottomArrow, $CellContext`\[Tau]1, \
$CellContext`\[Tau]2, $CellContext`color, $CellContext`textSize = 
           11, $CellContext`colorShear, \
$CellContext`\[Sigma]xxRightArrowText, $CellContext`\[Sigma]xxLeftArrowText, \
$CellContext`\[Sigma]yyTopArrowText, $CellContext`\[Sigma]yyBottomArrowText, \
$CellContext`\[Tau]RightArrowText, $CellContext`\[Tau]LeftArrowText, \
$CellContext`\[Tau]TopArrowText, $CellContext`\[Tau]BottomArrowText, \
$CellContext`rotationMatrix, $CellContext`coordinates, $CellContext`from, \
$CellContext`to, $CellContext`rotatedAxisXText, \
$CellContext`rotatedAxisYText, $CellContext`maxAbsoluteprincipalShearStress, \
$CellContext`thickness = Thick, $CellContext`eps = 
           10^(-9), $CellContext`\[Theta]p1, $CellContext`\[Theta]p2}, \
$CellContext`rotationMatrix = 
           RotationMatrix[-$CellContext`\[Theta]]; \
$CellContext`rotatedAxisXText = Text[
             Style["x", Italic, $CellContext`textSize], 
             
             Dot[{0.3, 
               0}, $CellContext`rotationMatrix]]; \
$CellContext`rotatedAxisYText = Text[
             Style["y", Italic, $CellContext`textSize], 
             
             Dot[{0, 0.3}, $CellContext`rotationMatrix]]; {{$CellContext`\
\[Sigma]1, $CellContext`\[Theta]p1}, {$CellContext`\[Sigma]2, $CellContext`\
\[Theta]p2}} = $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\[Tau]1, \
$CellContext`\[Tau]2} = $CellContext`maxAndMinShearStress[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; \
$CellContext`maxAbsoluteprincipalShearStress = Max[
             
             Abs[{$CellContext`\[Tau]1, $CellContext`\[Tau]2}]]; \
{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy, $CellContext`\[Tau]xyxy} = \
$CellContext`rotationStress[$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, \
$CellContext`\[Tau]xy, $CellContext`\[Theta]]; 
          If[Abs[$CellContext`\[Sigma]1] > 
            0, {$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy} = \
{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy}/
             Abs[$CellContext`\[Sigma]1]]; 
          If[$CellContext`maxAbsoluteprincipalShearStress > 
            0, $CellContext`\[Tau]xyxy = \
$CellContext`\[Tau]xyxy/$CellContext`maxAbsoluteprincipalShearStress]; \
$CellContext`color = Red; $CellContext`colorShear = 
           Blue; $CellContext`r = {White, 
             EdgeForm[{Thin, Gray}], 
             Rectangle[{-0.5, -0.5}, {0.5, 0.5}]}; 
          If[$CellContext`\[Sigma]xx >= 
            0, $CellContext`from = {0.6, 0}; $CellContext`to = {
              0.6 + $CellContext`\[Sigma]xx, 0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, 0.78, 
                  0.68] + $CellContext`\[Sigma]xx, 
                0}, $CellContext`rotationMatrix], $CellContext`from = {
              0.6 + Abs[$CellContext`\[Sigma]xx], 0}; $CellContext`to = {
              0.6, 0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, 0.78, 0.68] + 
                Abs[$CellContext`\[Sigma]xx], 
                0}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]xxRightArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]xx 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates, {0,
               0}], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates, {0, 
              0}]]; $CellContext`\[Sigma]xxRightArrow = \
{$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]xx >= 
            0, $CellContext`from = {-0.6, 
               0}; $CellContext`to = {-0.6 - $CellContext`\[Sigma]xx, 
               0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, -0.78, -0.68] - $CellContext`\
\[Sigma]xx, 0}, $CellContext`rotationMatrix], $CellContext`from = {-0.6 - 
               Abs[$CellContext`\[Sigma]xx], 0}; $CellContext`to = {-0.6, 
               0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, -0.78, -0.68] - 
                Abs[$CellContext`\[Sigma]xx], 
                0}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]xxLeftArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]xx 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]xxLeftArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]yy >= 
            0, $CellContext`from = {0, 0.6}; $CellContext`to = {
              0, 0.6 + $CellContext`\[Sigma]yy}; $CellContext`coordinates = 
             Dot[{0, If[$CellContext`annotate, 0.75, 
                  0.68] + $CellContext`\[Sigma]yy}, \
$CellContext`rotationMatrix], $CellContext`from = {
              0, 0.6 + Abs[$CellContext`\[Sigma]yy]}; $CellContext`to = {
              0, 0.6}; $CellContext`coordinates = 
             Dot[{0, If[$CellContext`annotate, 0.75, 0.68] + 
                Abs[$CellContext`\[Sigma]yy]}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]yyTopArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]yy 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]yyTopArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]yy >= 
            0, $CellContext`from = {0, -0.6}; $CellContext`to = {
              0, -0.6 - $CellContext`\[Sigma]yy}; $CellContext`coordinates = 
             Dot[{0, -0.75 - $CellContext`\[Sigma]yy}, \
$CellContext`rotationMatrix], $CellContext`from = {
              0, -0.6 - Abs[$CellContext`\[Sigma]yy]}; $CellContext`to = {
              0, -0.6}; $CellContext`coordinates = 
             Dot[{0, -0.75 - 
                Abs[$CellContext`\[Sigma]yy]}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]yyBottomArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]yy 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]yyBottomArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Tau]xyxy >= 
            0, $CellContext`from = {
              0.6, 0.5 - $CellContext`\[Tau]xyxy}; $CellContext`to = {0.6, 
              0.5}; $CellContext`coordinates = Dot[{
                If[$CellContext`annotate, 0.8, 0.7], 
                0.45}, $CellContext`rotationMatrix], $CellContext`from = {0.6,
               0.5}; $CellContext`to = {
              0.6, 0.5 - 
               Abs[$CellContext`\[Tau]xyxy]}; $CellContext`coordinates = Dot[{
                If[$CellContext`annotate, 0.8, 0.7], 
                0.45}, $CellContext`rotationMatrix]]; \
$CellContext`\[Tau]RightArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style[
                  "\!\(\*SubscriptBox[\(\[Tau]\), \
\(x\[InvisibleComma]y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Tau]xyxy \
$CellContext`maxAbsoluteprincipalShearStress, {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Tau]RightArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`colorShear, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Tau]xyxy >= 
            0, $CellContext`from = {
              0.5 - $CellContext`\[Tau]xyxy, 0.6}; $CellContext`to = {0.5, 
              0.6}; $CellContext`coordinates = 
             Dot[{0.5, 
               0.75}, $CellContext`rotationMatrix], $CellContext`from = {0.5, 
              0.6}; $CellContext`to = {
              0.5 - Abs[$CellContext`\[Tau]xyxy], 
               0.6}; $CellContext`coordinates = 
             Dot[{0.5, 
               0.75}, $CellContext`rotationMatrix]]; \
$CellContext`\[Tau]TopArrowText = Text[
             TraditionalForm[
              Style[
              "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]; \
$CellContext`\[Tau]TopArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`colorShear, 
             
             Arrow[{$CellContext`from, $CellContext`to}, 
              0]}; $CellContext`\[Tau]LeftArrow = {
             Arrowheads[Medium], 
             
             If[$CellContext`\[Tau]xyxy >= 
              0, {$CellContext`thickness, $CellContext`colorShear, 
               
               Arrow[{{-0.6, -0.5 + $CellContext`\[Tau]xyxy}, {-0.6, -0.5}}, 
                0]}, {$CellContext`thickness, $CellContext`colorShear, 
               
               Arrow[{{-0.6, -0.5}, {-0.6, -0.5 + 
                  Abs[$CellContext`\[Tau]xyxy]}}, 
                0]}]}; $CellContext`\[Tau]BottomArrow = \
{$CellContext`thickness, $CellContext`colorShear, 
             Arrowheads[Medium], 
             If[$CellContext`\[Tau]xyxy >= 0, 
              
              Arrow[{{-0.5 + $CellContext`\[Tau]xyxy, -0.6}, {-0.5, -0.6}}, 
               0], 
              
              Arrow[{{-0.5, -0.6}, {-0.5 + 
                 Abs[$CellContext`\[Tau]xyxy], -0.6}}, 
               0]]}; $CellContext`from = (-($CellContext`limit/40)) 
            1.9; $CellContext`to = -$CellContext`from; Graphics[{
             Rotate[$CellContext`r, $CellContext`\[Theta], {0, 0}], 
             If[Abs[$CellContext`\[Sigma]xx] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Sigma]xxRightArrow, \
$CellContext`\[Theta], {0, 0}], $CellContext`\[Sigma]xxRightArrowText, 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], 
                
                Rotate[$CellContext`\[Sigma]xxLeftArrow, \
$CellContext`\[Theta], {0, 0}]]}, 
              Apply[Sequence, {}]], 
             If[Abs[$CellContext`\[Sigma]yy] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Sigma]yyTopArrow, $CellContext`\[Theta], \
{0, 0}], $CellContext`\[Sigma]yyTopArrowText, 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], 
                
                Rotate[$CellContext`\[Sigma]yyBottomArrow, $CellContext`\
\[Theta], {0, 0}]]}, 
              Apply[Sequence, {}]], 
             If[Abs[$CellContext`\[Tau]xyxy] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Tau]RightArrow, $CellContext`\[Theta], {
                0, 0}], $CellContext`\[Tau]RightArrowText, 
               
               Rotate[$CellContext`\[Tau]TopArrow, $CellContext`\[Theta], {0, 
                0}], 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], {
                 
                 Rotate[$CellContext`\[Tau]LeftArrow, $CellContext`\[Theta], {
                  0, 0}], 
                 
                 Rotate[$CellContext`\[Tau]BottomArrow, \
$CellContext`\[Theta], {0, 0}]}]}, 
              Apply[Sequence, {}]], {Gray, Thin, Dashed, 
              Rotate[{
                Arrowheads[Small], 
                Arrow[{{-0.25, 0}, {0.25, 0}}]}, $CellContext`\[Theta], {0, 
               0}]}, {Gray, Thin, Dashed, 
              Rotate[{
                Arrowheads[Small], 
                Arrow[{{0, -0.25}, {0, 0.25}}]}, $CellContext`\[Theta], {0, 
               0}]}, $CellContext`rotatedAxisXText, \
$CellContext`rotatedAxisYText, {
              PointSize[0.01], 
              Point[{0, 0}]}}, Axes -> False, 
            PlotRange -> {{$CellContext`from, $CellContext`to}, \
{$CellContext`from, $CellContext`to}}, 
            ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, ImagePadding -> {{10, 10}, {10, 10}}, 
            ImageMargins -> 0, AspectRatio -> Automatic, 
            If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
                
                Range[$CellContext`from, $CellContext`to, ($CellContext`to - \
$CellContext`from)/($CellContext`gridLines 20)], 
                
                Range[$CellContext`from, $CellContext`to, ($CellContext`to - \
$CellContext`from)/($CellContext`gridLines 20)]}, GridLinesStyle -> Directive[
                Thickness[0.001], LightGray]}], Frame -> False]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6768140142202063`*^9},
 CellID->20327524]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell[TextData[{
 "This Demonstration generates Mohr's circle for plain stress. The input is \
stress values for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "x"], ",", 
    SubscriptBox["\[Sigma]", "y"], ",", 
    SubscriptBox["\[Tau]", "xy"]}], TraditionalForm]], "InlineMath"],
 " at the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]], "InlineMath"],
 " orthogonal positive faces oriented at zero angle. The Demonstration \
calculates Mohr's circle and generates other plots to illustrate how stress \
changes at different orientations as the angle of the plane is changed. \
Planar stress is assumed, therefore stresses in the ",
 Cell[BoxData[
  FormBox["z", TraditionalForm]], "InlineMath"],
 " direction are assumed to be zero. The principal stresses (value of maximum \
normal and shear stresses found as the plane is rotated) are shown as red \
dots on the circle. The current value of the normal and shear stresses on the \
positive and opposite side of the plane are also shown at the end of the \
dashed red line (the first value is the normal stress and the second value is \
the shear stress). These are updated as you rotate the plane. The black dots \
on the edge of the circle are the locations of the stresses at zero degree \
and these do not move as the plane is rotated."
}], "ManipulateCaption",
 CellChangeTimes->{{3.561873283372208*^9, 3.561873469584854*^9}, {
   3.5618740484903655`*^9, 3.561874142033244*^9}, {3.561961391462433*^9, 
   3.56196175244308*^9}, {3.561962151740918*^9, 3.5619621619715033`*^9}, {
   3.56196220107574*^9, 3.561962271035741*^9}, {3.561962421980375*^9, 
   3.5619625061001863`*^9}, {3.562135060337986*^9, 3.5621350839844885`*^9}, {
   3.562135118704398*^9, 3.562135302136691*^9}, {3.5621353368886037`*^9, 
   3.5621354251928167`*^9}, {3.562166926162932*^9, 3.562166928841772*^9}, {
   3.5621669601222444`*^9, 3.5621669885218506`*^9}, {3.5621670779767103`*^9, 
   3.562167231361187*^9}, 3.5621672949462614`*^9, {3.562168081291115*^9, 
   3.562168120969653*^9}, {3.5621681687777243`*^9, 3.5621681715690784`*^9}, {
   3.5621948278519964`*^9, 3.5621948586014013`*^9}, 3.562196042684261*^9, {
   3.562442986158226*^9, 3.562443101680777*^9}, {3.5870093163730116`*^9, 
   3.587009432384243*^9}, {3.5870094664400673`*^9, 3.5870096547519803`*^9}, {
   3.587009700629806*^9, 3.587009778528198*^9}, {3.587009886402396*^9, 
   3.587009928179201*^9}, {3.587009986746138*^9, 3.5870101291837254`*^9}, 
   3.5870119730038605`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`angleSelection$$ = 
    "slider", $CellContext`annotate$$ = True, $CellContext`gridLines$$ = 
    0.5, $CellContext`limit$$ = 30, $CellContext`maxShearPlane$$ = 
    False, $CellContext`onPositiveSideOnly$$ = True, $CellContext`plotType$$ =
     "Mohr circle", $CellContext`principalPlaneAngle$$ = 
    False, $CellContext`specificPlaneAngle$$ = 
    "first principal plane", $CellContext`\[Theta]$$ = 
    45, $CellContext`\[Sigma]x$$ = 14, $CellContext`\[Sigma]x1$$ = 
    15.699598555359728`, $CellContext`\[Sigma]y$$ = 
    4, $CellContext`\[Sigma]y1$$ = 
    2.300401444640272, $CellContext`\[Tau]xy$$ = 
    10, $CellContext`\[Tau]xy1$$ = -8.950719479294492, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Sigma]x$$], 14, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Sigma]y$$], 4, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Tau]xy$$], 10, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Theta]$$], 45, ""}, -360, 360, 0.1}, {{
       Hold[$CellContext`limit$$], 30, ""}, 5, 50, 0.1}, {{
       Hold[$CellContext`gridLines$$], 0.5, ""}, 0, 1, 0.1}, {
      Hold[
       Grid[{{
          Grid[{{
             Style[
              Row[{"stresses at 0", Degree}], 12], SpanFromLeft}, {
            "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
             Manipulate`Place[1], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Sigma]x$$, {3, 1}]], 11]}, {
            "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
             Manipulate`Place[2], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Sigma]y$$, {3, 1}]], 11]}, {
            "\!\(\*SubscriptBox[\(\[Tau]\), \(xy\)]\)", 
             Manipulate`Place[3], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Tau]xy$$, {3, 1}]], 11]}, {
             Style[
              Row[{
                Text[
                 TraditionalForm[
                  HoldForm[{{
                    Subscript[$CellContext`\[Sigma], $CellContext`x], 
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y]}, {
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y], 
                    Subscript[$CellContext`\[Sigma], $CellContext`y]}}]]], 
                " = ", 
                Dynamic[
                 TraditionalForm[{{
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]x$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}]}, {
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]y$$], {3, 1}]}}]]}], 11], 
             SpanFromLeft}}, Spacings -> {0.5, 0.5}, Alignment -> Center, 
           Frame -> True, FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]]}, {
          Grid[{{
             Style["select plot type", 12], SpanFromLeft}, {
             PopupMenu[
              Dynamic[$CellContext`plotType$$], {
              "stress section" -> Style["stress section", 11], "Mohr circle" -> 
               Style["Mohr circle", 11], "Mohr circle/stress section" -> 
               Style["Mohr circle/stress section", 11], 
               "normal stress trajectory" -> 
               Style["normal stress trajectory", 11], 
               "shear stress trajectory" -> 
               Style["shear stress trajectory", 11], 
               "normal/shear trajectory" -> 
               Style["normal/shear trajectory", 11]}, ImageSize -> All, 
              ContinuousAction -> False], SpanFromLeft}, {
             Row[{
               Style["annotate", 12], 
               Spacer[1], 
               Checkbox[
                Dynamic[$CellContext`annotate$$], Enabled -> Dynamic[
                  
                  Or[$CellContext`plotType$$ == 
                   "stress section", $CellContext`plotType$$ == 
                   "Mohr circle/stress section"]]]}], 
             Row[{
               Style[
                
                Column[{"display stresses on", "positive sides only"}, 
                 Alignment -> Left], 11], 
               Spacer[1], 
               Checkbox[
                Dynamic[$CellContext`onPositiveSideOnly$$], Enabled -> Dynamic[
                  
                  Or[$CellContext`plotType$$ == 
                   "stress section", $CellContext`plotType$$ == 
                   "Mohr circle/stress section"]]]}], SpanFromLeft}}, 
           Spacings -> {0.5, 0.5}, Alignment -> Center, Frame -> True, 
           FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]], SpanFromLeft}, {
          Grid[{{
             Grid[{{
                Row[{
                  Style["rotate to new angle", 12]}], SpanFromLeft}, {
                RadioButtonBar[
                 Dynamic[$CellContext`angleSelection$$], {
                 "slider" -> "", "specific plane" -> ""}, Appearance -> 
                 "Vertical", Enabled -> Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section", $CellContext`plotType$$ == 
                    "Mohr circle"]]], 
                Grid[{{
                   Row[{
                    Manipulate`Place[4], 
                    Spacer[4], 
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt1[$CellContext`\[Theta]$$, {4, 1}]], 
                    Degree}], 11]}], 
                   Button[
                    Row[{"0", Degree}], $CellContext`\[Theta]$$ = 0, 
                    Appearance -> "Palette", Background -> 
                    RGBColor[0.87, 0.94, 1], ImageSize -> {25, 18}]}, {
                   Row[{
                    PopupMenu[
                    
                    Dynamic[$CellContext`specificPlaneAngle$$, \
{$CellContext`specificPlaneAngle$$ = #; $CellContext`\[Theta]$$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]}& \
], {"first principal plane" -> Style["first principal plane", 11], 
                    "second principal plane" -> 
                    Style["second principal plane", 11], 
                    "first maximum shear plane" -> 
                    Style["first shear plane", 11], 
                    "second maximum shear plane" -> 
                    Style["second shear plane", 11]}, ImageSize -> All, 
                    Enabled -> Dynamic[
                    And[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"], \
$CellContext`angleSelection$$ == "specific plane"]]]}], SpanFromLeft}}]}}, 
              Spacings -> {0.15, 0.5}, Alignment -> Center, Frame -> None]}, {
             Style[
              Row[{
                Text[
                 Style[
                  TraditionalForm[
                   HoldForm[{{
                    Subscript[
                    Derivative[1][$CellContext`\[Sigma]], $CellContext`x], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, \
$CellContext`y]}, {
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, $CellContext`y], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Sigma]], $CellContext`y]}}]]]], " = ", 
                Dynamic[
                 TraditionalForm[{{
                    $CellContext`padIt1[$CellContext`\[Sigma]x1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}]}, {
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Sigma]y1$$, {3, 
                    1}]}}]]}], 11]}}, Spacings -> {0.5, 0.5}, Alignment -> 
           Center, Frame -> True, FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]]}, {
          Grid[{{
             Grid[{{
                Style["zoom", 12], 
                Spacer[13], 
                Manipulate`Place[5], 
                Spacer[12]}, {"", 
                Style[
                 Row[{"in", 
                   Spacer[75], "out"}], 11], SpanFromLeft}}, 
              Spacings -> {0.1, 0.1}, Alignment -> Center, Frame -> True, 
              FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]]}, {
             Grid[{{
                Style["gridlines", 12], Manipulate`Place[6] Spacer[8]}, {"", 
                Style[
                 Row[{"less", 
                   Spacer[70], "more"}], 11]}}, Spacings -> {0.1, 0.1}, 
              Alignment -> Center, Frame -> True, FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]]}}, Spacings -> {0.1, 0.5}, Alignment -> Left,
            Frame -> None], SpanFromLeft}}, Spacings -> {0.2, 1.4}, Alignment -> 
        Center]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`annotate$$], True}, 0}, {{
       Hold[$CellContext`plotType$$], "Mohr circle"}, 0}, {{
       Hold[$CellContext`onPositiveSideOnly$$], True}, 0}, {{
       Hold[$CellContext`principalPlaneAngle$$], False}, 0}, {{
       Hold[$CellContext`maxShearPlane$$], False}, 0}, {{
       Hold[$CellContext`specificPlaneAngle$$], "first principal plane"}, 
      0}, {{
       Hold[$CellContext`angleSelection$$], "slider"}, 0}, {{
       Hold[$CellContext`\[Sigma]x1$$], 15.699598555359728`}, 0}, {{
       Hold[$CellContext`\[Sigma]y1$$], 2.300401444640272}, 0}, {{
       Hold[$CellContext`\[Tau]xy1$$], -8.950719479294492}, 0}}, 
    Typeset`size$$ = {425., {209., 216.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`\[Sigma]x$2376$$ = 0, $CellContext`\[Sigma]y$2377$$ = 
    0, $CellContext`\[Tau]xy$2378$$ = 0, $CellContext`\[Theta]$2379$$ = 
    0, $CellContext`limit$2380$$ = 0, $CellContext`gridLines$2381$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`angleSelection$$ = 
        "slider", $CellContext`annotate$$ = True, $CellContext`gridLines$$ = 
        0.5, $CellContext`limit$$ = 30, $CellContext`maxShearPlane$$ = 
        False, $CellContext`onPositiveSideOnly$$ = 
        True, $CellContext`plotType$$ = 
        "Mohr circle", $CellContext`principalPlaneAngle$$ = 
        False, $CellContext`specificPlaneAngle$$ = 
        "first principal plane", $CellContext`\[Theta]$$ = 
        45, $CellContext`\[Sigma]x$$ = 14, $CellContext`\[Sigma]x1$$ = 
        15.699598555359728`, $CellContext`\[Sigma]y$$ = 
        4, $CellContext`\[Sigma]y1$$ = 
        2.300401444640272, $CellContext`\[Tau]xy$$ = 
        10, $CellContext`\[Tau]xy1$$ = -8.950719479294492}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]x$2376$$, 0], 
        Hold[$CellContext`\[Sigma]y$$, $CellContext`\[Sigma]y$2377$$, 0], 
        Hold[$CellContext`\[Tau]xy$$, $CellContext`\[Tau]xy$2378$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$2379$$, 0], 
        Hold[$CellContext`limit$$, $CellContext`limit$2380$$, 0], 
        Hold[$CellContext`gridLines$$, $CellContext`gridLines$2381$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`z$}, $CellContext`z$ = $CellContext`\[Theta]$$ (Pi/
           180); If[
          
          Or[$CellContext`plotType$$ == 
           "stress section", $CellContext`plotType$$ == 
           "Mohr circle/stress section", $CellContext`plotType$$ == 
           "Mohr circle"], 
          
          If[$CellContext`angleSelection$$ == 
           "specific plane", $CellContext`z$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]; \
$CellContext`\[Theta]$$ = $CellContext`z$ (180./
              Pi)]]; {$CellContext`\[Sigma]x1$$, $CellContext`\[Sigma]y1$$, \
$CellContext`\[Tau]xy1$$} = $CellContext`rotationStress[
           N[$CellContext`\[Sigma]x$$], 
           N[$CellContext`\[Sigma]y$$], 
           N[$CellContext`\[Tau]xy$$], 
           N[$CellContext`\[Theta]$$]]; Text[
          $CellContext`makeDiagrams[
           N[$CellContext`\[Sigma]x$$], 
           N[$CellContext`\[Sigma]y$$], 
           
           N[$CellContext`\[Tau]xy$$], $CellContext`z$, \
$CellContext`annotate$$, $CellContext`onPositiveSideOnly$$, \
$CellContext`plotType$$, $CellContext`limit$$, $CellContext`gridLines$$]]], 
      "Specifications" :> {{{$CellContext`\[Sigma]x$$, 14, ""}, -20, 20, 0.1, 
         ImageSize -> Tiny, ControlPlacement -> 
         1}, {{$CellContext`\[Sigma]y$$, 4, ""}, -20, 20, 0.1, ImageSize -> 
         Tiny, ControlPlacement -> 
         2}, {{$CellContext`\[Tau]xy$$, 10, ""}, -20, 20, 0.1, ImageSize -> 
         Tiny, ControlPlacement -> 
         3}, {{$CellContext`\[Theta]$$, 45, ""}, -360, 360, 0.1, ImageSize -> 
         Tiny, Enabled -> Dynamic[
           And[
            
            Or[$CellContext`plotType$$ == 
             "stress section", $CellContext`plotType$$ == 
             "Mohr circle/stress section", $CellContext`plotType$$ == 
             "Mohr circle"], $CellContext`angleSelection$$ == "slider"]], 
         ControlPlacement -> 4}, {{$CellContext`limit$$, 30, ""}, 5, 50, 0.1, 
         ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`gridLines$$, 0.5, ""}, 0, 1, 0.1, ImageSize -> 
         Small, ControlPlacement -> 6}, 
        Grid[{{
           Grid[{{
              Style[
               Row[{"stresses at 0", Degree}], 12], SpanFromLeft}, {
             "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
              Manipulate`Place[1], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Sigma]x$$, {3, 1}]], 
               11]}, {"\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
              Manipulate`Place[2], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Sigma]y$$, {3, 1}]], 
               11]}, {"\!\(\*SubscriptBox[\(\[Tau]\), \(xy\)]\)", 
              Manipulate`Place[3], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Tau]xy$$, {3, 1}]], 11]}, {
              Style[
               Row[{
                 Text[
                  TraditionalForm[
                   HoldForm[{{
                    Subscript[$CellContext`\[Sigma], $CellContext`x], 
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y]}, {
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y], 
                    Subscript[$CellContext`\[Sigma], $CellContext`y]}}]]], 
                 " = ", 
                 Dynamic[
                  TraditionalForm[{{
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]x$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}]}, {
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]y$$], {3, 1}]}}]]}], 11], 
              SpanFromLeft}}, Spacings -> {0.5, 0.5}, Alignment -> Center, 
            Frame -> True, FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]]}, {
           Grid[{{
              Style["select plot type", 12], SpanFromLeft}, {
              PopupMenu[
               Dynamic[$CellContext`plotType$$], {
               "stress section" -> Style["stress section", 11], "Mohr circle" -> 
                Style["Mohr circle", 11], "Mohr circle/stress section" -> 
                Style["Mohr circle/stress section", 11], 
                "normal stress trajectory" -> 
                Style["normal stress trajectory", 11], 
                "shear stress trajectory" -> 
                Style["shear stress trajectory", 11], 
                "normal/shear trajectory" -> 
                Style["normal/shear trajectory", 11]}, ImageSize -> All, 
               ContinuousAction -> False], SpanFromLeft}, {
              Row[{
                Style["annotate", 12], 
                Spacer[1], 
                Checkbox[
                 Dynamic[$CellContext`annotate$$], Enabled -> Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"]]]}], 
              Row[{
                Style[
                 
                 Column[{"display stresses on", "positive sides only"}, 
                  Alignment -> Left], 11], 
                Spacer[1], 
                Checkbox[
                 Dynamic[$CellContext`onPositiveSideOnly$$], Enabled -> 
                 Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"]]]}], SpanFromLeft}}, 
            Spacings -> {0.5, 0.5}, Alignment -> Center, Frame -> True, 
            FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]], SpanFromLeft}, {
           Grid[{{
              Grid[{{
                 Row[{
                   Style["rotate to new angle", 12]}], SpanFromLeft}, {
                 RadioButtonBar[
                  Dynamic[$CellContext`angleSelection$$], {
                  "slider" -> "", "specific plane" -> ""}, Appearance -> 
                  "Vertical", Enabled -> Dynamic[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section", $CellContext`plotType$$ == 
                    "Mohr circle"]]], 
                 Grid[{{
                    Row[{
                    Manipulate`Place[4], 
                    Spacer[4], 
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt1[$CellContext`\[Theta]$$, {4, 1}]], 
                    Degree}], 11]}], 
                    Button[
                    Row[{"0", Degree}], $CellContext`\[Theta]$$ = 0, 
                    Appearance -> "Palette", Background -> 
                    RGBColor[0.87, 0.94, 1], ImageSize -> {25, 18}]}, {
                    Row[{
                    PopupMenu[
                    
                    Dynamic[$CellContext`specificPlaneAngle$$, \
{$CellContext`specificPlaneAngle$$ = #; $CellContext`\[Theta]$$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]}& \
], {"first principal plane" -> Style["first principal plane", 11], 
                    "second principal plane" -> 
                    Style["second principal plane", 11], 
                    "first maximum shear plane" -> 
                    Style["first shear plane", 11], 
                    "second maximum shear plane" -> 
                    Style["second shear plane", 11]}, ImageSize -> All, 
                    Enabled -> Dynamic[
                    And[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"], \
$CellContext`angleSelection$$ == "specific plane"]]]}], SpanFromLeft}}]}}, 
               Spacings -> {0.15, 0.5}, Alignment -> Center, Frame -> None]}, {
              Style[
               Row[{
                 Text[
                  Style[
                   TraditionalForm[
                    HoldForm[{{
                    Subscript[
                    Derivative[1][$CellContext`\[Sigma]], $CellContext`x], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, \
$CellContext`y]}, {
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, $CellContext`y], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Sigma]], $CellContext`y]}}]]]], " = ", 
                 Dynamic[
                  TraditionalForm[{{
                    $CellContext`padIt1[$CellContext`\[Sigma]x1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}]}, {
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Sigma]y1$$, {3, 
                    1}]}}]]}], 11]}}, Spacings -> {0.5, 0.5}, Alignment -> 
            Center, Frame -> True, FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]]}, {
           Grid[{{
              Grid[{{
                 Style["zoom", 12], 
                 Spacer[13], 
                 Manipulate`Place[5], 
                 Spacer[12]}, {"", 
                 Style[
                  Row[{"in", 
                    Spacer[75], "out"}], 11], SpanFromLeft}}, 
               Spacings -> {0.1, 0.1}, Alignment -> Center, Frame -> True, 
               FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}, {
              Grid[{{
                 Style["gridlines", 12], Manipulate`Place[6] Spacer[8]}, {"", 
                 Style[
                  Row[{"less", 
                    Spacer[70], "more"}], 11]}}, Spacings -> {0.1, 0.1}, 
               Alignment -> Center, Frame -> True, FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}}, Spacings -> {0.1, 0.5}, Alignment -> 
            Left, Frame -> None], SpanFromLeft}}, Spacings -> {0.2, 1.4}, 
         Alignment -> Center], {{$CellContext`annotate$$, True}, 0, 
         ControlType -> None}, {{$CellContext`plotType$$, "Mohr circle"}, 0, 
         ControlType -> None}, {{$CellContext`onPositiveSideOnly$$, True}, 0, 
         ControlType -> None}, {{$CellContext`principalPlaneAngle$$, False}, 
         0, ControlType -> None}, {{$CellContext`maxShearPlane$$, False}, 0, 
         ControlType -> 
         None}, {{$CellContext`specificPlaneAngle$$, "first principal plane"},
          0, ControlType -> None}, {{$CellContext`angleSelection$$, "slider"},
          0, ControlType -> 
         None}, {{$CellContext`\[Sigma]x1$$, 15.699598555359728`}, 0, 
         ControlType -> 
         None}, {{$CellContext`\[Sigma]y1$$, 2.300401444640272}, 0, 
         ControlType -> 
         None}, {{$CellContext`\[Tau]xy1$$, -8.950719479294492}, 0, 
         ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, SynchronousUpdating -> False, 
        SynchronousInitialization -> False, ContinuousAction -> True, 
        Alignment -> Center, ImageMargins -> 0, FrameMargins -> 0, Paneled -> 
        True, Frame -> False, AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{654., {239., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`contentSizeW = 
        425; $CellContext`contentSizeH = 425; $CellContext`padIt2[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[List]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"", ""}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt2[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[Integer]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"", ""}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt2s[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[Integer]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"-", "+"}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt1[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[List]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"-", "+"}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`integerStrictPositive = And[
          IntegerQ[#], # > 0]& ; $CellContext`integerPositive = And[
          IntegerQ[#], # >= 0]& ; $CellContext`numericStrictPositive = And[
          Element[#, Reals], # > 0]& ; $CellContext`numericPositive = And[
          Element[#, Reals], # >= 0]& ; $CellContext`numericStrictNegative = 
        And[
          Element[#, Reals], # < 0]& ; $CellContext`numericNegative = And[
          Element[#, Reals], # <= 0]& ; $CellContext`bool = 
        Element[#, Booleans]& ; $CellContext`numeric = 
        Element[#, Reals]& ; $CellContext`integer = 
        Element[#, Integers]& ; $CellContext`makeDiagrams[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`annotate, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`onPositiveSideOnly, 
            Blank[]], $CellContext`bool], 
          Pattern[$CellContext`plotType, 
           Blank[String]], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := Module[{}, 
          Which[$CellContext`plotType == "stress section", 
           $CellContext`make2DStressDiagram[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta], \
$CellContext`annotate, $CellContext`onPositiveSideOnly, $CellContext`limit, \
$CellContext`gridLines, {$CellContext`contentSizeW, \
$CellContext`contentSizeH}], $CellContext`plotType == "Mohr circle", 
           $CellContext`makeMohrCircle[$CellContext`\[Theta], $CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines, {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, 
            $CellContext`makeMohrCircleTitle[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]], $CellContext`plotType == 
           "Mohr circle/stress section", 
           Grid[{{
              $CellContext`makeMohrCircleTitle[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], SpanFromLeft}, {
              $CellContext`make2DStressDiagram[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta], \
$CellContext`annotate, $CellContext`onPositiveSideOnly, $CellContext`limit, \
$CellContext`gridLines, {
               0.5 $CellContext`contentSizeW, 
                0.87 $CellContext`contentSizeH}], 
              $CellContext`makeMohrCircle[$CellContext`\[Theta], \
$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, \
$CellContext`limit, $CellContext`gridLines, {
               0.499 $CellContext`contentSizeW, 
                0.87 $CellContext`contentSizeH}, {}]}}, 
            Spacings -> {0, 0}], $CellContext`plotType == 
           "normal stress trajectory", 
           $CellContext`makeNormalStressPolarPlot[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines], $CellContext`plotType == "shear stress trajectory", 
           $CellContext`makeShearStressPolarPlot[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines], $CellContext`plotType == "normal/shear trajectory", 
           $CellContext`makeShearAndNormalStressPolarPlot[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines]]]; $CellContext`getAngleAtSpecificPlane[
          Pattern[$CellContext`specificPlaneAngle, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]x, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]y, 
           Blank[]], 
          Pattern[$CellContext`\[Tau]xy, 
           Blank[]]] := N[
          Which[$CellContext`specificPlaneAngle == "first principal plane", 
           Part[
            $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 
            2], $CellContext`specificPlaneAngle == "second principal plane", 
           Part[
            $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 2, 
            2], $CellContext`specificPlaneAngle == 
           "first maximum shear plane", Part[
             $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 2] + 
           Pi/4, $CellContext`specificPlaneAngle == 
           "second maximum shear plane", Part[
             $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 2] + (3/4) 
            Pi]]; $CellContext`principalStresses[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`\[Theta]p, $CellContext`\[Sigma], $CellContext`\
\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1max, $CellContext`r, \
$CellContext`c, $CellContext`tmp, $CellContext`\[Theta]1, $CellContext`\
\[Theta]2}, $CellContext`r = ((($CellContext`\[Sigma]x - \
$CellContext`\[Sigma]y)/2)^2 + $CellContext`\[Tau]xy^2)^
            Rational[
             1, 2]; $CellContext`c = ($CellContext`\[Sigma]x + $CellContext`\
\[Sigma]y)/
            2; {$CellContext`\[Sigma]1, $CellContext`\[Sigma]2} = \
{$CellContext`c + $CellContext`r, $CellContext`c - $CellContext`r}; 
          If[Abs[$CellContext`\[Sigma]2] > 
            Abs[$CellContext`\[Sigma]1], $CellContext`tmp = $CellContext`\
\[Sigma]1; $CellContext`\[Sigma]1 = $CellContext`\[Sigma]2; $CellContext`\
\[Sigma]2 = $CellContext`tmp]; 
          If[Abs[$CellContext`\[Sigma]x - $CellContext`\[Sigma]y] <= \
$MachineEpsilon, $CellContext`\[Theta]p = Pi/4, $CellContext`\[Theta]p = 
            ArcTan[2 (Abs[$CellContext`\[Tau]xy]/
                Abs[$CellContext`\[Sigma]x - $CellContext`\[Sigma]y])]/2]; 
          If[$CellContext`\[Sigma]1 > $CellContext`\[Sigma]2, 
            If[$CellContext`\[Tau]xy > 0, 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {$CellContext`\[Theta]p, -(
                 Pi/2 - $CellContext`\[Theta]p)}, {$CellContext`\[Theta]1, \
$CellContext`\[Theta]2} = {
               Pi/2 - $CellContext`\[Theta]p, -$CellContext`\[Theta]p}], 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {-$CellContext`\[Theta]p, 
                Pi/2 - $CellContext`\[Theta]p}, {$CellContext`\[Theta]1, \
$CellContext`\[Theta]2} = {-(
                 Pi/2 - $CellContext`\[Theta]p), $CellContext`\[Theta]p}]], 
            If[$CellContext`\[Tau]xy > 0, 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {-(
                 Pi/2 - $CellContext`\[Theta]p), $CellContext`\[Theta]p}, \
{$CellContext`\[Theta]1, $CellContext`\[Theta]2} = {-$CellContext`\[Theta]p, 
                Pi/2 - $CellContext`\[Theta]p}], 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {
               Pi/2 - $CellContext`\[Theta]p, -$CellContext`\[Theta]p}, \
{$CellContext`\[Theta]1, $CellContext`\[Theta]2} = {$CellContext`\[Theta]p, -(
                 Pi/2 - $CellContext`\[Theta]p)}]]]; \
{{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, {$CellContext`\[Sigma]2, \
$CellContext`\[Theta]2}}]; $CellContext`maxAndMinShearStress[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`r}, $CellContext`r = 
           Sqrt[(($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)/
               2)^2 + $CellContext`\[Tau]xy^2]; {$CellContext`r, \
-$CellContext`r}]; $CellContext`plot[
          Pattern[$CellContext`data, 
           Blank[List]], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], 
          Pattern[$CellContext`color, 
           Blank[]]] := 
        ListPolarPlot[$CellContext`data, Joined -> True, AxesOrigin -> {0, 0},
           ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, ImagePadding -> {{20, 10}, {20, 5}}, ImageMargins -> 
          0, AspectRatio -> 1, Frame -> True, 
          If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
              
              Range[-$CellContext`limit, $CellContext`limit, (
                2 $CellContext`limit)/($CellContext`gridLines 20)], 
              
              Range[-$CellContext`limit, $CellContext`limit, (
                2 $CellContext`limit)/($CellContext`gridLines 20)]}, 
            GridLinesStyle -> Directive[
              Thickness[0.001], LightGray]}], 
          PlotRange -> {{-$CellContext`limit, $CellContext`limit}, \
{-$CellContext`limit, $CellContext`limit}}, 
          PlotStyle -> $CellContext`color]; $CellContext`makeArrowForAngle[
          Pattern[$CellContext`r, 
           Blank[]], 
          Pattern[$CellContext`center, 
           Blank[]], {{
            Pattern[$CellContext`\[Sigma]1, 
             Blank[]], 
            Pattern[$CellContext`\[Theta]1, 
             Blank[]]}, {
            Pattern[$CellContext`\[Sigma]2, 
             Blank[]], 
            Pattern[$CellContext`\[Theta]2, 
             Blank[]]}}, 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`phi, $CellContext`tbl, $CellContext`align}, 
          If[$CellContext`\[Sigma]1 > $CellContext`\[Sigma]2, 
            
            If[$CellContext`\[Tau]xy > 
             0, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, (-2) \
$CellContext`\[Theta]1, 0, Pi/100}]; $CellContext`align = {-1, 
               1}, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, (-2) \
$CellContext`\[Theta]1, 0, (-Pi)/100}]; $CellContext`align = {-1, -1}], 
            
            If[$CellContext`\[Tau]xy > 
             0, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, -(Pi + 
                  2 $CellContext`\[Theta]1), -Pi, (-Pi)/
                 100}]; $CellContext`align = {1, 1}, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, Pi - 
                 2 $CellContext`\[Theta]1, Pi, Pi/
                 100}]; $CellContext`align = {1, -1}]]; {
            Text["2\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
             If[Length[$CellContext`tbl] > 1, 
              Part[$CellContext`tbl, 
               Round[Length[$CellContext`tbl]/2]], 
              
              First[$CellContext`tbl]], $CellContext`align], \
$CellContext`tbl}]; $CellContext`makeMohrCircleTitle[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\
\[Theta]1, $CellContext`\[Theta]2, $CellContext`r, $CellContext`center, \
$CellContext`ptA}, {{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`center = \
{($CellContext`\[Sigma]1 + $CellContext`\[Sigma]2)/2, 
             0}; $CellContext`ptA = {$CellContext`\[Sigma]x, -$CellContext`\
\[Tau]xy}; $CellContext`r = 
           EuclideanDistance[$CellContext`center, $CellContext`ptA]; Grid[{
             Map[TraditionalForm[
               Style[#]]& , {
              "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
               "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
               "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
               "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
               "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)"}], {
              $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
              PlusMinus[
               $CellContext`padIt2[$CellContext`r, {4, 1}]], 
              Row[{
                $CellContext`padIt1[$CellContext`\[Theta]1 (180/Pi), {4, 1}], 
                Degree}], 
              Row[{
                $CellContext`padIt1[$CellContext`\[Theta]2 (180/Pi), {4, 1}], 
                Degree}]}}, Spacings -> {0.5, 1}, Frame -> All, FrameStyle -> 
            Directive[Thin]]]; $CellContext`getRadiusOfCircle[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Sqrt[(($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)/
            2)^2 + $CellContext`\[Tau]xy^2]; $CellContext`rotationStress[
          Pattern[$CellContext`\[Sigma]x, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]y, 
           Blank[]], 
          Pattern[$CellContext`\[Tau]xy, 
           Blank[]], 
          Pattern[$CellContext`\[Theta], 
           Blank[]]] := 
        Module[{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy, \
$CellContext`\[Tau]}, $CellContext`\[Sigma]xx = (1/
              2) ($CellContext`\[Sigma]x + $CellContext`\[Sigma]y) + ((1/
               2) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
             Cos[2 $CellContext`\[Theta]] + $CellContext`\[Tau]xy 
             Sin[2 $CellContext`\[Theta]]; $CellContext`\[Tau] = ((-(1/
                2)) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
             Sin[2 $CellContext`\[Theta]] + $CellContext`\[Tau]xy 
             Cos[2 $CellContext`\[Theta]]; $CellContext`\[Sigma]yy = (1/
              2) ($CellContext`\[Sigma]x + $CellContext`\[Sigma]y) - ((1/
              2) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
            Cos[2 $CellContext`\[Theta]] - $CellContext`\[Tau]xy 
            Sin[2 $CellContext`\[Theta]]; {$CellContext`\[Sigma]xx, \
$CellContext`\[Sigma]yy, $CellContext`\[Tau]}]; $CellContext`makeMohrCircle[
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], {
           PatternTest[
            Pattern[$CellContext`contentSizeW, 
             Blank[]], $CellContext`numericStrictPositive], 
           PatternTest[
            Pattern[$CellContext`contentSizeH, 
             Blank[]], $CellContext`numericStrictPositive]}, 
          Pattern[$CellContext`plotTitle, 
           Blank[]]] := 
        Module[{$CellContext`ptA, $CellContext`ptB, $CellContext`center, \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Theta]1, \
$CellContext`\[Theta]2, $CellContext`r, $CellContext`z, $CellContext`ptD1, \
$CellContext`ptD2, $CellContext`\[Sigma]x1, $CellContext`\[Tau]xy1, \
$CellContext`\[Sigma]y1}, {{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`center = \
{($CellContext`\[Sigma]1 + $CellContext`\[Sigma]2)/2, 
             0}; $CellContext`ptA = {$CellContext`\[Sigma]x, -$CellContext`\
\[Tau]xy}; $CellContext`r = $CellContext`getRadiusOfCircle[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\
\[Sigma]x1, $CellContext`\[Sigma]y1, $CellContext`\[Tau]xy1} = \
$CellContext`rotationStress[$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, \
$CellContext`\[Tau]xy, $CellContext`\[Theta]]; $CellContext`z = $CellContext`\
\[Sigma]x - First[$CellContext`center]; $CellContext`ptB = {
            Part[$CellContext`ptA, 1] - 2 $CellContext`z, -
             Part[$CellContext`ptA, 
               2]}; $CellContext`ptD1 = {$CellContext`\[Sigma]x1, \
-$CellContext`\[Tau]xy1}; $CellContext`ptD2 = {$CellContext`\[Sigma]y1, \
$CellContext`\[Tau]xy1}; Graphics[{
             Circle[$CellContext`center, $CellContext`r], {Black, 
              PointSize[0.02], 
              Point[$CellContext`ptA]}, {Black, 
              PointSize[0.02], 
              Point[$CellContext`center]}, {Black, 
              PointSize[0.02], 
              Point[$CellContext`ptB]}, {Dashed, 
              Line[{$CellContext`ptA, $CellContext`ptB}]}, 
             Circle[$CellContext`ptD1, 0.8], {Red, Dashed, 
              Line[{$CellContext`ptD1, $CellContext`ptD2}]}, 
             Circle[$CellContext`ptD2, 0.8], 
             Text[
              Row[{"(", 
                $CellContext`padIt1[$CellContext`\[Sigma]x1, {4, 1}], ",", 
                $CellContext`padIt1[$CellContext`\[Tau]xy1, {4, 1}], 
                ")"}], $CellContext`ptD1, 
              
              If[$CellContext`\[Sigma]x1 > 
               Part[$CellContext`center, 1], {-1.2, -1.2}, {1.2, -1.2}]], 
             Text[
              Row[{"(", 
                $CellContext`padIt1[$CellContext`\[Sigma]y1, {4, 1}], ",", 
                $CellContext`padIt1[$CellContext`\[Tau]xy1, {4, 1}], 
                ")"}], $CellContext`ptD2, 
              
              If[$CellContext`\[Sigma]y1 > 
               Part[$CellContext`center, 1], {-1.2, -1.2}, {1.2, -1.2}]], {
             Red, 
              PointSize[0.02], 
              Point[{$CellContext`\[Sigma]1, 0}]}, {
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], {$CellContext`\[Sigma]1, 0}, {-1.5, 1.5}]}, {Red, 
              PointSize[0.02], 
              Point[{$CellContext`\[Sigma]2, 0}]}, {
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], {$CellContext`\[Sigma]2, 0}, {1.2, 1.3}]}, {Blue, 
              PointSize[0.02], 
              Point[{
                Part[$CellContext`center, 1], $CellContext`r}]}, {
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 12]], {
                Part[$CellContext`center, 1], $CellContext`r}, {0, -1.5}]}, {
             Blue, 
              PointSize[0.02], 
              Point[{
                Part[$CellContext`center, 1], -$CellContext`r}]}, {
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 12]], {
                Part[$CellContext`center, 1], -$CellContext`r}, {0, 1.5}]}, {
              Text[
               Style["tension", 11], {$CellContext`limit, 0}, {1, 3}]}, {
              Text[
               Style["compression", 11], {-$CellContext`limit, 0}, {-1, 3}]}}, 
            If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
                
                Range[-$CellContext`limit, $CellContext`limit, (
                  2 $CellContext`limit)/($CellContext`gridLines 20)], 
                
                Range[-$CellContext`limit, $CellContext`limit, (
                  2 $CellContext`limit)/($CellContext`gridLines 20)]}, 
              GridLinesStyle -> Directive[
                Thickness[0.001], LightGray]}], 
            PlotRange -> {{-$CellContext`limit, $CellContext`limit}, \
{-$CellContext`limit, $CellContext`limit}}, Axes -> True, 
            AxesOrigin -> {0, 0}, TicksStyle -> 8, PlotLabel -> 
            If[$CellContext`plotTitle === {}, "", $CellContext`plotTitle], 
            ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, 
            ImagePadding -> {{20, 10}, {20, 
             5}}]]; $CellContext`makeShearAndNormalStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, \
$CellContext`\[Sigma]2Abs, $CellContext`\[Theta]p1, $CellContext`\[Theta]p2, \
$CellContext`p1, $CellContext`p2, $CellContext`p3, $CellContext`p4, \
$CellContext`plotTitle, $CellContext`coord1, $CellContext`coord2, \
$CellContext`\[Tau]1, $CellContext`\[Tau]2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                1]}], $CellContext`limit, $CellContext`gridLines, 
             Red]; $CellContext`coord1 = {
            Abs[$CellContext`\[Sigma]1] Cos[$CellContext`\[Theta]p1], 
             Abs[$CellContext`\[Sigma]1] 
             Sin[$CellContext`\[Theta]p1]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Sigma]2] Cos[$CellContext`\[Theta]p2], 
             Abs[$CellContext`\[Sigma]2] 
             Sin[$CellContext`\[Theta]p2]}; $CellContext`p2 = Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Sigma]x, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 12]], {$CellContext`\[Sigma]x, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Sigma]y}]}, 
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 12]], {
               0, $CellContext`\[Sigma]y}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord2]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], $CellContext`coord2, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 
                    2]}}]}}]; {$CellContext`\[Tau]1, $CellContext`\[Tau]2} = \
$CellContext`maxAndMinShearStress[$CellContext`\[Sigma]x, $CellContext`\
\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p3 = $CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                3]}], $CellContext`limit, $CellContext`gridLines, 
             Blue]; $CellContext`coord1 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p1 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p1 + Pi/4]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p2 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p2 + Pi/4]}; $CellContext`p4 = 
           Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Tau]xy, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 12]], {$CellContext`\[Tau]xy, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Tau]xy}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", 
                 12]], {0, $CellContext`\[Tau]xy}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {Dashed, Thin, 
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Style[
             
             Grid[{{"normal (red) and shear (blue) polar (stress vs. angle) \
trajectory", SpanFromLeft}, 
               Map[TraditionalForm[
                 Style[#]]& , {
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)"}], {
                $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
                Row[{
                  $CellContext`padIt1[$CellContext`\[Theta]p1 (180/Pi), {4, 
                   1}], Degree}], 
                $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
                Row[{
                  $CellContext`padIt1[$CellContext`\[Theta]p2 (180/Pi), {4, 
                   1}], Degree}], 
                PlusMinus[
                 $CellContext`padIt2[$CellContext`\[Tau]1, {4, 1}]]}}, 
              Spacings -> {0.4, 1.1}, Frame -> All, FrameStyle -> 
              Directive[Thin]], 12]; 
          Show[$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`makeNormalStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, \
$CellContext`\[Sigma]2Abs, $CellContext`\[Theta]p1, $CellContext`\[Theta]p2, \
$CellContext`p1, $CellContext`p2, $CellContext`plotTitle, \
$CellContext`coord1, $CellContext`coord2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                1]}], $CellContext`limit, $CellContext`gridLines, 
             Red]; $CellContext`coord1 = {
            Abs[$CellContext`\[Sigma]1] Cos[$CellContext`\[Theta]p1], 
             Abs[$CellContext`\[Sigma]1] 
             Sin[$CellContext`\[Theta]p1]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Sigma]2] Cos[$CellContext`\[Theta]p2], 
             Abs[$CellContext`\[Sigma]2] 
             Sin[$CellContext`\[Theta]p2]}; $CellContext`p2 = Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Sigma]x, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 12]], {$CellContext`\[Sigma]x, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Sigma]y}]}, 
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 12]], {
               0, $CellContext`\[Sigma]y}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord2]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], $CellContext`coord2, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Grid[{{"normal stress polar (stress vs. angle) trajectory", 
               SpanFromLeft}, 
              Map[TraditionalForm[
                Style[#]]& , {
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)"}], {
               $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
               Row[{
                 $CellContext`padIt1[$CellContext`\[Theta]p1 (180/Pi), {4, 
                  1}], Degree}], 
               $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
               Row[{
                 $CellContext`padIt1[$CellContext`\[Theta]p2 (180/Pi), {4, 
                  1}], Degree}]}}, Spacings -> {0.8, 1}, Frame -> All, 
             FrameStyle -> Directive[Thin]]; 
          Show[$CellContext`p1, $CellContext`p2, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`makeShearStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Tau]1, $CellContext`\[Tau]2, \
$CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, $CellContext`\[Sigma]2Abs, \
$CellContext`\[Theta]p1, $CellContext`\[Theta]p2, $CellContext`p1, \
$CellContext`p2, $CellContext`plotTitle, $CellContext`coord1, \
$CellContext`coord2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\[Tau]1, \
$CellContext`\[Tau]2} = $CellContext`maxAndMinShearStress[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                3]}], $CellContext`limit, $CellContext`gridLines, 
             Blue]; $CellContext`coord1 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p1 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p1 + Pi/4]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p2 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p2 + Pi/4]}; $CellContext`p2 = 
           Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Tau]xy, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 12]], {$CellContext`\[Tau]xy, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Tau]xy}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", 
                 12]], {0, $CellContext`\[Tau]xy}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Grid[{{"shear stress polar (stress vs. angle) trajectory", 
               SpanFromLeft}, 
              Flatten[{
                Map[TraditionalForm[
                  Style[#]]& , {
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)",
                   "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Theta]\), \(max\)]\)"}], 
                SpanFromLeft}], {
               $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
               PlusMinus[
                $CellContext`padIt2[$CellContext`\[Tau]xy, {4, 1}]], 
               $CellContext`padIt1[$CellContext`\[Tau]1, {4, 1}], 
               Row[{
                 $CellContext`padIt1[($CellContext`\[Theta]p1 + Pi/4) (180/
                   Pi), {4, 1}], Degree, ",", 
                 $CellContext`padIt1[($CellContext`\[Theta]p1 + (3/4) Pi) (
                   180/Pi), {4, 1}], Degree}], SpanFromLeft}}, 
             Spacings -> {1, 1}, Frame -> All, FrameStyle -> Directive[Thin]]; 
          Show[$CellContext`p1, $CellContext`p2, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`make2DStressDiagram[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`annotate, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`onPositiveSideOnly, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], {
           PatternTest[
            Pattern[$CellContext`contentSizeW, 
             Blank[]], $CellContext`numericStrictPositive], 
           PatternTest[
            Pattern[$CellContext`contentSizeH, 
             Blank[]], $CellContext`numericStrictPositive]}] := 
        Module[{$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\
\[Sigma]xx, $CellContext`\[Sigma]yy, $CellContext`\[Tau]xyxy, $CellContext`r, \
$CellContext`\[Sigma]xxRightArrow, $CellContext`\[Sigma]xxLeftArrow, \
$CellContext`\[Sigma]yyTopArrow, $CellContext`\[Sigma]yyBottomArrow, \
$CellContext`\[Tau]RightArrow, $CellContext`\[Tau]LeftArrow, $CellContext`\
\[Tau]TopArrow, $CellContext`\[Tau]BottomArrow, $CellContext`\[Tau]1, \
$CellContext`\[Tau]2, $CellContext`color, $CellContext`textSize = 
           11, $CellContext`colorShear, \
$CellContext`\[Sigma]xxRightArrowText, $CellContext`\[Sigma]xxLeftArrowText, \
$CellContext`\[Sigma]yyTopArrowText, $CellContext`\[Sigma]yyBottomArrowText, \
$CellContext`\[Tau]RightArrowText, $CellContext`\[Tau]LeftArrowText, \
$CellContext`\[Tau]TopArrowText, $CellContext`\[Tau]BottomArrowText, \
$CellContext`rotationMatrix, $CellContext`coordinates, $CellContext`from, \
$CellContext`to, $CellContext`rotatedAxisXText, \
$CellContext`rotatedAxisYText, $CellContext`maxAbsoluteprincipalShearStress, \
$CellContext`thickness = Thick, $CellContext`eps = 
           10^(-9), $CellContext`\[Theta]p1, $CellContext`\[Theta]p2}, \
$CellContext`rotationMatrix = 
           RotationMatrix[-$CellContext`\[Theta]]; \
$CellContext`rotatedAxisXText = Text[
             Style["x", Italic, $CellContext`textSize], 
             
             Dot[{0.3, 
               0}, $CellContext`rotationMatrix]]; \
$CellContext`rotatedAxisYText = Text[
             Style["y", Italic, $CellContext`textSize], 
             
             Dot[{0, 0.3}, $CellContext`rotationMatrix]]; {{$CellContext`\
\[Sigma]1, $CellContext`\[Theta]p1}, {$CellContext`\[Sigma]2, $CellContext`\
\[Theta]p2}} = $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\[Tau]1, \
$CellContext`\[Tau]2} = $CellContext`maxAndMinShearStress[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; \
$CellContext`maxAbsoluteprincipalShearStress = Max[
             
             Abs[{$CellContext`\[Tau]1, $CellContext`\[Tau]2}]]; \
{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy, $CellContext`\[Tau]xyxy} = \
$CellContext`rotationStress[$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, \
$CellContext`\[Tau]xy, $CellContext`\[Theta]]; 
          If[Abs[$CellContext`\[Sigma]1] > 
            0, {$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy} = \
{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy}/
             Abs[$CellContext`\[Sigma]1]]; 
          If[$CellContext`maxAbsoluteprincipalShearStress > 
            0, $CellContext`\[Tau]xyxy = \
$CellContext`\[Tau]xyxy/$CellContext`maxAbsoluteprincipalShearStress]; \
$CellContext`color = Red; $CellContext`colorShear = 
           Blue; $CellContext`r = {White, 
             EdgeForm[{Thin, Gray}], 
             Rectangle[{-0.5, -0.5}, {0.5, 0.5}]}; 
          If[$CellContext`\[Sigma]xx >= 
            0, $CellContext`from = {0.6, 0}; $CellContext`to = {
              0.6 + $CellContext`\[Sigma]xx, 0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, 0.78, 
                  0.68] + $CellContext`\[Sigma]xx, 
                0}, $CellContext`rotationMatrix], $CellContext`from = {
              0.6 + Abs[$CellContext`\[Sigma]xx], 0}; $CellContext`to = {
              0.6, 0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, 0.78, 0.68] + 
                Abs[$CellContext`\[Sigma]xx], 
                0}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]xxRightArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]xx 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates, {0,
               0}], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates, {0, 
              0}]]; $CellContext`\[Sigma]xxRightArrow = \
{$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]xx >= 
            0, $CellContext`from = {-0.6, 
               0}; $CellContext`to = {-0.6 - $CellContext`\[Sigma]xx, 
               0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, -0.78, -0.68] - $CellContext`\
\[Sigma]xx, 0}, $CellContext`rotationMatrix], $CellContext`from = {-0.6 - 
               Abs[$CellContext`\[Sigma]xx], 0}; $CellContext`to = {-0.6, 
               0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, -0.78, -0.68] - 
                Abs[$CellContext`\[Sigma]xx], 
                0}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]xxLeftArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]xx 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]xxLeftArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]yy >= 
            0, $CellContext`from = {0, 0.6}; $CellContext`to = {
              0, 0.6 + $CellContext`\[Sigma]yy}; $CellContext`coordinates = 
             Dot[{0, If[$CellContext`annotate, 0.75, 
                  0.68] + $CellContext`\[Sigma]yy}, \
$CellContext`rotationMatrix], $CellContext`from = {
              0, 0.6 + Abs[$CellContext`\[Sigma]yy]}; $CellContext`to = {
              0, 0.6}; $CellContext`coordinates = 
             Dot[{0, If[$CellContext`annotate, 0.75, 0.68] + 
                Abs[$CellContext`\[Sigma]yy]}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]yyTopArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]yy 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]yyTopArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]yy >= 
            0, $CellContext`from = {0, -0.6}; $CellContext`to = {
              0, -0.6 - $CellContext`\[Sigma]yy}; $CellContext`coordinates = 
             Dot[{0, -0.75 - $CellContext`\[Sigma]yy}, \
$CellContext`rotationMatrix], $CellContext`from = {
              0, -0.6 - Abs[$CellContext`\[Sigma]yy]}; $CellContext`to = {
              0, -0.6}; $CellContext`coordinates = 
             Dot[{0, -0.75 - 
                Abs[$CellContext`\[Sigma]yy]}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]yyBottomArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]yy 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]yyBottomArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Tau]xyxy >= 
            0, $CellContext`from = {
              0.6, 0.5 - $CellContext`\[Tau]xyxy}; $CellContext`to = {0.6, 
              0.5}; $CellContext`coordinates = Dot[{
                If[$CellContext`annotate, 0.8, 0.7], 
                0.45}, $CellContext`rotationMatrix], $CellContext`from = {0.6,
               0.5}; $CellContext`to = {
              0.6, 0.5 - 
               Abs[$CellContext`\[Tau]xyxy]}; $CellContext`coordinates = Dot[{
                If[$CellContext`annotate, 0.8, 0.7], 
                0.45}, $CellContext`rotationMatrix]]; \
$CellContext`\[Tau]RightArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style[
                  "\!\(\*SubscriptBox[\(\[Tau]\), \
\(x\[InvisibleComma]y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Tau]xyxy \
$CellContext`maxAbsoluteprincipalShearStress, {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Tau]RightArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`colorShear, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Tau]xyxy >= 
            0, $CellContext`from = {
              0.5 - $CellContext`\[Tau]xyxy, 0.6}; $CellContext`to = {0.5, 
              0.6}; $CellContext`coordinates = 
             Dot[{0.5, 
               0.75}, $CellContext`rotationMatrix], $CellContext`from = {0.5, 
              0.6}; $CellContext`to = {
              0.5 - Abs[$CellContext`\[Tau]xyxy], 
               0.6}; $CellContext`coordinates = 
             Dot[{0.5, 
               0.75}, $CellContext`rotationMatrix]]; \
$CellContext`\[Tau]TopArrowText = Text[
             TraditionalForm[
              Style[
              "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]; \
$CellContext`\[Tau]TopArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`colorShear, 
             
             Arrow[{$CellContext`from, $CellContext`to}, 
              0]}; $CellContext`\[Tau]LeftArrow = {
             Arrowheads[Medium], 
             
             If[$CellContext`\[Tau]xyxy >= 
              0, {$CellContext`thickness, $CellContext`colorShear, 
               
               Arrow[{{-0.6, -0.5 + $CellContext`\[Tau]xyxy}, {-0.6, -0.5}}, 
                0]}, {$CellContext`thickness, $CellContext`colorShear, 
               
               Arrow[{{-0.6, -0.5}, {-0.6, -0.5 + 
                  Abs[$CellContext`\[Tau]xyxy]}}, 
                0]}]}; $CellContext`\[Tau]BottomArrow = \
{$CellContext`thickness, $CellContext`colorShear, 
             Arrowheads[Medium], 
             If[$CellContext`\[Tau]xyxy >= 0, 
              
              Arrow[{{-0.5 + $CellContext`\[Tau]xyxy, -0.6}, {-0.5, -0.6}}, 
               0], 
              
              Arrow[{{-0.5, -0.6}, {-0.5 + 
                 Abs[$CellContext`\[Tau]xyxy], -0.6}}, 
               0]]}; $CellContext`from = (-($CellContext`limit/40)) 
            1.9; $CellContext`to = -$CellContext`from; Graphics[{
             Rotate[$CellContext`r, $CellContext`\[Theta], {0, 0}], 
             If[Abs[$CellContext`\[Sigma]xx] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Sigma]xxRightArrow, \
$CellContext`\[Theta], {0, 0}], $CellContext`\[Sigma]xxRightArrowText, 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], 
                
                Rotate[$CellContext`\[Sigma]xxLeftArrow, \
$CellContext`\[Theta], {0, 0}]]}, 
              Apply[Sequence, {}]], 
             If[Abs[$CellContext`\[Sigma]yy] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Sigma]yyTopArrow, $CellContext`\[Theta], \
{0, 0}], $CellContext`\[Sigma]yyTopArrowText, 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], 
                
                Rotate[$CellContext`\[Sigma]yyBottomArrow, $CellContext`\
\[Theta], {0, 0}]]}, 
              Apply[Sequence, {}]], 
             If[Abs[$CellContext`\[Tau]xyxy] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Tau]RightArrow, $CellContext`\[Theta], {
                0, 0}], $CellContext`\[Tau]RightArrowText, 
               
               Rotate[$CellContext`\[Tau]TopArrow, $CellContext`\[Theta], {0, 
                0}], 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], {
                 
                 Rotate[$CellContext`\[Tau]LeftArrow, $CellContext`\[Theta], {
                  0, 0}], 
                 
                 Rotate[$CellContext`\[Tau]BottomArrow, \
$CellContext`\[Theta], {0, 0}]}]}, 
              Apply[Sequence, {}]], {Gray, Thin, Dashed, 
              Rotate[{
                Arrowheads[Small], 
                Arrow[{{-0.25, 0}, {0.25, 0}}]}, $CellContext`\[Theta], {0, 
               0}]}, {Gray, Thin, Dashed, 
              Rotate[{
                Arrowheads[Small], 
                Arrow[{{0, -0.25}, {0, 0.25}}]}, $CellContext`\[Theta], {0, 
               0}]}, $CellContext`rotatedAxisXText, \
$CellContext`rotatedAxisYText, {
              PointSize[0.01], 
              Point[{0, 0}]}}, Axes -> False, 
            PlotRange -> {{$CellContext`from, $CellContext`to}, \
{$CellContext`from, $CellContext`to}}, 
            ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, ImagePadding -> {{10, 10}, {10, 10}}, 
            ImageMargins -> 0, AspectRatio -> Automatic, 
            If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
                
                Range[$CellContext`from, $CellContext`to, ($CellContext`to - \
$CellContext`from)/($CellContext`gridLines 20)], 
                
                Range[$CellContext`from, $CellContext`to, ($CellContext`to - \
$CellContext`from)/($CellContext`gridLines 20)]}, GridLinesStyle -> Directive[
                Thickness[0.001], LightGray]}], Frame -> False]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->29755794]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`angleSelection$$ = 
    "slider", $CellContext`annotate$$ = True, $CellContext`gridLines$$ = 
    0.5, $CellContext`limit$$ = 30, $CellContext`maxShearPlane$$ = 
    False, $CellContext`onPositiveSideOnly$$ = True, $CellContext`plotType$$ =
     "stress section", $CellContext`principalPlaneAngle$$ = 
    False, $CellContext`specificPlaneAngle$$ = 
    "first principal plane", $CellContext`\[Theta]$$ = 
    45, $CellContext`\[Sigma]x$$ = 14, $CellContext`\[Sigma]x1$$ = 
    15.699598555359728`, $CellContext`\[Sigma]y$$ = 
    4, $CellContext`\[Sigma]y1$$ = 
    2.300401444640272, $CellContext`\[Tau]xy$$ = 
    10, $CellContext`\[Tau]xy1$$ = -8.950719479294492, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Sigma]x$$], 14, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Sigma]y$$], 4, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Tau]xy$$], 10, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Theta]$$], 45, ""}, -360, 360, 0.1}, {{
       Hold[$CellContext`limit$$], 30, ""}, 5, 50, 0.1}, {{
       Hold[$CellContext`gridLines$$], 0.5, ""}, 0, 1, 0.1}, {
      Hold[
       Grid[{{
          Grid[{{
             Style[
              Row[{"stresses at 0", Degree}], 12], SpanFromLeft}, {
            "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
             Manipulate`Place[1], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Sigma]x$$, {3, 1}]], 11]}, {
            "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
             Manipulate`Place[2], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Sigma]y$$, {3, 1}]], 11]}, {
            "\!\(\*SubscriptBox[\(\[Tau]\), \(xy\)]\)", 
             Manipulate`Place[3], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Tau]xy$$, {3, 1}]], 11]}, {
             Style[
              Row[{
                Text[
                 TraditionalForm[
                  HoldForm[{{
                    Subscript[$CellContext`\[Sigma], $CellContext`x], 
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y]}, {
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y], 
                    Subscript[$CellContext`\[Sigma], $CellContext`y]}}]]], 
                " = ", 
                Dynamic[
                 TraditionalForm[{{
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]x$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}]}, {
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]y$$], {3, 1}]}}]]}], 11], 
             SpanFromLeft}}, Spacings -> {0.5, 0.5}, Alignment -> Center, 
           Frame -> True, FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]]}, {
          Grid[{{
             Style["select plot type", 12], SpanFromLeft}, {
             PopupMenu[
              Dynamic[$CellContext`plotType$$], {
              "stress section" -> Style["stress section", 11], "Mohr circle" -> 
               Style["Mohr circle", 11], "Mohr circle/stress section" -> 
               Style["Mohr circle/stress section", 11], 
               "normal stress trajectory" -> 
               Style["normal stress trajectory", 11], 
               "shear stress trajectory" -> 
               Style["shear stress trajectory", 11], 
               "normal/shear trajectory" -> 
               Style["normal/shear trajectory", 11]}, ImageSize -> All, 
              ContinuousAction -> False], SpanFromLeft}, {
             Row[{
               Style["annotate", 12], 
               Spacer[1], 
               Checkbox[
                Dynamic[$CellContext`annotate$$], Enabled -> Dynamic[
                  
                  Or[$CellContext`plotType$$ == 
                   "stress section", $CellContext`plotType$$ == 
                   "Mohr circle/stress section"]]]}], 
             Row[{
               Style[
                
                Column[{"display stresses on", "positive sides only"}, 
                 Alignment -> Left], 11], 
               Spacer[1], 
               Checkbox[
                Dynamic[$CellContext`onPositiveSideOnly$$], Enabled -> Dynamic[
                  
                  Or[$CellContext`plotType$$ == 
                   "stress section", $CellContext`plotType$$ == 
                   "Mohr circle/stress section"]]]}], SpanFromLeft}}, 
           Spacings -> {0.5, 0.5}, Alignment -> Center, Frame -> True, 
           FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]], SpanFromLeft}, {
          Grid[{{
             Grid[{{
                Row[{
                  Style["rotate to new angle", 12]}], SpanFromLeft}, {
                RadioButtonBar[
                 Dynamic[$CellContext`angleSelection$$], {
                 "slider" -> "", "specific plane" -> ""}, Appearance -> 
                 "Vertical", Enabled -> Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section", $CellContext`plotType$$ == 
                    "Mohr circle"]]], 
                Grid[{{
                   Row[{
                    Manipulate`Place[4], 
                    Spacer[4], 
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt1[$CellContext`\[Theta]$$, {4, 1}]], 
                    Degree}], 11]}], 
                   Button[
                    Row[{"0", Degree}], $CellContext`\[Theta]$$ = 0, 
                    Appearance -> "Palette", Background -> 
                    RGBColor[0.87, 0.94, 1], ImageSize -> {25, 18}]}, {
                   Row[{
                    PopupMenu[
                    
                    Dynamic[$CellContext`specificPlaneAngle$$, \
{$CellContext`specificPlaneAngle$$ = #; $CellContext`\[Theta]$$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]}& \
], {"first principal plane" -> Style["first principal plane", 11], 
                    "second principal plane" -> 
                    Style["second principal plane", 11], 
                    "first maximum shear plane" -> 
                    Style["first shear plane", 11], 
                    "second maximum shear plane" -> 
                    Style["second shear plane", 11]}, ImageSize -> All, 
                    Enabled -> Dynamic[
                    And[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"], \
$CellContext`angleSelection$$ == "specific plane"]]]}], SpanFromLeft}}]}}, 
              Spacings -> {0.15, 0.5}, Alignment -> Center, Frame -> None]}, {
             Style[
              Row[{
                Text[
                 Style[
                  TraditionalForm[
                   HoldForm[{{
                    Subscript[
                    Derivative[1][$CellContext`\[Sigma]], $CellContext`x], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, \
$CellContext`y]}, {
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, $CellContext`y], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Sigma]], $CellContext`y]}}]]]], " = ", 
                Dynamic[
                 TraditionalForm[{{
                    $CellContext`padIt1[$CellContext`\[Sigma]x1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}]}, {
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Sigma]y1$$, {3, 
                    1}]}}]]}], 11]}}, Spacings -> {0.5, 0.5}, Alignment -> 
           Center, Frame -> True, FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]]}, {
          Grid[{{
             Grid[{{
                Style["zoom", 12], 
                Spacer[13], 
                Manipulate`Place[5], 
                Spacer[12]}, {"", 
                Style[
                 Row[{"in", 
                   Spacer[75], "out"}], 11], SpanFromLeft}}, 
              Spacings -> {0.1, 0.1}, Alignment -> Center, Frame -> True, 
              FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]]}, {
             Grid[{{
                Style["gridlines", 12], Manipulate`Place[6] Spacer[8]}, {"", 
                Style[
                 Row[{"less", 
                   Spacer[70], "more"}], 11]}}, Spacings -> {0.1, 0.1}, 
              Alignment -> Center, Frame -> True, FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]]}}, Spacings -> {0.1, 0.5}, Alignment -> Left,
            Frame -> None], SpanFromLeft}}, Spacings -> {0.2, 1.4}, Alignment -> 
        Center]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`annotate$$], True}, 0}, {{
       Hold[$CellContext`plotType$$], "stress section"}, 0}, {{
       Hold[$CellContext`onPositiveSideOnly$$], True}, 0}, {{
       Hold[$CellContext`principalPlaneAngle$$], False}, 0}, {{
       Hold[$CellContext`maxShearPlane$$], False}, 0}, {{
       Hold[$CellContext`specificPlaneAngle$$], "first principal plane"}, 
      0}, {{
       Hold[$CellContext`angleSelection$$], "slider"}, 0}, {{
       Hold[$CellContext`\[Sigma]x1$$], 15.699598555359728`}, 0}, {{
       Hold[$CellContext`\[Sigma]y1$$], 2.300401444640272}, 0}, {{
       Hold[$CellContext`\[Tau]xy1$$], -8.950719479294492}, 0}}, 
    Typeset`size$$ = {425., {209., 216.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`\[Sigma]x$2489$$ = 0, $CellContext`\[Sigma]y$2490$$ = 
    0, $CellContext`\[Tau]xy$2491$$ = 0, $CellContext`\[Theta]$2492$$ = 
    0, $CellContext`limit$2493$$ = 0, $CellContext`gridLines$2494$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`angleSelection$$ = 
        "slider", $CellContext`annotate$$ = True, $CellContext`gridLines$$ = 
        0.5, $CellContext`limit$$ = 30, $CellContext`maxShearPlane$$ = 
        False, $CellContext`onPositiveSideOnly$$ = 
        True, $CellContext`plotType$$ = 
        "stress section", $CellContext`principalPlaneAngle$$ = 
        False, $CellContext`specificPlaneAngle$$ = 
        "first principal plane", $CellContext`\[Theta]$$ = 
        45, $CellContext`\[Sigma]x$$ = 14, $CellContext`\[Sigma]x1$$ = 
        15.699598555359728`, $CellContext`\[Sigma]y$$ = 
        4, $CellContext`\[Sigma]y1$$ = 
        2.300401444640272, $CellContext`\[Tau]xy$$ = 
        10, $CellContext`\[Tau]xy1$$ = -8.950719479294492}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]x$2489$$, 0], 
        Hold[$CellContext`\[Sigma]y$$, $CellContext`\[Sigma]y$2490$$, 0], 
        Hold[$CellContext`\[Tau]xy$$, $CellContext`\[Tau]xy$2491$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$2492$$, 0], 
        Hold[$CellContext`limit$$, $CellContext`limit$2493$$, 0], 
        Hold[$CellContext`gridLines$$, $CellContext`gridLines$2494$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`z$}, $CellContext`z$ = $CellContext`\[Theta]$$ (Pi/
           180); If[
          
          Or[$CellContext`plotType$$ == 
           "stress section", $CellContext`plotType$$ == 
           "Mohr circle/stress section", $CellContext`plotType$$ == 
           "Mohr circle"], 
          
          If[$CellContext`angleSelection$$ == 
           "specific plane", $CellContext`z$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]; \
$CellContext`\[Theta]$$ = $CellContext`z$ (180./
              Pi)]]; {$CellContext`\[Sigma]x1$$, $CellContext`\[Sigma]y1$$, \
$CellContext`\[Tau]xy1$$} = $CellContext`rotationStress[
           N[$CellContext`\[Sigma]x$$], 
           N[$CellContext`\[Sigma]y$$], 
           N[$CellContext`\[Tau]xy$$], 
           N[$CellContext`\[Theta]$$]]; Text[
          $CellContext`makeDiagrams[
           N[$CellContext`\[Sigma]x$$], 
           N[$CellContext`\[Sigma]y$$], 
           
           N[$CellContext`\[Tau]xy$$], $CellContext`z$, \
$CellContext`annotate$$, $CellContext`onPositiveSideOnly$$, \
$CellContext`plotType$$, $CellContext`limit$$, $CellContext`gridLines$$]]], 
      "Specifications" :> {{{$CellContext`\[Sigma]x$$, 14, ""}, -20, 20, 0.1, 
         ImageSize -> Tiny, ControlPlacement -> 
         1}, {{$CellContext`\[Sigma]y$$, 4, ""}, -20, 20, 0.1, ImageSize -> 
         Tiny, ControlPlacement -> 
         2}, {{$CellContext`\[Tau]xy$$, 10, ""}, -20, 20, 0.1, ImageSize -> 
         Tiny, ControlPlacement -> 
         3}, {{$CellContext`\[Theta]$$, 45, ""}, -360, 360, 0.1, ImageSize -> 
         Tiny, Enabled -> Dynamic[
           And[
            
            Or[$CellContext`plotType$$ == 
             "stress section", $CellContext`plotType$$ == 
             "Mohr circle/stress section", $CellContext`plotType$$ == 
             "Mohr circle"], $CellContext`angleSelection$$ == "slider"]], 
         ControlPlacement -> 4}, {{$CellContext`limit$$, 30, ""}, 5, 50, 0.1, 
         ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`gridLines$$, 0.5, ""}, 0, 1, 0.1, ImageSize -> 
         Small, ControlPlacement -> 6}, 
        Grid[{{
           Grid[{{
              Style[
               Row[{"stresses at 0", Degree}], 12], SpanFromLeft}, {
             "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
              Manipulate`Place[1], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Sigma]x$$, {3, 1}]], 
               11]}, {"\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
              Manipulate`Place[2], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Sigma]y$$, {3, 1}]], 
               11]}, {"\!\(\*SubscriptBox[\(\[Tau]\), \(xy\)]\)", 
              Manipulate`Place[3], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Tau]xy$$, {3, 1}]], 11]}, {
              Style[
               Row[{
                 Text[
                  TraditionalForm[
                   HoldForm[{{
                    Subscript[$CellContext`\[Sigma], $CellContext`x], 
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y]}, {
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y], 
                    Subscript[$CellContext`\[Sigma], $CellContext`y]}}]]], 
                 " = ", 
                 Dynamic[
                  TraditionalForm[{{
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]x$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}]}, {
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]y$$], {3, 1}]}}]]}], 11], 
              SpanFromLeft}}, Spacings -> {0.5, 0.5}, Alignment -> Center, 
            Frame -> True, FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]]}, {
           Grid[{{
              Style["select plot type", 12], SpanFromLeft}, {
              PopupMenu[
               Dynamic[$CellContext`plotType$$], {
               "stress section" -> Style["stress section", 11], "Mohr circle" -> 
                Style["Mohr circle", 11], "Mohr circle/stress section" -> 
                Style["Mohr circle/stress section", 11], 
                "normal stress trajectory" -> 
                Style["normal stress trajectory", 11], 
                "shear stress trajectory" -> 
                Style["shear stress trajectory", 11], 
                "normal/shear trajectory" -> 
                Style["normal/shear trajectory", 11]}, ImageSize -> All, 
               ContinuousAction -> False], SpanFromLeft}, {
              Row[{
                Style["annotate", 12], 
                Spacer[1], 
                Checkbox[
                 Dynamic[$CellContext`annotate$$], Enabled -> Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"]]]}], 
              Row[{
                Style[
                 
                 Column[{"display stresses on", "positive sides only"}, 
                  Alignment -> Left], 11], 
                Spacer[1], 
                Checkbox[
                 Dynamic[$CellContext`onPositiveSideOnly$$], Enabled -> 
                 Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"]]]}], SpanFromLeft}}, 
            Spacings -> {0.5, 0.5}, Alignment -> Center, Frame -> True, 
            FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]], SpanFromLeft}, {
           Grid[{{
              Grid[{{
                 Row[{
                   Style["rotate to new angle", 12]}], SpanFromLeft}, {
                 RadioButtonBar[
                  Dynamic[$CellContext`angleSelection$$], {
                  "slider" -> "", "specific plane" -> ""}, Appearance -> 
                  "Vertical", Enabled -> Dynamic[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section", $CellContext`plotType$$ == 
                    "Mohr circle"]]], 
                 Grid[{{
                    Row[{
                    Manipulate`Place[4], 
                    Spacer[4], 
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt1[$CellContext`\[Theta]$$, {4, 1}]], 
                    Degree}], 11]}], 
                    Button[
                    Row[{"0", Degree}], $CellContext`\[Theta]$$ = 0, 
                    Appearance -> "Palette", Background -> 
                    RGBColor[0.87, 0.94, 1], ImageSize -> {25, 18}]}, {
                    Row[{
                    PopupMenu[
                    
                    Dynamic[$CellContext`specificPlaneAngle$$, \
{$CellContext`specificPlaneAngle$$ = #; $CellContext`\[Theta]$$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]}& \
], {"first principal plane" -> Style["first principal plane", 11], 
                    "second principal plane" -> 
                    Style["second principal plane", 11], 
                    "first maximum shear plane" -> 
                    Style["first shear plane", 11], 
                    "second maximum shear plane" -> 
                    Style["second shear plane", 11]}, ImageSize -> All, 
                    Enabled -> Dynamic[
                    And[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"], \
$CellContext`angleSelection$$ == "specific plane"]]]}], SpanFromLeft}}]}}, 
               Spacings -> {0.15, 0.5}, Alignment -> Center, Frame -> None]}, {
              Style[
               Row[{
                 Text[
                  Style[
                   TraditionalForm[
                    HoldForm[{{
                    Subscript[
                    Derivative[1][$CellContext`\[Sigma]], $CellContext`x], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, \
$CellContext`y]}, {
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, $CellContext`y], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Sigma]], $CellContext`y]}}]]]], " = ", 
                 Dynamic[
                  TraditionalForm[{{
                    $CellContext`padIt1[$CellContext`\[Sigma]x1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}]}, {
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Sigma]y1$$, {3, 
                    1}]}}]]}], 11]}}, Spacings -> {0.5, 0.5}, Alignment -> 
            Center, Frame -> True, FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]]}, {
           Grid[{{
              Grid[{{
                 Style["zoom", 12], 
                 Spacer[13], 
                 Manipulate`Place[5], 
                 Spacer[12]}, {"", 
                 Style[
                  Row[{"in", 
                    Spacer[75], "out"}], 11], SpanFromLeft}}, 
               Spacings -> {0.1, 0.1}, Alignment -> Center, Frame -> True, 
               FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}, {
              Grid[{{
                 Style["gridlines", 12], Manipulate`Place[6] Spacer[8]}, {"", 
                 Style[
                  Row[{"less", 
                    Spacer[70], "more"}], 11]}}, Spacings -> {0.1, 0.1}, 
               Alignment -> Center, Frame -> True, FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}}, Spacings -> {0.1, 0.5}, Alignment -> 
            Left, Frame -> None], SpanFromLeft}}, Spacings -> {0.2, 1.4}, 
         Alignment -> Center], {{$CellContext`annotate$$, True}, 0, 
         ControlType -> None}, {{$CellContext`plotType$$, "stress section"}, 
         0, ControlType -> None}, {{$CellContext`onPositiveSideOnly$$, True}, 
         0, ControlType -> 
         None}, {{$CellContext`principalPlaneAngle$$, False}, 0, ControlType -> 
         None}, {{$CellContext`maxShearPlane$$, False}, 0, ControlType -> 
         None}, {{$CellContext`specificPlaneAngle$$, "first principal plane"},
          0, ControlType -> None}, {{$CellContext`angleSelection$$, "slider"},
          0, ControlType -> 
         None}, {{$CellContext`\[Sigma]x1$$, 15.699598555359728`}, 0, 
         ControlType -> 
         None}, {{$CellContext`\[Sigma]y1$$, 2.300401444640272}, 0, 
         ControlType -> 
         None}, {{$CellContext`\[Tau]xy1$$, -8.950719479294492}, 0, 
         ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, SynchronousUpdating -> False, 
        SynchronousInitialization -> False, ContinuousAction -> True, 
        Alignment -> Center, ImageMargins -> 0, FrameMargins -> 0, Paneled -> 
        True, Frame -> False, AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{654., {239., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`contentSizeW = 
        425; $CellContext`contentSizeH = 425; $CellContext`padIt2[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[List]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"", ""}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt2[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[Integer]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"", ""}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt2s[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[Integer]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"-", "+"}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt1[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[List]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"-", "+"}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`integerStrictPositive = And[
          IntegerQ[#], # > 0]& ; $CellContext`integerPositive = And[
          IntegerQ[#], # >= 0]& ; $CellContext`numericStrictPositive = And[
          Element[#, Reals], # > 0]& ; $CellContext`numericPositive = And[
          Element[#, Reals], # >= 0]& ; $CellContext`numericStrictNegative = 
        And[
          Element[#, Reals], # < 0]& ; $CellContext`numericNegative = And[
          Element[#, Reals], # <= 0]& ; $CellContext`bool = 
        Element[#, Booleans]& ; $CellContext`numeric = 
        Element[#, Reals]& ; $CellContext`integer = 
        Element[#, Integers]& ; $CellContext`makeDiagrams[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`annotate, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`onPositiveSideOnly, 
            Blank[]], $CellContext`bool], 
          Pattern[$CellContext`plotType, 
           Blank[String]], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := Module[{}, 
          Which[$CellContext`plotType == "stress section", 
           $CellContext`make2DStressDiagram[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta], \
$CellContext`annotate, $CellContext`onPositiveSideOnly, $CellContext`limit, \
$CellContext`gridLines, {$CellContext`contentSizeW, \
$CellContext`contentSizeH}], $CellContext`plotType == "Mohr circle", 
           $CellContext`makeMohrCircle[$CellContext`\[Theta], $CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines, {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, 
            $CellContext`makeMohrCircleTitle[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]], $CellContext`plotType == 
           "Mohr circle/stress section", 
           Grid[{{
              $CellContext`makeMohrCircleTitle[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], SpanFromLeft}, {
              $CellContext`make2DStressDiagram[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta], \
$CellContext`annotate, $CellContext`onPositiveSideOnly, $CellContext`limit, \
$CellContext`gridLines, {
               0.5 $CellContext`contentSizeW, 
                0.87 $CellContext`contentSizeH}], 
              $CellContext`makeMohrCircle[$CellContext`\[Theta], \
$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, \
$CellContext`limit, $CellContext`gridLines, {
               0.499 $CellContext`contentSizeW, 
                0.87 $CellContext`contentSizeH}, {}]}}, 
            Spacings -> {0, 0}], $CellContext`plotType == 
           "normal stress trajectory", 
           $CellContext`makeNormalStressPolarPlot[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines], $CellContext`plotType == "shear stress trajectory", 
           $CellContext`makeShearStressPolarPlot[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines], $CellContext`plotType == "normal/shear trajectory", 
           $CellContext`makeShearAndNormalStressPolarPlot[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines]]]; $CellContext`getAngleAtSpecificPlane[
          Pattern[$CellContext`specificPlaneAngle, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]x, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]y, 
           Blank[]], 
          Pattern[$CellContext`\[Tau]xy, 
           Blank[]]] := N[
          Which[$CellContext`specificPlaneAngle == "first principal plane", 
           Part[
            $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 
            2], $CellContext`specificPlaneAngle == "second principal plane", 
           Part[
            $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 2, 
            2], $CellContext`specificPlaneAngle == 
           "first maximum shear plane", Part[
             $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 2] + 
           Pi/4, $CellContext`specificPlaneAngle == 
           "second maximum shear plane", Part[
             $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 2] + (3/4) 
            Pi]]; $CellContext`principalStresses[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`\[Theta]p, $CellContext`\[Sigma], $CellContext`\
\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1max, $CellContext`r, \
$CellContext`c, $CellContext`tmp, $CellContext`\[Theta]1, $CellContext`\
\[Theta]2}, $CellContext`r = ((($CellContext`\[Sigma]x - \
$CellContext`\[Sigma]y)/2)^2 + $CellContext`\[Tau]xy^2)^
            Rational[
             1, 2]; $CellContext`c = ($CellContext`\[Sigma]x + $CellContext`\
\[Sigma]y)/
            2; {$CellContext`\[Sigma]1, $CellContext`\[Sigma]2} = \
{$CellContext`c + $CellContext`r, $CellContext`c - $CellContext`r}; 
          If[Abs[$CellContext`\[Sigma]2] > 
            Abs[$CellContext`\[Sigma]1], $CellContext`tmp = $CellContext`\
\[Sigma]1; $CellContext`\[Sigma]1 = $CellContext`\[Sigma]2; $CellContext`\
\[Sigma]2 = $CellContext`tmp]; 
          If[Abs[$CellContext`\[Sigma]x - $CellContext`\[Sigma]y] <= \
$MachineEpsilon, $CellContext`\[Theta]p = Pi/4, $CellContext`\[Theta]p = 
            ArcTan[2 (Abs[$CellContext`\[Tau]xy]/
                Abs[$CellContext`\[Sigma]x - $CellContext`\[Sigma]y])]/2]; 
          If[$CellContext`\[Sigma]1 > $CellContext`\[Sigma]2, 
            If[$CellContext`\[Tau]xy > 0, 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {$CellContext`\[Theta]p, -(
                 Pi/2 - $CellContext`\[Theta]p)}, {$CellContext`\[Theta]1, \
$CellContext`\[Theta]2} = {
               Pi/2 - $CellContext`\[Theta]p, -$CellContext`\[Theta]p}], 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {-$CellContext`\[Theta]p, 
                Pi/2 - $CellContext`\[Theta]p}, {$CellContext`\[Theta]1, \
$CellContext`\[Theta]2} = {-(
                 Pi/2 - $CellContext`\[Theta]p), $CellContext`\[Theta]p}]], 
            If[$CellContext`\[Tau]xy > 0, 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {-(
                 Pi/2 - $CellContext`\[Theta]p), $CellContext`\[Theta]p}, \
{$CellContext`\[Theta]1, $CellContext`\[Theta]2} = {-$CellContext`\[Theta]p, 
                Pi/2 - $CellContext`\[Theta]p}], 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {
               Pi/2 - $CellContext`\[Theta]p, -$CellContext`\[Theta]p}, \
{$CellContext`\[Theta]1, $CellContext`\[Theta]2} = {$CellContext`\[Theta]p, -(
                 Pi/2 - $CellContext`\[Theta]p)}]]]; \
{{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, {$CellContext`\[Sigma]2, \
$CellContext`\[Theta]2}}]; $CellContext`maxAndMinShearStress[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`r}, $CellContext`r = 
           Sqrt[(($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)/
               2)^2 + $CellContext`\[Tau]xy^2]; {$CellContext`r, \
-$CellContext`r}]; $CellContext`plot[
          Pattern[$CellContext`data, 
           Blank[List]], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], 
          Pattern[$CellContext`color, 
           Blank[]]] := 
        ListPolarPlot[$CellContext`data, Joined -> True, AxesOrigin -> {0, 0},
           ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, ImagePadding -> {{20, 10}, {20, 5}}, ImageMargins -> 
          0, AspectRatio -> 1, Frame -> True, 
          If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
              
              Range[-$CellContext`limit, $CellContext`limit, (
                2 $CellContext`limit)/($CellContext`gridLines 20)], 
              
              Range[-$CellContext`limit, $CellContext`limit, (
                2 $CellContext`limit)/($CellContext`gridLines 20)]}, 
            GridLinesStyle -> Directive[
              Thickness[0.001], LightGray]}], 
          PlotRange -> {{-$CellContext`limit, $CellContext`limit}, \
{-$CellContext`limit, $CellContext`limit}}, 
          PlotStyle -> $CellContext`color]; $CellContext`makeArrowForAngle[
          Pattern[$CellContext`r, 
           Blank[]], 
          Pattern[$CellContext`center, 
           Blank[]], {{
            Pattern[$CellContext`\[Sigma]1, 
             Blank[]], 
            Pattern[$CellContext`\[Theta]1, 
             Blank[]]}, {
            Pattern[$CellContext`\[Sigma]2, 
             Blank[]], 
            Pattern[$CellContext`\[Theta]2, 
             Blank[]]}}, 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`phi, $CellContext`tbl, $CellContext`align}, 
          If[$CellContext`\[Sigma]1 > $CellContext`\[Sigma]2, 
            
            If[$CellContext`\[Tau]xy > 
             0, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, (-2) \
$CellContext`\[Theta]1, 0, Pi/100}]; $CellContext`align = {-1, 
               1}, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, (-2) \
$CellContext`\[Theta]1, 0, (-Pi)/100}]; $CellContext`align = {-1, -1}], 
            
            If[$CellContext`\[Tau]xy > 
             0, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, -(Pi + 
                  2 $CellContext`\[Theta]1), -Pi, (-Pi)/
                 100}]; $CellContext`align = {1, 1}, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, Pi - 
                 2 $CellContext`\[Theta]1, Pi, Pi/
                 100}]; $CellContext`align = {1, -1}]]; {
            Text["2\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
             If[Length[$CellContext`tbl] > 1, 
              Part[$CellContext`tbl, 
               Round[Length[$CellContext`tbl]/2]], 
              
              First[$CellContext`tbl]], $CellContext`align], \
$CellContext`tbl}]; $CellContext`makeMohrCircleTitle[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\
\[Theta]1, $CellContext`\[Theta]2, $CellContext`r, $CellContext`center, \
$CellContext`ptA}, {{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`center = \
{($CellContext`\[Sigma]1 + $CellContext`\[Sigma]2)/2, 
             0}; $CellContext`ptA = {$CellContext`\[Sigma]x, -$CellContext`\
\[Tau]xy}; $CellContext`r = 
           EuclideanDistance[$CellContext`center, $CellContext`ptA]; Grid[{
             Map[TraditionalForm[
               Style[#]]& , {
              "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
               "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
               "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
               "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
               "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)"}], {
              $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
              PlusMinus[
               $CellContext`padIt2[$CellContext`r, {4, 1}]], 
              Row[{
                $CellContext`padIt1[$CellContext`\[Theta]1 (180/Pi), {4, 1}], 
                Degree}], 
              Row[{
                $CellContext`padIt1[$CellContext`\[Theta]2 (180/Pi), {4, 1}], 
                Degree}]}}, Spacings -> {0.5, 1}, Frame -> All, FrameStyle -> 
            Directive[Thin]]]; $CellContext`getRadiusOfCircle[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Sqrt[(($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)/
            2)^2 + $CellContext`\[Tau]xy^2]; $CellContext`rotationStress[
          Pattern[$CellContext`\[Sigma]x, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]y, 
           Blank[]], 
          Pattern[$CellContext`\[Tau]xy, 
           Blank[]], 
          Pattern[$CellContext`\[Theta], 
           Blank[]]] := 
        Module[{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy, \
$CellContext`\[Tau]}, $CellContext`\[Sigma]xx = (1/
              2) ($CellContext`\[Sigma]x + $CellContext`\[Sigma]y) + ((1/
               2) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
             Cos[2 $CellContext`\[Theta]] + $CellContext`\[Tau]xy 
             Sin[2 $CellContext`\[Theta]]; $CellContext`\[Tau] = ((-(1/
                2)) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
             Sin[2 $CellContext`\[Theta]] + $CellContext`\[Tau]xy 
             Cos[2 $CellContext`\[Theta]]; $CellContext`\[Sigma]yy = (1/
              2) ($CellContext`\[Sigma]x + $CellContext`\[Sigma]y) - ((1/
              2) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
            Cos[2 $CellContext`\[Theta]] - $CellContext`\[Tau]xy 
            Sin[2 $CellContext`\[Theta]]; {$CellContext`\[Sigma]xx, \
$CellContext`\[Sigma]yy, $CellContext`\[Tau]}]; $CellContext`makeMohrCircle[
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], {
           PatternTest[
            Pattern[$CellContext`contentSizeW, 
             Blank[]], $CellContext`numericStrictPositive], 
           PatternTest[
            Pattern[$CellContext`contentSizeH, 
             Blank[]], $CellContext`numericStrictPositive]}, 
          Pattern[$CellContext`plotTitle, 
           Blank[]]] := 
        Module[{$CellContext`ptA, $CellContext`ptB, $CellContext`center, \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Theta]1, \
$CellContext`\[Theta]2, $CellContext`r, $CellContext`z, $CellContext`ptD1, \
$CellContext`ptD2, $CellContext`\[Sigma]x1, $CellContext`\[Tau]xy1, \
$CellContext`\[Sigma]y1}, {{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`center = \
{($CellContext`\[Sigma]1 + $CellContext`\[Sigma]2)/2, 
             0}; $CellContext`ptA = {$CellContext`\[Sigma]x, -$CellContext`\
\[Tau]xy}; $CellContext`r = $CellContext`getRadiusOfCircle[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\
\[Sigma]x1, $CellContext`\[Sigma]y1, $CellContext`\[Tau]xy1} = \
$CellContext`rotationStress[$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, \
$CellContext`\[Tau]xy, $CellContext`\[Theta]]; $CellContext`z = $CellContext`\
\[Sigma]x - First[$CellContext`center]; $CellContext`ptB = {
            Part[$CellContext`ptA, 1] - 2 $CellContext`z, -
             Part[$CellContext`ptA, 
               2]}; $CellContext`ptD1 = {$CellContext`\[Sigma]x1, \
-$CellContext`\[Tau]xy1}; $CellContext`ptD2 = {$CellContext`\[Sigma]y1, \
$CellContext`\[Tau]xy1}; Graphics[{
             Circle[$CellContext`center, $CellContext`r], {Black, 
              PointSize[0.02], 
              Point[$CellContext`ptA]}, {Black, 
              PointSize[0.02], 
              Point[$CellContext`center]}, {Black, 
              PointSize[0.02], 
              Point[$CellContext`ptB]}, {Dashed, 
              Line[{$CellContext`ptA, $CellContext`ptB}]}, 
             Circle[$CellContext`ptD1, 0.8], {Red, Dashed, 
              Line[{$CellContext`ptD1, $CellContext`ptD2}]}, 
             Circle[$CellContext`ptD2, 0.8], 
             Text[
              Row[{"(", 
                $CellContext`padIt1[$CellContext`\[Sigma]x1, {4, 1}], ",", 
                $CellContext`padIt1[$CellContext`\[Tau]xy1, {4, 1}], 
                ")"}], $CellContext`ptD1, 
              
              If[$CellContext`\[Sigma]x1 > 
               Part[$CellContext`center, 1], {-1.2, -1.2}, {1.2, -1.2}]], 
             Text[
              Row[{"(", 
                $CellContext`padIt1[$CellContext`\[Sigma]y1, {4, 1}], ",", 
                $CellContext`padIt1[$CellContext`\[Tau]xy1, {4, 1}], 
                ")"}], $CellContext`ptD2, 
              
              If[$CellContext`\[Sigma]y1 > 
               Part[$CellContext`center, 1], {-1.2, -1.2}, {1.2, -1.2}]], {
             Red, 
              PointSize[0.02], 
              Point[{$CellContext`\[Sigma]1, 0}]}, {
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], {$CellContext`\[Sigma]1, 0}, {-1.5, 1.5}]}, {Red, 
              PointSize[0.02], 
              Point[{$CellContext`\[Sigma]2, 0}]}, {
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], {$CellContext`\[Sigma]2, 0}, {1.2, 1.3}]}, {Blue, 
              PointSize[0.02], 
              Point[{
                Part[$CellContext`center, 1], $CellContext`r}]}, {
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 12]], {
                Part[$CellContext`center, 1], $CellContext`r}, {0, -1.5}]}, {
             Blue, 
              PointSize[0.02], 
              Point[{
                Part[$CellContext`center, 1], -$CellContext`r}]}, {
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 12]], {
                Part[$CellContext`center, 1], -$CellContext`r}, {0, 1.5}]}, {
              Text[
               Style["tension", 11], {$CellContext`limit, 0}, {1, 3}]}, {
              Text[
               Style["compression", 11], {-$CellContext`limit, 0}, {-1, 3}]}}, 
            If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
                
                Range[-$CellContext`limit, $CellContext`limit, (
                  2 $CellContext`limit)/($CellContext`gridLines 20)], 
                
                Range[-$CellContext`limit, $CellContext`limit, (
                  2 $CellContext`limit)/($CellContext`gridLines 20)]}, 
              GridLinesStyle -> Directive[
                Thickness[0.001], LightGray]}], 
            PlotRange -> {{-$CellContext`limit, $CellContext`limit}, \
{-$CellContext`limit, $CellContext`limit}}, Axes -> True, 
            AxesOrigin -> {0, 0}, TicksStyle -> 8, PlotLabel -> 
            If[$CellContext`plotTitle === {}, "", $CellContext`plotTitle], 
            ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, 
            ImagePadding -> {{20, 10}, {20, 
             5}}]]; $CellContext`makeShearAndNormalStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, \
$CellContext`\[Sigma]2Abs, $CellContext`\[Theta]p1, $CellContext`\[Theta]p2, \
$CellContext`p1, $CellContext`p2, $CellContext`p3, $CellContext`p4, \
$CellContext`plotTitle, $CellContext`coord1, $CellContext`coord2, \
$CellContext`\[Tau]1, $CellContext`\[Tau]2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                1]}], $CellContext`limit, $CellContext`gridLines, 
             Red]; $CellContext`coord1 = {
            Abs[$CellContext`\[Sigma]1] Cos[$CellContext`\[Theta]p1], 
             Abs[$CellContext`\[Sigma]1] 
             Sin[$CellContext`\[Theta]p1]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Sigma]2] Cos[$CellContext`\[Theta]p2], 
             Abs[$CellContext`\[Sigma]2] 
             Sin[$CellContext`\[Theta]p2]}; $CellContext`p2 = Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Sigma]x, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 12]], {$CellContext`\[Sigma]x, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Sigma]y}]}, 
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 12]], {
               0, $CellContext`\[Sigma]y}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord2]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], $CellContext`coord2, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 
                    2]}}]}}]; {$CellContext`\[Tau]1, $CellContext`\[Tau]2} = \
$CellContext`maxAndMinShearStress[$CellContext`\[Sigma]x, $CellContext`\
\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p3 = $CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                3]}], $CellContext`limit, $CellContext`gridLines, 
             Blue]; $CellContext`coord1 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p1 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p1 + Pi/4]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p2 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p2 + Pi/4]}; $CellContext`p4 = 
           Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Tau]xy, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 12]], {$CellContext`\[Tau]xy, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Tau]xy}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", 
                 12]], {0, $CellContext`\[Tau]xy}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {Dashed, Thin, 
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Style[
             
             Grid[{{"normal (red) and shear (blue) polar (stress vs. angle) \
trajectory", SpanFromLeft}, 
               Map[TraditionalForm[
                 Style[#]]& , {
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)"}], {
                $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
                Row[{
                  $CellContext`padIt1[$CellContext`\[Theta]p1 (180/Pi), {4, 
                   1}], Degree}], 
                $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
                Row[{
                  $CellContext`padIt1[$CellContext`\[Theta]p2 (180/Pi), {4, 
                   1}], Degree}], 
                PlusMinus[
                 $CellContext`padIt2[$CellContext`\[Tau]1, {4, 1}]]}}, 
              Spacings -> {0.4, 1.1}, Frame -> All, FrameStyle -> 
              Directive[Thin]], 12]; 
          Show[$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`makeNormalStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, \
$CellContext`\[Sigma]2Abs, $CellContext`\[Theta]p1, $CellContext`\[Theta]p2, \
$CellContext`p1, $CellContext`p2, $CellContext`plotTitle, \
$CellContext`coord1, $CellContext`coord2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                1]}], $CellContext`limit, $CellContext`gridLines, 
             Red]; $CellContext`coord1 = {
            Abs[$CellContext`\[Sigma]1] Cos[$CellContext`\[Theta]p1], 
             Abs[$CellContext`\[Sigma]1] 
             Sin[$CellContext`\[Theta]p1]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Sigma]2] Cos[$CellContext`\[Theta]p2], 
             Abs[$CellContext`\[Sigma]2] 
             Sin[$CellContext`\[Theta]p2]}; $CellContext`p2 = Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Sigma]x, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 12]], {$CellContext`\[Sigma]x, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Sigma]y}]}, 
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 12]], {
               0, $CellContext`\[Sigma]y}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord2]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], $CellContext`coord2, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Grid[{{"normal stress polar (stress vs. angle) trajectory", 
               SpanFromLeft}, 
              Map[TraditionalForm[
                Style[#]]& , {
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)"}], {
               $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
               Row[{
                 $CellContext`padIt1[$CellContext`\[Theta]p1 (180/Pi), {4, 
                  1}], Degree}], 
               $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
               Row[{
                 $CellContext`padIt1[$CellContext`\[Theta]p2 (180/Pi), {4, 
                  1}], Degree}]}}, Spacings -> {0.8, 1}, Frame -> All, 
             FrameStyle -> Directive[Thin]]; 
          Show[$CellContext`p1, $CellContext`p2, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`makeShearStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Tau]1, $CellContext`\[Tau]2, \
$CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, $CellContext`\[Sigma]2Abs, \
$CellContext`\[Theta]p1, $CellContext`\[Theta]p2, $CellContext`p1, \
$CellContext`p2, $CellContext`plotTitle, $CellContext`coord1, \
$CellContext`coord2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\[Tau]1, \
$CellContext`\[Tau]2} = $CellContext`maxAndMinShearStress[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                3]}], $CellContext`limit, $CellContext`gridLines, 
             Blue]; $CellContext`coord1 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p1 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p1 + Pi/4]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p2 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p2 + Pi/4]}; $CellContext`p2 = 
           Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Tau]xy, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 12]], {$CellContext`\[Tau]xy, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Tau]xy}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", 
                 12]], {0, $CellContext`\[Tau]xy}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Grid[{{"shear stress polar (stress vs. angle) trajectory", 
               SpanFromLeft}, 
              Flatten[{
                Map[TraditionalForm[
                  Style[#]]& , {
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)",
                   "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Theta]\), \(max\)]\)"}], 
                SpanFromLeft}], {
               $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
               PlusMinus[
                $CellContext`padIt2[$CellContext`\[Tau]xy, {4, 1}]], 
               $CellContext`padIt1[$CellContext`\[Tau]1, {4, 1}], 
               Row[{
                 $CellContext`padIt1[($CellContext`\[Theta]p1 + Pi/4) (180/
                   Pi), {4, 1}], Degree, ",", 
                 $CellContext`padIt1[($CellContext`\[Theta]p1 + (3/4) Pi) (
                   180/Pi), {4, 1}], Degree}], SpanFromLeft}}, 
             Spacings -> {1, 1}, Frame -> All, FrameStyle -> Directive[Thin]]; 
          Show[$CellContext`p1, $CellContext`p2, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`make2DStressDiagram[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`annotate, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`onPositiveSideOnly, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], {
           PatternTest[
            Pattern[$CellContext`contentSizeW, 
             Blank[]], $CellContext`numericStrictPositive], 
           PatternTest[
            Pattern[$CellContext`contentSizeH, 
             Blank[]], $CellContext`numericStrictPositive]}] := 
        Module[{$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\
\[Sigma]xx, $CellContext`\[Sigma]yy, $CellContext`\[Tau]xyxy, $CellContext`r, \
$CellContext`\[Sigma]xxRightArrow, $CellContext`\[Sigma]xxLeftArrow, \
$CellContext`\[Sigma]yyTopArrow, $CellContext`\[Sigma]yyBottomArrow, \
$CellContext`\[Tau]RightArrow, $CellContext`\[Tau]LeftArrow, $CellContext`\
\[Tau]TopArrow, $CellContext`\[Tau]BottomArrow, $CellContext`\[Tau]1, \
$CellContext`\[Tau]2, $CellContext`color, $CellContext`textSize = 
           11, $CellContext`colorShear, \
$CellContext`\[Sigma]xxRightArrowText, $CellContext`\[Sigma]xxLeftArrowText, \
$CellContext`\[Sigma]yyTopArrowText, $CellContext`\[Sigma]yyBottomArrowText, \
$CellContext`\[Tau]RightArrowText, $CellContext`\[Tau]LeftArrowText, \
$CellContext`\[Tau]TopArrowText, $CellContext`\[Tau]BottomArrowText, \
$CellContext`rotationMatrix, $CellContext`coordinates, $CellContext`from, \
$CellContext`to, $CellContext`rotatedAxisXText, \
$CellContext`rotatedAxisYText, $CellContext`maxAbsoluteprincipalShearStress, \
$CellContext`thickness = Thick, $CellContext`eps = 
           10^(-9), $CellContext`\[Theta]p1, $CellContext`\[Theta]p2}, \
$CellContext`rotationMatrix = 
           RotationMatrix[-$CellContext`\[Theta]]; \
$CellContext`rotatedAxisXText = Text[
             Style["x", Italic, $CellContext`textSize], 
             
             Dot[{0.3, 
               0}, $CellContext`rotationMatrix]]; \
$CellContext`rotatedAxisYText = Text[
             Style["y", Italic, $CellContext`textSize], 
             
             Dot[{0, 0.3}, $CellContext`rotationMatrix]]; {{$CellContext`\
\[Sigma]1, $CellContext`\[Theta]p1}, {$CellContext`\[Sigma]2, $CellContext`\
\[Theta]p2}} = $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\[Tau]1, \
$CellContext`\[Tau]2} = $CellContext`maxAndMinShearStress[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; \
$CellContext`maxAbsoluteprincipalShearStress = Max[
             
             Abs[{$CellContext`\[Tau]1, $CellContext`\[Tau]2}]]; \
{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy, $CellContext`\[Tau]xyxy} = \
$CellContext`rotationStress[$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, \
$CellContext`\[Tau]xy, $CellContext`\[Theta]]; 
          If[Abs[$CellContext`\[Sigma]1] > 
            0, {$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy} = \
{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy}/
             Abs[$CellContext`\[Sigma]1]]; 
          If[$CellContext`maxAbsoluteprincipalShearStress > 
            0, $CellContext`\[Tau]xyxy = \
$CellContext`\[Tau]xyxy/$CellContext`maxAbsoluteprincipalShearStress]; \
$CellContext`color = Red; $CellContext`colorShear = 
           Blue; $CellContext`r = {White, 
             EdgeForm[{Thin, Gray}], 
             Rectangle[{-0.5, -0.5}, {0.5, 0.5}]}; 
          If[$CellContext`\[Sigma]xx >= 
            0, $CellContext`from = {0.6, 0}; $CellContext`to = {
              0.6 + $CellContext`\[Sigma]xx, 0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, 0.78, 
                  0.68] + $CellContext`\[Sigma]xx, 
                0}, $CellContext`rotationMatrix], $CellContext`from = {
              0.6 + Abs[$CellContext`\[Sigma]xx], 0}; $CellContext`to = {
              0.6, 0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, 0.78, 0.68] + 
                Abs[$CellContext`\[Sigma]xx], 
                0}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]xxRightArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]xx 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates, {0,
               0}], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates, {0, 
              0}]]; $CellContext`\[Sigma]xxRightArrow = \
{$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]xx >= 
            0, $CellContext`from = {-0.6, 
               0}; $CellContext`to = {-0.6 - $CellContext`\[Sigma]xx, 
               0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, -0.78, -0.68] - $CellContext`\
\[Sigma]xx, 0}, $CellContext`rotationMatrix], $CellContext`from = {-0.6 - 
               Abs[$CellContext`\[Sigma]xx], 0}; $CellContext`to = {-0.6, 
               0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, -0.78, -0.68] - 
                Abs[$CellContext`\[Sigma]xx], 
                0}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]xxLeftArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]xx 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]xxLeftArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]yy >= 
            0, $CellContext`from = {0, 0.6}; $CellContext`to = {
              0, 0.6 + $CellContext`\[Sigma]yy}; $CellContext`coordinates = 
             Dot[{0, If[$CellContext`annotate, 0.75, 
                  0.68] + $CellContext`\[Sigma]yy}, \
$CellContext`rotationMatrix], $CellContext`from = {
              0, 0.6 + Abs[$CellContext`\[Sigma]yy]}; $CellContext`to = {
              0, 0.6}; $CellContext`coordinates = 
             Dot[{0, If[$CellContext`annotate, 0.75, 0.68] + 
                Abs[$CellContext`\[Sigma]yy]}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]yyTopArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]yy 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]yyTopArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]yy >= 
            0, $CellContext`from = {0, -0.6}; $CellContext`to = {
              0, -0.6 - $CellContext`\[Sigma]yy}; $CellContext`coordinates = 
             Dot[{0, -0.75 - $CellContext`\[Sigma]yy}, \
$CellContext`rotationMatrix], $CellContext`from = {
              0, -0.6 - Abs[$CellContext`\[Sigma]yy]}; $CellContext`to = {
              0, -0.6}; $CellContext`coordinates = 
             Dot[{0, -0.75 - 
                Abs[$CellContext`\[Sigma]yy]}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]yyBottomArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]yy 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]yyBottomArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Tau]xyxy >= 
            0, $CellContext`from = {
              0.6, 0.5 - $CellContext`\[Tau]xyxy}; $CellContext`to = {0.6, 
              0.5}; $CellContext`coordinates = Dot[{
                If[$CellContext`annotate, 0.8, 0.7], 
                0.45}, $CellContext`rotationMatrix], $CellContext`from = {0.6,
               0.5}; $CellContext`to = {
              0.6, 0.5 - 
               Abs[$CellContext`\[Tau]xyxy]}; $CellContext`coordinates = Dot[{
                If[$CellContext`annotate, 0.8, 0.7], 
                0.45}, $CellContext`rotationMatrix]]; \
$CellContext`\[Tau]RightArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style[
                  "\!\(\*SubscriptBox[\(\[Tau]\), \
\(x\[InvisibleComma]y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Tau]xyxy \
$CellContext`maxAbsoluteprincipalShearStress, {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Tau]RightArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`colorShear, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Tau]xyxy >= 
            0, $CellContext`from = {
              0.5 - $CellContext`\[Tau]xyxy, 0.6}; $CellContext`to = {0.5, 
              0.6}; $CellContext`coordinates = 
             Dot[{0.5, 
               0.75}, $CellContext`rotationMatrix], $CellContext`from = {0.5, 
              0.6}; $CellContext`to = {
              0.5 - Abs[$CellContext`\[Tau]xyxy], 
               0.6}; $CellContext`coordinates = 
             Dot[{0.5, 
               0.75}, $CellContext`rotationMatrix]]; \
$CellContext`\[Tau]TopArrowText = Text[
             TraditionalForm[
              Style[
              "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]; \
$CellContext`\[Tau]TopArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`colorShear, 
             
             Arrow[{$CellContext`from, $CellContext`to}, 
              0]}; $CellContext`\[Tau]LeftArrow = {
             Arrowheads[Medium], 
             
             If[$CellContext`\[Tau]xyxy >= 
              0, {$CellContext`thickness, $CellContext`colorShear, 
               
               Arrow[{{-0.6, -0.5 + $CellContext`\[Tau]xyxy}, {-0.6, -0.5}}, 
                0]}, {$CellContext`thickness, $CellContext`colorShear, 
               
               Arrow[{{-0.6, -0.5}, {-0.6, -0.5 + 
                  Abs[$CellContext`\[Tau]xyxy]}}, 
                0]}]}; $CellContext`\[Tau]BottomArrow = \
{$CellContext`thickness, $CellContext`colorShear, 
             Arrowheads[Medium], 
             If[$CellContext`\[Tau]xyxy >= 0, 
              
              Arrow[{{-0.5 + $CellContext`\[Tau]xyxy, -0.6}, {-0.5, -0.6}}, 
               0], 
              
              Arrow[{{-0.5, -0.6}, {-0.5 + 
                 Abs[$CellContext`\[Tau]xyxy], -0.6}}, 
               0]]}; $CellContext`from = (-($CellContext`limit/40)) 
            1.9; $CellContext`to = -$CellContext`from; Graphics[{
             Rotate[$CellContext`r, $CellContext`\[Theta], {0, 0}], 
             If[Abs[$CellContext`\[Sigma]xx] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Sigma]xxRightArrow, \
$CellContext`\[Theta], {0, 0}], $CellContext`\[Sigma]xxRightArrowText, 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], 
                
                Rotate[$CellContext`\[Sigma]xxLeftArrow, \
$CellContext`\[Theta], {0, 0}]]}, 
              Apply[Sequence, {}]], 
             If[Abs[$CellContext`\[Sigma]yy] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Sigma]yyTopArrow, $CellContext`\[Theta], \
{0, 0}], $CellContext`\[Sigma]yyTopArrowText, 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], 
                
                Rotate[$CellContext`\[Sigma]yyBottomArrow, $CellContext`\
\[Theta], {0, 0}]]}, 
              Apply[Sequence, {}]], 
             If[Abs[$CellContext`\[Tau]xyxy] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Tau]RightArrow, $CellContext`\[Theta], {
                0, 0}], $CellContext`\[Tau]RightArrowText, 
               
               Rotate[$CellContext`\[Tau]TopArrow, $CellContext`\[Theta], {0, 
                0}], 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], {
                 
                 Rotate[$CellContext`\[Tau]LeftArrow, $CellContext`\[Theta], {
                  0, 0}], 
                 
                 Rotate[$CellContext`\[Tau]BottomArrow, \
$CellContext`\[Theta], {0, 0}]}]}, 
              Apply[Sequence, {}]], {Gray, Thin, Dashed, 
              Rotate[{
                Arrowheads[Small], 
                Arrow[{{-0.25, 0}, {0.25, 0}}]}, $CellContext`\[Theta], {0, 
               0}]}, {Gray, Thin, Dashed, 
              Rotate[{
                Arrowheads[Small], 
                Arrow[{{0, -0.25}, {0, 0.25}}]}, $CellContext`\[Theta], {0, 
               0}]}, $CellContext`rotatedAxisXText, \
$CellContext`rotatedAxisYText, {
              PointSize[0.01], 
              Point[{0, 0}]}}, Axes -> False, 
            PlotRange -> {{$CellContext`from, $CellContext`to}, \
{$CellContext`from, $CellContext`to}}, 
            ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, ImagePadding -> {{10, 10}, {10, 10}}, 
            ImageMargins -> 0, AspectRatio -> Automatic, 
            If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
                
                Range[$CellContext`from, $CellContext`to, ($CellContext`to - \
$CellContext`from)/($CellContext`gridLines 20)], 
                
                Range[$CellContext`from, $CellContext`to, ($CellContext`to - \
$CellContext`from)/($CellContext`gridLines 20)]}, GridLinesStyle -> Directive[
                Thickness[0.001], LightGray]}], Frame -> False]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->208795180],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`angleSelection$$ = 
    "slider", $CellContext`annotate$$ = True, $CellContext`gridLines$$ = 
    0.5, $CellContext`limit$$ = 30, $CellContext`maxShearPlane$$ = 
    False, $CellContext`onPositiveSideOnly$$ = True, $CellContext`plotType$$ =
     "normal stress trajectory", $CellContext`principalPlaneAngle$$ = 
    False, $CellContext`specificPlaneAngle$$ = 
    "first principal plane", $CellContext`\[Theta]$$ = 
    45, $CellContext`\[Sigma]x$$ = 14, $CellContext`\[Sigma]x1$$ = 
    15.699598555359728`, $CellContext`\[Sigma]y$$ = 
    4, $CellContext`\[Sigma]y1$$ = 
    2.300401444640272, $CellContext`\[Tau]xy$$ = 
    10, $CellContext`\[Tau]xy1$$ = -8.950719479294492, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Sigma]x$$], 14, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Sigma]y$$], 4, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Tau]xy$$], 10, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Theta]$$], 45, ""}, -360, 360, 0.1}, {{
       Hold[$CellContext`limit$$], 30, ""}, 5, 50, 0.1}, {{
       Hold[$CellContext`gridLines$$], 0.5, ""}, 0, 1, 0.1}, {
      Hold[
       Grid[{{
          Grid[{{
             Style[
              Row[{"stresses at 0", Degree}], 12], SpanFromLeft}, {
            "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
             Manipulate`Place[1], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Sigma]x$$, {3, 1}]], 11]}, {
            "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
             Manipulate`Place[2], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Sigma]y$$, {3, 1}]], 11]}, {
            "\!\(\*SubscriptBox[\(\[Tau]\), \(xy\)]\)", 
             Manipulate`Place[3], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Tau]xy$$, {3, 1}]], 11]}, {
             Style[
              Row[{
                Text[
                 TraditionalForm[
                  HoldForm[{{
                    Subscript[$CellContext`\[Sigma], $CellContext`x], 
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y]}, {
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y], 
                    Subscript[$CellContext`\[Sigma], $CellContext`y]}}]]], 
                " = ", 
                Dynamic[
                 TraditionalForm[{{
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]x$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}]}, {
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]y$$], {3, 1}]}}]]}], 11], 
             SpanFromLeft}}, Spacings -> {0.5, 0.5}, Alignment -> Center, 
           Frame -> True, FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]]}, {
          Grid[{{
             Style["select plot type", 12], SpanFromLeft}, {
             PopupMenu[
              Dynamic[$CellContext`plotType$$], {
              "stress section" -> Style["stress section", 11], "Mohr circle" -> 
               Style["Mohr circle", 11], "Mohr circle/stress section" -> 
               Style["Mohr circle/stress section", 11], 
               "normal stress trajectory" -> 
               Style["normal stress trajectory", 11], 
               "shear stress trajectory" -> 
               Style["shear stress trajectory", 11], 
               "normal/shear trajectory" -> 
               Style["normal/shear trajectory", 11]}, ImageSize -> All, 
              ContinuousAction -> False], SpanFromLeft}, {
             Row[{
               Style["annotate", 12], 
               Spacer[1], 
               Checkbox[
                Dynamic[$CellContext`annotate$$], Enabled -> Dynamic[
                  
                  Or[$CellContext`plotType$$ == 
                   "stress section", $CellContext`plotType$$ == 
                   "Mohr circle/stress section"]]]}], 
             Row[{
               Style[
                
                Column[{"display stresses on", "positive sides only"}, 
                 Alignment -> Left], 11], 
               Spacer[1], 
               Checkbox[
                Dynamic[$CellContext`onPositiveSideOnly$$], Enabled -> Dynamic[
                  
                  Or[$CellContext`plotType$$ == 
                   "stress section", $CellContext`plotType$$ == 
                   "Mohr circle/stress section"]]]}], SpanFromLeft}}, 
           Spacings -> {0.5, 0.5}, Alignment -> Center, Frame -> True, 
           FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]], SpanFromLeft}, {
          Grid[{{
             Grid[{{
                Row[{
                  Style["rotate to new angle", 12]}], SpanFromLeft}, {
                RadioButtonBar[
                 Dynamic[$CellContext`angleSelection$$], {
                 "slider" -> "", "specific plane" -> ""}, Appearance -> 
                 "Vertical", Enabled -> Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section", $CellContext`plotType$$ == 
                    "Mohr circle"]]], 
                Grid[{{
                   Row[{
                    Manipulate`Place[4], 
                    Spacer[4], 
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt1[$CellContext`\[Theta]$$, {4, 1}]], 
                    Degree}], 11]}], 
                   Button[
                    Row[{"0", Degree}], $CellContext`\[Theta]$$ = 0, 
                    Appearance -> "Palette", Background -> 
                    RGBColor[0.87, 0.94, 1], ImageSize -> {25, 18}]}, {
                   Row[{
                    PopupMenu[
                    
                    Dynamic[$CellContext`specificPlaneAngle$$, \
{$CellContext`specificPlaneAngle$$ = #; $CellContext`\[Theta]$$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]}& \
], {"first principal plane" -> Style["first principal plane", 11], 
                    "second principal plane" -> 
                    Style["second principal plane", 11], 
                    "first maximum shear plane" -> 
                    Style["first shear plane", 11], 
                    "second maximum shear plane" -> 
                    Style["second shear plane", 11]}, ImageSize -> All, 
                    Enabled -> Dynamic[
                    And[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"], \
$CellContext`angleSelection$$ == "specific plane"]]]}], SpanFromLeft}}]}}, 
              Spacings -> {0.15, 0.5}, Alignment -> Center, Frame -> None]}, {
             Style[
              Row[{
                Text[
                 Style[
                  TraditionalForm[
                   HoldForm[{{
                    Subscript[
                    Derivative[1][$CellContext`\[Sigma]], $CellContext`x], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, \
$CellContext`y]}, {
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, $CellContext`y], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Sigma]], $CellContext`y]}}]]]], " = ", 
                Dynamic[
                 TraditionalForm[{{
                    $CellContext`padIt1[$CellContext`\[Sigma]x1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}]}, {
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Sigma]y1$$, {3, 
                    1}]}}]]}], 11]}}, Spacings -> {0.5, 0.5}, Alignment -> 
           Center, Frame -> True, FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]]}, {
          Grid[{{
             Grid[{{
                Style["zoom", 12], 
                Spacer[13], 
                Manipulate`Place[5], 
                Spacer[12]}, {"", 
                Style[
                 Row[{"in", 
                   Spacer[75], "out"}], 11], SpanFromLeft}}, 
              Spacings -> {0.1, 0.1}, Alignment -> Center, Frame -> True, 
              FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]]}, {
             Grid[{{
                Style["gridlines", 12], Manipulate`Place[6] Spacer[8]}, {"", 
                Style[
                 Row[{"less", 
                   Spacer[70], "more"}], 11]}}, Spacings -> {0.1, 0.1}, 
              Alignment -> Center, Frame -> True, FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]]}}, Spacings -> {0.1, 0.5}, Alignment -> Left,
            Frame -> None], SpanFromLeft}}, Spacings -> {0.2, 1.4}, Alignment -> 
        Center]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`annotate$$], True}, 0}, {{
       Hold[$CellContext`plotType$$], "normal stress trajectory"}, 0}, {{
       Hold[$CellContext`onPositiveSideOnly$$], True}, 0}, {{
       Hold[$CellContext`principalPlaneAngle$$], False}, 0}, {{
       Hold[$CellContext`maxShearPlane$$], False}, 0}, {{
       Hold[$CellContext`specificPlaneAngle$$], "first principal plane"}, 
      0}, {{
       Hold[$CellContext`angleSelection$$], "slider"}, 0}, {{
       Hold[$CellContext`\[Sigma]x1$$], 15.699598555359728`}, 0}, {{
       Hold[$CellContext`\[Sigma]y1$$], 2.300401444640272}, 0}, {{
       Hold[$CellContext`\[Tau]xy1$$], -8.950719479294492}, 0}}, 
    Typeset`size$$ = {425., {209., 216.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`\[Sigma]x$2602$$ = 0, $CellContext`\[Sigma]y$2603$$ = 
    0, $CellContext`\[Tau]xy$2604$$ = 0, $CellContext`\[Theta]$2605$$ = 
    0, $CellContext`limit$2606$$ = 0, $CellContext`gridLines$2607$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`angleSelection$$ = 
        "slider", $CellContext`annotate$$ = True, $CellContext`gridLines$$ = 
        0.5, $CellContext`limit$$ = 30, $CellContext`maxShearPlane$$ = 
        False, $CellContext`onPositiveSideOnly$$ = 
        True, $CellContext`plotType$$ = 
        "normal stress trajectory", $CellContext`principalPlaneAngle$$ = 
        False, $CellContext`specificPlaneAngle$$ = 
        "first principal plane", $CellContext`\[Theta]$$ = 
        45, $CellContext`\[Sigma]x$$ = 14, $CellContext`\[Sigma]x1$$ = 
        15.699598555359728`, $CellContext`\[Sigma]y$$ = 
        4, $CellContext`\[Sigma]y1$$ = 
        2.300401444640272, $CellContext`\[Tau]xy$$ = 
        10, $CellContext`\[Tau]xy1$$ = -8.950719479294492}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]x$2602$$, 0], 
        Hold[$CellContext`\[Sigma]y$$, $CellContext`\[Sigma]y$2603$$, 0], 
        Hold[$CellContext`\[Tau]xy$$, $CellContext`\[Tau]xy$2604$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$2605$$, 0], 
        Hold[$CellContext`limit$$, $CellContext`limit$2606$$, 0], 
        Hold[$CellContext`gridLines$$, $CellContext`gridLines$2607$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`z$}, $CellContext`z$ = $CellContext`\[Theta]$$ (Pi/
           180); If[
          
          Or[$CellContext`plotType$$ == 
           "stress section", $CellContext`plotType$$ == 
           "Mohr circle/stress section", $CellContext`plotType$$ == 
           "Mohr circle"], 
          
          If[$CellContext`angleSelection$$ == 
           "specific plane", $CellContext`z$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]; \
$CellContext`\[Theta]$$ = $CellContext`z$ (180./
              Pi)]]; {$CellContext`\[Sigma]x1$$, $CellContext`\[Sigma]y1$$, \
$CellContext`\[Tau]xy1$$} = $CellContext`rotationStress[
           N[$CellContext`\[Sigma]x$$], 
           N[$CellContext`\[Sigma]y$$], 
           N[$CellContext`\[Tau]xy$$], 
           N[$CellContext`\[Theta]$$]]; Text[
          $CellContext`makeDiagrams[
           N[$CellContext`\[Sigma]x$$], 
           N[$CellContext`\[Sigma]y$$], 
           
           N[$CellContext`\[Tau]xy$$], $CellContext`z$, \
$CellContext`annotate$$, $CellContext`onPositiveSideOnly$$, \
$CellContext`plotType$$, $CellContext`limit$$, $CellContext`gridLines$$]]], 
      "Specifications" :> {{{$CellContext`\[Sigma]x$$, 14, ""}, -20, 20, 0.1, 
         ImageSize -> Tiny, ControlPlacement -> 
         1}, {{$CellContext`\[Sigma]y$$, 4, ""}, -20, 20, 0.1, ImageSize -> 
         Tiny, ControlPlacement -> 
         2}, {{$CellContext`\[Tau]xy$$, 10, ""}, -20, 20, 0.1, ImageSize -> 
         Tiny, ControlPlacement -> 
         3}, {{$CellContext`\[Theta]$$, 45, ""}, -360, 360, 0.1, ImageSize -> 
         Tiny, Enabled -> Dynamic[
           And[
            
            Or[$CellContext`plotType$$ == 
             "stress section", $CellContext`plotType$$ == 
             "Mohr circle/stress section", $CellContext`plotType$$ == 
             "Mohr circle"], $CellContext`angleSelection$$ == "slider"]], 
         ControlPlacement -> 4}, {{$CellContext`limit$$, 30, ""}, 5, 50, 0.1, 
         ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`gridLines$$, 0.5, ""}, 0, 1, 0.1, ImageSize -> 
         Small, ControlPlacement -> 6}, 
        Grid[{{
           Grid[{{
              Style[
               Row[{"stresses at 0", Degree}], 12], SpanFromLeft}, {
             "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
              Manipulate`Place[1], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Sigma]x$$, {3, 1}]], 
               11]}, {"\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
              Manipulate`Place[2], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Sigma]y$$, {3, 1}]], 
               11]}, {"\!\(\*SubscriptBox[\(\[Tau]\), \(xy\)]\)", 
              Manipulate`Place[3], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Tau]xy$$, {3, 1}]], 11]}, {
              Style[
               Row[{
                 Text[
                  TraditionalForm[
                   HoldForm[{{
                    Subscript[$CellContext`\[Sigma], $CellContext`x], 
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y]}, {
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y], 
                    Subscript[$CellContext`\[Sigma], $CellContext`y]}}]]], 
                 " = ", 
                 Dynamic[
                  TraditionalForm[{{
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]x$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}]}, {
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]y$$], {3, 1}]}}]]}], 11], 
              SpanFromLeft}}, Spacings -> {0.5, 0.5}, Alignment -> Center, 
            Frame -> True, FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]]}, {
           Grid[{{
              Style["select plot type", 12], SpanFromLeft}, {
              PopupMenu[
               Dynamic[$CellContext`plotType$$], {
               "stress section" -> Style["stress section", 11], "Mohr circle" -> 
                Style["Mohr circle", 11], "Mohr circle/stress section" -> 
                Style["Mohr circle/stress section", 11], 
                "normal stress trajectory" -> 
                Style["normal stress trajectory", 11], 
                "shear stress trajectory" -> 
                Style["shear stress trajectory", 11], 
                "normal/shear trajectory" -> 
                Style["normal/shear trajectory", 11]}, ImageSize -> All, 
               ContinuousAction -> False], SpanFromLeft}, {
              Row[{
                Style["annotate", 12], 
                Spacer[1], 
                Checkbox[
                 Dynamic[$CellContext`annotate$$], Enabled -> Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"]]]}], 
              Row[{
                Style[
                 
                 Column[{"display stresses on", "positive sides only"}, 
                  Alignment -> Left], 11], 
                Spacer[1], 
                Checkbox[
                 Dynamic[$CellContext`onPositiveSideOnly$$], Enabled -> 
                 Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"]]]}], SpanFromLeft}}, 
            Spacings -> {0.5, 0.5}, Alignment -> Center, Frame -> True, 
            FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]], SpanFromLeft}, {
           Grid[{{
              Grid[{{
                 Row[{
                   Style["rotate to new angle", 12]}], SpanFromLeft}, {
                 RadioButtonBar[
                  Dynamic[$CellContext`angleSelection$$], {
                  "slider" -> "", "specific plane" -> ""}, Appearance -> 
                  "Vertical", Enabled -> Dynamic[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section", $CellContext`plotType$$ == 
                    "Mohr circle"]]], 
                 Grid[{{
                    Row[{
                    Manipulate`Place[4], 
                    Spacer[4], 
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt1[$CellContext`\[Theta]$$, {4, 1}]], 
                    Degree}], 11]}], 
                    Button[
                    Row[{"0", Degree}], $CellContext`\[Theta]$$ = 0, 
                    Appearance -> "Palette", Background -> 
                    RGBColor[0.87, 0.94, 1], ImageSize -> {25, 18}]}, {
                    Row[{
                    PopupMenu[
                    
                    Dynamic[$CellContext`specificPlaneAngle$$, \
{$CellContext`specificPlaneAngle$$ = #; $CellContext`\[Theta]$$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]}& \
], {"first principal plane" -> Style["first principal plane", 11], 
                    "second principal plane" -> 
                    Style["second principal plane", 11], 
                    "first maximum shear plane" -> 
                    Style["first shear plane", 11], 
                    "second maximum shear plane" -> 
                    Style["second shear plane", 11]}, ImageSize -> All, 
                    Enabled -> Dynamic[
                    And[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"], \
$CellContext`angleSelection$$ == "specific plane"]]]}], SpanFromLeft}}]}}, 
               Spacings -> {0.15, 0.5}, Alignment -> Center, Frame -> None]}, {
              Style[
               Row[{
                 Text[
                  Style[
                   TraditionalForm[
                    HoldForm[{{
                    Subscript[
                    Derivative[1][$CellContext`\[Sigma]], $CellContext`x], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, \
$CellContext`y]}, {
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, $CellContext`y], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Sigma]], $CellContext`y]}}]]]], " = ", 
                 Dynamic[
                  TraditionalForm[{{
                    $CellContext`padIt1[$CellContext`\[Sigma]x1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}]}, {
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Sigma]y1$$, {3, 
                    1}]}}]]}], 11]}}, Spacings -> {0.5, 0.5}, Alignment -> 
            Center, Frame -> True, FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]]}, {
           Grid[{{
              Grid[{{
                 Style["zoom", 12], 
                 Spacer[13], 
                 Manipulate`Place[5], 
                 Spacer[12]}, {"", 
                 Style[
                  Row[{"in", 
                    Spacer[75], "out"}], 11], SpanFromLeft}}, 
               Spacings -> {0.1, 0.1}, Alignment -> Center, Frame -> True, 
               FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}, {
              Grid[{{
                 Style["gridlines", 12], Manipulate`Place[6] Spacer[8]}, {"", 
                 Style[
                  Row[{"less", 
                    Spacer[70], "more"}], 11]}}, Spacings -> {0.1, 0.1}, 
               Alignment -> Center, Frame -> True, FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}}, Spacings -> {0.1, 0.5}, Alignment -> 
            Left, Frame -> None], SpanFromLeft}}, Spacings -> {0.2, 1.4}, 
         Alignment -> Center], {{$CellContext`annotate$$, True}, 0, 
         ControlType -> 
         None}, {{$CellContext`plotType$$, "normal stress trajectory"}, 0, 
         ControlType -> None}, {{$CellContext`onPositiveSideOnly$$, True}, 0, 
         ControlType -> None}, {{$CellContext`principalPlaneAngle$$, False}, 
         0, ControlType -> None}, {{$CellContext`maxShearPlane$$, False}, 0, 
         ControlType -> 
         None}, {{$CellContext`specificPlaneAngle$$, "first principal plane"},
          0, ControlType -> None}, {{$CellContext`angleSelection$$, "slider"},
          0, ControlType -> 
         None}, {{$CellContext`\[Sigma]x1$$, 15.699598555359728`}, 0, 
         ControlType -> 
         None}, {{$CellContext`\[Sigma]y1$$, 2.300401444640272}, 0, 
         ControlType -> 
         None}, {{$CellContext`\[Tau]xy1$$, -8.950719479294492}, 0, 
         ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, SynchronousUpdating -> False, 
        SynchronousInitialization -> False, ContinuousAction -> True, 
        Alignment -> Center, ImageMargins -> 0, FrameMargins -> 0, Paneled -> 
        True, Frame -> False, AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{654., {239., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`contentSizeW = 
        425; $CellContext`contentSizeH = 425; $CellContext`padIt2[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[List]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"", ""}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt2[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[Integer]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"", ""}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt2s[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[Integer]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"-", "+"}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt1[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[List]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"-", "+"}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`integerStrictPositive = And[
          IntegerQ[#], # > 0]& ; $CellContext`integerPositive = And[
          IntegerQ[#], # >= 0]& ; $CellContext`numericStrictPositive = And[
          Element[#, Reals], # > 0]& ; $CellContext`numericPositive = And[
          Element[#, Reals], # >= 0]& ; $CellContext`numericStrictNegative = 
        And[
          Element[#, Reals], # < 0]& ; $CellContext`numericNegative = And[
          Element[#, Reals], # <= 0]& ; $CellContext`bool = 
        Element[#, Booleans]& ; $CellContext`numeric = 
        Element[#, Reals]& ; $CellContext`integer = 
        Element[#, Integers]& ; $CellContext`makeDiagrams[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`annotate, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`onPositiveSideOnly, 
            Blank[]], $CellContext`bool], 
          Pattern[$CellContext`plotType, 
           Blank[String]], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := Module[{}, 
          Which[$CellContext`plotType == "stress section", 
           $CellContext`make2DStressDiagram[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta], \
$CellContext`annotate, $CellContext`onPositiveSideOnly, $CellContext`limit, \
$CellContext`gridLines, {$CellContext`contentSizeW, \
$CellContext`contentSizeH}], $CellContext`plotType == "Mohr circle", 
           $CellContext`makeMohrCircle[$CellContext`\[Theta], $CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines, {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, 
            $CellContext`makeMohrCircleTitle[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]], $CellContext`plotType == 
           "Mohr circle/stress section", 
           Grid[{{
              $CellContext`makeMohrCircleTitle[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], SpanFromLeft}, {
              $CellContext`make2DStressDiagram[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta], \
$CellContext`annotate, $CellContext`onPositiveSideOnly, $CellContext`limit, \
$CellContext`gridLines, {
               0.5 $CellContext`contentSizeW, 
                0.87 $CellContext`contentSizeH}], 
              $CellContext`makeMohrCircle[$CellContext`\[Theta], \
$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, \
$CellContext`limit, $CellContext`gridLines, {
               0.499 $CellContext`contentSizeW, 
                0.87 $CellContext`contentSizeH}, {}]}}, 
            Spacings -> {0, 0}], $CellContext`plotType == 
           "normal stress trajectory", 
           $CellContext`makeNormalStressPolarPlot[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines], $CellContext`plotType == "shear stress trajectory", 
           $CellContext`makeShearStressPolarPlot[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines], $CellContext`plotType == "normal/shear trajectory", 
           $CellContext`makeShearAndNormalStressPolarPlot[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines]]]; $CellContext`getAngleAtSpecificPlane[
          Pattern[$CellContext`specificPlaneAngle, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]x, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]y, 
           Blank[]], 
          Pattern[$CellContext`\[Tau]xy, 
           Blank[]]] := N[
          Which[$CellContext`specificPlaneAngle == "first principal plane", 
           Part[
            $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 
            2], $CellContext`specificPlaneAngle == "second principal plane", 
           Part[
            $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 2, 
            2], $CellContext`specificPlaneAngle == 
           "first maximum shear plane", Part[
             $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 2] + 
           Pi/4, $CellContext`specificPlaneAngle == 
           "second maximum shear plane", Part[
             $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 2] + (3/4) 
            Pi]]; $CellContext`principalStresses[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`\[Theta]p, $CellContext`\[Sigma], $CellContext`\
\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1max, $CellContext`r, \
$CellContext`c, $CellContext`tmp, $CellContext`\[Theta]1, $CellContext`\
\[Theta]2}, $CellContext`r = ((($CellContext`\[Sigma]x - \
$CellContext`\[Sigma]y)/2)^2 + $CellContext`\[Tau]xy^2)^
            Rational[
             1, 2]; $CellContext`c = ($CellContext`\[Sigma]x + $CellContext`\
\[Sigma]y)/
            2; {$CellContext`\[Sigma]1, $CellContext`\[Sigma]2} = \
{$CellContext`c + $CellContext`r, $CellContext`c - $CellContext`r}; 
          If[Abs[$CellContext`\[Sigma]2] > 
            Abs[$CellContext`\[Sigma]1], $CellContext`tmp = $CellContext`\
\[Sigma]1; $CellContext`\[Sigma]1 = $CellContext`\[Sigma]2; $CellContext`\
\[Sigma]2 = $CellContext`tmp]; 
          If[Abs[$CellContext`\[Sigma]x - $CellContext`\[Sigma]y] <= \
$MachineEpsilon, $CellContext`\[Theta]p = Pi/4, $CellContext`\[Theta]p = 
            ArcTan[2 (Abs[$CellContext`\[Tau]xy]/
                Abs[$CellContext`\[Sigma]x - $CellContext`\[Sigma]y])]/2]; 
          If[$CellContext`\[Sigma]1 > $CellContext`\[Sigma]2, 
            If[$CellContext`\[Tau]xy > 0, 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {$CellContext`\[Theta]p, -(
                 Pi/2 - $CellContext`\[Theta]p)}, {$CellContext`\[Theta]1, \
$CellContext`\[Theta]2} = {
               Pi/2 - $CellContext`\[Theta]p, -$CellContext`\[Theta]p}], 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {-$CellContext`\[Theta]p, 
                Pi/2 - $CellContext`\[Theta]p}, {$CellContext`\[Theta]1, \
$CellContext`\[Theta]2} = {-(
                 Pi/2 - $CellContext`\[Theta]p), $CellContext`\[Theta]p}]], 
            If[$CellContext`\[Tau]xy > 0, 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {-(
                 Pi/2 - $CellContext`\[Theta]p), $CellContext`\[Theta]p}, \
{$CellContext`\[Theta]1, $CellContext`\[Theta]2} = {-$CellContext`\[Theta]p, 
                Pi/2 - $CellContext`\[Theta]p}], 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {
               Pi/2 - $CellContext`\[Theta]p, -$CellContext`\[Theta]p}, \
{$CellContext`\[Theta]1, $CellContext`\[Theta]2} = {$CellContext`\[Theta]p, -(
                 Pi/2 - $CellContext`\[Theta]p)}]]]; \
{{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, {$CellContext`\[Sigma]2, \
$CellContext`\[Theta]2}}]; $CellContext`maxAndMinShearStress[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`r}, $CellContext`r = 
           Sqrt[(($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)/
               2)^2 + $CellContext`\[Tau]xy^2]; {$CellContext`r, \
-$CellContext`r}]; $CellContext`plot[
          Pattern[$CellContext`data, 
           Blank[List]], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], 
          Pattern[$CellContext`color, 
           Blank[]]] := 
        ListPolarPlot[$CellContext`data, Joined -> True, AxesOrigin -> {0, 0},
           ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, ImagePadding -> {{20, 10}, {20, 5}}, ImageMargins -> 
          0, AspectRatio -> 1, Frame -> True, 
          If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
              
              Range[-$CellContext`limit, $CellContext`limit, (
                2 $CellContext`limit)/($CellContext`gridLines 20)], 
              
              Range[-$CellContext`limit, $CellContext`limit, (
                2 $CellContext`limit)/($CellContext`gridLines 20)]}, 
            GridLinesStyle -> Directive[
              Thickness[0.001], LightGray]}], 
          PlotRange -> {{-$CellContext`limit, $CellContext`limit}, \
{-$CellContext`limit, $CellContext`limit}}, 
          PlotStyle -> $CellContext`color]; $CellContext`makeArrowForAngle[
          Pattern[$CellContext`r, 
           Blank[]], 
          Pattern[$CellContext`center, 
           Blank[]], {{
            Pattern[$CellContext`\[Sigma]1, 
             Blank[]], 
            Pattern[$CellContext`\[Theta]1, 
             Blank[]]}, {
            Pattern[$CellContext`\[Sigma]2, 
             Blank[]], 
            Pattern[$CellContext`\[Theta]2, 
             Blank[]]}}, 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`phi, $CellContext`tbl, $CellContext`align}, 
          If[$CellContext`\[Sigma]1 > $CellContext`\[Sigma]2, 
            
            If[$CellContext`\[Tau]xy > 
             0, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, (-2) \
$CellContext`\[Theta]1, 0, Pi/100}]; $CellContext`align = {-1, 
               1}, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, (-2) \
$CellContext`\[Theta]1, 0, (-Pi)/100}]; $CellContext`align = {-1, -1}], 
            
            If[$CellContext`\[Tau]xy > 
             0, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, -(Pi + 
                  2 $CellContext`\[Theta]1), -Pi, (-Pi)/
                 100}]; $CellContext`align = {1, 1}, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, Pi - 
                 2 $CellContext`\[Theta]1, Pi, Pi/
                 100}]; $CellContext`align = {1, -1}]]; {
            Text["2\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
             If[Length[$CellContext`tbl] > 1, 
              Part[$CellContext`tbl, 
               Round[Length[$CellContext`tbl]/2]], 
              
              First[$CellContext`tbl]], $CellContext`align], \
$CellContext`tbl}]; $CellContext`makeMohrCircleTitle[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\
\[Theta]1, $CellContext`\[Theta]2, $CellContext`r, $CellContext`center, \
$CellContext`ptA}, {{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`center = \
{($CellContext`\[Sigma]1 + $CellContext`\[Sigma]2)/2, 
             0}; $CellContext`ptA = {$CellContext`\[Sigma]x, -$CellContext`\
\[Tau]xy}; $CellContext`r = 
           EuclideanDistance[$CellContext`center, $CellContext`ptA]; Grid[{
             Map[TraditionalForm[
               Style[#]]& , {
              "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
               "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
               "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
               "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
               "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)"}], {
              $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
              PlusMinus[
               $CellContext`padIt2[$CellContext`r, {4, 1}]], 
              Row[{
                $CellContext`padIt1[$CellContext`\[Theta]1 (180/Pi), {4, 1}], 
                Degree}], 
              Row[{
                $CellContext`padIt1[$CellContext`\[Theta]2 (180/Pi), {4, 1}], 
                Degree}]}}, Spacings -> {0.5, 1}, Frame -> All, FrameStyle -> 
            Directive[Thin]]]; $CellContext`getRadiusOfCircle[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Sqrt[(($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)/
            2)^2 + $CellContext`\[Tau]xy^2]; $CellContext`rotationStress[
          Pattern[$CellContext`\[Sigma]x, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]y, 
           Blank[]], 
          Pattern[$CellContext`\[Tau]xy, 
           Blank[]], 
          Pattern[$CellContext`\[Theta], 
           Blank[]]] := 
        Module[{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy, \
$CellContext`\[Tau]}, $CellContext`\[Sigma]xx = (1/
              2) ($CellContext`\[Sigma]x + $CellContext`\[Sigma]y) + ((1/
               2) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
             Cos[2 $CellContext`\[Theta]] + $CellContext`\[Tau]xy 
             Sin[2 $CellContext`\[Theta]]; $CellContext`\[Tau] = ((-(1/
                2)) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
             Sin[2 $CellContext`\[Theta]] + $CellContext`\[Tau]xy 
             Cos[2 $CellContext`\[Theta]]; $CellContext`\[Sigma]yy = (1/
              2) ($CellContext`\[Sigma]x + $CellContext`\[Sigma]y) - ((1/
              2) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
            Cos[2 $CellContext`\[Theta]] - $CellContext`\[Tau]xy 
            Sin[2 $CellContext`\[Theta]]; {$CellContext`\[Sigma]xx, \
$CellContext`\[Sigma]yy, $CellContext`\[Tau]}]; $CellContext`makeMohrCircle[
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], {
           PatternTest[
            Pattern[$CellContext`contentSizeW, 
             Blank[]], $CellContext`numericStrictPositive], 
           PatternTest[
            Pattern[$CellContext`contentSizeH, 
             Blank[]], $CellContext`numericStrictPositive]}, 
          Pattern[$CellContext`plotTitle, 
           Blank[]]] := 
        Module[{$CellContext`ptA, $CellContext`ptB, $CellContext`center, \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Theta]1, \
$CellContext`\[Theta]2, $CellContext`r, $CellContext`z, $CellContext`ptD1, \
$CellContext`ptD2, $CellContext`\[Sigma]x1, $CellContext`\[Tau]xy1, \
$CellContext`\[Sigma]y1}, {{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`center = \
{($CellContext`\[Sigma]1 + $CellContext`\[Sigma]2)/2, 
             0}; $CellContext`ptA = {$CellContext`\[Sigma]x, -$CellContext`\
\[Tau]xy}; $CellContext`r = $CellContext`getRadiusOfCircle[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\
\[Sigma]x1, $CellContext`\[Sigma]y1, $CellContext`\[Tau]xy1} = \
$CellContext`rotationStress[$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, \
$CellContext`\[Tau]xy, $CellContext`\[Theta]]; $CellContext`z = $CellContext`\
\[Sigma]x - First[$CellContext`center]; $CellContext`ptB = {
            Part[$CellContext`ptA, 1] - 2 $CellContext`z, -
             Part[$CellContext`ptA, 
               2]}; $CellContext`ptD1 = {$CellContext`\[Sigma]x1, \
-$CellContext`\[Tau]xy1}; $CellContext`ptD2 = {$CellContext`\[Sigma]y1, \
$CellContext`\[Tau]xy1}; Graphics[{
             Circle[$CellContext`center, $CellContext`r], {Black, 
              PointSize[0.02], 
              Point[$CellContext`ptA]}, {Black, 
              PointSize[0.02], 
              Point[$CellContext`center]}, {Black, 
              PointSize[0.02], 
              Point[$CellContext`ptB]}, {Dashed, 
              Line[{$CellContext`ptA, $CellContext`ptB}]}, 
             Circle[$CellContext`ptD1, 0.8], {Red, Dashed, 
              Line[{$CellContext`ptD1, $CellContext`ptD2}]}, 
             Circle[$CellContext`ptD2, 0.8], 
             Text[
              Row[{"(", 
                $CellContext`padIt1[$CellContext`\[Sigma]x1, {4, 1}], ",", 
                $CellContext`padIt1[$CellContext`\[Tau]xy1, {4, 1}], 
                ")"}], $CellContext`ptD1, 
              
              If[$CellContext`\[Sigma]x1 > 
               Part[$CellContext`center, 1], {-1.2, -1.2}, {1.2, -1.2}]], 
             Text[
              Row[{"(", 
                $CellContext`padIt1[$CellContext`\[Sigma]y1, {4, 1}], ",", 
                $CellContext`padIt1[$CellContext`\[Tau]xy1, {4, 1}], 
                ")"}], $CellContext`ptD2, 
              
              If[$CellContext`\[Sigma]y1 > 
               Part[$CellContext`center, 1], {-1.2, -1.2}, {1.2, -1.2}]], {
             Red, 
              PointSize[0.02], 
              Point[{$CellContext`\[Sigma]1, 0}]}, {
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], {$CellContext`\[Sigma]1, 0}, {-1.5, 1.5}]}, {Red, 
              PointSize[0.02], 
              Point[{$CellContext`\[Sigma]2, 0}]}, {
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], {$CellContext`\[Sigma]2, 0}, {1.2, 1.3}]}, {Blue, 
              PointSize[0.02], 
              Point[{
                Part[$CellContext`center, 1], $CellContext`r}]}, {
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 12]], {
                Part[$CellContext`center, 1], $CellContext`r}, {0, -1.5}]}, {
             Blue, 
              PointSize[0.02], 
              Point[{
                Part[$CellContext`center, 1], -$CellContext`r}]}, {
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 12]], {
                Part[$CellContext`center, 1], -$CellContext`r}, {0, 1.5}]}, {
              Text[
               Style["tension", 11], {$CellContext`limit, 0}, {1, 3}]}, {
              Text[
               Style["compression", 11], {-$CellContext`limit, 0}, {-1, 3}]}}, 
            If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
                
                Range[-$CellContext`limit, $CellContext`limit, (
                  2 $CellContext`limit)/($CellContext`gridLines 20)], 
                
                Range[-$CellContext`limit, $CellContext`limit, (
                  2 $CellContext`limit)/($CellContext`gridLines 20)]}, 
              GridLinesStyle -> Directive[
                Thickness[0.001], LightGray]}], 
            PlotRange -> {{-$CellContext`limit, $CellContext`limit}, \
{-$CellContext`limit, $CellContext`limit}}, Axes -> True, 
            AxesOrigin -> {0, 0}, TicksStyle -> 8, PlotLabel -> 
            If[$CellContext`plotTitle === {}, "", $CellContext`plotTitle], 
            ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, 
            ImagePadding -> {{20, 10}, {20, 
             5}}]]; $CellContext`makeShearAndNormalStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, \
$CellContext`\[Sigma]2Abs, $CellContext`\[Theta]p1, $CellContext`\[Theta]p2, \
$CellContext`p1, $CellContext`p2, $CellContext`p3, $CellContext`p4, \
$CellContext`plotTitle, $CellContext`coord1, $CellContext`coord2, \
$CellContext`\[Tau]1, $CellContext`\[Tau]2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                1]}], $CellContext`limit, $CellContext`gridLines, 
             Red]; $CellContext`coord1 = {
            Abs[$CellContext`\[Sigma]1] Cos[$CellContext`\[Theta]p1], 
             Abs[$CellContext`\[Sigma]1] 
             Sin[$CellContext`\[Theta]p1]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Sigma]2] Cos[$CellContext`\[Theta]p2], 
             Abs[$CellContext`\[Sigma]2] 
             Sin[$CellContext`\[Theta]p2]}; $CellContext`p2 = Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Sigma]x, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 12]], {$CellContext`\[Sigma]x, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Sigma]y}]}, 
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 12]], {
               0, $CellContext`\[Sigma]y}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord2]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], $CellContext`coord2, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 
                    2]}}]}}]; {$CellContext`\[Tau]1, $CellContext`\[Tau]2} = \
$CellContext`maxAndMinShearStress[$CellContext`\[Sigma]x, $CellContext`\
\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p3 = $CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                3]}], $CellContext`limit, $CellContext`gridLines, 
             Blue]; $CellContext`coord1 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p1 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p1 + Pi/4]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p2 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p2 + Pi/4]}; $CellContext`p4 = 
           Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Tau]xy, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 12]], {$CellContext`\[Tau]xy, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Tau]xy}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", 
                 12]], {0, $CellContext`\[Tau]xy}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {Dashed, Thin, 
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Style[
             
             Grid[{{"normal (red) and shear (blue) polar (stress vs. angle) \
trajectory", SpanFromLeft}, 
               Map[TraditionalForm[
                 Style[#]]& , {
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)"}], {
                $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
                Row[{
                  $CellContext`padIt1[$CellContext`\[Theta]p1 (180/Pi), {4, 
                   1}], Degree}], 
                $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
                Row[{
                  $CellContext`padIt1[$CellContext`\[Theta]p2 (180/Pi), {4, 
                   1}], Degree}], 
                PlusMinus[
                 $CellContext`padIt2[$CellContext`\[Tau]1, {4, 1}]]}}, 
              Spacings -> {0.4, 1.1}, Frame -> All, FrameStyle -> 
              Directive[Thin]], 12]; 
          Show[$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`makeNormalStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, \
$CellContext`\[Sigma]2Abs, $CellContext`\[Theta]p1, $CellContext`\[Theta]p2, \
$CellContext`p1, $CellContext`p2, $CellContext`plotTitle, \
$CellContext`coord1, $CellContext`coord2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                1]}], $CellContext`limit, $CellContext`gridLines, 
             Red]; $CellContext`coord1 = {
            Abs[$CellContext`\[Sigma]1] Cos[$CellContext`\[Theta]p1], 
             Abs[$CellContext`\[Sigma]1] 
             Sin[$CellContext`\[Theta]p1]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Sigma]2] Cos[$CellContext`\[Theta]p2], 
             Abs[$CellContext`\[Sigma]2] 
             Sin[$CellContext`\[Theta]p2]}; $CellContext`p2 = Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Sigma]x, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 12]], {$CellContext`\[Sigma]x, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Sigma]y}]}, 
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 12]], {
               0, $CellContext`\[Sigma]y}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord2]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], $CellContext`coord2, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Grid[{{"normal stress polar (stress vs. angle) trajectory", 
               SpanFromLeft}, 
              Map[TraditionalForm[
                Style[#]]& , {
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)"}], {
               $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
               Row[{
                 $CellContext`padIt1[$CellContext`\[Theta]p1 (180/Pi), {4, 
                  1}], Degree}], 
               $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
               Row[{
                 $CellContext`padIt1[$CellContext`\[Theta]p2 (180/Pi), {4, 
                  1}], Degree}]}}, Spacings -> {0.8, 1}, Frame -> All, 
             FrameStyle -> Directive[Thin]]; 
          Show[$CellContext`p1, $CellContext`p2, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`makeShearStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Tau]1, $CellContext`\[Tau]2, \
$CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, $CellContext`\[Sigma]2Abs, \
$CellContext`\[Theta]p1, $CellContext`\[Theta]p2, $CellContext`p1, \
$CellContext`p2, $CellContext`plotTitle, $CellContext`coord1, \
$CellContext`coord2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\[Tau]1, \
$CellContext`\[Tau]2} = $CellContext`maxAndMinShearStress[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                3]}], $CellContext`limit, $CellContext`gridLines, 
             Blue]; $CellContext`coord1 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p1 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p1 + Pi/4]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p2 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p2 + Pi/4]}; $CellContext`p2 = 
           Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Tau]xy, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 12]], {$CellContext`\[Tau]xy, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Tau]xy}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", 
                 12]], {0, $CellContext`\[Tau]xy}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Grid[{{"shear stress polar (stress vs. angle) trajectory", 
               SpanFromLeft}, 
              Flatten[{
                Map[TraditionalForm[
                  Style[#]]& , {
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)",
                   "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Theta]\), \(max\)]\)"}], 
                SpanFromLeft}], {
               $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
               PlusMinus[
                $CellContext`padIt2[$CellContext`\[Tau]xy, {4, 1}]], 
               $CellContext`padIt1[$CellContext`\[Tau]1, {4, 1}], 
               Row[{
                 $CellContext`padIt1[($CellContext`\[Theta]p1 + Pi/4) (180/
                   Pi), {4, 1}], Degree, ",", 
                 $CellContext`padIt1[($CellContext`\[Theta]p1 + (3/4) Pi) (
                   180/Pi), {4, 1}], Degree}], SpanFromLeft}}, 
             Spacings -> {1, 1}, Frame -> All, FrameStyle -> Directive[Thin]]; 
          Show[$CellContext`p1, $CellContext`p2, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`make2DStressDiagram[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`annotate, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`onPositiveSideOnly, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], {
           PatternTest[
            Pattern[$CellContext`contentSizeW, 
             Blank[]], $CellContext`numericStrictPositive], 
           PatternTest[
            Pattern[$CellContext`contentSizeH, 
             Blank[]], $CellContext`numericStrictPositive]}] := 
        Module[{$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\
\[Sigma]xx, $CellContext`\[Sigma]yy, $CellContext`\[Tau]xyxy, $CellContext`r, \
$CellContext`\[Sigma]xxRightArrow, $CellContext`\[Sigma]xxLeftArrow, \
$CellContext`\[Sigma]yyTopArrow, $CellContext`\[Sigma]yyBottomArrow, \
$CellContext`\[Tau]RightArrow, $CellContext`\[Tau]LeftArrow, $CellContext`\
\[Tau]TopArrow, $CellContext`\[Tau]BottomArrow, $CellContext`\[Tau]1, \
$CellContext`\[Tau]2, $CellContext`color, $CellContext`textSize = 
           11, $CellContext`colorShear, \
$CellContext`\[Sigma]xxRightArrowText, $CellContext`\[Sigma]xxLeftArrowText, \
$CellContext`\[Sigma]yyTopArrowText, $CellContext`\[Sigma]yyBottomArrowText, \
$CellContext`\[Tau]RightArrowText, $CellContext`\[Tau]LeftArrowText, \
$CellContext`\[Tau]TopArrowText, $CellContext`\[Tau]BottomArrowText, \
$CellContext`rotationMatrix, $CellContext`coordinates, $CellContext`from, \
$CellContext`to, $CellContext`rotatedAxisXText, \
$CellContext`rotatedAxisYText, $CellContext`maxAbsoluteprincipalShearStress, \
$CellContext`thickness = Thick, $CellContext`eps = 
           10^(-9), $CellContext`\[Theta]p1, $CellContext`\[Theta]p2}, \
$CellContext`rotationMatrix = 
           RotationMatrix[-$CellContext`\[Theta]]; \
$CellContext`rotatedAxisXText = Text[
             Style["x", Italic, $CellContext`textSize], 
             
             Dot[{0.3, 
               0}, $CellContext`rotationMatrix]]; \
$CellContext`rotatedAxisYText = Text[
             Style["y", Italic, $CellContext`textSize], 
             
             Dot[{0, 0.3}, $CellContext`rotationMatrix]]; {{$CellContext`\
\[Sigma]1, $CellContext`\[Theta]p1}, {$CellContext`\[Sigma]2, $CellContext`\
\[Theta]p2}} = $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\[Tau]1, \
$CellContext`\[Tau]2} = $CellContext`maxAndMinShearStress[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; \
$CellContext`maxAbsoluteprincipalShearStress = Max[
             
             Abs[{$CellContext`\[Tau]1, $CellContext`\[Tau]2}]]; \
{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy, $CellContext`\[Tau]xyxy} = \
$CellContext`rotationStress[$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, \
$CellContext`\[Tau]xy, $CellContext`\[Theta]]; 
          If[Abs[$CellContext`\[Sigma]1] > 
            0, {$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy} = \
{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy}/
             Abs[$CellContext`\[Sigma]1]]; 
          If[$CellContext`maxAbsoluteprincipalShearStress > 
            0, $CellContext`\[Tau]xyxy = \
$CellContext`\[Tau]xyxy/$CellContext`maxAbsoluteprincipalShearStress]; \
$CellContext`color = Red; $CellContext`colorShear = 
           Blue; $CellContext`r = {White, 
             EdgeForm[{Thin, Gray}], 
             Rectangle[{-0.5, -0.5}, {0.5, 0.5}]}; 
          If[$CellContext`\[Sigma]xx >= 
            0, $CellContext`from = {0.6, 0}; $CellContext`to = {
              0.6 + $CellContext`\[Sigma]xx, 0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, 0.78, 
                  0.68] + $CellContext`\[Sigma]xx, 
                0}, $CellContext`rotationMatrix], $CellContext`from = {
              0.6 + Abs[$CellContext`\[Sigma]xx], 0}; $CellContext`to = {
              0.6, 0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, 0.78, 0.68] + 
                Abs[$CellContext`\[Sigma]xx], 
                0}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]xxRightArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]xx 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates, {0,
               0}], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates, {0, 
              0}]]; $CellContext`\[Sigma]xxRightArrow = \
{$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]xx >= 
            0, $CellContext`from = {-0.6, 
               0}; $CellContext`to = {-0.6 - $CellContext`\[Sigma]xx, 
               0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, -0.78, -0.68] - $CellContext`\
\[Sigma]xx, 0}, $CellContext`rotationMatrix], $CellContext`from = {-0.6 - 
               Abs[$CellContext`\[Sigma]xx], 0}; $CellContext`to = {-0.6, 
               0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, -0.78, -0.68] - 
                Abs[$CellContext`\[Sigma]xx], 
                0}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]xxLeftArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]xx 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]xxLeftArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]yy >= 
            0, $CellContext`from = {0, 0.6}; $CellContext`to = {
              0, 0.6 + $CellContext`\[Sigma]yy}; $CellContext`coordinates = 
             Dot[{0, If[$CellContext`annotate, 0.75, 
                  0.68] + $CellContext`\[Sigma]yy}, \
$CellContext`rotationMatrix], $CellContext`from = {
              0, 0.6 + Abs[$CellContext`\[Sigma]yy]}; $CellContext`to = {
              0, 0.6}; $CellContext`coordinates = 
             Dot[{0, If[$CellContext`annotate, 0.75, 0.68] + 
                Abs[$CellContext`\[Sigma]yy]}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]yyTopArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]yy 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]yyTopArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]yy >= 
            0, $CellContext`from = {0, -0.6}; $CellContext`to = {
              0, -0.6 - $CellContext`\[Sigma]yy}; $CellContext`coordinates = 
             Dot[{0, -0.75 - $CellContext`\[Sigma]yy}, \
$CellContext`rotationMatrix], $CellContext`from = {
              0, -0.6 - Abs[$CellContext`\[Sigma]yy]}; $CellContext`to = {
              0, -0.6}; $CellContext`coordinates = 
             Dot[{0, -0.75 - 
                Abs[$CellContext`\[Sigma]yy]}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]yyBottomArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]yy 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]yyBottomArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Tau]xyxy >= 
            0, $CellContext`from = {
              0.6, 0.5 - $CellContext`\[Tau]xyxy}; $CellContext`to = {0.6, 
              0.5}; $CellContext`coordinates = Dot[{
                If[$CellContext`annotate, 0.8, 0.7], 
                0.45}, $CellContext`rotationMatrix], $CellContext`from = {0.6,
               0.5}; $CellContext`to = {
              0.6, 0.5 - 
               Abs[$CellContext`\[Tau]xyxy]}; $CellContext`coordinates = Dot[{
                If[$CellContext`annotate, 0.8, 0.7], 
                0.45}, $CellContext`rotationMatrix]]; \
$CellContext`\[Tau]RightArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style[
                  "\!\(\*SubscriptBox[\(\[Tau]\), \
\(x\[InvisibleComma]y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Tau]xyxy \
$CellContext`maxAbsoluteprincipalShearStress, {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Tau]RightArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`colorShear, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Tau]xyxy >= 
            0, $CellContext`from = {
              0.5 - $CellContext`\[Tau]xyxy, 0.6}; $CellContext`to = {0.5, 
              0.6}; $CellContext`coordinates = 
             Dot[{0.5, 
               0.75}, $CellContext`rotationMatrix], $CellContext`from = {0.5, 
              0.6}; $CellContext`to = {
              0.5 - Abs[$CellContext`\[Tau]xyxy], 
               0.6}; $CellContext`coordinates = 
             Dot[{0.5, 
               0.75}, $CellContext`rotationMatrix]]; \
$CellContext`\[Tau]TopArrowText = Text[
             TraditionalForm[
              Style[
              "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]; \
$CellContext`\[Tau]TopArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`colorShear, 
             
             Arrow[{$CellContext`from, $CellContext`to}, 
              0]}; $CellContext`\[Tau]LeftArrow = {
             Arrowheads[Medium], 
             
             If[$CellContext`\[Tau]xyxy >= 
              0, {$CellContext`thickness, $CellContext`colorShear, 
               
               Arrow[{{-0.6, -0.5 + $CellContext`\[Tau]xyxy}, {-0.6, -0.5}}, 
                0]}, {$CellContext`thickness, $CellContext`colorShear, 
               
               Arrow[{{-0.6, -0.5}, {-0.6, -0.5 + 
                  Abs[$CellContext`\[Tau]xyxy]}}, 
                0]}]}; $CellContext`\[Tau]BottomArrow = \
{$CellContext`thickness, $CellContext`colorShear, 
             Arrowheads[Medium], 
             If[$CellContext`\[Tau]xyxy >= 0, 
              
              Arrow[{{-0.5 + $CellContext`\[Tau]xyxy, -0.6}, {-0.5, -0.6}}, 
               0], 
              
              Arrow[{{-0.5, -0.6}, {-0.5 + 
                 Abs[$CellContext`\[Tau]xyxy], -0.6}}, 
               0]]}; $CellContext`from = (-($CellContext`limit/40)) 
            1.9; $CellContext`to = -$CellContext`from; Graphics[{
             Rotate[$CellContext`r, $CellContext`\[Theta], {0, 0}], 
             If[Abs[$CellContext`\[Sigma]xx] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Sigma]xxRightArrow, \
$CellContext`\[Theta], {0, 0}], $CellContext`\[Sigma]xxRightArrowText, 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], 
                
                Rotate[$CellContext`\[Sigma]xxLeftArrow, \
$CellContext`\[Theta], {0, 0}]]}, 
              Apply[Sequence, {}]], 
             If[Abs[$CellContext`\[Sigma]yy] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Sigma]yyTopArrow, $CellContext`\[Theta], \
{0, 0}], $CellContext`\[Sigma]yyTopArrowText, 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], 
                
                Rotate[$CellContext`\[Sigma]yyBottomArrow, $CellContext`\
\[Theta], {0, 0}]]}, 
              Apply[Sequence, {}]], 
             If[Abs[$CellContext`\[Tau]xyxy] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Tau]RightArrow, $CellContext`\[Theta], {
                0, 0}], $CellContext`\[Tau]RightArrowText, 
               
               Rotate[$CellContext`\[Tau]TopArrow, $CellContext`\[Theta], {0, 
                0}], 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], {
                 
                 Rotate[$CellContext`\[Tau]LeftArrow, $CellContext`\[Theta], {
                  0, 0}], 
                 
                 Rotate[$CellContext`\[Tau]BottomArrow, \
$CellContext`\[Theta], {0, 0}]}]}, 
              Apply[Sequence, {}]], {Gray, Thin, Dashed, 
              Rotate[{
                Arrowheads[Small], 
                Arrow[{{-0.25, 0}, {0.25, 0}}]}, $CellContext`\[Theta], {0, 
               0}]}, {Gray, Thin, Dashed, 
              Rotate[{
                Arrowheads[Small], 
                Arrow[{{0, -0.25}, {0, 0.25}}]}, $CellContext`\[Theta], {0, 
               0}]}, $CellContext`rotatedAxisXText, \
$CellContext`rotatedAxisYText, {
              PointSize[0.01], 
              Point[{0, 0}]}}, Axes -> False, 
            PlotRange -> {{$CellContext`from, $CellContext`to}, \
{$CellContext`from, $CellContext`to}}, 
            ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, ImagePadding -> {{10, 10}, {10, 10}}, 
            ImageMargins -> 0, AspectRatio -> Automatic, 
            If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
                
                Range[$CellContext`from, $CellContext`to, ($CellContext`to - \
$CellContext`from)/($CellContext`gridLines 20)], 
                
                Range[$CellContext`from, $CellContext`to, ($CellContext`to - \
$CellContext`from)/($CellContext`gridLines 20)]}, GridLinesStyle -> Directive[
                Thickness[0.001], LightGray]}], Frame -> False]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->129790433],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`angleSelection$$ = 
    "slider", $CellContext`annotate$$ = True, $CellContext`gridLines$$ = 
    0.5, $CellContext`limit$$ = 30, $CellContext`maxShearPlane$$ = 
    False, $CellContext`onPositiveSideOnly$$ = True, $CellContext`plotType$$ =
     "shear stress trajectory", $CellContext`principalPlaneAngle$$ = 
    False, $CellContext`specificPlaneAngle$$ = 
    "first principal plane", $CellContext`\[Theta]$$ = 
    45, $CellContext`\[Sigma]x$$ = 14, $CellContext`\[Sigma]x1$$ = 
    15.699598555359728`, $CellContext`\[Sigma]y$$ = 
    4, $CellContext`\[Sigma]y1$$ = 
    2.300401444640272, $CellContext`\[Tau]xy$$ = 
    10, $CellContext`\[Tau]xy1$$ = -8.950719479294492, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Sigma]x$$], 14, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Sigma]y$$], 4, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Tau]xy$$], 10, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Theta]$$], 45, ""}, -360, 360, 0.1}, {{
       Hold[$CellContext`limit$$], 30, ""}, 5, 50, 0.1}, {{
       Hold[$CellContext`gridLines$$], 0.5, ""}, 0, 1, 0.1}, {
      Hold[
       Grid[{{
          Grid[{{
             Style[
              Row[{"stresses at 0", Degree}], 12], SpanFromLeft}, {
            "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
             Manipulate`Place[1], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Sigma]x$$, {3, 1}]], 11]}, {
            "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
             Manipulate`Place[2], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Sigma]y$$, {3, 1}]], 11]}, {
            "\!\(\*SubscriptBox[\(\[Tau]\), \(xy\)]\)", 
             Manipulate`Place[3], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Tau]xy$$, {3, 1}]], 11]}, {
             Style[
              Row[{
                Text[
                 TraditionalForm[
                  HoldForm[{{
                    Subscript[$CellContext`\[Sigma], $CellContext`x], 
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y]}, {
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y], 
                    Subscript[$CellContext`\[Sigma], $CellContext`y]}}]]], 
                " = ", 
                Dynamic[
                 TraditionalForm[{{
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]x$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}]}, {
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]y$$], {3, 1}]}}]]}], 11], 
             SpanFromLeft}}, Spacings -> {0.5, 0.5}, Alignment -> Center, 
           Frame -> True, FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]]}, {
          Grid[{{
             Style["select plot type", 12], SpanFromLeft}, {
             PopupMenu[
              Dynamic[$CellContext`plotType$$], {
              "stress section" -> Style["stress section", 11], "Mohr circle" -> 
               Style["Mohr circle", 11], "Mohr circle/stress section" -> 
               Style["Mohr circle/stress section", 11], 
               "normal stress trajectory" -> 
               Style["normal stress trajectory", 11], 
               "shear stress trajectory" -> 
               Style["shear stress trajectory", 11], 
               "normal/shear trajectory" -> 
               Style["normal/shear trajectory", 11]}, ImageSize -> All, 
              ContinuousAction -> False], SpanFromLeft}, {
             Row[{
               Style["annotate", 12], 
               Spacer[1], 
               Checkbox[
                Dynamic[$CellContext`annotate$$], Enabled -> Dynamic[
                  
                  Or[$CellContext`plotType$$ == 
                   "stress section", $CellContext`plotType$$ == 
                   "Mohr circle/stress section"]]]}], 
             Row[{
               Style[
                
                Column[{"display stresses on", "positive sides only"}, 
                 Alignment -> Left], 11], 
               Spacer[1], 
               Checkbox[
                Dynamic[$CellContext`onPositiveSideOnly$$], Enabled -> Dynamic[
                  
                  Or[$CellContext`plotType$$ == 
                   "stress section", $CellContext`plotType$$ == 
                   "Mohr circle/stress section"]]]}], SpanFromLeft}}, 
           Spacings -> {0.5, 0.5}, Alignment -> Center, Frame -> True, 
           FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]], SpanFromLeft}, {
          Grid[{{
             Grid[{{
                Row[{
                  Style["rotate to new angle", 12]}], SpanFromLeft}, {
                RadioButtonBar[
                 Dynamic[$CellContext`angleSelection$$], {
                 "slider" -> "", "specific plane" -> ""}, Appearance -> 
                 "Vertical", Enabled -> Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section", $CellContext`plotType$$ == 
                    "Mohr circle"]]], 
                Grid[{{
                   Row[{
                    Manipulate`Place[4], 
                    Spacer[4], 
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt1[$CellContext`\[Theta]$$, {4, 1}]], 
                    Degree}], 11]}], 
                   Button[
                    Row[{"0", Degree}], $CellContext`\[Theta]$$ = 0, 
                    Appearance -> "Palette", Background -> 
                    RGBColor[0.87, 0.94, 1], ImageSize -> {25, 18}]}, {
                   Row[{
                    PopupMenu[
                    
                    Dynamic[$CellContext`specificPlaneAngle$$, \
{$CellContext`specificPlaneAngle$$ = #; $CellContext`\[Theta]$$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]}& \
], {"first principal plane" -> Style["first principal plane", 11], 
                    "second principal plane" -> 
                    Style["second principal plane", 11], 
                    "first maximum shear plane" -> 
                    Style["first shear plane", 11], 
                    "second maximum shear plane" -> 
                    Style["second shear plane", 11]}, ImageSize -> All, 
                    Enabled -> Dynamic[
                    And[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"], \
$CellContext`angleSelection$$ == "specific plane"]]]}], SpanFromLeft}}]}}, 
              Spacings -> {0.15, 0.5}, Alignment -> Center, Frame -> None]}, {
             Style[
              Row[{
                Text[
                 Style[
                  TraditionalForm[
                   HoldForm[{{
                    Subscript[
                    Derivative[1][$CellContext`\[Sigma]], $CellContext`x], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, \
$CellContext`y]}, {
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, $CellContext`y], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Sigma]], $CellContext`y]}}]]]], " = ", 
                Dynamic[
                 TraditionalForm[{{
                    $CellContext`padIt1[$CellContext`\[Sigma]x1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}]}, {
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Sigma]y1$$, {3, 
                    1}]}}]]}], 11]}}, Spacings -> {0.5, 0.5}, Alignment -> 
           Center, Frame -> True, FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]]}, {
          Grid[{{
             Grid[{{
                Style["zoom", 12], 
                Spacer[13], 
                Manipulate`Place[5], 
                Spacer[12]}, {"", 
                Style[
                 Row[{"in", 
                   Spacer[75], "out"}], 11], SpanFromLeft}}, 
              Spacings -> {0.1, 0.1}, Alignment -> Center, Frame -> True, 
              FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]]}, {
             Grid[{{
                Style["gridlines", 12], Manipulate`Place[6] Spacer[8]}, {"", 
                Style[
                 Row[{"less", 
                   Spacer[70], "more"}], 11]}}, Spacings -> {0.1, 0.1}, 
              Alignment -> Center, Frame -> True, FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]]}}, Spacings -> {0.1, 0.5}, Alignment -> Left,
            Frame -> None], SpanFromLeft}}, Spacings -> {0.2, 1.4}, Alignment -> 
        Center]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`annotate$$], True}, 0}, {{
       Hold[$CellContext`plotType$$], "shear stress trajectory"}, 0}, {{
       Hold[$CellContext`onPositiveSideOnly$$], True}, 0}, {{
       Hold[$CellContext`principalPlaneAngle$$], False}, 0}, {{
       Hold[$CellContext`maxShearPlane$$], False}, 0}, {{
       Hold[$CellContext`specificPlaneAngle$$], "first principal plane"}, 
      0}, {{
       Hold[$CellContext`angleSelection$$], "slider"}, 0}, {{
       Hold[$CellContext`\[Sigma]x1$$], 15.699598555359728`}, 0}, {{
       Hold[$CellContext`\[Sigma]y1$$], 2.300401444640272}, 0}, {{
       Hold[$CellContext`\[Tau]xy1$$], -8.950719479294492}, 0}}, 
    Typeset`size$$ = {425., {209., 216.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`\[Sigma]x$2715$$ = 0, $CellContext`\[Sigma]y$2716$$ = 
    0, $CellContext`\[Tau]xy$2717$$ = 0, $CellContext`\[Theta]$2718$$ = 
    0, $CellContext`limit$2719$$ = 0, $CellContext`gridLines$2720$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`angleSelection$$ = 
        "slider", $CellContext`annotate$$ = True, $CellContext`gridLines$$ = 
        0.5, $CellContext`limit$$ = 30, $CellContext`maxShearPlane$$ = 
        False, $CellContext`onPositiveSideOnly$$ = 
        True, $CellContext`plotType$$ = 
        "shear stress trajectory", $CellContext`principalPlaneAngle$$ = 
        False, $CellContext`specificPlaneAngle$$ = 
        "first principal plane", $CellContext`\[Theta]$$ = 
        45, $CellContext`\[Sigma]x$$ = 14, $CellContext`\[Sigma]x1$$ = 
        15.699598555359728`, $CellContext`\[Sigma]y$$ = 
        4, $CellContext`\[Sigma]y1$$ = 
        2.300401444640272, $CellContext`\[Tau]xy$$ = 
        10, $CellContext`\[Tau]xy1$$ = -8.950719479294492}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]x$2715$$, 0], 
        Hold[$CellContext`\[Sigma]y$$, $CellContext`\[Sigma]y$2716$$, 0], 
        Hold[$CellContext`\[Tau]xy$$, $CellContext`\[Tau]xy$2717$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$2718$$, 0], 
        Hold[$CellContext`limit$$, $CellContext`limit$2719$$, 0], 
        Hold[$CellContext`gridLines$$, $CellContext`gridLines$2720$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`z$}, $CellContext`z$ = $CellContext`\[Theta]$$ (Pi/
           180); If[
          
          Or[$CellContext`plotType$$ == 
           "stress section", $CellContext`plotType$$ == 
           "Mohr circle/stress section", $CellContext`plotType$$ == 
           "Mohr circle"], 
          
          If[$CellContext`angleSelection$$ == 
           "specific plane", $CellContext`z$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]; \
$CellContext`\[Theta]$$ = $CellContext`z$ (180./
              Pi)]]; {$CellContext`\[Sigma]x1$$, $CellContext`\[Sigma]y1$$, \
$CellContext`\[Tau]xy1$$} = $CellContext`rotationStress[
           N[$CellContext`\[Sigma]x$$], 
           N[$CellContext`\[Sigma]y$$], 
           N[$CellContext`\[Tau]xy$$], 
           N[$CellContext`\[Theta]$$]]; Text[
          $CellContext`makeDiagrams[
           N[$CellContext`\[Sigma]x$$], 
           N[$CellContext`\[Sigma]y$$], 
           
           N[$CellContext`\[Tau]xy$$], $CellContext`z$, \
$CellContext`annotate$$, $CellContext`onPositiveSideOnly$$, \
$CellContext`plotType$$, $CellContext`limit$$, $CellContext`gridLines$$]]], 
      "Specifications" :> {{{$CellContext`\[Sigma]x$$, 14, ""}, -20, 20, 0.1, 
         ImageSize -> Tiny, ControlPlacement -> 
         1}, {{$CellContext`\[Sigma]y$$, 4, ""}, -20, 20, 0.1, ImageSize -> 
         Tiny, ControlPlacement -> 
         2}, {{$CellContext`\[Tau]xy$$, 10, ""}, -20, 20, 0.1, ImageSize -> 
         Tiny, ControlPlacement -> 
         3}, {{$CellContext`\[Theta]$$, 45, ""}, -360, 360, 0.1, ImageSize -> 
         Tiny, Enabled -> Dynamic[
           And[
            
            Or[$CellContext`plotType$$ == 
             "stress section", $CellContext`plotType$$ == 
             "Mohr circle/stress section", $CellContext`plotType$$ == 
             "Mohr circle"], $CellContext`angleSelection$$ == "slider"]], 
         ControlPlacement -> 4}, {{$CellContext`limit$$, 30, ""}, 5, 50, 0.1, 
         ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`gridLines$$, 0.5, ""}, 0, 1, 0.1, ImageSize -> 
         Small, ControlPlacement -> 6}, 
        Grid[{{
           Grid[{{
              Style[
               Row[{"stresses at 0", Degree}], 12], SpanFromLeft}, {
             "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
              Manipulate`Place[1], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Sigma]x$$, {3, 1}]], 
               11]}, {"\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
              Manipulate`Place[2], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Sigma]y$$, {3, 1}]], 
               11]}, {"\!\(\*SubscriptBox[\(\[Tau]\), \(xy\)]\)", 
              Manipulate`Place[3], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Tau]xy$$, {3, 1}]], 11]}, {
              Style[
               Row[{
                 Text[
                  TraditionalForm[
                   HoldForm[{{
                    Subscript[$CellContext`\[Sigma], $CellContext`x], 
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y]}, {
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y], 
                    Subscript[$CellContext`\[Sigma], $CellContext`y]}}]]], 
                 " = ", 
                 Dynamic[
                  TraditionalForm[{{
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]x$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}]}, {
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]y$$], {3, 1}]}}]]}], 11], 
              SpanFromLeft}}, Spacings -> {0.5, 0.5}, Alignment -> Center, 
            Frame -> True, FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]]}, {
           Grid[{{
              Style["select plot type", 12], SpanFromLeft}, {
              PopupMenu[
               Dynamic[$CellContext`plotType$$], {
               "stress section" -> Style["stress section", 11], "Mohr circle" -> 
                Style["Mohr circle", 11], "Mohr circle/stress section" -> 
                Style["Mohr circle/stress section", 11], 
                "normal stress trajectory" -> 
                Style["normal stress trajectory", 11], 
                "shear stress trajectory" -> 
                Style["shear stress trajectory", 11], 
                "normal/shear trajectory" -> 
                Style["normal/shear trajectory", 11]}, ImageSize -> All, 
               ContinuousAction -> False], SpanFromLeft}, {
              Row[{
                Style["annotate", 12], 
                Spacer[1], 
                Checkbox[
                 Dynamic[$CellContext`annotate$$], Enabled -> Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"]]]}], 
              Row[{
                Style[
                 
                 Column[{"display stresses on", "positive sides only"}, 
                  Alignment -> Left], 11], 
                Spacer[1], 
                Checkbox[
                 Dynamic[$CellContext`onPositiveSideOnly$$], Enabled -> 
                 Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"]]]}], SpanFromLeft}}, 
            Spacings -> {0.5, 0.5}, Alignment -> Center, Frame -> True, 
            FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]], SpanFromLeft}, {
           Grid[{{
              Grid[{{
                 Row[{
                   Style["rotate to new angle", 12]}], SpanFromLeft}, {
                 RadioButtonBar[
                  Dynamic[$CellContext`angleSelection$$], {
                  "slider" -> "", "specific plane" -> ""}, Appearance -> 
                  "Vertical", Enabled -> Dynamic[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section", $CellContext`plotType$$ == 
                    "Mohr circle"]]], 
                 Grid[{{
                    Row[{
                    Manipulate`Place[4], 
                    Spacer[4], 
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt1[$CellContext`\[Theta]$$, {4, 1}]], 
                    Degree}], 11]}], 
                    Button[
                    Row[{"0", Degree}], $CellContext`\[Theta]$$ = 0, 
                    Appearance -> "Palette", Background -> 
                    RGBColor[0.87, 0.94, 1], ImageSize -> {25, 18}]}, {
                    Row[{
                    PopupMenu[
                    
                    Dynamic[$CellContext`specificPlaneAngle$$, \
{$CellContext`specificPlaneAngle$$ = #; $CellContext`\[Theta]$$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]}& \
], {"first principal plane" -> Style["first principal plane", 11], 
                    "second principal plane" -> 
                    Style["second principal plane", 11], 
                    "first maximum shear plane" -> 
                    Style["first shear plane", 11], 
                    "second maximum shear plane" -> 
                    Style["second shear plane", 11]}, ImageSize -> All, 
                    Enabled -> Dynamic[
                    And[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"], \
$CellContext`angleSelection$$ == "specific plane"]]]}], SpanFromLeft}}]}}, 
               Spacings -> {0.15, 0.5}, Alignment -> Center, Frame -> None]}, {
              Style[
               Row[{
                 Text[
                  Style[
                   TraditionalForm[
                    HoldForm[{{
                    Subscript[
                    Derivative[1][$CellContext`\[Sigma]], $CellContext`x], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, \
$CellContext`y]}, {
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, $CellContext`y], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Sigma]], $CellContext`y]}}]]]], " = ", 
                 Dynamic[
                  TraditionalForm[{{
                    $CellContext`padIt1[$CellContext`\[Sigma]x1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}]}, {
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Sigma]y1$$, {3, 
                    1}]}}]]}], 11]}}, Spacings -> {0.5, 0.5}, Alignment -> 
            Center, Frame -> True, FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]]}, {
           Grid[{{
              Grid[{{
                 Style["zoom", 12], 
                 Spacer[13], 
                 Manipulate`Place[5], 
                 Spacer[12]}, {"", 
                 Style[
                  Row[{"in", 
                    Spacer[75], "out"}], 11], SpanFromLeft}}, 
               Spacings -> {0.1, 0.1}, Alignment -> Center, Frame -> True, 
               FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}, {
              Grid[{{
                 Style["gridlines", 12], Manipulate`Place[6] Spacer[8]}, {"", 
                 Style[
                  Row[{"less", 
                    Spacer[70], "more"}], 11]}}, Spacings -> {0.1, 0.1}, 
               Alignment -> Center, Frame -> True, FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}}, Spacings -> {0.1, 0.5}, Alignment -> 
            Left, Frame -> None], SpanFromLeft}}, Spacings -> {0.2, 1.4}, 
         Alignment -> Center], {{$CellContext`annotate$$, True}, 0, 
         ControlType -> 
         None}, {{$CellContext`plotType$$, "shear stress trajectory"}, 0, 
         ControlType -> None}, {{$CellContext`onPositiveSideOnly$$, True}, 0, 
         ControlType -> None}, {{$CellContext`principalPlaneAngle$$, False}, 
         0, ControlType -> None}, {{$CellContext`maxShearPlane$$, False}, 0, 
         ControlType -> 
         None}, {{$CellContext`specificPlaneAngle$$, "first principal plane"},
          0, ControlType -> None}, {{$CellContext`angleSelection$$, "slider"},
          0, ControlType -> 
         None}, {{$CellContext`\[Sigma]x1$$, 15.699598555359728`}, 0, 
         ControlType -> 
         None}, {{$CellContext`\[Sigma]y1$$, 2.300401444640272}, 0, 
         ControlType -> 
         None}, {{$CellContext`\[Tau]xy1$$, -8.950719479294492}, 0, 
         ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, SynchronousUpdating -> False, 
        SynchronousInitialization -> False, ContinuousAction -> True, 
        Alignment -> Center, ImageMargins -> 0, FrameMargins -> 0, Paneled -> 
        True, Frame -> False, AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{654., {239., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`contentSizeW = 
        425; $CellContext`contentSizeH = 425; $CellContext`padIt2[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[List]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"", ""}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt2[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[Integer]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"", ""}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt2s[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[Integer]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"-", "+"}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt1[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[List]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"-", "+"}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`integerStrictPositive = And[
          IntegerQ[#], # > 0]& ; $CellContext`integerPositive = And[
          IntegerQ[#], # >= 0]& ; $CellContext`numericStrictPositive = And[
          Element[#, Reals], # > 0]& ; $CellContext`numericPositive = And[
          Element[#, Reals], # >= 0]& ; $CellContext`numericStrictNegative = 
        And[
          Element[#, Reals], # < 0]& ; $CellContext`numericNegative = And[
          Element[#, Reals], # <= 0]& ; $CellContext`bool = 
        Element[#, Booleans]& ; $CellContext`numeric = 
        Element[#, Reals]& ; $CellContext`integer = 
        Element[#, Integers]& ; $CellContext`makeDiagrams[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`annotate, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`onPositiveSideOnly, 
            Blank[]], $CellContext`bool], 
          Pattern[$CellContext`plotType, 
           Blank[String]], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := Module[{}, 
          Which[$CellContext`plotType == "stress section", 
           $CellContext`make2DStressDiagram[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta], \
$CellContext`annotate, $CellContext`onPositiveSideOnly, $CellContext`limit, \
$CellContext`gridLines, {$CellContext`contentSizeW, \
$CellContext`contentSizeH}], $CellContext`plotType == "Mohr circle", 
           $CellContext`makeMohrCircle[$CellContext`\[Theta], $CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines, {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, 
            $CellContext`makeMohrCircleTitle[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]], $CellContext`plotType == 
           "Mohr circle/stress section", 
           Grid[{{
              $CellContext`makeMohrCircleTitle[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], SpanFromLeft}, {
              $CellContext`make2DStressDiagram[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta], \
$CellContext`annotate, $CellContext`onPositiveSideOnly, $CellContext`limit, \
$CellContext`gridLines, {
               0.5 $CellContext`contentSizeW, 
                0.87 $CellContext`contentSizeH}], 
              $CellContext`makeMohrCircle[$CellContext`\[Theta], \
$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, \
$CellContext`limit, $CellContext`gridLines, {
               0.499 $CellContext`contentSizeW, 
                0.87 $CellContext`contentSizeH}, {}]}}, 
            Spacings -> {0, 0}], $CellContext`plotType == 
           "normal stress trajectory", 
           $CellContext`makeNormalStressPolarPlot[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines], $CellContext`plotType == "shear stress trajectory", 
           $CellContext`makeShearStressPolarPlot[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines], $CellContext`plotType == "normal/shear trajectory", 
           $CellContext`makeShearAndNormalStressPolarPlot[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines]]]; $CellContext`getAngleAtSpecificPlane[
          Pattern[$CellContext`specificPlaneAngle, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]x, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]y, 
           Blank[]], 
          Pattern[$CellContext`\[Tau]xy, 
           Blank[]]] := N[
          Which[$CellContext`specificPlaneAngle == "first principal plane", 
           Part[
            $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 
            2], $CellContext`specificPlaneAngle == "second principal plane", 
           Part[
            $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 2, 
            2], $CellContext`specificPlaneAngle == 
           "first maximum shear plane", Part[
             $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 2] + 
           Pi/4, $CellContext`specificPlaneAngle == 
           "second maximum shear plane", Part[
             $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 2] + (3/4) 
            Pi]]; $CellContext`principalStresses[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`\[Theta]p, $CellContext`\[Sigma], $CellContext`\
\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1max, $CellContext`r, \
$CellContext`c, $CellContext`tmp, $CellContext`\[Theta]1, $CellContext`\
\[Theta]2}, $CellContext`r = ((($CellContext`\[Sigma]x - \
$CellContext`\[Sigma]y)/2)^2 + $CellContext`\[Tau]xy^2)^
            Rational[
             1, 2]; $CellContext`c = ($CellContext`\[Sigma]x + $CellContext`\
\[Sigma]y)/
            2; {$CellContext`\[Sigma]1, $CellContext`\[Sigma]2} = \
{$CellContext`c + $CellContext`r, $CellContext`c - $CellContext`r}; 
          If[Abs[$CellContext`\[Sigma]2] > 
            Abs[$CellContext`\[Sigma]1], $CellContext`tmp = $CellContext`\
\[Sigma]1; $CellContext`\[Sigma]1 = $CellContext`\[Sigma]2; $CellContext`\
\[Sigma]2 = $CellContext`tmp]; 
          If[Abs[$CellContext`\[Sigma]x - $CellContext`\[Sigma]y] <= \
$MachineEpsilon, $CellContext`\[Theta]p = Pi/4, $CellContext`\[Theta]p = 
            ArcTan[2 (Abs[$CellContext`\[Tau]xy]/
                Abs[$CellContext`\[Sigma]x - $CellContext`\[Sigma]y])]/2]; 
          If[$CellContext`\[Sigma]1 > $CellContext`\[Sigma]2, 
            If[$CellContext`\[Tau]xy > 0, 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {$CellContext`\[Theta]p, -(
                 Pi/2 - $CellContext`\[Theta]p)}, {$CellContext`\[Theta]1, \
$CellContext`\[Theta]2} = {
               Pi/2 - $CellContext`\[Theta]p, -$CellContext`\[Theta]p}], 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {-$CellContext`\[Theta]p, 
                Pi/2 - $CellContext`\[Theta]p}, {$CellContext`\[Theta]1, \
$CellContext`\[Theta]2} = {-(
                 Pi/2 - $CellContext`\[Theta]p), $CellContext`\[Theta]p}]], 
            If[$CellContext`\[Tau]xy > 0, 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {-(
                 Pi/2 - $CellContext`\[Theta]p), $CellContext`\[Theta]p}, \
{$CellContext`\[Theta]1, $CellContext`\[Theta]2} = {-$CellContext`\[Theta]p, 
                Pi/2 - $CellContext`\[Theta]p}], 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {
               Pi/2 - $CellContext`\[Theta]p, -$CellContext`\[Theta]p}, \
{$CellContext`\[Theta]1, $CellContext`\[Theta]2} = {$CellContext`\[Theta]p, -(
                 Pi/2 - $CellContext`\[Theta]p)}]]]; \
{{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, {$CellContext`\[Sigma]2, \
$CellContext`\[Theta]2}}]; $CellContext`maxAndMinShearStress[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`r}, $CellContext`r = 
           Sqrt[(($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)/
               2)^2 + $CellContext`\[Tau]xy^2]; {$CellContext`r, \
-$CellContext`r}]; $CellContext`plot[
          Pattern[$CellContext`data, 
           Blank[List]], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], 
          Pattern[$CellContext`color, 
           Blank[]]] := 
        ListPolarPlot[$CellContext`data, Joined -> True, AxesOrigin -> {0, 0},
           ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, ImagePadding -> {{20, 10}, {20, 5}}, ImageMargins -> 
          0, AspectRatio -> 1, Frame -> True, 
          If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
              
              Range[-$CellContext`limit, $CellContext`limit, (
                2 $CellContext`limit)/($CellContext`gridLines 20)], 
              
              Range[-$CellContext`limit, $CellContext`limit, (
                2 $CellContext`limit)/($CellContext`gridLines 20)]}, 
            GridLinesStyle -> Directive[
              Thickness[0.001], LightGray]}], 
          PlotRange -> {{-$CellContext`limit, $CellContext`limit}, \
{-$CellContext`limit, $CellContext`limit}}, 
          PlotStyle -> $CellContext`color]; $CellContext`makeArrowForAngle[
          Pattern[$CellContext`r, 
           Blank[]], 
          Pattern[$CellContext`center, 
           Blank[]], {{
            Pattern[$CellContext`\[Sigma]1, 
             Blank[]], 
            Pattern[$CellContext`\[Theta]1, 
             Blank[]]}, {
            Pattern[$CellContext`\[Sigma]2, 
             Blank[]], 
            Pattern[$CellContext`\[Theta]2, 
             Blank[]]}}, 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`phi, $CellContext`tbl, $CellContext`align}, 
          If[$CellContext`\[Sigma]1 > $CellContext`\[Sigma]2, 
            
            If[$CellContext`\[Tau]xy > 
             0, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, (-2) \
$CellContext`\[Theta]1, 0, Pi/100}]; $CellContext`align = {-1, 
               1}, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, (-2) \
$CellContext`\[Theta]1, 0, (-Pi)/100}]; $CellContext`align = {-1, -1}], 
            
            If[$CellContext`\[Tau]xy > 
             0, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, -(Pi + 
                  2 $CellContext`\[Theta]1), -Pi, (-Pi)/
                 100}]; $CellContext`align = {1, 1}, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, Pi - 
                 2 $CellContext`\[Theta]1, Pi, Pi/
                 100}]; $CellContext`align = {1, -1}]]; {
            Text["2\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
             If[Length[$CellContext`tbl] > 1, 
              Part[$CellContext`tbl, 
               Round[Length[$CellContext`tbl]/2]], 
              
              First[$CellContext`tbl]], $CellContext`align], \
$CellContext`tbl}]; $CellContext`makeMohrCircleTitle[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\
\[Theta]1, $CellContext`\[Theta]2, $CellContext`r, $CellContext`center, \
$CellContext`ptA}, {{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`center = \
{($CellContext`\[Sigma]1 + $CellContext`\[Sigma]2)/2, 
             0}; $CellContext`ptA = {$CellContext`\[Sigma]x, -$CellContext`\
\[Tau]xy}; $CellContext`r = 
           EuclideanDistance[$CellContext`center, $CellContext`ptA]; Grid[{
             Map[TraditionalForm[
               Style[#]]& , {
              "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
               "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
               "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
               "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
               "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)"}], {
              $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
              PlusMinus[
               $CellContext`padIt2[$CellContext`r, {4, 1}]], 
              Row[{
                $CellContext`padIt1[$CellContext`\[Theta]1 (180/Pi), {4, 1}], 
                Degree}], 
              Row[{
                $CellContext`padIt1[$CellContext`\[Theta]2 (180/Pi), {4, 1}], 
                Degree}]}}, Spacings -> {0.5, 1}, Frame -> All, FrameStyle -> 
            Directive[Thin]]]; $CellContext`getRadiusOfCircle[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Sqrt[(($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)/
            2)^2 + $CellContext`\[Tau]xy^2]; $CellContext`rotationStress[
          Pattern[$CellContext`\[Sigma]x, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]y, 
           Blank[]], 
          Pattern[$CellContext`\[Tau]xy, 
           Blank[]], 
          Pattern[$CellContext`\[Theta], 
           Blank[]]] := 
        Module[{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy, \
$CellContext`\[Tau]}, $CellContext`\[Sigma]xx = (1/
              2) ($CellContext`\[Sigma]x + $CellContext`\[Sigma]y) + ((1/
               2) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
             Cos[2 $CellContext`\[Theta]] + $CellContext`\[Tau]xy 
             Sin[2 $CellContext`\[Theta]]; $CellContext`\[Tau] = ((-(1/
                2)) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
             Sin[2 $CellContext`\[Theta]] + $CellContext`\[Tau]xy 
             Cos[2 $CellContext`\[Theta]]; $CellContext`\[Sigma]yy = (1/
              2) ($CellContext`\[Sigma]x + $CellContext`\[Sigma]y) - ((1/
              2) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
            Cos[2 $CellContext`\[Theta]] - $CellContext`\[Tau]xy 
            Sin[2 $CellContext`\[Theta]]; {$CellContext`\[Sigma]xx, \
$CellContext`\[Sigma]yy, $CellContext`\[Tau]}]; $CellContext`makeMohrCircle[
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], {
           PatternTest[
            Pattern[$CellContext`contentSizeW, 
             Blank[]], $CellContext`numericStrictPositive], 
           PatternTest[
            Pattern[$CellContext`contentSizeH, 
             Blank[]], $CellContext`numericStrictPositive]}, 
          Pattern[$CellContext`plotTitle, 
           Blank[]]] := 
        Module[{$CellContext`ptA, $CellContext`ptB, $CellContext`center, \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Theta]1, \
$CellContext`\[Theta]2, $CellContext`r, $CellContext`z, $CellContext`ptD1, \
$CellContext`ptD2, $CellContext`\[Sigma]x1, $CellContext`\[Tau]xy1, \
$CellContext`\[Sigma]y1}, {{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`center = \
{($CellContext`\[Sigma]1 + $CellContext`\[Sigma]2)/2, 
             0}; $CellContext`ptA = {$CellContext`\[Sigma]x, -$CellContext`\
\[Tau]xy}; $CellContext`r = $CellContext`getRadiusOfCircle[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\
\[Sigma]x1, $CellContext`\[Sigma]y1, $CellContext`\[Tau]xy1} = \
$CellContext`rotationStress[$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, \
$CellContext`\[Tau]xy, $CellContext`\[Theta]]; $CellContext`z = $CellContext`\
\[Sigma]x - First[$CellContext`center]; $CellContext`ptB = {
            Part[$CellContext`ptA, 1] - 2 $CellContext`z, -
             Part[$CellContext`ptA, 
               2]}; $CellContext`ptD1 = {$CellContext`\[Sigma]x1, \
-$CellContext`\[Tau]xy1}; $CellContext`ptD2 = {$CellContext`\[Sigma]y1, \
$CellContext`\[Tau]xy1}; Graphics[{
             Circle[$CellContext`center, $CellContext`r], {Black, 
              PointSize[0.02], 
              Point[$CellContext`ptA]}, {Black, 
              PointSize[0.02], 
              Point[$CellContext`center]}, {Black, 
              PointSize[0.02], 
              Point[$CellContext`ptB]}, {Dashed, 
              Line[{$CellContext`ptA, $CellContext`ptB}]}, 
             Circle[$CellContext`ptD1, 0.8], {Red, Dashed, 
              Line[{$CellContext`ptD1, $CellContext`ptD2}]}, 
             Circle[$CellContext`ptD2, 0.8], 
             Text[
              Row[{"(", 
                $CellContext`padIt1[$CellContext`\[Sigma]x1, {4, 1}], ",", 
                $CellContext`padIt1[$CellContext`\[Tau]xy1, {4, 1}], 
                ")"}], $CellContext`ptD1, 
              
              If[$CellContext`\[Sigma]x1 > 
               Part[$CellContext`center, 1], {-1.2, -1.2}, {1.2, -1.2}]], 
             Text[
              Row[{"(", 
                $CellContext`padIt1[$CellContext`\[Sigma]y1, {4, 1}], ",", 
                $CellContext`padIt1[$CellContext`\[Tau]xy1, {4, 1}], 
                ")"}], $CellContext`ptD2, 
              
              If[$CellContext`\[Sigma]y1 > 
               Part[$CellContext`center, 1], {-1.2, -1.2}, {1.2, -1.2}]], {
             Red, 
              PointSize[0.02], 
              Point[{$CellContext`\[Sigma]1, 0}]}, {
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], {$CellContext`\[Sigma]1, 0}, {-1.5, 1.5}]}, {Red, 
              PointSize[0.02], 
              Point[{$CellContext`\[Sigma]2, 0}]}, {
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], {$CellContext`\[Sigma]2, 0}, {1.2, 1.3}]}, {Blue, 
              PointSize[0.02], 
              Point[{
                Part[$CellContext`center, 1], $CellContext`r}]}, {
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 12]], {
                Part[$CellContext`center, 1], $CellContext`r}, {0, -1.5}]}, {
             Blue, 
              PointSize[0.02], 
              Point[{
                Part[$CellContext`center, 1], -$CellContext`r}]}, {
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 12]], {
                Part[$CellContext`center, 1], -$CellContext`r}, {0, 1.5}]}, {
              Text[
               Style["tension", 11], {$CellContext`limit, 0}, {1, 3}]}, {
              Text[
               Style["compression", 11], {-$CellContext`limit, 0}, {-1, 3}]}}, 
            If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
                
                Range[-$CellContext`limit, $CellContext`limit, (
                  2 $CellContext`limit)/($CellContext`gridLines 20)], 
                
                Range[-$CellContext`limit, $CellContext`limit, (
                  2 $CellContext`limit)/($CellContext`gridLines 20)]}, 
              GridLinesStyle -> Directive[
                Thickness[0.001], LightGray]}], 
            PlotRange -> {{-$CellContext`limit, $CellContext`limit}, \
{-$CellContext`limit, $CellContext`limit}}, Axes -> True, 
            AxesOrigin -> {0, 0}, TicksStyle -> 8, PlotLabel -> 
            If[$CellContext`plotTitle === {}, "", $CellContext`plotTitle], 
            ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, 
            ImagePadding -> {{20, 10}, {20, 
             5}}]]; $CellContext`makeShearAndNormalStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, \
$CellContext`\[Sigma]2Abs, $CellContext`\[Theta]p1, $CellContext`\[Theta]p2, \
$CellContext`p1, $CellContext`p2, $CellContext`p3, $CellContext`p4, \
$CellContext`plotTitle, $CellContext`coord1, $CellContext`coord2, \
$CellContext`\[Tau]1, $CellContext`\[Tau]2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                1]}], $CellContext`limit, $CellContext`gridLines, 
             Red]; $CellContext`coord1 = {
            Abs[$CellContext`\[Sigma]1] Cos[$CellContext`\[Theta]p1], 
             Abs[$CellContext`\[Sigma]1] 
             Sin[$CellContext`\[Theta]p1]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Sigma]2] Cos[$CellContext`\[Theta]p2], 
             Abs[$CellContext`\[Sigma]2] 
             Sin[$CellContext`\[Theta]p2]}; $CellContext`p2 = Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Sigma]x, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 12]], {$CellContext`\[Sigma]x, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Sigma]y}]}, 
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 12]], {
               0, $CellContext`\[Sigma]y}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord2]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], $CellContext`coord2, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 
                    2]}}]}}]; {$CellContext`\[Tau]1, $CellContext`\[Tau]2} = \
$CellContext`maxAndMinShearStress[$CellContext`\[Sigma]x, $CellContext`\
\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p3 = $CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                3]}], $CellContext`limit, $CellContext`gridLines, 
             Blue]; $CellContext`coord1 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p1 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p1 + Pi/4]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p2 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p2 + Pi/4]}; $CellContext`p4 = 
           Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Tau]xy, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 12]], {$CellContext`\[Tau]xy, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Tau]xy}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", 
                 12]], {0, $CellContext`\[Tau]xy}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {Dashed, Thin, 
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Style[
             
             Grid[{{"normal (red) and shear (blue) polar (stress vs. angle) \
trajectory", SpanFromLeft}, 
               Map[TraditionalForm[
                 Style[#]]& , {
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)"}], {
                $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
                Row[{
                  $CellContext`padIt1[$CellContext`\[Theta]p1 (180/Pi), {4, 
                   1}], Degree}], 
                $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
                Row[{
                  $CellContext`padIt1[$CellContext`\[Theta]p2 (180/Pi), {4, 
                   1}], Degree}], 
                PlusMinus[
                 $CellContext`padIt2[$CellContext`\[Tau]1, {4, 1}]]}}, 
              Spacings -> {0.4, 1.1}, Frame -> All, FrameStyle -> 
              Directive[Thin]], 12]; 
          Show[$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`makeNormalStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, \
$CellContext`\[Sigma]2Abs, $CellContext`\[Theta]p1, $CellContext`\[Theta]p2, \
$CellContext`p1, $CellContext`p2, $CellContext`plotTitle, \
$CellContext`coord1, $CellContext`coord2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                1]}], $CellContext`limit, $CellContext`gridLines, 
             Red]; $CellContext`coord1 = {
            Abs[$CellContext`\[Sigma]1] Cos[$CellContext`\[Theta]p1], 
             Abs[$CellContext`\[Sigma]1] 
             Sin[$CellContext`\[Theta]p1]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Sigma]2] Cos[$CellContext`\[Theta]p2], 
             Abs[$CellContext`\[Sigma]2] 
             Sin[$CellContext`\[Theta]p2]}; $CellContext`p2 = Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Sigma]x, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 12]], {$CellContext`\[Sigma]x, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Sigma]y}]}, 
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 12]], {
               0, $CellContext`\[Sigma]y}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord2]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], $CellContext`coord2, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Grid[{{"normal stress polar (stress vs. angle) trajectory", 
               SpanFromLeft}, 
              Map[TraditionalForm[
                Style[#]]& , {
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)"}], {
               $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
               Row[{
                 $CellContext`padIt1[$CellContext`\[Theta]p1 (180/Pi), {4, 
                  1}], Degree}], 
               $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
               Row[{
                 $CellContext`padIt1[$CellContext`\[Theta]p2 (180/Pi), {4, 
                  1}], Degree}]}}, Spacings -> {0.8, 1}, Frame -> All, 
             FrameStyle -> Directive[Thin]]; 
          Show[$CellContext`p1, $CellContext`p2, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`makeShearStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Tau]1, $CellContext`\[Tau]2, \
$CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, $CellContext`\[Sigma]2Abs, \
$CellContext`\[Theta]p1, $CellContext`\[Theta]p2, $CellContext`p1, \
$CellContext`p2, $CellContext`plotTitle, $CellContext`coord1, \
$CellContext`coord2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\[Tau]1, \
$CellContext`\[Tau]2} = $CellContext`maxAndMinShearStress[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                3]}], $CellContext`limit, $CellContext`gridLines, 
             Blue]; $CellContext`coord1 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p1 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p1 + Pi/4]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p2 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p2 + Pi/4]}; $CellContext`p2 = 
           Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Tau]xy, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 12]], {$CellContext`\[Tau]xy, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Tau]xy}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", 
                 12]], {0, $CellContext`\[Tau]xy}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Grid[{{"shear stress polar (stress vs. angle) trajectory", 
               SpanFromLeft}, 
              Flatten[{
                Map[TraditionalForm[
                  Style[#]]& , {
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)",
                   "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Theta]\), \(max\)]\)"}], 
                SpanFromLeft}], {
               $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
               PlusMinus[
                $CellContext`padIt2[$CellContext`\[Tau]xy, {4, 1}]], 
               $CellContext`padIt1[$CellContext`\[Tau]1, {4, 1}], 
               Row[{
                 $CellContext`padIt1[($CellContext`\[Theta]p1 + Pi/4) (180/
                   Pi), {4, 1}], Degree, ",", 
                 $CellContext`padIt1[($CellContext`\[Theta]p1 + (3/4) Pi) (
                   180/Pi), {4, 1}], Degree}], SpanFromLeft}}, 
             Spacings -> {1, 1}, Frame -> All, FrameStyle -> Directive[Thin]]; 
          Show[$CellContext`p1, $CellContext`p2, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`make2DStressDiagram[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`annotate, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`onPositiveSideOnly, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], {
           PatternTest[
            Pattern[$CellContext`contentSizeW, 
             Blank[]], $CellContext`numericStrictPositive], 
           PatternTest[
            Pattern[$CellContext`contentSizeH, 
             Blank[]], $CellContext`numericStrictPositive]}] := 
        Module[{$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\
\[Sigma]xx, $CellContext`\[Sigma]yy, $CellContext`\[Tau]xyxy, $CellContext`r, \
$CellContext`\[Sigma]xxRightArrow, $CellContext`\[Sigma]xxLeftArrow, \
$CellContext`\[Sigma]yyTopArrow, $CellContext`\[Sigma]yyBottomArrow, \
$CellContext`\[Tau]RightArrow, $CellContext`\[Tau]LeftArrow, $CellContext`\
\[Tau]TopArrow, $CellContext`\[Tau]BottomArrow, $CellContext`\[Tau]1, \
$CellContext`\[Tau]2, $CellContext`color, $CellContext`textSize = 
           11, $CellContext`colorShear, \
$CellContext`\[Sigma]xxRightArrowText, $CellContext`\[Sigma]xxLeftArrowText, \
$CellContext`\[Sigma]yyTopArrowText, $CellContext`\[Sigma]yyBottomArrowText, \
$CellContext`\[Tau]RightArrowText, $CellContext`\[Tau]LeftArrowText, \
$CellContext`\[Tau]TopArrowText, $CellContext`\[Tau]BottomArrowText, \
$CellContext`rotationMatrix, $CellContext`coordinates, $CellContext`from, \
$CellContext`to, $CellContext`rotatedAxisXText, \
$CellContext`rotatedAxisYText, $CellContext`maxAbsoluteprincipalShearStress, \
$CellContext`thickness = Thick, $CellContext`eps = 
           10^(-9), $CellContext`\[Theta]p1, $CellContext`\[Theta]p2}, \
$CellContext`rotationMatrix = 
           RotationMatrix[-$CellContext`\[Theta]]; \
$CellContext`rotatedAxisXText = Text[
             Style["x", Italic, $CellContext`textSize], 
             
             Dot[{0.3, 
               0}, $CellContext`rotationMatrix]]; \
$CellContext`rotatedAxisYText = Text[
             Style["y", Italic, $CellContext`textSize], 
             
             Dot[{0, 0.3}, $CellContext`rotationMatrix]]; {{$CellContext`\
\[Sigma]1, $CellContext`\[Theta]p1}, {$CellContext`\[Sigma]2, $CellContext`\
\[Theta]p2}} = $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\[Tau]1, \
$CellContext`\[Tau]2} = $CellContext`maxAndMinShearStress[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; \
$CellContext`maxAbsoluteprincipalShearStress = Max[
             
             Abs[{$CellContext`\[Tau]1, $CellContext`\[Tau]2}]]; \
{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy, $CellContext`\[Tau]xyxy} = \
$CellContext`rotationStress[$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, \
$CellContext`\[Tau]xy, $CellContext`\[Theta]]; 
          If[Abs[$CellContext`\[Sigma]1] > 
            0, {$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy} = \
{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy}/
             Abs[$CellContext`\[Sigma]1]]; 
          If[$CellContext`maxAbsoluteprincipalShearStress > 
            0, $CellContext`\[Tau]xyxy = \
$CellContext`\[Tau]xyxy/$CellContext`maxAbsoluteprincipalShearStress]; \
$CellContext`color = Red; $CellContext`colorShear = 
           Blue; $CellContext`r = {White, 
             EdgeForm[{Thin, Gray}], 
             Rectangle[{-0.5, -0.5}, {0.5, 0.5}]}; 
          If[$CellContext`\[Sigma]xx >= 
            0, $CellContext`from = {0.6, 0}; $CellContext`to = {
              0.6 + $CellContext`\[Sigma]xx, 0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, 0.78, 
                  0.68] + $CellContext`\[Sigma]xx, 
                0}, $CellContext`rotationMatrix], $CellContext`from = {
              0.6 + Abs[$CellContext`\[Sigma]xx], 0}; $CellContext`to = {
              0.6, 0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, 0.78, 0.68] + 
                Abs[$CellContext`\[Sigma]xx], 
                0}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]xxRightArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]xx 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates, {0,
               0}], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates, {0, 
              0}]]; $CellContext`\[Sigma]xxRightArrow = \
{$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]xx >= 
            0, $CellContext`from = {-0.6, 
               0}; $CellContext`to = {-0.6 - $CellContext`\[Sigma]xx, 
               0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, -0.78, -0.68] - $CellContext`\
\[Sigma]xx, 0}, $CellContext`rotationMatrix], $CellContext`from = {-0.6 - 
               Abs[$CellContext`\[Sigma]xx], 0}; $CellContext`to = {-0.6, 
               0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, -0.78, -0.68] - 
                Abs[$CellContext`\[Sigma]xx], 
                0}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]xxLeftArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]xx 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]xxLeftArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]yy >= 
            0, $CellContext`from = {0, 0.6}; $CellContext`to = {
              0, 0.6 + $CellContext`\[Sigma]yy}; $CellContext`coordinates = 
             Dot[{0, If[$CellContext`annotate, 0.75, 
                  0.68] + $CellContext`\[Sigma]yy}, \
$CellContext`rotationMatrix], $CellContext`from = {
              0, 0.6 + Abs[$CellContext`\[Sigma]yy]}; $CellContext`to = {
              0, 0.6}; $CellContext`coordinates = 
             Dot[{0, If[$CellContext`annotate, 0.75, 0.68] + 
                Abs[$CellContext`\[Sigma]yy]}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]yyTopArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]yy 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]yyTopArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]yy >= 
            0, $CellContext`from = {0, -0.6}; $CellContext`to = {
              0, -0.6 - $CellContext`\[Sigma]yy}; $CellContext`coordinates = 
             Dot[{0, -0.75 - $CellContext`\[Sigma]yy}, \
$CellContext`rotationMatrix], $CellContext`from = {
              0, -0.6 - Abs[$CellContext`\[Sigma]yy]}; $CellContext`to = {
              0, -0.6}; $CellContext`coordinates = 
             Dot[{0, -0.75 - 
                Abs[$CellContext`\[Sigma]yy]}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]yyBottomArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]yy 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]yyBottomArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Tau]xyxy >= 
            0, $CellContext`from = {
              0.6, 0.5 - $CellContext`\[Tau]xyxy}; $CellContext`to = {0.6, 
              0.5}; $CellContext`coordinates = Dot[{
                If[$CellContext`annotate, 0.8, 0.7], 
                0.45}, $CellContext`rotationMatrix], $CellContext`from = {0.6,
               0.5}; $CellContext`to = {
              0.6, 0.5 - 
               Abs[$CellContext`\[Tau]xyxy]}; $CellContext`coordinates = Dot[{
                If[$CellContext`annotate, 0.8, 0.7], 
                0.45}, $CellContext`rotationMatrix]]; \
$CellContext`\[Tau]RightArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style[
                  "\!\(\*SubscriptBox[\(\[Tau]\), \
\(x\[InvisibleComma]y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Tau]xyxy \
$CellContext`maxAbsoluteprincipalShearStress, {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Tau]RightArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`colorShear, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Tau]xyxy >= 
            0, $CellContext`from = {
              0.5 - $CellContext`\[Tau]xyxy, 0.6}; $CellContext`to = {0.5, 
              0.6}; $CellContext`coordinates = 
             Dot[{0.5, 
               0.75}, $CellContext`rotationMatrix], $CellContext`from = {0.5, 
              0.6}; $CellContext`to = {
              0.5 - Abs[$CellContext`\[Tau]xyxy], 
               0.6}; $CellContext`coordinates = 
             Dot[{0.5, 
               0.75}, $CellContext`rotationMatrix]]; \
$CellContext`\[Tau]TopArrowText = Text[
             TraditionalForm[
              Style[
              "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]; \
$CellContext`\[Tau]TopArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`colorShear, 
             
             Arrow[{$CellContext`from, $CellContext`to}, 
              0]}; $CellContext`\[Tau]LeftArrow = {
             Arrowheads[Medium], 
             
             If[$CellContext`\[Tau]xyxy >= 
              0, {$CellContext`thickness, $CellContext`colorShear, 
               
               Arrow[{{-0.6, -0.5 + $CellContext`\[Tau]xyxy}, {-0.6, -0.5}}, 
                0]}, {$CellContext`thickness, $CellContext`colorShear, 
               
               Arrow[{{-0.6, -0.5}, {-0.6, -0.5 + 
                  Abs[$CellContext`\[Tau]xyxy]}}, 
                0]}]}; $CellContext`\[Tau]BottomArrow = \
{$CellContext`thickness, $CellContext`colorShear, 
             Arrowheads[Medium], 
             If[$CellContext`\[Tau]xyxy >= 0, 
              
              Arrow[{{-0.5 + $CellContext`\[Tau]xyxy, -0.6}, {-0.5, -0.6}}, 
               0], 
              
              Arrow[{{-0.5, -0.6}, {-0.5 + 
                 Abs[$CellContext`\[Tau]xyxy], -0.6}}, 
               0]]}; $CellContext`from = (-($CellContext`limit/40)) 
            1.9; $CellContext`to = -$CellContext`from; Graphics[{
             Rotate[$CellContext`r, $CellContext`\[Theta], {0, 0}], 
             If[Abs[$CellContext`\[Sigma]xx] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Sigma]xxRightArrow, \
$CellContext`\[Theta], {0, 0}], $CellContext`\[Sigma]xxRightArrowText, 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], 
                
                Rotate[$CellContext`\[Sigma]xxLeftArrow, \
$CellContext`\[Theta], {0, 0}]]}, 
              Apply[Sequence, {}]], 
             If[Abs[$CellContext`\[Sigma]yy] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Sigma]yyTopArrow, $CellContext`\[Theta], \
{0, 0}], $CellContext`\[Sigma]yyTopArrowText, 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], 
                
                Rotate[$CellContext`\[Sigma]yyBottomArrow, $CellContext`\
\[Theta], {0, 0}]]}, 
              Apply[Sequence, {}]], 
             If[Abs[$CellContext`\[Tau]xyxy] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Tau]RightArrow, $CellContext`\[Theta], {
                0, 0}], $CellContext`\[Tau]RightArrowText, 
               
               Rotate[$CellContext`\[Tau]TopArrow, $CellContext`\[Theta], {0, 
                0}], 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], {
                 
                 Rotate[$CellContext`\[Tau]LeftArrow, $CellContext`\[Theta], {
                  0, 0}], 
                 
                 Rotate[$CellContext`\[Tau]BottomArrow, \
$CellContext`\[Theta], {0, 0}]}]}, 
              Apply[Sequence, {}]], {Gray, Thin, Dashed, 
              Rotate[{
                Arrowheads[Small], 
                Arrow[{{-0.25, 0}, {0.25, 0}}]}, $CellContext`\[Theta], {0, 
               0}]}, {Gray, Thin, Dashed, 
              Rotate[{
                Arrowheads[Small], 
                Arrow[{{0, -0.25}, {0, 0.25}}]}, $CellContext`\[Theta], {0, 
               0}]}, $CellContext`rotatedAxisXText, \
$CellContext`rotatedAxisYText, {
              PointSize[0.01], 
              Point[{0, 0}]}}, Axes -> False, 
            PlotRange -> {{$CellContext`from, $CellContext`to}, \
{$CellContext`from, $CellContext`to}}, 
            ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, ImagePadding -> {{10, 10}, {10, 10}}, 
            ImageMargins -> 0, AspectRatio -> Automatic, 
            If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
                
                Range[$CellContext`from, $CellContext`to, ($CellContext`to - \
$CellContext`from)/($CellContext`gridLines 20)], 
                
                Range[$CellContext`from, $CellContext`to, ($CellContext`to - \
$CellContext`from)/($CellContext`gridLines 20)]}, GridLinesStyle -> Directive[
                Thickness[0.001], LightGray]}], Frame -> False]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->139090744],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`angleSelection$$ = 
    "slider", $CellContext`annotate$$ = True, $CellContext`gridLines$$ = 
    0.5, $CellContext`limit$$ = 30, $CellContext`maxShearPlane$$ = 
    False, $CellContext`onPositiveSideOnly$$ = True, $CellContext`plotType$$ =
     "normal/shear trajectory", $CellContext`principalPlaneAngle$$ = 
    False, $CellContext`specificPlaneAngle$$ = 
    "first principal plane", $CellContext`\[Theta]$$ = 
    45, $CellContext`\[Sigma]x$$ = 14, $CellContext`\[Sigma]x1$$ = 
    15.699598555359728`, $CellContext`\[Sigma]y$$ = 
    4, $CellContext`\[Sigma]y1$$ = 
    2.300401444640272, $CellContext`\[Tau]xy$$ = 
    10, $CellContext`\[Tau]xy1$$ = -8.950719479294492, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Sigma]x$$], 14, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Sigma]y$$], 4, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Tau]xy$$], 10, ""}, -20, 20, 0.1}, {{
       Hold[$CellContext`\[Theta]$$], 45, ""}, -360, 360, 0.1}, {{
       Hold[$CellContext`limit$$], 30, ""}, 5, 50, 0.1}, {{
       Hold[$CellContext`gridLines$$], 0.5, ""}, 0, 1, 0.1}, {
      Hold[
       Grid[{{
          Grid[{{
             Style[
              Row[{"stresses at 0", Degree}], 12], SpanFromLeft}, {
            "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
             Manipulate`Place[1], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Sigma]x$$, {3, 1}]], 11]}, {
            "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
             Manipulate`Place[2], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Sigma]y$$, {3, 1}]], 11]}, {
            "\!\(\*SubscriptBox[\(\[Tau]\), \(xy\)]\)", 
             Manipulate`Place[3], 
             Style[
              Dynamic[
               $CellContext`padIt1[$CellContext`\[Tau]xy$$, {3, 1}]], 11]}, {
             Style[
              Row[{
                Text[
                 TraditionalForm[
                  HoldForm[{{
                    Subscript[$CellContext`\[Sigma], $CellContext`x], 
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y]}, {
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y], 
                    Subscript[$CellContext`\[Sigma], $CellContext`y]}}]]], 
                " = ", 
                Dynamic[
                 TraditionalForm[{{
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]x$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}]}, {
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]y$$], {3, 1}]}}]]}], 11], 
             SpanFromLeft}}, Spacings -> {0.5, 0.5}, Alignment -> Center, 
           Frame -> True, FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]]}, {
          Grid[{{
             Style["select plot type", 12], SpanFromLeft}, {
             PopupMenu[
              Dynamic[$CellContext`plotType$$], {
              "stress section" -> Style["stress section", 11], "Mohr circle" -> 
               Style["Mohr circle", 11], "Mohr circle/stress section" -> 
               Style["Mohr circle/stress section", 11], 
               "normal stress trajectory" -> 
               Style["normal stress trajectory", 11], 
               "shear stress trajectory" -> 
               Style["shear stress trajectory", 11], 
               "normal/shear trajectory" -> 
               Style["normal/shear trajectory", 11]}, ImageSize -> All, 
              ContinuousAction -> False], SpanFromLeft}, {
             Row[{
               Style["annotate", 12], 
               Spacer[1], 
               Checkbox[
                Dynamic[$CellContext`annotate$$], Enabled -> Dynamic[
                  
                  Or[$CellContext`plotType$$ == 
                   "stress section", $CellContext`plotType$$ == 
                   "Mohr circle/stress section"]]]}], 
             Row[{
               Style[
                
                Column[{"display stresses on", "positive sides only"}, 
                 Alignment -> Left], 11], 
               Spacer[1], 
               Checkbox[
                Dynamic[$CellContext`onPositiveSideOnly$$], Enabled -> Dynamic[
                  
                  Or[$CellContext`plotType$$ == 
                   "stress section", $CellContext`plotType$$ == 
                   "Mohr circle/stress section"]]]}], SpanFromLeft}}, 
           Spacings -> {0.5, 0.5}, Alignment -> Center, Frame -> True, 
           FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]], SpanFromLeft}, {
          Grid[{{
             Grid[{{
                Row[{
                  Style["rotate to new angle", 12]}], SpanFromLeft}, {
                RadioButtonBar[
                 Dynamic[$CellContext`angleSelection$$], {
                 "slider" -> "", "specific plane" -> ""}, Appearance -> 
                 "Vertical", Enabled -> Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section", $CellContext`plotType$$ == 
                    "Mohr circle"]]], 
                Grid[{{
                   Row[{
                    Manipulate`Place[4], 
                    Spacer[4], 
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt1[$CellContext`\[Theta]$$, {4, 1}]], 
                    Degree}], 11]}], 
                   Button[
                    Row[{"0", Degree}], $CellContext`\[Theta]$$ = 0, 
                    Appearance -> "Palette", Background -> 
                    RGBColor[0.87, 0.94, 1], ImageSize -> {25, 18}]}, {
                   Row[{
                    PopupMenu[
                    
                    Dynamic[$CellContext`specificPlaneAngle$$, \
{$CellContext`specificPlaneAngle$$ = #; $CellContext`\[Theta]$$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]}& \
], {"first principal plane" -> Style["first principal plane", 11], 
                    "second principal plane" -> 
                    Style["second principal plane", 11], 
                    "first maximum shear plane" -> 
                    Style["first shear plane", 11], 
                    "second maximum shear plane" -> 
                    Style["second shear plane", 11]}, ImageSize -> All, 
                    Enabled -> Dynamic[
                    And[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"], \
$CellContext`angleSelection$$ == "specific plane"]]]}], SpanFromLeft}}]}}, 
              Spacings -> {0.15, 0.5}, Alignment -> Center, Frame -> None]}, {
             Style[
              Row[{
                Text[
                 Style[
                  TraditionalForm[
                   HoldForm[{{
                    Subscript[
                    Derivative[1][$CellContext`\[Sigma]], $CellContext`x], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, \
$CellContext`y]}, {
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, $CellContext`y], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Sigma]], $CellContext`y]}}]]]], " = ", 
                Dynamic[
                 TraditionalForm[{{
                    $CellContext`padIt1[$CellContext`\[Sigma]x1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}]}, {
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Sigma]y1$$, {3, 
                    1}]}}]]}], 11]}}, Spacings -> {0.5, 0.5}, Alignment -> 
           Center, Frame -> True, FrameStyle -> Directive[
             Thickness[0.005], 
             GrayLevel[0.5]]]}, {
          Grid[{{
             Grid[{{
                Style["zoom", 12], 
                Spacer[13], 
                Manipulate`Place[5], 
                Spacer[12]}, {"", 
                Style[
                 Row[{"in", 
                   Spacer[75], "out"}], 11], SpanFromLeft}}, 
              Spacings -> {0.1, 0.1}, Alignment -> Center, Frame -> True, 
              FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]]}, {
             Grid[{{
                Style["gridlines", 12], Manipulate`Place[6] Spacer[8]}, {"", 
                Style[
                 Row[{"less", 
                   Spacer[70], "more"}], 11]}}, Spacings -> {0.1, 0.1}, 
              Alignment -> Center, Frame -> True, FrameStyle -> Directive[
                Thickness[0.005], 
                GrayLevel[0.5]]]}}, Spacings -> {0.1, 0.5}, Alignment -> Left,
            Frame -> None], SpanFromLeft}}, Spacings -> {0.2, 1.4}, Alignment -> 
        Center]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`annotate$$], True}, 0}, {{
       Hold[$CellContext`plotType$$], "normal/shear trajectory"}, 0}, {{
       Hold[$CellContext`onPositiveSideOnly$$], True}, 0}, {{
       Hold[$CellContext`principalPlaneAngle$$], False}, 0}, {{
       Hold[$CellContext`maxShearPlane$$], False}, 0}, {{
       Hold[$CellContext`specificPlaneAngle$$], "first principal plane"}, 
      0}, {{
       Hold[$CellContext`angleSelection$$], "slider"}, 0}, {{
       Hold[$CellContext`\[Sigma]x1$$], 15.699598555359728`}, 0}, {{
       Hold[$CellContext`\[Sigma]y1$$], 2.300401444640272}, 0}, {{
       Hold[$CellContext`\[Tau]xy1$$], -8.950719479294492}, 0}}, 
    Typeset`size$$ = {425., {209., 216.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`\[Sigma]x$2828$$ = 0, $CellContext`\[Sigma]y$2829$$ = 
    0, $CellContext`\[Tau]xy$2830$$ = 0, $CellContext`\[Theta]$2831$$ = 
    0, $CellContext`limit$2832$$ = 0, $CellContext`gridLines$2833$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`angleSelection$$ = 
        "slider", $CellContext`annotate$$ = True, $CellContext`gridLines$$ = 
        0.5, $CellContext`limit$$ = 30, $CellContext`maxShearPlane$$ = 
        False, $CellContext`onPositiveSideOnly$$ = 
        True, $CellContext`plotType$$ = 
        "normal/shear trajectory", $CellContext`principalPlaneAngle$$ = 
        False, $CellContext`specificPlaneAngle$$ = 
        "first principal plane", $CellContext`\[Theta]$$ = 
        45, $CellContext`\[Sigma]x$$ = 14, $CellContext`\[Sigma]x1$$ = 
        15.699598555359728`, $CellContext`\[Sigma]y$$ = 
        4, $CellContext`\[Sigma]y1$$ = 
        2.300401444640272, $CellContext`\[Tau]xy$$ = 
        10, $CellContext`\[Tau]xy1$$ = -8.950719479294492}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]x$2828$$, 0], 
        Hold[$CellContext`\[Sigma]y$$, $CellContext`\[Sigma]y$2829$$, 0], 
        Hold[$CellContext`\[Tau]xy$$, $CellContext`\[Tau]xy$2830$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$2831$$, 0], 
        Hold[$CellContext`limit$$, $CellContext`limit$2832$$, 0], 
        Hold[$CellContext`gridLines$$, $CellContext`gridLines$2833$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`z$}, $CellContext`z$ = $CellContext`\[Theta]$$ (Pi/
           180); If[
          
          Or[$CellContext`plotType$$ == 
           "stress section", $CellContext`plotType$$ == 
           "Mohr circle/stress section", $CellContext`plotType$$ == 
           "Mohr circle"], 
          
          If[$CellContext`angleSelection$$ == 
           "specific plane", $CellContext`z$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]; \
$CellContext`\[Theta]$$ = $CellContext`z$ (180./
              Pi)]]; {$CellContext`\[Sigma]x1$$, $CellContext`\[Sigma]y1$$, \
$CellContext`\[Tau]xy1$$} = $CellContext`rotationStress[
           N[$CellContext`\[Sigma]x$$], 
           N[$CellContext`\[Sigma]y$$], 
           N[$CellContext`\[Tau]xy$$], 
           N[$CellContext`\[Theta]$$]]; Text[
          $CellContext`makeDiagrams[
           N[$CellContext`\[Sigma]x$$], 
           N[$CellContext`\[Sigma]y$$], 
           
           N[$CellContext`\[Tau]xy$$], $CellContext`z$, \
$CellContext`annotate$$, $CellContext`onPositiveSideOnly$$, \
$CellContext`plotType$$, $CellContext`limit$$, $CellContext`gridLines$$]]], 
      "Specifications" :> {{{$CellContext`\[Sigma]x$$, 14, ""}, -20, 20, 0.1, 
         ImageSize -> Tiny, ControlPlacement -> 
         1}, {{$CellContext`\[Sigma]y$$, 4, ""}, -20, 20, 0.1, ImageSize -> 
         Tiny, ControlPlacement -> 
         2}, {{$CellContext`\[Tau]xy$$, 10, ""}, -20, 20, 0.1, ImageSize -> 
         Tiny, ControlPlacement -> 
         3}, {{$CellContext`\[Theta]$$, 45, ""}, -360, 360, 0.1, ImageSize -> 
         Tiny, Enabled -> Dynamic[
           And[
            
            Or[$CellContext`plotType$$ == 
             "stress section", $CellContext`plotType$$ == 
             "Mohr circle/stress section", $CellContext`plotType$$ == 
             "Mohr circle"], $CellContext`angleSelection$$ == "slider"]], 
         ControlPlacement -> 4}, {{$CellContext`limit$$, 30, ""}, 5, 50, 0.1, 
         ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`gridLines$$, 0.5, ""}, 0, 1, 0.1, ImageSize -> 
         Small, ControlPlacement -> 6}, 
        Grid[{{
           Grid[{{
              Style[
               Row[{"stresses at 0", Degree}], 12], SpanFromLeft}, {
             "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
              Manipulate`Place[1], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Sigma]x$$, {3, 1}]], 
               11]}, {"\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
              Manipulate`Place[2], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Sigma]y$$, {3, 1}]], 
               11]}, {"\!\(\*SubscriptBox[\(\[Tau]\), \(xy\)]\)", 
              Manipulate`Place[3], 
              Style[
               Dynamic[
                $CellContext`padIt1[$CellContext`\[Tau]xy$$, {3, 1}]], 11]}, {
              Style[
               Row[{
                 Text[
                  TraditionalForm[
                   HoldForm[{{
                    Subscript[$CellContext`\[Sigma], $CellContext`x], 
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y]}, {
                    
                    Subscript[$CellContext`\[Tau], $CellContext`x, \
$CellContext`y], 
                    Subscript[$CellContext`\[Sigma], $CellContext`y]}}]]], 
                 " = ", 
                 Dynamic[
                  TraditionalForm[{{
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]x$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}]}, {
                    $CellContext`padIt1[
                    N[$CellContext`\[Tau]xy$$], {3, 1}], 
                    $CellContext`padIt1[
                    N[$CellContext`\[Sigma]y$$], {3, 1}]}}]]}], 11], 
              SpanFromLeft}}, Spacings -> {0.5, 0.5}, Alignment -> Center, 
            Frame -> True, FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]]}, {
           Grid[{{
              Style["select plot type", 12], SpanFromLeft}, {
              PopupMenu[
               Dynamic[$CellContext`plotType$$], {
               "stress section" -> Style["stress section", 11], "Mohr circle" -> 
                Style["Mohr circle", 11], "Mohr circle/stress section" -> 
                Style["Mohr circle/stress section", 11], 
                "normal stress trajectory" -> 
                Style["normal stress trajectory", 11], 
                "shear stress trajectory" -> 
                Style["shear stress trajectory", 11], 
                "normal/shear trajectory" -> 
                Style["normal/shear trajectory", 11]}, ImageSize -> All, 
               ContinuousAction -> False], SpanFromLeft}, {
              Row[{
                Style["annotate", 12], 
                Spacer[1], 
                Checkbox[
                 Dynamic[$CellContext`annotate$$], Enabled -> Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"]]]}], 
              Row[{
                Style[
                 
                 Column[{"display stresses on", "positive sides only"}, 
                  Alignment -> Left], 11], 
                Spacer[1], 
                Checkbox[
                 Dynamic[$CellContext`onPositiveSideOnly$$], Enabled -> 
                 Dynamic[
                   
                   Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"]]]}], SpanFromLeft}}, 
            Spacings -> {0.5, 0.5}, Alignment -> Center, Frame -> True, 
            FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]], SpanFromLeft}, {
           Grid[{{
              Grid[{{
                 Row[{
                   Style["rotate to new angle", 12]}], SpanFromLeft}, {
                 RadioButtonBar[
                  Dynamic[$CellContext`angleSelection$$], {
                  "slider" -> "", "specific plane" -> ""}, Appearance -> 
                  "Vertical", Enabled -> Dynamic[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section", $CellContext`plotType$$ == 
                    "Mohr circle"]]], 
                 Grid[{{
                    Row[{
                    Manipulate`Place[4], 
                    Spacer[4], 
                    Style[
                    Row[{
                    Dynamic[
                    $CellContext`padIt1[$CellContext`\[Theta]$$, {4, 1}]], 
                    Degree}], 11]}], 
                    Button[
                    Row[{"0", Degree}], $CellContext`\[Theta]$$ = 0, 
                    Appearance -> "Palette", Background -> 
                    RGBColor[0.87, 0.94, 1], ImageSize -> {25, 18}]}, {
                    Row[{
                    PopupMenu[
                    
                    Dynamic[$CellContext`specificPlaneAngle$$, \
{$CellContext`specificPlaneAngle$$ = #; $CellContext`\[Theta]$$ = \
$CellContext`getAngleAtSpecificPlane[$CellContext`specificPlaneAngle$$, \
$CellContext`\[Sigma]x$$, $CellContext`\[Sigma]y$$, $CellContext`\[Tau]xy$$]}& \
], {"first principal plane" -> Style["first principal plane", 11], 
                    "second principal plane" -> 
                    Style["second principal plane", 11], 
                    "first maximum shear plane" -> 
                    Style["first shear plane", 11], 
                    "second maximum shear plane" -> 
                    Style["second shear plane", 11]}, ImageSize -> All, 
                    Enabled -> Dynamic[
                    And[
                    
                    Or[$CellContext`plotType$$ == 
                    "stress section", $CellContext`plotType$$ == 
                    "Mohr circle/stress section"], \
$CellContext`angleSelection$$ == "specific plane"]]]}], SpanFromLeft}}]}}, 
               Spacings -> {0.15, 0.5}, Alignment -> Center, Frame -> None]}, {
              Style[
               Row[{
                 Text[
                  Style[
                   TraditionalForm[
                    HoldForm[{{
                    Subscript[
                    Derivative[1][$CellContext`\[Sigma]], $CellContext`x], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, \
$CellContext`y]}, {
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Tau]], $CellContext`x, $CellContext`y], 
                    Subscript[
                    Derivative[
                    1][$CellContext`\[Sigma]], $CellContext`y]}}]]]], " = ", 
                 Dynamic[
                  TraditionalForm[{{
                    $CellContext`padIt1[$CellContext`\[Sigma]x1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}]}, {
                    $CellContext`padIt1[$CellContext`\[Tau]xy1$$, {3, 1}], 
                    $CellContext`padIt1[$CellContext`\[Sigma]y1$$, {3, 
                    1}]}}]]}], 11]}}, Spacings -> {0.5, 0.5}, Alignment -> 
            Center, Frame -> True, FrameStyle -> Directive[
              Thickness[0.005], 
              GrayLevel[0.5]]]}, {
           Grid[{{
              Grid[{{
                 Style["zoom", 12], 
                 Spacer[13], 
                 Manipulate`Place[5], 
                 Spacer[12]}, {"", 
                 Style[
                  Row[{"in", 
                    Spacer[75], "out"}], 11], SpanFromLeft}}, 
               Spacings -> {0.1, 0.1}, Alignment -> Center, Frame -> True, 
               FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}, {
              Grid[{{
                 Style["gridlines", 12], Manipulate`Place[6] Spacer[8]}, {"", 
                 Style[
                  Row[{"less", 
                    Spacer[70], "more"}], 11]}}, Spacings -> {0.1, 0.1}, 
               Alignment -> Center, Frame -> True, FrameStyle -> Directive[
                 Thickness[0.005], 
                 GrayLevel[0.5]]]}}, Spacings -> {0.1, 0.5}, Alignment -> 
            Left, Frame -> None], SpanFromLeft}}, Spacings -> {0.2, 1.4}, 
         Alignment -> Center], {{$CellContext`annotate$$, True}, 0, 
         ControlType -> 
         None}, {{$CellContext`plotType$$, "normal/shear trajectory"}, 0, 
         ControlType -> None}, {{$CellContext`onPositiveSideOnly$$, True}, 0, 
         ControlType -> None}, {{$CellContext`principalPlaneAngle$$, False}, 
         0, ControlType -> None}, {{$CellContext`maxShearPlane$$, False}, 0, 
         ControlType -> 
         None}, {{$CellContext`specificPlaneAngle$$, "first principal plane"},
          0, ControlType -> None}, {{$CellContext`angleSelection$$, "slider"},
          0, ControlType -> 
         None}, {{$CellContext`\[Sigma]x1$$, 15.699598555359728`}, 0, 
         ControlType -> 
         None}, {{$CellContext`\[Sigma]y1$$, 2.300401444640272}, 0, 
         ControlType -> 
         None}, {{$CellContext`\[Tau]xy1$$, -8.950719479294492}, 0, 
         ControlType -> None}}, 
      "Options" :> {
       ControlPlacement -> Left, SynchronousUpdating -> False, 
        SynchronousInitialization -> False, ContinuousAction -> True, 
        Alignment -> Center, ImageMargins -> 0, FrameMargins -> 0, Paneled -> 
        True, Frame -> False, AutorunSequencing -> {1}}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{654., {239., 246.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`contentSizeW = 
        425; $CellContext`contentSizeH = 425; $CellContext`padIt2[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[List]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"", ""}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt2[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[Integer]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"", ""}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt2s[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[Integer]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"-", "+"}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`padIt1[
          PatternTest[
           Pattern[$CellContext`v, 
            Blank[]], $CellContext`numeric], 
          Pattern[$CellContext`f, 
           Blank[List]]] := AccountingForm[
          Chop[$CellContext`v], $CellContext`f, NumberSigns -> {"-", "+"}, 
          NumberPadding -> {"0", "0"}, SignPadding -> 
          True]; $CellContext`integerStrictPositive = And[
          IntegerQ[#], # > 0]& ; $CellContext`integerPositive = And[
          IntegerQ[#], # >= 0]& ; $CellContext`numericStrictPositive = And[
          Element[#, Reals], # > 0]& ; $CellContext`numericPositive = And[
          Element[#, Reals], # >= 0]& ; $CellContext`numericStrictNegative = 
        And[
          Element[#, Reals], # < 0]& ; $CellContext`numericNegative = And[
          Element[#, Reals], # <= 0]& ; $CellContext`bool = 
        Element[#, Booleans]& ; $CellContext`numeric = 
        Element[#, Reals]& ; $CellContext`integer = 
        Element[#, Integers]& ; $CellContext`makeDiagrams[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`annotate, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`onPositiveSideOnly, 
            Blank[]], $CellContext`bool], 
          Pattern[$CellContext`plotType, 
           Blank[String]], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := Module[{}, 
          Which[$CellContext`plotType == "stress section", 
           $CellContext`make2DStressDiagram[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta], \
$CellContext`annotate, $CellContext`onPositiveSideOnly, $CellContext`limit, \
$CellContext`gridLines, {$CellContext`contentSizeW, \
$CellContext`contentSizeH}], $CellContext`plotType == "Mohr circle", 
           $CellContext`makeMohrCircle[$CellContext`\[Theta], $CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines, {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, 
            $CellContext`makeMohrCircleTitle[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]], $CellContext`plotType == 
           "Mohr circle/stress section", 
           Grid[{{
              $CellContext`makeMohrCircleTitle[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], SpanFromLeft}, {
              $CellContext`make2DStressDiagram[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta], \
$CellContext`annotate, $CellContext`onPositiveSideOnly, $CellContext`limit, \
$CellContext`gridLines, {
               0.5 $CellContext`contentSizeW, 
                0.87 $CellContext`contentSizeH}], 
              $CellContext`makeMohrCircle[$CellContext`\[Theta], \
$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, \
$CellContext`limit, $CellContext`gridLines, {
               0.499 $CellContext`contentSizeW, 
                0.87 $CellContext`contentSizeH}, {}]}}, 
            Spacings -> {0, 0}], $CellContext`plotType == 
           "normal stress trajectory", 
           $CellContext`makeNormalStressPolarPlot[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines], $CellContext`plotType == "shear stress trajectory", 
           $CellContext`makeShearStressPolarPlot[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines], $CellContext`plotType == "normal/shear trajectory", 
           $CellContext`makeShearAndNormalStressPolarPlot[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`limit, \
$CellContext`gridLines]]]; $CellContext`getAngleAtSpecificPlane[
          Pattern[$CellContext`specificPlaneAngle, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]x, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]y, 
           Blank[]], 
          Pattern[$CellContext`\[Tau]xy, 
           Blank[]]] := N[
          Which[$CellContext`specificPlaneAngle == "first principal plane", 
           Part[
            $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 
            2], $CellContext`specificPlaneAngle == "second principal plane", 
           Part[
            $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 2, 
            2], $CellContext`specificPlaneAngle == 
           "first maximum shear plane", Part[
             $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 2] + 
           Pi/4, $CellContext`specificPlaneAngle == 
           "second maximum shear plane", Part[
             $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy], 1, 2] + (3/4) 
            Pi]]; $CellContext`principalStresses[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`\[Theta]p, $CellContext`\[Sigma], $CellContext`\
\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1max, $CellContext`r, \
$CellContext`c, $CellContext`tmp, $CellContext`\[Theta]1, $CellContext`\
\[Theta]2}, $CellContext`r = ((($CellContext`\[Sigma]x - \
$CellContext`\[Sigma]y)/2)^2 + $CellContext`\[Tau]xy^2)^
            Rational[
             1, 2]; $CellContext`c = ($CellContext`\[Sigma]x + $CellContext`\
\[Sigma]y)/
            2; {$CellContext`\[Sigma]1, $CellContext`\[Sigma]2} = \
{$CellContext`c + $CellContext`r, $CellContext`c - $CellContext`r}; 
          If[Abs[$CellContext`\[Sigma]2] > 
            Abs[$CellContext`\[Sigma]1], $CellContext`tmp = $CellContext`\
\[Sigma]1; $CellContext`\[Sigma]1 = $CellContext`\[Sigma]2; $CellContext`\
\[Sigma]2 = $CellContext`tmp]; 
          If[Abs[$CellContext`\[Sigma]x - $CellContext`\[Sigma]y] <= \
$MachineEpsilon, $CellContext`\[Theta]p = Pi/4, $CellContext`\[Theta]p = 
            ArcTan[2 (Abs[$CellContext`\[Tau]xy]/
                Abs[$CellContext`\[Sigma]x - $CellContext`\[Sigma]y])]/2]; 
          If[$CellContext`\[Sigma]1 > $CellContext`\[Sigma]2, 
            If[$CellContext`\[Tau]xy > 0, 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {$CellContext`\[Theta]p, -(
                 Pi/2 - $CellContext`\[Theta]p)}, {$CellContext`\[Theta]1, \
$CellContext`\[Theta]2} = {
               Pi/2 - $CellContext`\[Theta]p, -$CellContext`\[Theta]p}], 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {-$CellContext`\[Theta]p, 
                Pi/2 - $CellContext`\[Theta]p}, {$CellContext`\[Theta]1, \
$CellContext`\[Theta]2} = {-(
                 Pi/2 - $CellContext`\[Theta]p), $CellContext`\[Theta]p}]], 
            If[$CellContext`\[Tau]xy > 0, 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {-(
                 Pi/2 - $CellContext`\[Theta]p), $CellContext`\[Theta]p}, \
{$CellContext`\[Theta]1, $CellContext`\[Theta]2} = {-$CellContext`\[Theta]p, 
                Pi/2 - $CellContext`\[Theta]p}], 
             
             If[$CellContext`\[Sigma]x > $CellContext`c, {$CellContext`\
\[Theta]1, $CellContext`\[Theta]2} = {
               Pi/2 - $CellContext`\[Theta]p, -$CellContext`\[Theta]p}, \
{$CellContext`\[Theta]1, $CellContext`\[Theta]2} = {$CellContext`\[Theta]p, -(
                 Pi/2 - $CellContext`\[Theta]p)}]]]; \
{{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, {$CellContext`\[Sigma]2, \
$CellContext`\[Theta]2}}]; $CellContext`maxAndMinShearStress[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`r}, $CellContext`r = 
           Sqrt[(($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)/
               2)^2 + $CellContext`\[Tau]xy^2]; {$CellContext`r, \
-$CellContext`r}]; $CellContext`plot[
          Pattern[$CellContext`data, 
           Blank[List]], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], 
          Pattern[$CellContext`color, 
           Blank[]]] := 
        ListPolarPlot[$CellContext`data, Joined -> True, AxesOrigin -> {0, 0},
           ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, ImagePadding -> {{20, 10}, {20, 5}}, ImageMargins -> 
          0, AspectRatio -> 1, Frame -> True, 
          If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
              
              Range[-$CellContext`limit, $CellContext`limit, (
                2 $CellContext`limit)/($CellContext`gridLines 20)], 
              
              Range[-$CellContext`limit, $CellContext`limit, (
                2 $CellContext`limit)/($CellContext`gridLines 20)]}, 
            GridLinesStyle -> Directive[
              Thickness[0.001], LightGray]}], 
          PlotRange -> {{-$CellContext`limit, $CellContext`limit}, \
{-$CellContext`limit, $CellContext`limit}}, 
          PlotStyle -> $CellContext`color]; $CellContext`makeArrowForAngle[
          Pattern[$CellContext`r, 
           Blank[]], 
          Pattern[$CellContext`center, 
           Blank[]], {{
            Pattern[$CellContext`\[Sigma]1, 
             Blank[]], 
            Pattern[$CellContext`\[Theta]1, 
             Blank[]]}, {
            Pattern[$CellContext`\[Sigma]2, 
             Blank[]], 
            Pattern[$CellContext`\[Theta]2, 
             Blank[]]}}, 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`phi, $CellContext`tbl, $CellContext`align}, 
          If[$CellContext`\[Sigma]1 > $CellContext`\[Sigma]2, 
            
            If[$CellContext`\[Tau]xy > 
             0, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, (-2) \
$CellContext`\[Theta]1, 0, Pi/100}]; $CellContext`align = {-1, 
               1}, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, (-2) \
$CellContext`\[Theta]1, 0, (-Pi)/100}]; $CellContext`align = {-1, -1}], 
            
            If[$CellContext`\[Tau]xy > 
             0, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, -(Pi + 
                  2 $CellContext`\[Theta]1), -Pi, (-Pi)/
                 100}]; $CellContext`align = {1, 1}, $CellContext`tbl = 
              Table[{Part[$CellContext`center, 1] + ($CellContext`r/3) 
                  Cos[$CellContext`phi], ($CellContext`r/3) 
                 Sin[$CellContext`phi]}, {$CellContext`phi, Pi - 
                 2 $CellContext`\[Theta]1, Pi, Pi/
                 100}]; $CellContext`align = {1, -1}]]; {
            Text["2\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
             If[Length[$CellContext`tbl] > 1, 
              Part[$CellContext`tbl, 
               Round[Length[$CellContext`tbl]/2]], 
              
              First[$CellContext`tbl]], $CellContext`align], \
$CellContext`tbl}]; $CellContext`makeMohrCircleTitle[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Module[{$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\
\[Theta]1, $CellContext`\[Theta]2, $CellContext`r, $CellContext`center, \
$CellContext`ptA}, {{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`center = \
{($CellContext`\[Sigma]1 + $CellContext`\[Sigma]2)/2, 
             0}; $CellContext`ptA = {$CellContext`\[Sigma]x, -$CellContext`\
\[Tau]xy}; $CellContext`r = 
           EuclideanDistance[$CellContext`center, $CellContext`ptA]; Grid[{
             Map[TraditionalForm[
               Style[#]]& , {
              "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
               "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
               "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
               "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
               "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)"}], {
              $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
              $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
              PlusMinus[
               $CellContext`padIt2[$CellContext`r, {4, 1}]], 
              Row[{
                $CellContext`padIt1[$CellContext`\[Theta]1 (180/Pi), {4, 1}], 
                Degree}], 
              Row[{
                $CellContext`padIt1[$CellContext`\[Theta]2 (180/Pi), {4, 1}], 
                Degree}]}}, Spacings -> {0.5, 1}, Frame -> All, FrameStyle -> 
            Directive[Thin]]]; $CellContext`getRadiusOfCircle[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric]] := 
        Sqrt[(($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)/
            2)^2 + $CellContext`\[Tau]xy^2]; $CellContext`rotationStress[
          Pattern[$CellContext`\[Sigma]x, 
           Blank[]], 
          Pattern[$CellContext`\[Sigma]y, 
           Blank[]], 
          Pattern[$CellContext`\[Tau]xy, 
           Blank[]], 
          Pattern[$CellContext`\[Theta], 
           Blank[]]] := 
        Module[{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy, \
$CellContext`\[Tau]}, $CellContext`\[Sigma]xx = (1/
              2) ($CellContext`\[Sigma]x + $CellContext`\[Sigma]y) + ((1/
               2) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
             Cos[2 $CellContext`\[Theta]] + $CellContext`\[Tau]xy 
             Sin[2 $CellContext`\[Theta]]; $CellContext`\[Tau] = ((-(1/
                2)) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
             Sin[2 $CellContext`\[Theta]] + $CellContext`\[Tau]xy 
             Cos[2 $CellContext`\[Theta]]; $CellContext`\[Sigma]yy = (1/
              2) ($CellContext`\[Sigma]x + $CellContext`\[Sigma]y) - ((1/
              2) ($CellContext`\[Sigma]x - $CellContext`\[Sigma]y)) 
            Cos[2 $CellContext`\[Theta]] - $CellContext`\[Tau]xy 
            Sin[2 $CellContext`\[Theta]]; {$CellContext`\[Sigma]xx, \
$CellContext`\[Sigma]yy, $CellContext`\[Tau]}]; $CellContext`makeMohrCircle[
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], {
           PatternTest[
            Pattern[$CellContext`contentSizeW, 
             Blank[]], $CellContext`numericStrictPositive], 
           PatternTest[
            Pattern[$CellContext`contentSizeH, 
             Blank[]], $CellContext`numericStrictPositive]}, 
          Pattern[$CellContext`plotTitle, 
           Blank[]]] := 
        Module[{$CellContext`ptA, $CellContext`ptB, $CellContext`center, \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Theta]1, \
$CellContext`\[Theta]2, $CellContext`r, $CellContext`z, $CellContext`ptD1, \
$CellContext`ptD2, $CellContext`\[Sigma]x1, $CellContext`\[Tau]xy1, \
$CellContext`\[Sigma]y1}, {{$CellContext`\[Sigma]1, $CellContext`\[Theta]1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`center = \
{($CellContext`\[Sigma]1 + $CellContext`\[Sigma]2)/2, 
             0}; $CellContext`ptA = {$CellContext`\[Sigma]x, -$CellContext`\
\[Tau]xy}; $CellContext`r = $CellContext`getRadiusOfCircle[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\
\[Sigma]x1, $CellContext`\[Sigma]y1, $CellContext`\[Tau]xy1} = \
$CellContext`rotationStress[$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, \
$CellContext`\[Tau]xy, $CellContext`\[Theta]]; $CellContext`z = $CellContext`\
\[Sigma]x - First[$CellContext`center]; $CellContext`ptB = {
            Part[$CellContext`ptA, 1] - 2 $CellContext`z, -
             Part[$CellContext`ptA, 
               2]}; $CellContext`ptD1 = {$CellContext`\[Sigma]x1, \
-$CellContext`\[Tau]xy1}; $CellContext`ptD2 = {$CellContext`\[Sigma]y1, \
$CellContext`\[Tau]xy1}; Graphics[{
             Circle[$CellContext`center, $CellContext`r], {Black, 
              PointSize[0.02], 
              Point[$CellContext`ptA]}, {Black, 
              PointSize[0.02], 
              Point[$CellContext`center]}, {Black, 
              PointSize[0.02], 
              Point[$CellContext`ptB]}, {Dashed, 
              Line[{$CellContext`ptA, $CellContext`ptB}]}, 
             Circle[$CellContext`ptD1, 0.8], {Red, Dashed, 
              Line[{$CellContext`ptD1, $CellContext`ptD2}]}, 
             Circle[$CellContext`ptD2, 0.8], 
             Text[
              Row[{"(", 
                $CellContext`padIt1[$CellContext`\[Sigma]x1, {4, 1}], ",", 
                $CellContext`padIt1[$CellContext`\[Tau]xy1, {4, 1}], 
                ")"}], $CellContext`ptD1, 
              
              If[$CellContext`\[Sigma]x1 > 
               Part[$CellContext`center, 1], {-1.2, -1.2}, {1.2, -1.2}]], 
             Text[
              Row[{"(", 
                $CellContext`padIt1[$CellContext`\[Sigma]y1, {4, 1}], ",", 
                $CellContext`padIt1[$CellContext`\[Tau]xy1, {4, 1}], 
                ")"}], $CellContext`ptD2, 
              
              If[$CellContext`\[Sigma]y1 > 
               Part[$CellContext`center, 1], {-1.2, -1.2}, {1.2, -1.2}]], {
             Red, 
              PointSize[0.02], 
              Point[{$CellContext`\[Sigma]1, 0}]}, {
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], {$CellContext`\[Sigma]1, 0}, {-1.5, 1.5}]}, {Red, 
              PointSize[0.02], 
              Point[{$CellContext`\[Sigma]2, 0}]}, {
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], {$CellContext`\[Sigma]2, 0}, {1.2, 1.3}]}, {Blue, 
              PointSize[0.02], 
              Point[{
                Part[$CellContext`center, 1], $CellContext`r}]}, {
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 12]], {
                Part[$CellContext`center, 1], $CellContext`r}, {0, -1.5}]}, {
             Blue, 
              PointSize[0.02], 
              Point[{
                Part[$CellContext`center, 1], -$CellContext`r}]}, {
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 12]], {
                Part[$CellContext`center, 1], -$CellContext`r}, {0, 1.5}]}, {
              Text[
               Style["tension", 11], {$CellContext`limit, 0}, {1, 3}]}, {
              Text[
               Style["compression", 11], {-$CellContext`limit, 0}, {-1, 3}]}}, 
            If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
                
                Range[-$CellContext`limit, $CellContext`limit, (
                  2 $CellContext`limit)/($CellContext`gridLines 20)], 
                
                Range[-$CellContext`limit, $CellContext`limit, (
                  2 $CellContext`limit)/($CellContext`gridLines 20)]}, 
              GridLinesStyle -> Directive[
                Thickness[0.001], LightGray]}], 
            PlotRange -> {{-$CellContext`limit, $CellContext`limit}, \
{-$CellContext`limit, $CellContext`limit}}, Axes -> True, 
            AxesOrigin -> {0, 0}, TicksStyle -> 8, PlotLabel -> 
            If[$CellContext`plotTitle === {}, "", $CellContext`plotTitle], 
            ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, 
            ImagePadding -> {{20, 10}, {20, 
             5}}]]; $CellContext`makeShearAndNormalStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, \
$CellContext`\[Sigma]2Abs, $CellContext`\[Theta]p1, $CellContext`\[Theta]p2, \
$CellContext`p1, $CellContext`p2, $CellContext`p3, $CellContext`p4, \
$CellContext`plotTitle, $CellContext`coord1, $CellContext`coord2, \
$CellContext`\[Tau]1, $CellContext`\[Tau]2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                1]}], $CellContext`limit, $CellContext`gridLines, 
             Red]; $CellContext`coord1 = {
            Abs[$CellContext`\[Sigma]1] Cos[$CellContext`\[Theta]p1], 
             Abs[$CellContext`\[Sigma]1] 
             Sin[$CellContext`\[Theta]p1]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Sigma]2] Cos[$CellContext`\[Theta]p2], 
             Abs[$CellContext`\[Sigma]2] 
             Sin[$CellContext`\[Theta]p2]}; $CellContext`p2 = Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Sigma]x, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 12]], {$CellContext`\[Sigma]x, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Sigma]y}]}, 
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 12]], {
               0, $CellContext`\[Sigma]y}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord2]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], $CellContext`coord2, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 
                    2]}}]}}]; {$CellContext`\[Tau]1, $CellContext`\[Tau]2} = \
$CellContext`maxAndMinShearStress[$CellContext`\[Sigma]x, $CellContext`\
\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p3 = $CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                3]}], $CellContext`limit, $CellContext`gridLines, 
             Blue]; $CellContext`coord1 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p1 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p1 + Pi/4]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p2 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p2 + Pi/4]}; $CellContext`p4 = 
           Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Tau]xy, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 12]], {$CellContext`\[Tau]xy, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Tau]xy}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", 
                 12]], {0, $CellContext`\[Tau]xy}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {Dashed, Thin, 
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Style[
             
             Grid[{{"normal (red) and shear (blue) polar (stress vs. angle) \
trajectory", SpanFromLeft}, 
               Map[TraditionalForm[
                 Style[#]]& , {
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)", 
                 "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)"}], {
                $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
                $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
                Row[{
                  $CellContext`padIt1[$CellContext`\[Theta]p1 (180/Pi), {4, 
                   1}], Degree}], 
                $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
                Row[{
                  $CellContext`padIt1[$CellContext`\[Theta]p2 (180/Pi), {4, 
                   1}], Degree}], 
                PlusMinus[
                 $CellContext`padIt2[$CellContext`\[Tau]1, {4, 1}]]}}, 
              Spacings -> {0.4, 1.1}, Frame -> All, FrameStyle -> 
              Directive[Thin]], 12]; 
          Show[$CellContext`p1, $CellContext`p2, $CellContext`p3, \
$CellContext`p4, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`makeNormalStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, \
$CellContext`\[Sigma]2Abs, $CellContext`\[Theta]p1, $CellContext`\[Theta]p2, \
$CellContext`p1, $CellContext`p2, $CellContext`plotTitle, \
$CellContext`coord1, $CellContext`coord2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                1]}], $CellContext`limit, $CellContext`gridLines, 
             Red]; $CellContext`coord1 = {
            Abs[$CellContext`\[Sigma]1] Cos[$CellContext`\[Theta]p1], 
             Abs[$CellContext`\[Sigma]1] 
             Sin[$CellContext`\[Theta]p1]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Sigma]2] Cos[$CellContext`\[Theta]p2], 
             Abs[$CellContext`\[Sigma]2] 
             Sin[$CellContext`\[Theta]p2]}; $CellContext`p2 = Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Sigma]x, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                 12]], {$CellContext`\[Sigma]x, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Sigma]y}]}, 
              Text[
               TraditionalForm[
                Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 12]], {
               0, $CellContext`\[Sigma]y}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord2]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                 12]], $CellContext`coord2, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Grid[{{"normal stress polar (stress vs. angle) trajectory", 
               SpanFromLeft}, 
              Map[TraditionalForm[
                Style[#]]& , {
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(1\)]\)", 
                "\!\(\*SubscriptBox[\(\[Theta]\), \(1\)]\)", 
                "\!\(\*SubscriptBox[\(\[Sigma]\), \(2\)]\)", 
                "\!\(\*SubscriptBox[\(\[Theta]\), \(2\)]\)"}], {
               $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Tau]xy, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]1, {4, 1}], 
               Row[{
                 $CellContext`padIt1[$CellContext`\[Theta]p1 (180/Pi), {4, 
                  1}], Degree}], 
               $CellContext`padIt1[$CellContext`\[Sigma]2, {4, 1}], 
               Row[{
                 $CellContext`padIt1[$CellContext`\[Theta]p2 (180/Pi), {4, 
                  1}], Degree}]}}, Spacings -> {0.8, 1}, Frame -> All, 
             FrameStyle -> Directive[Thin]]; 
          Show[$CellContext`p1, $CellContext`p2, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`makeShearStressPolarPlot[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive]] := 
        Module[{$CellContext`pts, $CellContext`\[Theta], \
$CellContext`\[Sigma]1, $CellContext`\[Tau]1, $CellContext`\[Tau]2, \
$CellContext`\[Sigma]2, $CellContext`\[Sigma]1Abs, $CellContext`\[Sigma]2Abs, \
$CellContext`\[Theta]p1, $CellContext`\[Theta]p2, $CellContext`p1, \
$CellContext`p2, $CellContext`plotTitle, $CellContext`coord1, \
$CellContext`coord2}, $CellContext`pts = Table[{
              $CellContext`rotationStress[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy, $CellContext`\[Theta]], \
$CellContext`\[Theta]}, {$CellContext`\[Theta], 0, 2 Pi, Pi/
              40}]; {{$CellContext`\[Sigma]1, $CellContext`\[Theta]p1}, \
{$CellContext`\[Sigma]2, $CellContext`\[Theta]p2}} = \
$CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\[Tau]1, \
$CellContext`\[Tau]2} = $CellContext`maxAndMinShearStress[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; $CellContext`p1 = \
$CellContext`plot[
             Transpose[{
               Part[$CellContext`pts, All, 2], 
               
               Part[$CellContext`pts, All, 1, 
                3]}], $CellContext`limit, $CellContext`gridLines, 
             Blue]; $CellContext`coord1 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p1 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p1 + Pi/4]}; $CellContext`coord2 = {
            Abs[$CellContext`\[Tau]1] Cos[$CellContext`\[Theta]p2 + Pi/4], 
             Abs[$CellContext`\[Tau]1] 
             Sin[$CellContext`\[Theta]p2 + Pi/4]}; $CellContext`p2 = 
           Graphics[{{
               PointSize[0.015], 
               Point[{$CellContext`\[Tau]xy, 0}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", 
                 12]], {$CellContext`\[Tau]xy, 0}, {0, 1.2}], {
               PointSize[0.015], 
               Point[{0, $CellContext`\[Tau]xy}]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", 
                 12]], {0, $CellContext`\[Tau]xy}, {1.2, 0}], {
               PointSize[0.015], 
               Point[$CellContext`coord1]}, 
              Text[
               TraditionalForm[
                Style[
                "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                 12]], $CellContext`coord1, {-1.4, 0}], {Dashed, Thin, 
               
               Line[{$CellContext`coord1, {-Part[$CellContext`coord1, 1], -
                  Part[$CellContext`coord1, 2]}}]}, {Dashed, Thin, 
               
               Line[{$CellContext`coord2, {-Part[$CellContext`coord2, 1], -
                  Part[$CellContext`coord2, 2]}}]}}]; $CellContext`plotTitle = 
           Grid[{{"shear stress polar (stress vs. angle) trajectory", 
               SpanFromLeft}, 
              Flatten[{
                Map[TraditionalForm[
                  Style[#]]& , {
                 "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)",
                   "\!\(\*SubscriptBox[\(\[Tau]\), \(max\)]\)", 
                  "\!\(\*SubscriptBox[\(\[Theta]\), \(max\)]\)"}], 
                SpanFromLeft}], {
               $CellContext`padIt1[$CellContext`\[Sigma]x, {4, 1}], 
               $CellContext`padIt1[$CellContext`\[Sigma]y, {4, 1}], 
               PlusMinus[
                $CellContext`padIt2[$CellContext`\[Tau]xy, {4, 1}]], 
               $CellContext`padIt1[$CellContext`\[Tau]1, {4, 1}], 
               Row[{
                 $CellContext`padIt1[($CellContext`\[Theta]p1 + Pi/4) (180/
                   Pi), {4, 1}], Degree, ",", 
                 $CellContext`padIt1[($CellContext`\[Theta]p1 + (3/4) Pi) (
                   180/Pi), {4, 1}], Degree}], SpanFromLeft}}, 
             Spacings -> {1, 1}, Frame -> All, FrameStyle -> Directive[Thin]]; 
          Show[$CellContext`p1, $CellContext`p2, 
            PlotLabel -> $CellContext`plotTitle]]; \
$CellContext`make2DStressDiagram[
          PatternTest[
           Pattern[$CellContext`\[Sigma]x, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Sigma]y, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Tau]xy, 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`\[Theta], 
            Blank[]], $CellContext`numeric], 
          PatternTest[
           Pattern[$CellContext`annotate, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`onPositiveSideOnly, 
            Blank[]], $CellContext`bool], 
          PatternTest[
           Pattern[$CellContext`limit, 
            Blank[]], $CellContext`numericStrictPositive], 
          PatternTest[
           Pattern[$CellContext`gridLines, 
            Blank[]], $CellContext`numericPositive], {
           PatternTest[
            Pattern[$CellContext`contentSizeW, 
             Blank[]], $CellContext`numericStrictPositive], 
           PatternTest[
            Pattern[$CellContext`contentSizeH, 
             Blank[]], $CellContext`numericStrictPositive]}] := 
        Module[{$CellContext`\[Sigma]1, $CellContext`\[Sigma]2, $CellContext`\
\[Sigma]xx, $CellContext`\[Sigma]yy, $CellContext`\[Tau]xyxy, $CellContext`r, \
$CellContext`\[Sigma]xxRightArrow, $CellContext`\[Sigma]xxLeftArrow, \
$CellContext`\[Sigma]yyTopArrow, $CellContext`\[Sigma]yyBottomArrow, \
$CellContext`\[Tau]RightArrow, $CellContext`\[Tau]LeftArrow, $CellContext`\
\[Tau]TopArrow, $CellContext`\[Tau]BottomArrow, $CellContext`\[Tau]1, \
$CellContext`\[Tau]2, $CellContext`color, $CellContext`textSize = 
           11, $CellContext`colorShear, \
$CellContext`\[Sigma]xxRightArrowText, $CellContext`\[Sigma]xxLeftArrowText, \
$CellContext`\[Sigma]yyTopArrowText, $CellContext`\[Sigma]yyBottomArrowText, \
$CellContext`\[Tau]RightArrowText, $CellContext`\[Tau]LeftArrowText, \
$CellContext`\[Tau]TopArrowText, $CellContext`\[Tau]BottomArrowText, \
$CellContext`rotationMatrix, $CellContext`coordinates, $CellContext`from, \
$CellContext`to, $CellContext`rotatedAxisXText, \
$CellContext`rotatedAxisYText, $CellContext`maxAbsoluteprincipalShearStress, \
$CellContext`thickness = Thick, $CellContext`eps = 
           10^(-9), $CellContext`\[Theta]p1, $CellContext`\[Theta]p2}, \
$CellContext`rotationMatrix = 
           RotationMatrix[-$CellContext`\[Theta]]; \
$CellContext`rotatedAxisXText = Text[
             Style["x", Italic, $CellContext`textSize], 
             
             Dot[{0.3, 
               0}, $CellContext`rotationMatrix]]; \
$CellContext`rotatedAxisYText = Text[
             Style["y", Italic, $CellContext`textSize], 
             
             Dot[{0, 0.3}, $CellContext`rotationMatrix]]; {{$CellContext`\
\[Sigma]1, $CellContext`\[Theta]p1}, {$CellContext`\[Sigma]2, $CellContext`\
\[Theta]p2}} = $CellContext`principalStresses[$CellContext`\[Sigma]x, \
$CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; {$CellContext`\[Tau]1, \
$CellContext`\[Tau]2} = $CellContext`maxAndMinShearStress[$CellContext`\
\[Sigma]x, $CellContext`\[Sigma]y, $CellContext`\[Tau]xy]; \
$CellContext`maxAbsoluteprincipalShearStress = Max[
             
             Abs[{$CellContext`\[Tau]1, $CellContext`\[Tau]2}]]; \
{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy, $CellContext`\[Tau]xyxy} = \
$CellContext`rotationStress[$CellContext`\[Sigma]x, $CellContext`\[Sigma]y, \
$CellContext`\[Tau]xy, $CellContext`\[Theta]]; 
          If[Abs[$CellContext`\[Sigma]1] > 
            0, {$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy} = \
{$CellContext`\[Sigma]xx, $CellContext`\[Sigma]yy}/
             Abs[$CellContext`\[Sigma]1]]; 
          If[$CellContext`maxAbsoluteprincipalShearStress > 
            0, $CellContext`\[Tau]xyxy = \
$CellContext`\[Tau]xyxy/$CellContext`maxAbsoluteprincipalShearStress]; \
$CellContext`color = Red; $CellContext`colorShear = 
           Blue; $CellContext`r = {White, 
             EdgeForm[{Thin, Gray}], 
             Rectangle[{-0.5, -0.5}, {0.5, 0.5}]}; 
          If[$CellContext`\[Sigma]xx >= 
            0, $CellContext`from = {0.6, 0}; $CellContext`to = {
              0.6 + $CellContext`\[Sigma]xx, 0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, 0.78, 
                  0.68] + $CellContext`\[Sigma]xx, 
                0}, $CellContext`rotationMatrix], $CellContext`from = {
              0.6 + Abs[$CellContext`\[Sigma]xx], 0}; $CellContext`to = {
              0.6, 0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, 0.78, 0.68] + 
                Abs[$CellContext`\[Sigma]xx], 
                0}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]xxRightArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]xx 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates, {0,
               0}], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates, {0, 
              0}]]; $CellContext`\[Sigma]xxRightArrow = \
{$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]xx >= 
            0, $CellContext`from = {-0.6, 
               0}; $CellContext`to = {-0.6 - $CellContext`\[Sigma]xx, 
               0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, -0.78, -0.68] - $CellContext`\
\[Sigma]xx, 0}, $CellContext`rotationMatrix], $CellContext`from = {-0.6 - 
               Abs[$CellContext`\[Sigma]xx], 0}; $CellContext`to = {-0.6, 
               0}; $CellContext`coordinates = 
             Dot[{If[$CellContext`annotate, -0.78, -0.68] - 
                Abs[$CellContext`\[Sigma]xx], 
                0}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]xxLeftArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]xx 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]xxLeftArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]yy >= 
            0, $CellContext`from = {0, 0.6}; $CellContext`to = {
              0, 0.6 + $CellContext`\[Sigma]yy}; $CellContext`coordinates = 
             Dot[{0, If[$CellContext`annotate, 0.75, 
                  0.68] + $CellContext`\[Sigma]yy}, \
$CellContext`rotationMatrix], $CellContext`from = {
              0, 0.6 + Abs[$CellContext`\[Sigma]yy]}; $CellContext`to = {
              0, 0.6}; $CellContext`coordinates = 
             Dot[{0, If[$CellContext`annotate, 0.75, 0.68] + 
                Abs[$CellContext`\[Sigma]yy]}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]yyTopArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]yy 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]yyTopArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Sigma]yy >= 
            0, $CellContext`from = {0, -0.6}; $CellContext`to = {
              0, -0.6 - $CellContext`\[Sigma]yy}; $CellContext`coordinates = 
             Dot[{0, -0.75 - $CellContext`\[Sigma]yy}, \
$CellContext`rotationMatrix], $CellContext`from = {
              0, -0.6 - Abs[$CellContext`\[Sigma]yy]}; $CellContext`to = {
              0, -0.6}; $CellContext`coordinates = 
             Dot[{0, -0.75 - 
                Abs[$CellContext`\[Sigma]yy]}, $CellContext`rotationMatrix]]; \
$CellContext`\[Sigma]yyBottomArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style["\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Sigma]yy 
                  Abs[$CellContext`\[Sigma]1], {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Sigma]\), \(y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Sigma]yyBottomArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`color, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Tau]xyxy >= 
            0, $CellContext`from = {
              0.6, 0.5 - $CellContext`\[Tau]xyxy}; $CellContext`to = {0.6, 
              0.5}; $CellContext`coordinates = Dot[{
                If[$CellContext`annotate, 0.8, 0.7], 
                0.45}, $CellContext`rotationMatrix], $CellContext`from = {0.6,
               0.5}; $CellContext`to = {
              0.6, 0.5 - 
               Abs[$CellContext`\[Tau]xyxy]}; $CellContext`coordinates = Dot[{
                If[$CellContext`annotate, 0.8, 0.7], 
                0.45}, $CellContext`rotationMatrix]]; \
$CellContext`\[Tau]RightArrowText = If[$CellContext`annotate, 
             Text[
              Style[
               Column[{
                 TraditionalForm[
                  Style[
                  "\!\(\*SubscriptBox[\(\[Tau]\), \
\(x\[InvisibleComma]y\)]\)"]], 
                 $CellContext`padIt1[$CellContext`\[Tau]xyxy \
$CellContext`maxAbsoluteprincipalShearStress, {3, 1}]}, Alignment -> 
                Center], $CellContext`textSize], $CellContext`coordinates], 
             Text[
              TraditionalForm[
               Style[
               "\!\(\*SubscriptBox[\(\[Tau]\), \(x\[InvisibleComma]y\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]]; \
$CellContext`\[Tau]RightArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`colorShear, 
             Arrow[{$CellContext`from, $CellContext`to}, 0]}; 
          If[$CellContext`\[Tau]xyxy >= 
            0, $CellContext`from = {
              0.5 - $CellContext`\[Tau]xyxy, 0.6}; $CellContext`to = {0.5, 
              0.6}; $CellContext`coordinates = 
             Dot[{0.5, 
               0.75}, $CellContext`rotationMatrix], $CellContext`from = {0.5, 
              0.6}; $CellContext`to = {
              0.5 - Abs[$CellContext`\[Tau]xyxy], 
               0.6}; $CellContext`coordinates = 
             Dot[{0.5, 
               0.75}, $CellContext`rotationMatrix]]; \
$CellContext`\[Tau]TopArrowText = Text[
             TraditionalForm[
              Style[
              "\!\(\*SubscriptBox[\(\[Tau]\), \(y\[InvisibleComma]x\)]\)", \
$CellContext`textSize]], $CellContext`coordinates]; \
$CellContext`\[Tau]TopArrow = {$CellContext`thickness, 
             Arrowheads[Medium], $CellContext`colorShear, 
             
             Arrow[{$CellContext`from, $CellContext`to}, 
              0]}; $CellContext`\[Tau]LeftArrow = {
             Arrowheads[Medium], 
             
             If[$CellContext`\[Tau]xyxy >= 
              0, {$CellContext`thickness, $CellContext`colorShear, 
               
               Arrow[{{-0.6, -0.5 + $CellContext`\[Tau]xyxy}, {-0.6, -0.5}}, 
                0]}, {$CellContext`thickness, $CellContext`colorShear, 
               
               Arrow[{{-0.6, -0.5}, {-0.6, -0.5 + 
                  Abs[$CellContext`\[Tau]xyxy]}}, 
                0]}]}; $CellContext`\[Tau]BottomArrow = \
{$CellContext`thickness, $CellContext`colorShear, 
             Arrowheads[Medium], 
             If[$CellContext`\[Tau]xyxy >= 0, 
              
              Arrow[{{-0.5 + $CellContext`\[Tau]xyxy, -0.6}, {-0.5, -0.6}}, 
               0], 
              
              Arrow[{{-0.5, -0.6}, {-0.5 + 
                 Abs[$CellContext`\[Tau]xyxy], -0.6}}, 
               0]]}; $CellContext`from = (-($CellContext`limit/40)) 
            1.9; $CellContext`to = -$CellContext`from; Graphics[{
             Rotate[$CellContext`r, $CellContext`\[Theta], {0, 0}], 
             If[Abs[$CellContext`\[Sigma]xx] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Sigma]xxRightArrow, \
$CellContext`\[Theta], {0, 0}], $CellContext`\[Sigma]xxRightArrowText, 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], 
                
                Rotate[$CellContext`\[Sigma]xxLeftArrow, \
$CellContext`\[Theta], {0, 0}]]}, 
              Apply[Sequence, {}]], 
             If[Abs[$CellContext`\[Sigma]yy] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Sigma]yyTopArrow, $CellContext`\[Theta], \
{0, 0}], $CellContext`\[Sigma]yyTopArrowText, 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], 
                
                Rotate[$CellContext`\[Sigma]yyBottomArrow, $CellContext`\
\[Theta], {0, 0}]]}, 
              Apply[Sequence, {}]], 
             If[Abs[$CellContext`\[Tau]xyxy] > $CellContext`eps, {
               
               Rotate[$CellContext`\[Tau]RightArrow, $CellContext`\[Theta], {
                0, 0}], $CellContext`\[Tau]RightArrowText, 
               
               Rotate[$CellContext`\[Tau]TopArrow, $CellContext`\[Theta], {0, 
                0}], 
               If[$CellContext`onPositiveSideOnly, 
                Apply[Sequence, {}], {
                 
                 Rotate[$CellContext`\[Tau]LeftArrow, $CellContext`\[Theta], {
                  0, 0}], 
                 
                 Rotate[$CellContext`\[Tau]BottomArrow, \
$CellContext`\[Theta], {0, 0}]}]}, 
              Apply[Sequence, {}]], {Gray, Thin, Dashed, 
              Rotate[{
                Arrowheads[Small], 
                Arrow[{{-0.25, 0}, {0.25, 0}}]}, $CellContext`\[Theta], {0, 
               0}]}, {Gray, Thin, Dashed, 
              Rotate[{
                Arrowheads[Small], 
                Arrow[{{0, -0.25}, {0, 0.25}}]}, $CellContext`\[Theta], {0, 
               0}]}, $CellContext`rotatedAxisXText, \
$CellContext`rotatedAxisYText, {
              PointSize[0.01], 
              Point[{0, 0}]}}, Axes -> False, 
            PlotRange -> {{$CellContext`from, $CellContext`to}, \
{$CellContext`from, $CellContext`to}}, 
            ImageSize -> {$CellContext`contentSizeW, \
$CellContext`contentSizeH}, ImagePadding -> {{10, 10}, {10, 10}}, 
            ImageMargins -> 0, AspectRatio -> Automatic, 
            If[$CellContext`gridLines == 0, GridLines -> None, {GridLines -> {
                
                Range[$CellContext`from, $CellContext`to, ($CellContext`to - \
$CellContext`from)/($CellContext`gridLines 20)], 
                
                Range[$CellContext`from, $CellContext`to, ($CellContext`to - \
$CellContext`from)/($CellContext`gridLines 20)]}, GridLinesStyle -> Directive[
                Thickness[0.001], LightGray]}], Frame -> False]]}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->False,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->11615141]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell[TextData[{
 "In plane stress, components ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", "z"], ",", 
    SubscriptBox["\[Tau]", 
     RowBox[{"z", "\[InvisibleComma]", "x"}]], ",", 
    SubscriptBox["\[Tau]", 
     RowBox[{"z", "\[InvisibleComma]", "y"}]], ",", 
    SubscriptBox["\[Tau]", 
     RowBox[{"x", "\[InvisibleComma]", "z"}]], ",", 
    SubscriptBox["\[Tau]", 
     RowBox[{"y", "\[InvisibleComma]", "z"}]]}], TraditionalForm]], 
  "InlineMath"],
 " vanish and the 3D stress tensor ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SubscriptBox["\[Sigma]", "x"], 
       SubscriptBox["\[Tau]", 
        RowBox[{"x", "\[InvisibleComma]", "y"}]], 
       SubscriptBox["\[Tau]", 
        RowBox[{"x", "\[InvisibleComma]", "z"}]]},
      {
       SubscriptBox["\[Tau]", 
        RowBox[{"y", "\[InvisibleComma]", "x"}]], 
       SubscriptBox["\[Sigma]", "y"], 
       SubscriptBox["\[Tau]", 
        RowBox[{"y", "\[InvisibleComma]", "z"}]]},
      {
       SubscriptBox["\[Tau]", 
        RowBox[{"z", "\[InvisibleComma]", "x"}]], 
       SubscriptBox["\[Tau]", 
        RowBox[{"z", "\[InvisibleComma]", "y"}]], 
       SubscriptBox["\[Sigma]", "z"]}
     }], "\[NoBreak]", ")"}], TraditionalForm]], "InlineMath"],
 " reduces to ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       SubscriptBox["\[Sigma]", "x"], 
       SubscriptBox["\[Tau]", 
        RowBox[{"x", "\[InvisibleComma]", "y"}]]},
      {
       SubscriptBox["\[Tau]", 
        RowBox[{"x", "\[InvisibleComma]", "y"}]], 
       SubscriptBox["\[Sigma]", "y"]}
     }], "\[NoBreak]", ")"}], TraditionalForm]], "InlineMath"],
 ". Assuming ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "x"], TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "y"], TraditionalForm]], "InlineMath"],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", 
    RowBox[{"x", "\[InvisibleComma]", "y"}]], TraditionalForm]], "InlineMath"],
 " are given at 0\[Degree], the stresses ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", 
     RowBox[{"x", "'"}]], ",", 
    SubscriptBox["\[Sigma]", 
     RowBox[{"y", "'"}]], ",", 
    SubscriptBox["\[Tau]", 
     RowBox[{
      RowBox[{"x", "'"}], 
      RowBox[{"y", "'"}]}]]}], TraditionalForm]], "InlineMath"],
 " at a different angle \[Theta] are found from ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        SubscriptBox["\[Sigma]", 
         RowBox[{"x", "'"}]]},
       {
        SubscriptBox["\[Sigma]", 
         RowBox[{"y", "'"}]]},
       {
        SubscriptBox["\[Tau]", 
         RowBox[{
          RowBox[{"x", "'"}], 
          RowBox[{"y", "'"}]}]]}
      }], "\[NoBreak]", ")"}], "=", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Sigma]", "x"], "+", 
            SubscriptBox["\[Sigma]", "y"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Sigma]", "x"], "-", 
            SubscriptBox["\[Sigma]", "y"]}], ")"}], "cos", 
          RowBox[{"(", 
           RowBox[{"2", "\[Theta]"}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["\[Tau]", 
           RowBox[{"x", "\[InvisibleComma]", "y"}]], "sin", 
          RowBox[{"(", 
           RowBox[{"2", "\[Theta]"}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Sigma]", "x"], "+", 
            SubscriptBox["\[Sigma]", "y"]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Sigma]", "x"], "-", 
            SubscriptBox["\[Sigma]", "y"]}], ")"}], "cos", 
          RowBox[{"(", 
           RowBox[{"2", "\[Theta]"}], ")"}]}], "-", 
         RowBox[{
          SubscriptBox["\[Tau]", 
           RowBox[{"x", "\[InvisibleComma]", "y"}]], "sin", 
          RowBox[{"(", 
           RowBox[{"2", "\[Theta]"}], ")"}]}]}]},
       {
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], 
          RowBox[{"(", 
           RowBox[{
            SubscriptBox["\[Sigma]", "x"], "-", 
            SubscriptBox["\[Sigma]", "y"]}], ")"}], "sin", 
          RowBox[{"(", 
           RowBox[{"2", "\[Theta]"}], ")"}]}], "+", 
         RowBox[{
          SubscriptBox["\[Tau]", 
           RowBox[{"x", "\[InvisibleComma]", "y"}]], "cos", 
          RowBox[{"(", 
           RowBox[{"2", "\[Theta]"}], ")"}]}]}]}
      }], "\[NoBreak]", ")"}]}], TraditionalForm]], "InlineMath"],
 " ."
}], "DetailNotes",
 CellChangeTimes->{{3.5619617745313425`*^9, 3.5619621261744556`*^9}, {
  3.561962582555559*^9, 3.5619629792982516`*^9}, {3.5619630350754423`*^9, 
  3.561963840546512*^9}, {3.5619638736994085`*^9, 3.5619638763395596`*^9}, {
  3.5619639335718327`*^9, 3.5619640221148973`*^9}, {3.5619642455456767`*^9, 
  3.561964272067194*^9}, {3.561964321236006*^9, 3.561964351353729*^9}, {
  3.562103505012469*^9, 3.562103526427188*^9}, {3.5621354539084635`*^9, 
  3.5621354968044105`*^9}, {3.562135761539027*^9, 3.5621357694205284`*^9}, {
  3.562135957459906*^9, 3.5621360136660433`*^9}, {3.5621682078531857`*^9, 
  3.5621683068647585`*^9}, {3.5621683554324265`*^9, 3.562168471287138*^9}, {
  3.562688504025157*^9, 3.562688761660915*^9}},
 CellID->123752843],

Cell[TextData[{
 "The angles ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "1"], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Theta]", "2"], TraditionalForm]], "InlineMath"],
 " at which the maximum and minimum normal principal stress ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "1"], TraditionalForm]], "InlineMath"],
 " occurs are given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"tan", "(", 
     RowBox[{"2", 
      SubscriptBox["\[Theta]", "1"]}], ")"}], "=", 
    FractionBox[
     RowBox[{"2", 
      SubscriptBox["\[Tau]", 
       RowBox[{"x", "\[InvisibleComma]", "y"}]]}], 
     RowBox[{
      SubscriptBox["\[Sigma]", "x"], "-", 
      SubscriptBox["\[Sigma]", "y"]}]]}], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Theta]", "2"], "=", 
    RowBox[{
     SubscriptBox["\[Theta]", "1"], "+", 
     FractionBox["\[Pi]", "2"]}]}], TraditionalForm]], "InlineMath"],
 ", respectively. The maximum and minimum normal principal stresses are given \
by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Sigma]", 
     RowBox[{"1", ",", "2"}]], "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["\[Sigma]", "x"], "+", 
       SubscriptBox["\[Sigma]", "y"]}], "2"], "\[MinusPlus]", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           SubscriptBox["\[Sigma]", "x"], "-", 
           SubscriptBox["\[Sigma]", "y"]}], "2"], ")"}], "2"], "+", 
       SubsuperscriptBox["\[Tau]", "xy", "2"]}]]}]}], TraditionalForm]], 
  "InlineMath"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "1"], TraditionalForm]], "InlineMath"],
 "is taken as the larger of the two principal stresses in absolute terms. The \
maximum shear stress is at ",
 Cell[BoxData[
  FormBox["45", TraditionalForm]], "InlineMath"],
 "\[Degree] from the principal plane and is given by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Tau]", "max"], "=", 
    RowBox[{"\[PlusMinus]", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["\[Sigma]", "1"], "-", 
       SubscriptBox["\[Sigma]", "2"]}], ")"}]}]}], TraditionalForm]], 
  "InlineMath"],
 ". At the principal planes the shear stress is always zero. Mohr's circle \
for plain stress can be viewed from the pulldown menu. You can view polar \
plots that show how the normal and shear stress change with angle.",
 " ",
 "You can select the angle to view the stresses by using the slider or select \
specific planes using the pulldown menu. All units are assumed to be in SI."
}], "DetailNotes",
 CellChangeTimes->{{3.5619617745313425`*^9, 3.5619621261744556`*^9}, {
   3.561962582555559*^9, 3.5619629792982516`*^9}, {3.5619630350754423`*^9, 
   3.561963840546512*^9}, {3.5619638736994085`*^9, 3.5619638763395596`*^9}, {
   3.5619639335718327`*^9, 3.5619640221148973`*^9}, {3.5619642455456767`*^9, 
   3.561964272067194*^9}, {3.561964321236006*^9, 3.5619644510534315`*^9}, {
   3.5621035518744197`*^9, 3.562103566170735*^9}, {3.5621357888424945`*^9, 
   3.5621358004024625`*^9}, {3.5621360559614143`*^9, 
   3.5621360803885164`*^9}, {3.562136151698571*^9, 3.5621362721683693`*^9}, {
   3.562138098029224*^9, 3.562138099672433*^9}, {3.5621673102011986`*^9, 
   3.562167380976686*^9}, {3.5621684874946957`*^9, 3.5621685054524765`*^9}, 
   3.562194217203454*^9, {3.5624431779564037`*^9, 3.5624431784354515`*^9}, {
   3.5626887755666533`*^9, 3.5626890357906322`*^9}, {3.562689250164772*^9, 
   3.5626892514645557`*^9}},
 CellID->615192373],

Cell["References", "DetailNotes",
 CellChangeTimes->{{3.561964050278508*^9, 3.561964052530637*^9}},
 CellID->228561007],

Cell[TextData[{
 "[1] A. C. Ugural, S. K. Fenster, A",
 StyleBox["dvanced Strength and Applied Elasticity",
  FontSlant->"Italic"],
 ", New York: Elsevier, 1987."
}], "DetailNotes",
 CellChangeTimes->{{3.561964056866885*^9, 3.561964173850576*^9}, {
  3.5619642805796804`*^9, 3.5619642816107397`*^9}, {3.56213628020889*^9, 
  3.562136280229393*^9}},
 CellID->11969127],

Cell[TextData[{
 "[2] REA's ",
 StyleBox["Problem Solver's Strength of Materials & Mechanics of Solids,",
  FontSlant->"Italic"],
 " New Jersey: Research and Education Association, 1996."
}], "DetailNotes",
 CellChangeTimes->{{3.5621362806799498`*^9, 3.562136368517104*^9}},
 CellID->523763402],

Cell[TextData[{
 "[3] Irving H. Shames, ",
 StyleBox["Mechanics of Deformable Solids",
  FontSlant->"Italic"],
 ", Prentice-Hall, Inc. N.J. 1964."
}], "DetailNotes",
 CellChangeTimes->{{3.562136369424219*^9, 3.5621364807438545`*^9}},
 CellID->494207300]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.561873492422254*^9, 3.5619642933204093`*^9, 
  3.562689065096257*^9},
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.5618734942379847`*^9},
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.561873496366255*^9},
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.5618734973498793`*^9, 3.5619642980636806`*^9, 
  3.562689056096046*^9},
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9, 
  3.562689056703623*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.562689057299712*^9},
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["plain stress", "SearchTerms",
 CellChangeTimes->{{3.561873506761075*^9, 3.5618735105295534`*^9}},
 CellID->319381005],

Cell["principal stress", "SearchTerms",
 CellChangeTimes->{{3.5618735122967777`*^9, 3.561873520361802*^9}},
 CellID->606174078],

Cell["normal stress", "SearchTerms",
 CellChangeTimes->{{3.5618735212889194`*^9, 3.5618735237377305`*^9}},
 CellID->10310692],

Cell["shear stress", "SearchTerms",
 CellChangeTimes->{{3.5618735241607842`*^9, 3.5618735263045564`*^9}, {
  3.5621947778671494`*^9, 3.5621947778691497`*^9}},
 CellID->19778927],

Cell["Mohr's circle", "SearchTerms",
 CellChangeTimes->{{3.5621947791048064`*^9, 3.562194783424855*^9}},
 CellID->17322940]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["analysis of stress",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://www.wolfram.com/products/applications/structural/features.\
html"], None},
 ButtonNote->
  "http://www.wolfram.com/products/applications/structural/features.html"]], \
"RelatedLinks",
 CellChangeTimes->{{3.561873700808716*^9, 3.561873723629614*^9}},
 CellID->673388848]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Nasser M. Abbasi",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Nasser%20M.%\
20Abbasi"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Nasser%20M.%20Abbasi"]
}], "Author",
 CellChangeTimes->{3.5616922450521483`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{748, 908},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[738211, 15330, 402, 10, 22, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[738616, 15342, 721, 17, 22, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[739340, 15361, 381, 12, 22, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[739724, 15375, 637, 15, 22, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[740364, 15392, 936, 23, 22, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[741303, 15417, 393, 10, 22, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[741699, 15429, 1505, 32, 22, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[743207, 15463, 908, 21, 22, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 746130, 15558},
 {"RotateAndZoomIn3D", 746242, 15561},
 {"DragLocators", 746354, 15564},
 {"CreateAndDeleteLocators", 746472, 15567},
 {"SliderZoom", 746588, 15570},
 {"GamepadControls", 746696, 15573},
 {"AutomaticAnimation", 746812, 15576},
 {"BookmarkAnimation", 746931, 15579}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 391, 5, 104, "DemoTitle"],
Cell[973, 29, 33, 0, 287, "InitializationSection"],
Cell[CellGroupData[{
Cell[1031, 33, 29, 0, 192, "ManipulateSection"],
Cell[CellGroupData[{
Cell[1085, 37, 231016, 4944, 16523, "Input"],
Cell[232104, 4983, 82036, 1656, 497, "Output",
 CellID->20327524]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[314189, 6645, 36, 0, 169, "ManipulateCaptionSection"],
Cell[314228, 6647, 2567, 45, 177, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316832, 6697, 28, 0, 173, "ThumbnailSection"],
Cell[316863, 6699, 82127, 1661, 497, "Output",
 CellID->29755794]
}, Open  ]],
Cell[CellGroupData[{
Cell[399027, 8365, 28, 0, 143, "SnapshotsSection"],
Cell[399058, 8367, 82140, 1661, 495, "Output",
 CellID->208795180],
Cell[481201, 10030, 82190, 1662, 495, "Output",
 CellID->129790433],
Cell[563394, 11694, 82186, 1662, 495, "Output",
 CellID->139090744],
Cell[645583, 13358, 82185, 1662, 495, "Output",
 CellID->11615141]
}, Open  ]],
Cell[CellGroupData[{
Cell[727805, 15025, 26, 0, 336, "DetailsSection"],
Cell[727834, 15027, 5618, 165, 144, "DetailNotes",
 CellID->123752843],
Cell[733455, 15194, 3634, 96, 143, "DetailNotes",
 CellID->615192373],
Cell[737092, 15292, 119, 2, 22, "DetailNotes",
 CellID->228561007],
Cell[737214, 15296, 367, 9, 22, "DetailNotes",
 CellID->11969127],
Cell[737584, 15307, 294, 7, 22, "DetailNotes",
 CellID->523763402],
Cell[737881, 15316, 253, 7, 22, "DetailNotes",
 CellID->494207300]
}, Open  ]],
Cell[CellGroupData[{
Cell[738171, 15328, 37, 0, 126, "ControlSuggestionsSection"],
Cell[738211, 15330, 402, 10, 22, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[738616, 15342, 721, 17, 22, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[739340, 15361, 381, 12, 22, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[739724, 15375, 637, 15, 22, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[740364, 15392, 936, 23, 22, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[741303, 15417, 393, 10, 22, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[741699, 15429, 1505, 32, 22, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[743207, 15463, 908, 21, 22, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[744152, 15489, 30, 0, 155, "SearchTermsSection"],
Cell[744185, 15491, 123, 2, 22, "SearchTerms",
 CellID->319381005],
Cell[744311, 15495, 127, 2, 22, "SearchTerms",
 CellID->606174078],
Cell[744441, 15499, 125, 2, 22, "SearchTerms",
 CellID->10310692],
Cell[744569, 15503, 177, 3, 22, "SearchTerms",
 CellID->19778927],
Cell[744749, 15508, 123, 2, 22, "SearchTerms",
 CellID->17322940]
}, Open  ]],
Cell[CellGroupData[{
Cell[744909, 15515, 31, 0, 141, "RelatedLinksSection"],
Cell[744943, 15517, 370, 9, 22, "RelatedLinks",
 CellID->673388848]
}, Open  ]],
Cell[CellGroupData[{
Cell[745350, 15531, 25, 0, 141, "AuthorSection"],
Cell[745378, 15533, 357, 10, 22, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

