(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframCDFPlayer 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       163,          7]
NotebookDataLength[    115268,       2845]
NotebookOptionsPosition[    110627,       2703]
NotebookOutlinePosition[    112240,       2753]
CellTagsIndexPosition[    111904,       2741]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Cooking a Turkey", "DemoTitle",
 CellChangeTimes->{3.657386750474023*^9}],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"px", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "*", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], "/", "3"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6567788286006064`*^9, {3.6574733024282827`*^9, 3.657473303049095*^9}, {
   3.6827025069563627`*^9, 3.6827025109085884`*^9}},
 CellID->77866667],

Cell[BoxData[
 RowBox[{
  RowBox[{"py", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "*", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]", "]"}], "/", "3"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6567788311057496`*^9, {3.657473303711957*^9, 3.6574733054643393`*^9}, {
   3.6827025147788095`*^9, 3.682702517248951*^9}},
 CellID->81566010],

Cell[BoxData[
 RowBox[{
  RowBox[{"pz", "=", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.656778832762844*^9},
 CellID->508810922],

Cell[BoxData[
 RowBox[{
  RowBox[{"ittasteslikeburning", "=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"0.5", "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"px", "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "#", "]"}], "/", "0.5"}]}], ",", 
               RowBox[{"py", "+", 
                RowBox[{"2", "*", 
                 RowBox[{
                  RowBox[{"Sin", "[", "#", "]"}], "/", "0.5"}]}]}], ",", 
               RowBox[{"pz", "+", "0.3"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]", ",", "0", ",", 
             RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"RGBColor", "[", 
             RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"px", "+", 
               RowBox[{"Cos", "[", "#", "]"}]}], ",", 
              RowBox[{"py", "+", 
               RowBox[{"2", "*", 
                RowBox[{"Sin", "[", "#", "]"}]}]}], ",", 
              RowBox[{"pz", "+", "0.3"}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]", ",", "0", ",", 
             RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Opacity", "[", 
             RowBox[{"0.5", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "1", ",", "0"}], "]"}]}], "]"}]}]}], "]"}]}],
         "}"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"2", "*", "\[Pi]"}], ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6567986342764263`*^9, 3.6567987349021816`*^9}, {
  3.6574733064592667`*^9, 3.6574733105434847`*^9}, {3.682450666372497*^9, 
  3.682450685783953*^9}, {3.6827025233052974`*^9, 3.6827025472546673`*^9}},
 CellID->461104687]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "mass", ",", "Toven", ",", "Traw", ",", "k", ",", "h", ",", "\[Alpha]", 
       ",", "\[Rho]", ",", "R", ",", "\[Xi]", ",", "T", ",", "Ti", ",", "To", 
       ",", "color", ",", "size", ",", "p1", ",", "p2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"unit", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mass2", "=", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"mass1", " ", "2.2"}], ",", "0.1"}], "]"}]}], ";", 
          RowBox[{"Toven2", "=", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"Toven1", "*", 
              RowBox[{"9", "/", "5"}]}], "+", "32"}], "]"}]}], ";", 
          RowBox[{"mass", "=", "mass1"}], ";", 
          RowBox[{"Toven", "=", "Toven1"}], ";"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"mass1", "=", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"mass2", "/", "2.2"}], ",", "0.1"}], "]"}]}], ";", 
          RowBox[{"Toven1", "=", 
           RowBox[{"Round", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Toven2", "-", "32"}], ")"}], "*", 
             RowBox[{"5", "/", "9"}]}], "]"}]}], ";", 
          RowBox[{"mass", "=", 
           RowBox[{"mass2", "/", "2.2"}]}], ";", 
          RowBox[{"Toven", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Toven2", "-", "32"}], ")"}], "*", 
            RowBox[{"5", "/", "9"}]}]}], ";"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Traw", "=", "10"}], ";", 
      RowBox[{"(*", "C", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"k", "=", "0.45"}], ";", "\[IndentingNewLine]", 
      RowBox[{"h", "=", "10"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", "1.4*^-7"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]", "=", "1070"}], ";", "\[IndentingNewLine]", 
      RowBox[{"R", "=", 
       RowBox[{"CubeRoot", "[", 
        RowBox[{
         FractionBox["3", 
          RowBox[{"4", "*", "\[Pi]"}]], "*", 
         FractionBox["mass", "\[Rho]"]}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"\[Xi]", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "/.", 
           RowBox[{"FindRoot", "[", 
            RowBox[{
             RowBox[{"1", "-", 
              RowBox[{"x", "*", 
               RowBox[{"Cot", "[", "x", "]"}]}], "-", 
              RowBox[{"h", "*", 
               RowBox[{"R", "/", "k"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"1*^-4", "+", 
                RowBox[{"#", "*", "\[Pi]"}]}]}], "}"}]}], "]"}]}], ")"}], 
         "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "100"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"T", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"unit", "\[Equal]", "1"}], ",", "#", ",", 
           RowBox[{
            RowBox[{"#", "*", 
             RowBox[{"9", "/", "5"}]}], "+", "32"}]}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"Traw", ",", "74", ",", "150", ",", 
          RowBox[{"Toven", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Toven", "-", "Traw"}], ")"}], "*", 
            RowBox[{"Total", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                FractionBox[
                 RowBox[{"4", "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Sin", "@", 
                    RowBox[{"\[Xi]", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Xi]", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "*", 
                    RowBox[{"Cos", "@", 
                    RowBox[{"\[Xi]", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}]}]}], ")"}]}], 
                 RowBox[{
                  RowBox[{"2", "*", 
                   RowBox[{"\[Xi]", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], "-", 
                  RowBox[{"Sin", "@", 
                   RowBox[{"(", 
                    RowBox[{"2", "*", 
                    RowBox[{"\[Xi]", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}]}]], "*", 
                FractionBox[
                 RowBox[{"Sin", "@", 
                  RowBox[{"(", 
                   RowBox[{"r", "*", 
                    RowBox[{"\[Xi]", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], 
                 RowBox[{"r", "*", 
                  RowBox[{"\[Xi]", "[", 
                   RowBox[{"[", "#", "]"}], "]"}]}]], "*", 
                RowBox[{"Exp", "[", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox[
                    RowBox[{"\[Xi]", "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "2"]}], "*", "\[Alpha]", 
                  "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"time", "*", "3600"}], ")"}], "/", 
                   SuperscriptBox["R", "2"]}]}], "]"}]}], "&"}], "/@", 
              RowBox[{"Range", "@", 
               RowBox[{"Length", "@", "\[Xi]"}]}]}], "]"}]}]}]}], "}"}]}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"\[Xi]", "=", 
         RowBox[{"Quiet", "@", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"#", ",", 
                RowBox[{"x", "/.", 
                 RowBox[{"FindRoot", "[", 
                  RowBox[{
                   RowBox[{"1", "-", 
                    RowBox[{"x", "*", 
                    RowBox[{"Cot", "[", "x", "]"}]}], "-", 
                    RowBox[{"h", "*", 
                    RowBox[{"R", "/", "k"}]}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", 
                    RowBox[{"1*^-4", "+", 
                    RowBox[{"#", "*", "\[Pi]"}]}]}], "}"}]}], "]"}]}]}], 
               "}"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", "100"}], "]"}]}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"T", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"unit", "\[Equal]", "1"}], ",", "#", ",", 
             RowBox[{
              RowBox[{"#", "*", 
               RowBox[{"9", "/", "5"}]}], "+", "32"}]}], "]"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"Traw", ",", "74", ",", "150", ",", 
            RowBox[{"Toven", "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Toven", "-", "Traw"}], ")"}], "*", 
              RowBox[{"Total", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  FractionBox[
                   RowBox[{"4", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Sin", "@", 
                    RowBox[{"\[Xi]", "[", "#", "]"}]}], "-", 
                    RowBox[{
                    RowBox[{"\[Xi]", "[", "#", "]"}], "*", 
                    RowBox[{"Cos", "@", 
                    RowBox[{"\[Xi]", "[", "#", "]"}]}]}]}], ")"}]}], 
                   RowBox[{
                    RowBox[{"2", "*", 
                    RowBox[{"\[Xi]", "[", "#", "]"}]}], "-", 
                    RowBox[{"Sin", "@", 
                    RowBox[{"(", 
                    RowBox[{"2", "*", 
                    RowBox[{"\[Xi]", "[", "#", "]"}]}], ")"}]}]}]], "*", 
                  FractionBox[
                   RowBox[{"Sin", "@", 
                    RowBox[{"(", 
                    RowBox[{"r", "*", 
                    RowBox[{"\[Xi]", "[", "#", "]"}]}], ")"}]}], 
                   RowBox[{"r", "*", 
                    RowBox[{"\[Xi]", "[", "#", "]"}]}]], "*", 
                  RowBox[{"Exp", "[", 
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox[
                    RowBox[{"\[Xi]", "[", "#", "]"}], "2"]}], "*", "\[Alpha]",
                     "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"time", "*", "3600"}], ")"}], "/", 
                    SuperscriptBox["R", "2"]}]}], "]"}]}], "&"}], "/@", 
                RowBox[{"Range", "[", 
                 RowBox[{"0", ",", "100"}], "]"}]}], "]"}]}]}]}], "}"}]}]}], 
        ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Ti", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"Last", "@", "T"}], "/.", 
         RowBox[{"r", "\[Rule]", "1*^-4"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"To", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"Last", "@", "T"}], "/.", 
         RowBox[{"r", "\[Rule]", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"color", "=", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 1., 0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.6666666666666667, 0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 1., 0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 1., 0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 1., 0.5],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.9, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.6000000000000001, 0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.9, 0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.9, 0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.9, 0.5],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.8, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.5333333333333334, 0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.8, 0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.8, 0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.8, 0.5],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.7000000000000001, 0.5], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.46666666666666673`, 
                 0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.7000000000000001, 0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.7000000000000001, 0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.7000000000000001, 0.5],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.6000000000000001, 0.5], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.4000000000000001, 0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.6000000000000001, 0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.6000000000000001, 0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.6000000000000001, 0.5],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.2666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0.4]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0.4]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0.4],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0.30000000000000004`], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 
                 0.20000000000000004`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0.30000000000000004]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0.30000000000000004`]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0.30000000000000004`],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 
                 0.13333333333333336`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0.2]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0.2]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0.2],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0.1], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.06666666666666668],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0.1]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0.1]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0.1],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0.]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0.],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1., 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0.5, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.9, 0.45, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6000000000000001, 0.30000000000000004`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.9, 0.45, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.9, 0.45, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.9, 0.45, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.8, 0.4, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.5333333333333334, 0.2666666666666667, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.8, 0.4, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.8, 0.4, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.8, 0.4, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.7, 0.35, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.4666666666666667, 0.23333333333333334`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.7, 0.35, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.7, 0.35, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.7, 0.35, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.6499999999999999, 0.32499999999999996`, 0.], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.4333333333333333, 0.21666666666666665`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.6499999999999999, 0.32499999999999996, 0.]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.6499999999999999, 0.32499999999999996`, 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.6499999999999999, 0.32499999999999996`, 0.],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.6, 0.3, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->RGBColor[0.4, 0.2, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.6, 0.3, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.6, 0.3, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.6, 0.3, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.5, 0.25, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.33333333333333337`, 0.16666666666666669`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.5, 0.25, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.5, 0.25, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.5, 0.25, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.3999999999999999, 0.19999999999999996`, 0], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.2666666666666666, 0.1333333333333333, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.3999999999999999, 0.19999999999999996, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.3999999999999999, 0.19999999999999996`, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.3999999999999999, 0.19999999999999996`, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.09999999999999998, 0.04999999999999999, 0], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.06666666666666665, 0.033333333333333326`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.09999999999999998, 0.04999999999999999, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.09999999999999998, 0.04999999999999999, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.09999999999999998, 0.04999999999999999, 0],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"Rescale", "[", 
          RowBox[{"To", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"T", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"T", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"size", "=", 
       RowBox[{"0.2", "*", 
        RowBox[{"Rescale", "[", 
         RowBox[{"mass", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"unit", "\[Equal]", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"22", ",", "2.2"}], "}"}]}], "]"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{"T", ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"None", ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Dashed", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0", ",", "0.6", ",", "0"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Dashed", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"0.9", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Black"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"unit", "\[Equal]", "1"}], ",", "#", ",", 
                RowBox[{
                 RowBox[{"#", "*", 
                  RowBox[{"9", "/", "5"}]}], "+", "32"}]}], "]"}], "&"}], "/@", 
             RowBox[{"{", 
              RowBox[{"Traw", ",", "300"}], "}"}]}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<distance from turkey center \>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"unit", "\[Equal]", "1"}], ",", "\"\<(cm)\>\"", ",", 
                 "\"\<(in)\>\""}], "]"}]}], "}"}]}], ",", 
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<temperature \>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"unit", "\[Equal]", "1"}], ",", 
                 "\"\<(\[Degree]C)\>\"", ",", "\"\<(\[Degree]F)\>\""}], 
                "]"}]}], "}"}]}]}], "}"}]}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"17", ",", "Black"}], "}"}]}], ",", 
         RowBox[{"PlotRangePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"None", ",", "5"}], "}"}]}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"350", ",", "400"}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"60", ",", "15"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50", ",", "5"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameTicks", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"unit", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"#", ",", 
                    RowBox[{"IntegerPart", "[", 
                    RowBox[{"3.5", "*", "2.54", "*", "#"}], "]"}]}], "}"}], 
                  "&"}], "/@", 
                 RowBox[{"{", 
                  RowBox[{
                  "0.225", ",", "0.4499", ",", "0.6749", ",", "0.8999"}], 
                  "}"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"#", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"3.5", "*", "#"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], "}"}], "&"}], "/@", 
                 RowBox[{"{", 
                  RowBox[{
                  "0.14286", ",", "0.2857", ",", "0.4286", ",", "0.5714", ",",
                    "0.7143", ",", "0.8571"}], "}"}]}]}], 
               "\[IndentingNewLine]", "]"}], ",", "Automatic"}], "}"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"color", ",", "\[IndentingNewLine]", 
              RowBox[{"Tube", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "0.75"}], ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0.75", ",", "0.25"}], "}"}]}], "}"}], 
                ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0.75", ",", "1"}], "}"}], "-", "size"}]}], "]"}], 
              ",", 
              RowBox[{"(*", "breast", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Tube", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.75", "-", "size"}], ")"}]}], ",", 
                    RowBox[{"-", "0.25"}], ",", 
                    RowBox[{"-", "0.25"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.75", "-", "size"}], ")"}]}], ",", 
                    RowBox[{"-", "1.75"}], ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.45", ",", "0.1"}], "}"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "size"}], ")"}]}]}], "]"}], ",", 
                  RowBox[{"Sphere", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", " ", 
                    RowBox[{"(", 
                    RowBox[{"0.75", "-", "size"}], ")"}]}], ",", 
                    RowBox[{"-", "1.75"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"0.2", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "size"}], ")"}]}]}], "]"}], ",", 
                  RowBox[{"(*", "legs", "*)"}], "\[IndentingNewLine]", 
                  RowBox[{"Tube", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "size"}], ")"}]}], ",", "0.45", ",", 
                    RowBox[{"-", "0.15"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "size"}], ")"}]}], ",", "1", ",", 
                    RowBox[{"-", "0.15"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "size"}], ")"}]}], ",", "0.25", ",", 
                    "0.5"}], "}"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0.2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "size"}], ")"}]}], ",", "0.15", ",", 
                    "0.075"}], "}"}], "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "size"}], ")"}]}]}], "]"}]}], "}"}], 
                "&"}], "/@", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], ",", 
            RowBox[{"(*", "wings", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", "dish", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"GrayLevel", "@", "0.5"}], ",", 
              RowBox[{"Scale", "[", 
               RowBox[{
                RowBox[{"Cylinder", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "0.75"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "0.7"}]}], "}"}]}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1.5", ",", "2.5", ",", "1"}], "}"}]}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<I'm really made out of tofu! Hahahahaha!\>\"", ",", "10", 
                ",", "Transparent"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", "timer", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"CapForm", "[", "\"\<Butt\>\"", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Tube", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.25", ",", "0.25", ",", 
                  RowBox[{"1", "-", "size"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.3", ",", "0.2", ",", 
                  RowBox[{"1.1", "*", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", "size"}], ")"}]}]}], "}"}]}], "}"}], 
              ",", "0.08"}], "]"}], ",", "\[IndentingNewLine]", "Green", ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Tube", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.3", ",", "0.2", ",", 
                    RowBox[{"1.1", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "size"}], ")"}]}]}], "}"}], "+", 
                    RowBox[{"#", " ", "s", " ", 
                    RowBox[{"{", 
                    RowBox[{"0.05", ",", 
                    RowBox[{"-", "0.05"}], ",", "0.1"}], "}"}]}]}], "&"}], "/@", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1"}], "}"}]}], ",", "0.03"}], "]"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"Tube", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.3", ",", "0.2", ",", 
                    RowBox[{"1.1", "*", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "size"}], ")"}]}]}], "}"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"s", "+", "#"}], ")"}], " ", 
                    RowBox[{"{", 
                    RowBox[{"0.05", ",", 
                    RowBox[{"-", "0.05"}], ",", "0.1"}], "}"}]}]}], "&"}], "/@", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0.05"}], "}"}]}], ",", "0.07"}], 
                "]"}]}], "}"}], "/.", 
             RowBox[{"s", "\[Rule]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"Ti", "<", 
                 RowBox[{"T", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ",", "0.1", ",", "2"}], 
               "]"}]}]}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"Ti", ">", 
              RowBox[{"T", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], ",", "ittasteslikeburning", 
             ",", 
             RowBox[{"Graphics3D", "[", "]"}]}], "]"}], ","}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1.5", " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
             RowBox[{"2.5", " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "z"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", 
             RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"z", ",", 
             RowBox[{"-", "0.75"}], ",", "0"}], "}"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"GrayLevel", "@", "0.5"}]}], ",", 
           RowBox[{"PlotPoints", "\[Rule]", "10"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"250", ",", "325"}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         RowBox[{"ViewPoint", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1.5", ",", 
            RowBox[{"-", "0.5"}], ",", "1"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.5"}], ",", "2.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.75"}], ",", "1.5"}], "}"}]}], "}"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"p1", ",", 
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Text", "@", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Row", "@", 
                  RowBox[{"{", 
                   RowBox[{"\"\<center temperature = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Ti", "<", "1*^-5"}], ",", "0", ",", "Ti"}], 
                    "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "0"}], "}"}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"unit", "\[Equal]", "1"}], ",", 
                    "\"\< \[Degree]C\>\"", ",", "\"\< \[Degree]F\>\""}], 
                    "]"}]}], "}"}]}], ",", "18"}], "]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "@", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Row", "@", 
                  RowBox[{"{", 
                   RowBox[{"\"\<outer temperature = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"To", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "0"}], "}"}]}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"unit", "\[Equal]", "1"}], ",", 
                    "\"\< \[Degree]C\>\"", ",", "\"\< \[Degree]F\>\""}], 
                    "]"}]}], "}"}]}], ",", "18"}], "]"}]}], ",", 
              "\[IndentingNewLine]", "p2"}], "}"}], ",", "Center"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PaneSelector", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"1", "\[Rule]", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "mass1", ",", "5", ",", "\"\<turkey mass (kg)\>\""}], "}"}],
                  ",", "1", ",", "10", ",", "0.1", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], 
              ",", "SpanFromLeft", ",", "SpanFromLeft", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"time", ",", "4.65", ",", "\"\<cook time (h)\>\""}],
                   "}"}], ",", "0.25", ",", "8.5", ",", "0.05", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"unit", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "\[Rule]", "\"\< \[Degree]C \>\""}], ",", 
                   RowBox[{"2", "\[Rule]", "\"\< \[Degree]F \>\""}]}], "}"}], 
                 ",", "Setter"}], "}"}], "]"}], ",", 
              RowBox[{"Spacer", "@", "25"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "Toven1", ",", "182", ",", 
                   "\"\<oven temperature (\[Degree]C)\>\""}], "}"}], ",", 
                 "80", ",", "300", ",", "1", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "SpanFromLeft"}], "}"}]}], 
           "\[IndentingNewLine]", "}"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "mass2", ",", "11", ",", "\"\<turkey mass (lbs)\>\""}], 
                  "}"}], ",", "2.2", ",", "22.", ",", "0.1", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], 
              ",", "SpanFromLeft", ",", "SpanFromLeft", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"time", ",", "4.65", ",", "\"\<cook time (h)\>\""}],
                   "}"}], ",", "0.25", ",", "8.5", ",", "0.05", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"unit", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "\[Rule]", "\"\< \[Degree]C \>\""}], ",", 
                   RowBox[{"2", "\[Rule]", "\"\< \[Degree]F \>\""}]}], "}"}], 
                 ",", "Setter"}], "}"}], "]"}], ",", 
              RowBox[{"Spacer", "@", "25"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "Toven2", ",", "360", ",", 
                   "\"\<oven temperature (\[Degree]F)\>\""}], "}"}], ",", 
                 "175", ",", "575", ",", "1", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                "}"}], "]"}], ",", "SpanFromLeft"}], "}"}]}], 
           "\[IndentingNewLine]", "}"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Dynamic", "@", "unit"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.6573868228861647`*^9, {3.657473314127163*^9, 3.657473444374796*^9}, {
   3.682450708299698*^9, 3.6824507786355963`*^9}, {3.682450828273121*^9, 
   3.6824509734532223`*^9}, {3.682451010907802*^9, 3.6824510464574842`*^9}, {
   3.6824511178842545`*^9, 3.6824512274772143`*^9}, {3.6824513017121367`*^9, 
   3.682451358576146*^9}, {3.6824514440254145`*^9, 3.682451465795272*^9}, {
   3.682451506414364*^9, 3.6824515123125753`*^9}, {3.68245429079173*^9, 
   3.6824543446858673`*^9}, {3.68245460013827*^9, 3.682454600214274*^9}, {
   3.68245473599549*^9, 3.6824547361046906`*^9}, {3.68245478228541*^9, 
   3.6824547824570103`*^9}, {3.6824549506703167`*^9, 
   3.6824549549703245`*^9}, {3.6824554239236617`*^9, 3.68245542730807*^9}, {
   3.682455470957697*^9, 3.6824555569964175`*^9}, {3.6824557692996564`*^9, 
   3.6824557716084604`*^9}, 3.6827857041818247`*^9, 3.6827859940130816`*^9, {
   3.6827860642162266`*^9, 3.682786067339634*^9}, {3.6827871254144907`*^9, 
   3.6827871323983197`*^9}, {3.6827875407668853`*^9, 
   3.6827875449676933`*^9}, {3.6827890692732196`*^9, 
   3.6827891263265505`*^9}, {3.6827893278363123`*^9, 3.682789665586424*^9}, {
   3.682789742437228*^9, 3.682789839623455*^9}, {3.6827899187670455`*^9, 
   3.6827899845659914`*^9}, {3.6827920830706043`*^9, 
   3.6827921039288497`*^9}, {3.6827921430063453`*^9, 3.6827921439589467`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`mass1$$ = 5, $CellContext`mass2$$ = 
    11., $CellContext`time$$ = 4.65, $CellContext`Toven1$$ = 
    182, $CellContext`Toven2$$ = 360, $CellContext`unit$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mass1$$], 5, "turkey mass (kg)"}, 1, 10, 0.1}, {{
       Hold[$CellContext`time$$], 4.65, "cook time (h)"}, 0.25, 8.5, 0.05}, {{
       Hold[$CellContext`unit$$], 1, ""}, {
      1 -> " \[Degree]C ", 2 -> " \[Degree]F "}}, {{
       Hold[$CellContext`Toven1$$], 182, "oven temperature (\[Degree]C)"}, 80,
       300, 1}, {{
       Hold[$CellContext`mass2$$], 11, "turkey mass (lbs)"}, 2.2, 22., 0.1}, {{
       Hold[$CellContext`time$$], 4.65, "cook time (h)"}, 0.25, 8.5, 0.05}, {{
       Hold[$CellContext`unit$$], 1, ""}, {
      1 -> " \[Degree]C ", 2 -> " \[Degree]F "}}, {{
       Hold[$CellContext`Toven2$$], 360, "oven temperature (\[Degree]F)"}, 
      175, 575, 1}, {
      Hold[
       PaneSelector[{1 -> Grid[{{
             Manipulate`Place[1], SpanFromLeft, SpanFromLeft, 
             Manipulate`Place[2]}, {
             Manipulate`Place[3], 
             Spacer[25], 
             Manipulate`Place[4], SpanFromLeft}}, Alignment -> Left], 2 -> 
         Grid[{{
             Manipulate`Place[5], SpanFromLeft, SpanFromLeft, 
             Manipulate`Place[6]}, {
             Manipulate`Place[7], 
             Spacer[25], 
             Manipulate`Place[8], SpanFromLeft}}, Alignment -> Left]}, 
        Dynamic[$CellContext`unit$$]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {608., {196.5, 203.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`mass1$227579$$ = 0, $CellContext`time$227580$$ = 
    0, $CellContext`unit$227581$$ = False, $CellContext`Toven1$227582$$ = 
    0, $CellContext`mass2$227583$$ = 0, $CellContext`Toven2$227584$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`mass1$$ = 5, $CellContext`mass2$$ = 
        11, $CellContext`time$$ = 4.65, $CellContext`Toven1$$ = 
        182, $CellContext`Toven2$$ = 360, $CellContext`unit$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`mass1$$, $CellContext`mass1$227579$$, 0], 
        Hold[$CellContext`time$$, $CellContext`time$227580$$, 0], 
        Hold[$CellContext`unit$$, $CellContext`unit$227581$$, False], 
        Hold[$CellContext`Toven1$$, $CellContext`Toven1$227582$$, 0], 
        Hold[$CellContext`mass2$$, $CellContext`mass2$227583$$, 0], 
        Hold[$CellContext`Toven2$$, $CellContext`Toven2$227584$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`mass$, $CellContext`Toven$, $CellContext`Traw$, \
$CellContext`k$, $CellContext`h$, $CellContext`\[Alpha]$, \
$CellContext`\[Rho]$, $CellContext`R$, $CellContext`\[Xi]$, $CellContext`T$, \
$CellContext`Ti$, $CellContext`To$, $CellContext`color$, $CellContext`size$, \
$CellContext`p1$, $CellContext`p2$}, 
        If[$CellContext`unit$$ == 
          1, {$CellContext`mass2$$ = 
            Round[$CellContext`mass1$$ 2.2, 0.1]; $CellContext`Toven2$$ = 
            Round[$CellContext`Toven1$$ (9/5) + 
              32]; $CellContext`mass$ = $CellContext`mass1$$; \
$CellContext`Toven$ = $CellContext`Toven1$$; 
           Null}, {$CellContext`mass1$$ = 
            Round[$CellContext`mass2$$/2.2, 0.1]; $CellContext`Toven1$$ = 
            Round[($CellContext`Toven2$$ - 32) (5/
               9)]; $CellContext`mass$ = $CellContext`mass2$$/
             2.2; $CellContext`Toven$ = ($CellContext`Toven2$$ - 32) (5/9); 
           Null}]; $CellContext`Traw$ = 10; $CellContext`k$ = 
         0.45; $CellContext`h$ = 10; $CellContext`\[Alpha]$ = 
         1.4*^-7; $CellContext`\[Rho]$ = 1070; $CellContext`R$ = 
         CubeRoot[(3/(4 
            Pi)) ($CellContext`mass$/$CellContext`\[Rho]$)]; $CellContext`\
\[Xi]$ = Map[ReplaceAll[$CellContext`x, 
            FindRoot[
            1 - $CellContext`x 
             Cot[$CellContext`x] - $CellContext`h$ \
($CellContext`R$/$CellContext`k$), {$CellContext`x, 
              Rational[1, 10000] + # Pi}]]& , 
           Range[0, 100]]; $CellContext`T$ = 
         Map[If[$CellContext`unit$$ == 1, #, # (9/5) + 
            32]& , {$CellContext`Traw$, 74, 
            150, $CellContext`Toven$ - ($CellContext`Toven$ - \
$CellContext`Traw$) Total[
              Map[(4 (Sin[
                   Part[$CellContext`\[Xi]$, #]] - 
                 Part[$CellContext`\[Xi]$, #] Cos[
                   Part[$CellContext`\[Xi]$, #]])/(
                2 Part[$CellContext`\[Xi]$, #] - Sin[
                2 Part[$CellContext`\[Xi]$, #]])) (
                Sin[$CellContext`r 
                  Part[$CellContext`\[Xi]$, #]]/($CellContext`r 
                Part[$CellContext`\[Xi]$, #])) 
               Exp[(-Part[$CellContext`\[Xi]$, #]^2) $CellContext`\[Alpha]$ \
(($CellContext`time$$ 3600)/$CellContext`R$^2)]& , 
               Range[
                Length[$CellContext`\[Xi]$]]]]}]; $CellContext`Ti$ = Evaluate[
           ReplaceAll[
            Last[$CellContext`T$], $CellContext`r -> 
            Rational[1, 10000]]]; $CellContext`To$ = Evaluate[
           ReplaceAll[
            Last[$CellContext`T$], $CellContext`r -> 1]]; $CellContext`color$ = 
         Blend[{
            RGBColor[1, 1., 0.5], 
            RGBColor[1, 0.9, 0.5], 
            RGBColor[1, 0.8, 0.5], 
            RGBColor[1, 0.7000000000000001, 0.5], 
            RGBColor[1, 0.6000000000000001, 0.5], 
            RGBColor[1, 0.5, 0.4], 
            RGBColor[1, 0.5, 0.30000000000000004`], 
            RGBColor[1, 0.5, 0.2], 
            RGBColor[1, 0.5, 0.1], 
            RGBColor[1, 0.5, 0.], 
            RGBColor[1., 0.5, 0], 
            RGBColor[0.9, 0.45, 0], 
            RGBColor[0.8, 0.4, 0], 
            RGBColor[0.7, 0.35, 0], 
            RGBColor[0.6499999999999999, 0.32499999999999996`, 0.], 
            RGBColor[0.6, 0.3, 0], 
            RGBColor[0.5, 0.25, 0], 
            RGBColor[0.3999999999999999, 0.19999999999999996`, 0], 
            RGBColor[0.09999999999999998, 0.04999999999999999, 0]}, 
           Rescale[$CellContext`To$, {
             Part[$CellContext`T$, 1], 
             Part[$CellContext`T$, 3]}]]; $CellContext`size$ = 
         0.2 Rescale[$CellContext`mass$, 
            
            If[$CellContext`unit$$ == 1, {10, 1}, {
             22, 2.2}]]; $CellContext`p1$ = 
         Plot[$CellContext`T$, {$CellContext`r, 0, 1}, 
           PlotStyle -> {None, {Thick, Dashed, 
              RGBColor[0, 0.6, 0]}, {Thick, Dashed, 
              RGBColor[0.9, 0, 0]}, {Thick, Black}}, PlotRange -> {{0, 1}, 
             Map[
             If[$CellContext`unit$$ == 1, #, # (9/5) + 
               32]& , {$CellContext`Traw$, 300}]}, Frame -> True, FrameLabel -> {
             Row[{"distance from turkey center ", 
               If[$CellContext`unit$$ == 1, "(cm)", "(in)"]}], 
             Row[{"temperature ", 
               
               If[$CellContext`unit$$ == 1, "(\[Degree]C)", 
                "(\[Degree]F)"]}]}, LabelStyle -> {17, Black}, 
           PlotRangePadding -> {None, 5}, ImageSize -> {350, 400}, 
           AspectRatio -> Full, ImagePadding -> {{60, 15}, {50, 5}}, 
           FrameTicks -> {Automatic, {
              If[$CellContext`unit$$ == 1, 
               Map[{#, 
                 IntegerPart[3.5 2.54 #]}& , {0.225, 0.4499, 0.6749, 0.8999}], 
               Map[{#, 
                 NumberForm[3.5 #, {2, 1}]}& , {0.14286, 0.2857, 0.4286, 
                0.5714, 0.7143, 0.8571}]], Automatic}}]; $CellContext`p2$ = 
         Show[
           Graphics3D[{{$CellContext`color$, 
              
              Tube[{{0, -0.75, 0}, {0, 0.75, 0.25}}, {
                0.75, 1} - $CellContext`size$], 
              Map[{
                
                Tube[{{# (0.75 - $CellContext`size$), -0.25, -0.25}, {# (
                    0.75 - $CellContext`size$), -1.75, 1}}, {0.45, 0.1} (
                  1 - $CellContext`size$)], 
                
                Sphere[{# (0.75 - $CellContext`size$), -1.75, 1}, 
                 0.2 (1 - $CellContext`size$)], 
                
                Tube[{{# (1 - $CellContext`size$), 
                   0.45, -0.15}, {# (1 - $CellContext`size$), 
                   1, -0.15}, {# (1 - $CellContext`size$), 0.25, 0.5}}, {
                  0.2 (1 - $CellContext`size$), 0.15, 0.075} (
                  1 - $CellContext`size$)]}& , {1, -1}]}, {
              GrayLevel[0.5], 
              Scale[
               Cylinder[{{0, 0, -0.75}, {0, 0, -0.7}}], {1.5, 2.5, 1}]}, 
             Text[
              Style[
              "I'm really made out of tofu! Hahahahaha!", 10, Transparent], {
              0, 0, 0}], 
             CapForm["Butt"], 
             
             Tube[{{0.25, 0.25, 1 - $CellContext`size$}, {
               0.3, 0.2, 1.1 (1 - $CellContext`size$)}}, 0.08], Green, 
             ReplaceAll[{
               Tube[
                
                Map[{0.3, 0.2, 
                   1.1 (1 - $CellContext`size$)} + # $CellContext`s {
                   0.05, -0.05, 0.1}& , {0, 1}], 0.03], 
               Tube[
                
                Map[{0.3, 0.2, 
                   1.1 (1 - $CellContext`size$)} + ($CellContext`s + #) {
                   0.05, -0.05, 0.1}& , {0, 0.05}], 0.07]}, $CellContext`s -> 
              If[$CellContext`Ti$ < Part[$CellContext`T$, 2], 0.1, 2]]}], 
           
           ParametricPlot3D[{
            1.5 Cos[$CellContext`\[Theta]], 2.5 
             Sin[$CellContext`\[Theta]], $CellContext`z}, {$CellContext`\
\[Theta], 0, 2 Pi}, {$CellContext`z, -0.75, 0}, Mesh -> None, PlotStyle -> 
            GrayLevel[0.5], PlotPoints -> 10, MaxRecursion -> 2], Boxed -> 
           False, ImageSize -> {250, 325}, AspectRatio -> Full, 
           ViewPoint -> {1.5, -0.5, 1}, 
           PlotRange -> {{-1.5, 1.5}, {-2.5, 2.5}, {-0.75, 1.5}}]; 
        Grid[{{$CellContext`p1$, 
            Column[{
              Text[
               Style[
                Row[{"center temperature = ", 
                  NumberForm[
                   If[$CellContext`Ti$ < Rational[1, 100000], 
                    0, $CellContext`Ti$], {3, 0}], 
                  
                  If[$CellContext`unit$$ == 1, " \[Degree]C", 
                   " \[Degree]F"]}], 18]], 
              Text[
               Style[
                Row[{"outer temperature = ", 
                  NumberForm[$CellContext`To$, {3, 0}], 
                  
                  If[$CellContext`unit$$ == 1, " \[Degree]C", 
                   " \[Degree]F"]}], 18]], $CellContext`p2$}, Center]}}]], 
      "Specifications" :> {{{$CellContext`mass1$$, 5, "turkey mass (kg)"}, 1, 
         10, 0.1, Appearance -> "Labeled", ImageSize -> Small, 
         ControlPlacement -> 
         1}, {{$CellContext`time$$, 4.65, "cook time (h)"}, 0.25, 8.5, 0.05, 
         Appearance -> "Labeled", ImageSize -> Small, ControlPlacement -> 
         2}, {{$CellContext`unit$$, 1, ""}, {
         1 -> " \[Degree]C ", 2 -> " \[Degree]F "}, ControlType -> Setter, 
         ControlPlacement -> 
         3}, {{$CellContext`Toven1$$, 182, "oven temperature (\[Degree]C)"}, 
         80, 300, 1, Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`mass2$$, 11, "turkey mass (lbs)"}, 2.2, 22., 0.1, 
         Appearance -> "Labeled", ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`time$$, 4.65, "cook time (h)"}, 0.25, 8.5, 0.05, 
         Appearance -> "Labeled", ImageSize -> Small, ControlPlacement -> 
         6}, {{$CellContext`unit$$, 1, ""}, {
         1 -> " \[Degree]C ", 2 -> " \[Degree]F "}, ControlType -> Setter, 
         ControlPlacement -> 
         7}, {{$CellContext`Toven2$$, 360, "oven temperature (\[Degree]F)"}, 
         175, 575, 1, Appearance -> "Labeled", ControlPlacement -> 8}, 
        PaneSelector[{1 -> Grid[{{
              Manipulate`Place[1], SpanFromLeft, SpanFromLeft, 
              Manipulate`Place[2]}, {
              Manipulate`Place[3], 
              Spacer[25], 
              Manipulate`Place[4], SpanFromLeft}}, Alignment -> Left], 2 -> 
          Grid[{{
              Manipulate`Place[5], SpanFromLeft, SpanFromLeft, 
              Manipulate`Place[6]}, {
              Manipulate`Place[7], 
              Spacer[25], 
              Manipulate`Place[8], SpanFromLeft}}, Alignment -> Left]}, 
         Dynamic[$CellContext`unit$$]]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{657., {255., 262.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({Attributes[PlotRange] = {ReadProtected}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6827860093303175`*^9, 3.682786074760048*^9, 3.682787135854926*^9, {
   3.682787548950503*^9, 3.682787556623518*^9}, 3.6827890728526263`*^9, 
   3.6827891043077044`*^9, 3.6827894938136125`*^9, {3.6827895287079124`*^9, 
   3.682789565893597*^9}, {3.682789616663932*^9, 3.6827896661480246`*^9}, {
   3.682789771961088*^9, 3.6827897907525263`*^9}, 3.682789840548857*^9, {
   3.682789944871711*^9, 3.682789988101206*^9}, 3.6827921067614555`*^9, 
   3.682792151193161*^9},
 CellID->31897901]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"mass2", ",", "11", ",", "\"\<turkey mass (lbs)\>\""}], 
              "}"}], ",", "2.2", ",", "22.", ",", "0.1", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"time", ",", "4.65", ",", "\"\<cook time (h)\>\""}], 
              "}"}], ",", "0.25", ",", "8.5", ",", "0.05", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], ",", 
          "SpanFromLeft"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "Toven2", ",", "360", ",", 
               "\"\<oven temperature (\[Degree]F)\>\""}], "}"}], ",", "175", 
             ",", "575", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
           "]"}], ",", "SpanFromLeft", ",", "\[IndentingNewLine]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"unit", ",", "2", ",", "\"\<\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "\[Rule]", "\"\< \[Degree]C \>\""}], ",", 
               RowBox[{"2", "\[Rule]", "\"\< \[Degree]F \>\""}]}], "}"}], ",",
              "Setter"}], "}"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
       "}"}], ",", 
      RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"2", "\[Rule]", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"mass2", ",", "11", ",", "\"\<turkey mass (lbs)\>\""}], 
              "}"}], ",", "2.2", ",", "22.", ",", "0.1", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], ",", 
          "SpanFromLeft", ",", "\[IndentingNewLine]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"time", ",", "4.65", ",", "\"\<cook time (h)\>\""}], 
              "}"}], ",", "0.25", ",", "8.5", ",", "0.05", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}]}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"unit", ",", "2", ",", "\"\<\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "\[Rule]", "\"\< \[Degree]C \>\""}], ",", 
               RowBox[{"2", "\[Rule]", "\"\< \[Degree]F \>\""}]}], "}"}], ",",
              "Setter"}], "}"}], "]"}], ",", 
          RowBox[{"Spacer", "@", "5"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "Toven2", ",", "360", ",", 
               "\"\<oven temperature (\[Degree]F)\>\""}], "}"}], ",", "175", 
             ",", "575", ",", "1", ",", 
             RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
           "]"}], ",", "SpanFromLeft"}], "}"}]}], "\[IndentingNewLine]", 
       "}"}], ",", 
      RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], "*)"}]}]], "Input",
 CellID->411167192]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
To demonstrate transient heat transfer, a turkey, which is modeled by a \
sphere, is cooked in a standard oven. Use sliders to set the mass of the \
turkey, oven temperature, and cooking time. The green dashed line represents \
the minimum safe temperature for the center of the turkey and the red dashed \
line represents the maximum acceptable temperature of the outer surface of \
the turkey. The black curve represents the temperature profile. When the \
temperature at the center of the turkey is above the green line, the pop-up \
timer (green and white) on the turkey goes off. If the center temperature \
goes above the red line, the turkey catches fire. Use the button to change \
the units from \[Degree]C and kg to \[Degree]F and lbs.\
\>", "ManipulateCaption",
 CellChangeTimes->{
  3.6573868393371058`*^9, {3.657473540632016*^9, 3.65747358014914*^9}, {
   3.657480214585639*^9, 3.657480222943725*^9}, 3.657480353244066*^9, {
   3.657480404186287*^9, 3.657480405605257*^9}, {3.65748046120041*^9, 
   3.657480473438384*^9}, {3.657480522012493*^9, 3.657480619487722*^9}, {
   3.657895070582206*^9, 3.657895079339705*^9}, {3.6578952994917583`*^9, 
   3.657895324240445*^9}, {3.6824515376804266`*^9, 3.682451565486081*^9}, {
   3.682451606852293*^9, 3.6824516972447367`*^9}}]
}, Open  ]],

Cell["", "ThumbnailSection"],

Cell["", "SnapshotsSection"],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell[TextData[{
 "A turkey is modeled as a sphere. The temperature ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]], "InlineMath"],
 " of the turkey at a distance ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]], "InlineMath"],
 " from its center at time ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]], "InlineMath"],
 " is:"
}], "DetailNotes",
 CellChangeTimes->{{3.6570527622566385`*^9, 3.6570528838435926`*^9}, 
   3.6571088170599537`*^9, {3.657384434853871*^9, 3.65738445628858*^9}, {
   3.6573845138066635`*^9, 3.6573845165918703`*^9}, {3.682456204712716*^9, 
   3.682456204712716*^9}},
 CellID->301883671],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "=", 
    RowBox[{
     SubscriptBox["T", "oven"], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["T", "oven"], "-", 
        SubscriptBox["T", "raw"]}], ")"}], " ", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"n", "=", "1"}], "\[Infinity]"], 
       RowBox[{
        FractionBox[
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"sin", " ", 
             SubscriptBox["z", "n"]}], "-", 
            RowBox[{
             SubscriptBox["z", "n"], " ", "cos", " ", 
             SubscriptBox["z", "n"]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"2", " ", 
           SubscriptBox["z", "n"]}], "-", 
          RowBox[{"sin", " ", 
           RowBox[{"(", 
            RowBox[{"2", " ", 
             SubscriptBox["z", "n"]}], ")"}]}]}]], " ", 
        FractionBox[
         RowBox[{"sin", " ", 
          RowBox[{"(", 
           RowBox[{"r", " ", 
            SubscriptBox["z", "n"]}], ")"}]}], 
         RowBox[{"r", " ", 
          SubscriptBox["z", "n"]}]], " ", 
        SuperscriptBox["e", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox["z", "n", "2"], " ", "\[Alpha]", " ", 
            RowBox[{"t", "/", 
             SuperscriptBox["R", "2"]}]}], ")"}]}]]}]}]}]}]}], 
   TraditionalForm]], "InlineMath"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.6570527622566385`*^9, 3.657053104669224*^9}, {
  3.6574736314790897`*^9, 3.657473631479155*^9}, {3.657478030506502*^9, 
  3.6574780452977257`*^9}, {3.6578953858722754`*^9, 3.6578953913722878`*^9}, {
  3.682456702156937*^9, 3.682456702907954*^9}},
 CellID->817955779],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", 
    RadicalBox[
     RowBox[{
      FractionBox["3", 
       RowBox[{"4", " ", "\[Pi]"}]], " ", 
      FractionBox["m", "\[Rho]"]}], "3"]}], TraditionalForm]], "InlineMath"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.6570527622566385`*^9, 3.657053115782859*^9}, {
  3.657053150115823*^9, 3.65705319587644*^9}, {3.6824571304462676`*^9, 
  3.682457135082489*^9}},
 CellID->3448772],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "oven"], TraditionalForm]], "InlineMath"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "raw"], TraditionalForm]], "InlineMath"],
 " are the oven temperature and temperature of the raw turkey (",
 Cell[BoxData[
  FormBox["\[Degree]C", TraditionalForm]], "InlineMath"],
 "), ",
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]], "InlineMath"],
 " is the thermal diffusivity (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     StyleBox["m",
      FontSlant->"Plain"], "2"], "/", 
    StyleBox["s",
     FontSlant->"Plain"]}], TraditionalForm]], "InlineMath"],
 "), ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]], "InlineMath"],
 " is mass (kg), ",
 Cell[BoxData[
  FormBox["\[Rho]", TraditionalForm]], "InlineMath"],
 " is density (",
 Cell[BoxData[
  FormBox[
   RowBox[{"kg", "/", 
    SuperscriptBox[
     StyleBox["m",
      FontSlant->"Plain"], "3"]}], TraditionalForm]], "InlineMath"],
 "), and ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]], "InlineMath"],
 " is time (s)."
}], "DetailNotes",
 CellChangeTimes->{{3.6570527622566385`*^9, 3.657053115782859*^9}, {
   3.657053150115823*^9, 3.6570532364547615`*^9}, {3.6570532776921196`*^9, 
   3.657053321304614*^9}, {3.6570536880265894`*^9, 3.6570537811109133`*^9}, {
   3.657054180085734*^9, 3.6570542133076344`*^9}, {3.657108854931388*^9, 
   3.657108872371101*^9}, 3.6573866979980216`*^9, 3.657895435439974*^9, {
   3.657895469402117*^9, 3.6578954787498627`*^9}, {3.6824571579224634`*^9, 
   3.6824571629378915`*^9}, 3.6824572813716993`*^9},
 CellID->51172395],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "n"], TraditionalForm]], "InlineMath"],
 " is the root of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "-", 
    RowBox[{
     SubscriptBox["z", "n"], " ", "cot", " ", 
     SubscriptBox["z", "n"]}], "-", 
    RowBox[{"h", " ", 
     RowBox[{"R", "/", "k"}]}]}], TraditionalForm]], "InlineMath"],
 ", where ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]], "InlineMath"],
 " is the heat transfer coefficient of air (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["W",
     FontSlant->"Plain"], "/", 
    RowBox[{"[", 
     RowBox[{
      SuperscriptBox[
       StyleBox["m",
        FontSlant->"Plain"], "2"], 
      StyleBox["K",
       FontSlant->"Plain"]}], 
     StyleBox["]",
      FontSlant->"Plain"]}]}], TraditionalForm]], "InlineMath"],
 ") and ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]], "InlineMath"],
 " is the thermal conductivity (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["W",
     FontSlant->"Plain"], "/", 
    RowBox[{"[", 
     RowBox[{
      StyleBox["m",
       FontSlant->"Plain"], " ", 
      StyleBox["K",
       FontSlant->"Plain"]}], "]"}]}], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ")."
}], "DetailNotes",
 CellChangeTimes->{{3.657054003192616*^9, 3.6570540031946163`*^9}, 
   3.657108904849916*^9, {3.657478097173386*^9, 3.657478120681404*^9}, {
   3.657480647922434*^9, 3.657480663153205*^9}, {3.657895209189245*^9, 
   3.65789520918927*^9}, {3.682456727927105*^9, 3.6824567360155354`*^9}, {
   3.6827023724296675`*^9, 3.6827024040544767`*^9}},
 CellID->624335279],

Cell["No turkeys were harmed in the making of this Demonstration.", \
"DetailNotes",
 CellChangeTimes->{{3.657054003192616*^9, 3.6570540181194696`*^9}, {
  3.6571089104166512`*^9, 3.657108915639999*^9}, {3.657480695948979*^9, 
  3.657480698876994*^9}, {3.6824571916497617`*^9, 3.6824571941853848`*^9}},
 CellID->222874358],

Cell["Reference", "DetailNotes",
 CellChangeTimes->{{3.6824573028891416`*^9, 3.6824573050157456`*^9}},
 CellID->427717218],

Cell[TextData[{
 "[1] ",
 StyleBox["Turkey Time",
  FontSlant->"Italic"],
 ". ",
 ButtonBox["blog.danallan.com/notes/2012/turkey-time/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://blog.danallan.com/notes/2012/turkey-time/"], None},
  ButtonNote->"http://blog.danallan.com/notes/2012/turkey-time/"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.6824573028891416`*^9, 3.6824573383972583`*^9}},
 CellID->63633842]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.6573868495616903`*^9},
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.6573868504317403`*^9},
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9, 
  3.65747814161292*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.6573868516378093`*^9},
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["heat transfer", "SearchTerms",
 CellChangeTimes->{{3.6570538647866993`*^9, 3.657053873167179*^9}, {
  3.6571086790973005`*^9, 3.6571086813388057`*^9}, {3.657108776757889*^9, 
  3.657108776760891*^9}},
 CellID->802170065],

Cell["temperature gradients", "SearchTerms",
 CellChangeTimes->{{3.6570538647866993`*^9, 3.657053873167179*^9}, {
  3.6571086790973005`*^9, 3.6571086813388057`*^9}, {3.657108776757889*^9, 
  3.657108792668573*^9}},
 CellID->271529426],

Cell["chemical engineering", "SearchTerms",
 CellChangeTimes->{{3.6570538647866993`*^9, 3.657053887385992*^9}, {
  3.6827672973504434`*^9, 3.6827672973584523`*^9}},
 CellID->503929715],

Cell["mechanical engineering", "SearchTerms",
 CellChangeTimes->{{3.68245735010168*^9, 3.6824573581761103`*^9}, {
  3.682767306129428*^9, 3.682767310468689*^9}},
 CellID->263661663],

Cell["cooking", "SearchTerms",
 CellChangeTimes->{{3.68245735010168*^9, 3.6824573594437127`*^9}},
 CellID->83254523]
}, Open  ]],

Cell["", "RelatedLinksSection"],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Rachael L. Baumann",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Rachael+L.+\
Baumann"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Rachael+L.+Baumann"],
 " and ",
 ButtonBox["Nathan S. Nelson",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Nathan%20S.%\
20Nelson"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Nathan%20S.%20Nelson"]
}], "Author",
 CellChangeTimes->{
  3.606789261638165*^9, {3.60750688386823*^9, 3.6075068989080896`*^9}, {
   3.6398451913805943`*^9, 3.6398452034752088`*^9}, {3.639845236578883*^9, 
   3.6398452580461617`*^9}, {3.654278308144349*^9, 3.654278310143463*^9}},
 CellID->924173377],

Cell[TextData[{
 "Additional contributions by: ",
 ButtonBox["John L. Falconer",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=John+L.+\
Falconer"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=John+L.+Falconer"]
}], "Author",
 CellChangeTimes->{
  3.606789261638165*^9, {3.60750688386823*^9, 3.6075068943138275`*^9}, 
   3.6089055927096667`*^9, {3.6089057612813087`*^9, 3.6089057774412327`*^9}, {
   3.649689889339411*^9, 3.649689945341614*^9}, 3.654278304362132*^9},
 CellID->674413765],

Cell["\<\
(University of Colorado Boulder, Department of Chemical and Biological \
Engineering)\
\>", "Author",
 CellID->192067664]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (April 11, 2016)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[102186, 2465, 355, 9, 22, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[102544, 2476, 678, 16, 22, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[103225, 2494, 340, 11, 22, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[103568, 2507, 637, 15, 22, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[104208, 2524, 887, 22, 22, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[105098, 2548, 392, 10, 22, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[105493, 2560, 1507, 32, 22, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[107003, 2594, 908, 21, 22, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 110996, 2714},
 {"RotateAndZoomIn3D", 111106, 2717},
 {"DragLocators", 111217, 2720},
 {"CreateAndDeleteLocators", 111334, 2723},
 {"SliderZoom", 111449, 2726},
 {"GamepadControls", 111556, 2729},
 {"AutomaticAnimation", 111671, 2732},
 {"BookmarkAnimation", 111789, 2735}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[585, 22, 79, 1, 74, "DemoTitle"],
Cell[CellGroupData[{
Cell[689, 27, 33, 0, 287, "InitializationSection"],
Cell[725, 29, 491, 14, 27, "Input",
 InitializationCell->True,
 CellID->77866667],
Cell[1219, 45, 489, 14, 27, "Input",
 InitializationCell->True,
 CellID->81566010],
Cell[1711, 61, 195, 6, 27, "Input",
 InitializationCell->True,
 CellID->508810922],
Cell[1909, 69, 2691, 65, 88, "Input",
 InitializationCell->True,
 CellID->461104687]
}, Open  ]],
Cell[CellGroupData[{
Cell[4637, 139, 29, 0, 234, "ManipulateSection"],
Cell[CellGroupData[{
Cell[4691, 143, 70611, 1671, 1645, "Input"],
Cell[75305, 1816, 14023, 279, 529, "Output",
 CellID->31897901]
}, Open  ]],
Cell[89343, 2098, 4331, 104, 248, "Input",
 CellID->411167192]
}, Open  ]],
Cell[CellGroupData[{
Cell[93711, 2207, 36, 0, 169, "ManipulateCaptionSection"],
Cell[93750, 2209, 1293, 19, 67, "ManipulateCaption"]
}, Open  ]],
Cell[95058, 2231, 28, 0, 173, "ThumbnailSection"],
Cell[95089, 2233, 28, 0, 131, "SnapshotsSection"],
Cell[CellGroupData[{
Cell[95142, 2237, 26, 0, 246, "DetailsSection"],
Cell[95171, 2239, 619, 16, 23, "DetailNotes",
 CellID->301883671],
Cell[95793, 2257, 1738, 52, 40, "DetailNotes",
 CellID->817955779],
Cell[97534, 2311, 447, 14, 50, "DetailNotes",
 CellID->3448772],
Cell[97984, 2327, 1630, 49, 26, "DetailNotes",
 CellID->51172395],
Cell[99617, 2378, 1613, 54, 26, "DetailNotes",
 CellID->624335279],
Cell[101233, 2434, 322, 5, 22, "DetailNotes",
 CellID->222874358],
Cell[101558, 2441, 122, 2, 22, "DetailNotes",
 CellID->427717218],
Cell[101683, 2445, 426, 13, 22, "DetailNotes",
 CellID->63633842]
}, Open  ]],
Cell[CellGroupData[{
Cell[102146, 2463, 37, 0, 126, "ControlSuggestionsSection"],
Cell[102186, 2465, 355, 9, 22, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[102544, 2476, 678, 16, 22, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[103225, 2494, 340, 11, 22, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[103568, 2507, 637, 15, 22, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[104208, 2524, 887, 22, 22, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[105098, 2548, 392, 10, 22, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[105493, 2560, 1507, 32, 22, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[107003, 2594, 908, 21, 22, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107948, 2620, 30, 0, 155, "SearchTermsSection"],
Cell[107981, 2622, 226, 4, 22, "SearchTerms",
 CellID->802170065],
Cell[108210, 2628, 234, 4, 22, "SearchTerms",
 CellID->271529426],
Cell[108447, 2634, 184, 3, 22, "SearchTerms",
 CellID->503929715],
Cell[108634, 2639, 181, 3, 22, "SearchTerms",
 CellID->263661663],
Cell[108818, 2644, 116, 2, 22, "SearchTerms",
 CellID->83254523]
}, Open  ]],
Cell[108949, 2649, 31, 0, 141, "RelatedLinksSection"],
Cell[CellGroupData[{
Cell[109005, 2653, 25, 0, 129, "AuthorSection"],
Cell[109033, 2655, 849, 22, 22, "Author",
 CellID->924173377],
Cell[109885, 2679, 580, 14, 22, "Author",
 CellID->674413765],
Cell[110468, 2695, 131, 4, 22, "Author",
 CellID->192067664]
}, Open  ]]
}, Open  ]]
}
]
*)

