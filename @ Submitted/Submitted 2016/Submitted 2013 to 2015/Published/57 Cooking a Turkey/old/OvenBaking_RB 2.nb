(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     87770,       2128]
NotebookOptionsPosition[     83839,       2005]
NotebookOutlinePosition[     85442,       2055]
CellTagsIndexPosition[     85114,       2043]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Your Title Here", "DemoTitle"],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"px", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "*", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Phi]", "]"}], "/", "3"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.6567788286006064`*^9},
 CellID->77866667],

Cell[BoxData[
 RowBox[{
  RowBox[{"py", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], "*", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]", "]"}], "/", "3"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.6567788311057496`*^9},
 CellID->81566010],

Cell[BoxData[
 RowBox[{
  RowBox[{"pz", "=", 
   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.656778832762844*^9},
 CellID->508810922],

Cell[BoxData[
 RowBox[{
  RowBox[{"ittasteslikeburning", "=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"0.5", "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"px", "+", 
                RowBox[{
                 RowBox[{"Cos", "[", "#", "]"}], "/", "0.5"}]}], ",", 
               RowBox[{"py", "+", 
                RowBox[{"2", "*", 
                 RowBox[{
                  RowBox[{"Sin", "[", "#", "]"}], "/", "0.5"}]}]}], ",", 
               RowBox[{"pz", "+", "0.3"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]", ",", "0", ",", 
             RowBox[{"2", "*", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Opacity", "[", 
             RowBox[{"1", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "]"}]}]}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"px", "+", 
               RowBox[{"Cos", "[", "#", "]"}]}], ",", 
              RowBox[{"py", "+", 
               RowBox[{"2", "*", 
                RowBox[{"Sin", "[", "#", "]"}]}]}], ",", 
              RowBox[{"pz", "+", "0.3"}]}], "}"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Phi]", ",", "0", ",", 
             RowBox[{"2", "*", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Opacity", "[", 
             RowBox[{"0.5", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{"1", ",", "1", ",", "0"}], "]"}]}], "]"}]}]}], "]"}]}],
         "}"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", 
        RowBox[{"2", "*", "\[Pi]"}], ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6567986342764263`*^9, 3.6567987349021816`*^9}},
 CellID->461104687]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "mass", ",", "Toven", ",", "Traw", ",", "k", ",", "h", ",", "\[Alpha]", 
       ",", "\[Rho]", ",", "R", ",", "\[Xi]", ",", "temperature", ",", "To", 
       ",", "Ti", ",", "color"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mass", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"unit", "\[Equal]", "1"}], ",", "mass1", ",", 
         RowBox[{"mass2", "/", "2.2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Toven", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"unit", "\[Equal]", "1"}], ",", "Toven1", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Toven2", "-", "32"}], ")"}], "*", 
          RowBox[{"5", "/", "9"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Traw", "=", "0"}], ";", 
      RowBox[{"(*", "C", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"k", "=", "0.45"}], ";", "\[IndentingNewLine]", 
      RowBox[{"h", "=", "10"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", "=", "1.4*^-7"}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Rho]", "=", "1070"}], ";", "\[IndentingNewLine]", 
      RowBox[{"R", "=", 
       RowBox[{"CubeRoot", "[", 
        RowBox[{
         FractionBox["3", 
          RowBox[{"4", "*", "\[Pi]"}]], "*", 
         FractionBox["mass", "\[Rho]"]}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"\[Xi]", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "/.", 
           RowBox[{"FindRoot", "[", 
            RowBox[{
             RowBox[{"1", "-", 
              RowBox[{"x", "*", 
               RowBox[{"Cot", "[", "x", "]"}]}], "-", 
              RowBox[{"h", "*", 
               RowBox[{"R", "/", "k"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"1*^-4", "+", 
                RowBox[{"\[Pi]", "*", "#"}]}]}], "}"}]}], "]"}]}], ")"}], 
         "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "100"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"temperature", "=", 
       RowBox[{"Toven", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Toven", "-", "Traw"}], ")"}], "*", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"4", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Sin", "@", 
                  RowBox[{"\[Xi]", "[", 
                   RowBox[{"[", "#", "]"}], "]"}]}], "-", 
                 RowBox[{
                  RowBox[{"\[Xi]", "[", 
                   RowBox[{"[", "#", "]"}], "]"}], "*", 
                  RowBox[{"Cos", "@", 
                   RowBox[{"\[Xi]", "[", 
                    RowBox[{"[", "#", "]"}], "]"}]}]}]}], ")"}]}], 
              RowBox[{
               RowBox[{"2", "*", 
                RowBox[{"\[Xi]", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], "-", 
               RowBox[{"Sin", "@", 
                RowBox[{"(", 
                 RowBox[{"2", "*", 
                  RowBox[{"\[Xi]", "[", 
                   RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}]}]], "*", 
             FractionBox[
              RowBox[{"Sin", "@", 
               RowBox[{"(", 
                RowBox[{"r", "*", 
                 RowBox[{"\[Xi]", "[", 
                  RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], 
              RowBox[{"r", "*", 
               RowBox[{"\[Xi]", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}]], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox[
                 RowBox[{"\[Xi]", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], "2"]}], "*", "\[Alpha]", 
               "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"t", "*", "3600"}], ")"}], "/", 
                SuperscriptBox["R", "2"]}]}], "]"}]}], "&"}], "/@", 
           RowBox[{"Range", "@", 
            RowBox[{"Length", "@", "\[Xi]"}]}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"To", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"temperature", "/.", 
         RowBox[{"r", "\[Rule]", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ti", "=", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"temperature", "/.", 
         RowBox[{"r", "\[Rule]", "0.0001"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"color", "=", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 1., 0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.6666666666666667, 0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 1., 0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 1., 0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 1., 0.5],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.9, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.6000000000000001, 0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.9, 0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.9, 0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.9, 0.5],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.8, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.5333333333333334, 0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.8, 0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.8, 0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.8, 0.5],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.7000000000000001, 0.5], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.46666666666666673`, 
                 0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.7000000000000001, 0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.7000000000000001, 0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.7000000000000001, 0.5],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.6000000000000001, 0.5], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.4000000000000001, 0.33333333333333337`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.6000000000000001, 0.5]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.6000000000000001, 0.5]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.6000000000000001, 0.5],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.2666666666666667],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0.4]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0.4]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0.4],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0.30000000000000004`], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 
                 0.20000000000000004`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0.30000000000000004]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0.30000000000000004`]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0.30000000000000004`],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 
                 0.13333333333333336`],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0.2]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0.2]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0.2],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0.1], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.06666666666666668],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0.1]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0.1]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0.1],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.5, 0.], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666666, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1, 0.5, 0.]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.5, 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.5, 0.],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1., 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6666666666666667, 0.33333333333333337`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[1., 0.5, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1., 0.5, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1., 0.5, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.9, 0.45, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.6000000000000001, 0.30000000000000004`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.9, 0.45, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.9, 0.45, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.9, 0.45, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.8, 0.4, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.5333333333333334, 0.2666666666666667, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.8, 0.4, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.8, 0.4, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.8, 0.4, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.7, 0.35, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.4666666666666667, 0.23333333333333334`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.7, 0.35, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.7, 0.35, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.7, 0.35, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.6499999999999999, 0.32499999999999996`, 0.], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.4333333333333333, 0.21666666666666665`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.6499999999999999, 0.32499999999999996, 0.]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.6499999999999999, 0.32499999999999996`, 0.]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.6499999999999999, 0.32499999999999996`, 0.],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.6, 0.3, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               FrameStyle->RGBColor[0.4, 0.2, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.6, 0.3, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.6, 0.3, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.6, 0.3, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.5, 0.25, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.33333333333333337`, 0.16666666666666669`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.5, 0.25, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.5, 0.25, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.5, 0.25, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.3999999999999999, 0.19999999999999996`, 0], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.2666666666666666, 0.1333333333333333, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.3999999999999999, 0.19999999999999996, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.3999999999999999, 0.19999999999999996`, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.3999999999999999, 0.19999999999999996`, 0],
            Editable->False,
            Selectable->False], ",", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.09999999999999998, 0.04999999999999999, 0], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               Frame->True,
               
               FrameStyle->RGBColor[
                0.06666666666666665, 0.033333333333333326`, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              "RGBColor[0.09999999999999998, 0.04999999999999999, 0]"],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.09999999999999998, 0.04999999999999999, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.09999999999999998, 0.04999999999999999, 0],
            Editable->False,
            Selectable->False]}], "}"}], ",", 
         RowBox[{"Rescale", "[", 
          RowBox[{"To", ",", 
           RowBox[{"{", 
            RowBox[{"Traw", ",", "150"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"74", ",", "150", ",", "temperature"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Dashed", ",", 
                 RowBox[{"RGBColor", "[", 
                  RowBox[{"0.", ",", "1", ",", "0.25"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Dashed", ",", "Red"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Black"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "300"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"PlotRangePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"None", ",", "5"}], "}"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<distance from turkey center\>\"", ",", "17"}], 
                "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<temperature  (\[Degree]C)\>\"", ",", "17"}], 
                "]"}]}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"14", ",", "Black"}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "335"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<the holiday's are ruined!\>\"", ",", "17", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"To", ">", "150"}], ",", "Black", ",", "White"}], 
                "]"}]}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Column", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Text", "@", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{"\"\<center temperature = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"Ti", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "0"}], "}"}]}], "]"}], ",", 
                    "\"\< \[Degree]C\>\""}], "}"}], "]"}], ",", "17"}], 
                "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Text", "@", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{"\"\<outer temperature = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"To", ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", "0"}], "}"}]}], "]"}], ",", 
                    "\"\< \[Degree]C\>\""}], "}"}], "]"}], ",", "17"}], 
                "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Show", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Graphics3D", "[", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"color", ",", "\[IndentingNewLine]", 
                    RowBox[{"Tube", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "0.75"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0.75", ",", "0.25"}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0.75", ",", "1"}], "}"}]}], "]"}], ",", 
                    RowBox[{"(*", "breast", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Tube", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "*", "0.75"}], ",", 
                    RowBox[{"-", "0.25"}], ",", 
                    RowBox[{"-", "0.25"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "*", "0.75"}], ",", 
                    RowBox[{"-", "1.75"}], ",", "1"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.45", ",", "0.1"}], "}"}]}], "]"}], ",", 
                    RowBox[{"Sphere", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "*", "0.75"}], ",", 
                    RowBox[{"-", "1.75"}], ",", "1"}], "}"}], ",", "0.2"}], 
                    "]"}], ",", 
                    RowBox[{"(*", "legs", "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"Tube", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "*", "1"}], ",", "0.45", ",", 
                    RowBox[{"-", "0.15"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "*", "1"}], ",", "1", ",", 
                    RowBox[{"-", "0.15"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "*", "1"}], ",", "0.25", ",", "0.5"}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2", ",", "0.15", ",", "0.075"}], "}"}]}], 
                    "]"}]}], "}"}], "&"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], ",", 
                   RowBox[{"(*", "wings", "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"(*", "dish", "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"GrayLevel", "[", "0.5", "]"}], ",", 
                    RowBox[{"Scale", "[", 
                    RowBox[{
                    RowBox[{"Cylinder", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "0.75"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "0.7"}]}], "}"}]}], "}"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.5", ",", "2.5", ",", "1"}], "}"}]}], "]"}]}], 
                    "}"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<I'm really made out of tofu! Hahahahaha!\>\"", ",", 
                    "10", ",", "Transparent"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], ","}], 
                  "\[IndentingNewLine]", "}"}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"Ti", ">", "150"}], ",", "ittasteslikeburning", 
                    ",", 
                    RowBox[{"Graphics3D", "[", "]"}]}], "]"}], ","}], "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"ParametricPlot3D", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"1.5", "*", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
                    RowBox[{"2.5", "*", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "z"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Theta]", ",", "0", ",", 
                    RowBox[{"2", "*", "\[Pi]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"z", ",", 
                    RowBox[{"-", "0.75"}], ",", "0"}], "}"}], ",", 
                  RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
                  RowBox[{"PlotStyle", "\[Rule]", 
                   RowBox[{"GrayLevel", "[", "0.5", "]"}]}], ",", 
                  RowBox[{"PlotPoints", "\[Rule]", "10"}], ",", 
                  RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"250", ",", "250"}], "}"}]}], ",", 
                RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
                RowBox[{"ViewPoint", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"1.5", ",", 
                   RowBox[{"-", "0.5"}], ",", "1"}], "}"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", "Center"}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PaneSelector", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"Column", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "mass1", ",", "5", ",", "\"\<turkey mass (kg)\>\""}], 
                   "}"}], ",", "1", ",", "10", ",", "0.1", ",", 
                  RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "Toven1", ",", "182", ",", 
                    "\"\<oven temperature (\[Degree]C)\>\""}], "}"}], ",", 
                  "80", ",", "300", ",", "1", ",", 
                  RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                 "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"2", "\[Rule]", 
            RowBox[{"Column", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "mass2", ",", "11", ",", "\"\<turkey mass (lbs)\>\""}], 
                   "}"}], ",", "2.2", ",", "22.", ",", "0.1", ",", 
                  RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "Toven2", ",", "360", ",", 
                    "\"\<oven temperature (\[Degree]F)\>\""}], "}"}], ",", 
                  "175", ",", "575", ",", "1", ",", 
                  RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                 "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}]}], 
          "\[IndentingNewLine]", "}"}], ",", 
         RowBox[{"Dynamic", "@", "unit"}]}], "]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t", ",", "4.65", ",", "\"\<cook time (h)\>\""}], "}"}], 
           ",", "0.25", ",", "8.5", ",", "0.05", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"unit", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "\[Rule]", "\"\< \[Degree]C \>\""}], ",", 
             RowBox[{"2", "\[Rule]", "\"\< \[Degree]F \>\""}]}], "}"}], ",", 
           "Setter"}], "}"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.6568398801475353`*^9, {3.65683994387418*^9, 3.6568399529616995`*^9}, {
   3.656840000186401*^9, 3.6568400013954697`*^9}, {3.6568400512503214`*^9, 
   3.656840080642003*^9}, {3.65684126195457*^9, 3.6568412653187623`*^9}, {
   3.6568412971325817`*^9, 3.656841297256589*^9}, {3.656841421317685*^9, 
   3.6568414223547444`*^9}, {3.656845565791735*^9, 3.656845589429087*^9}, {
   3.6568456217899384`*^9, 3.656845748529187*^9}, {3.6568457847202573`*^9, 
   3.6568458096196814`*^9}, {3.656845883288895*^9, 3.6568459934741974`*^9}, {
   3.6568460279341683`*^9, 3.6568460348065615`*^9}, {3.656846066861395*^9, 
   3.656846082110267*^9}, {3.656846140175588*^9, 3.6568462982266283`*^9}, {
   3.656846336863838*^9, 3.6568468673141785`*^9}, {3.6568469089625607`*^9, 
   3.656846920464218*^9}, {3.656846973379245*^9, 3.656847011900448*^9}, {
   3.6568470892338715`*^9, 3.656847489641773*^9}, 3.656847580522971*^9, {
   3.6568476171150646`*^9, 3.6568477671366453`*^9}, {3.656847821523756*^9, 
   3.6568479135770206`*^9}, {3.656848039853244*^9, 3.6568480705319986`*^9}, {
   3.6568481126514072`*^9, 3.6568481131244345`*^9}, {3.656848150162553*^9, 
   3.656848221216617*^9}, {3.656848251438346*^9, 3.6568483286607623`*^9}, {
   3.656848390034273*^9, 3.656848463154455*^9}, {3.656848549059368*^9, 
   3.6568485787630672`*^9}, {3.65684861709326*^9, 3.6568487081084657`*^9}, {
   3.6568487438265085`*^9, 3.656848785076868*^9}, {3.656848847864459*^9, 
   3.6568489762037997`*^9}, {3.6568490075275917`*^9, 
   3.6568490709942217`*^9}, {3.6568491069742794`*^9, 3.656849242622038*^9}, {
   3.656849287081581*^9, 3.656849302962489*^9}, {3.6568493333222256`*^9, 
   3.6568493857132225`*^9}, {3.656864964294266*^9, 3.6568649948560143`*^9}, 
   3.6568650440578284`*^9, {3.656865083958111*^9, 3.656865274444006*^9}, {
   3.6568653060118113`*^9, 3.656865409720743*^9}, {3.6568654944335885`*^9, 
   3.656865527118458*^9}, {3.6568656141464357`*^9, 3.656865663138238*^9}, 
   3.6568657116300116`*^9, {3.6568657429238014`*^9, 3.656865766482149*^9}, {
   3.656865856572302*^9, 3.656865881294716*^9}, {3.6568659677156587`*^9, 
   3.656865968208687*^9}, 3.6568662305426917`*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`mass1$$ = 5, $CellContext`mass2$$ = 
    11, $CellContext`t$$ = 4.65, $CellContext`Toven1$$ = 
    182, $CellContext`Toven2$$ = 360, $CellContext`unit$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mass1$$], 5, "turkey mass (kg)"}, 1, 10, 0.1}, {{
       Hold[$CellContext`Toven1$$], 182, "oven temperature (\[Degree]C)"}, 80,
       300, 1}, {{
       Hold[$CellContext`mass2$$], 11, "turkey mass (lbs)"}, 2.2, 22., 0.1}, {{
       Hold[$CellContext`Toven2$$], 360, "oven temperature (\[Degree]F)"}, 
      175, 575, 1}, {{
       Hold[$CellContext`t$$], 4.65, "cook time (h)"}, 0.25, 8.5, 0.05}, {{
       Hold[$CellContext`unit$$], 1, ""}, {
      1 -> " \[Degree]C ", 2 -> " \[Degree]F "}}, {
      Hold[
       Grid[{{
          PaneSelector[{1 -> Column[{
               Manipulate`Place[1], 
               Manipulate`Place[2]}], 2 -> Column[{
               Manipulate`Place[3], 
               Manipulate`Place[4]}]}, 
           Dynamic[$CellContext`unit$$]]}, {
          Manipulate`Place[5], 
          Manipulate`Place[6]}}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {593., {168.5, 175.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`mass1$2965$$ = 0, $CellContext`Toven1$2966$$ = 
    0, $CellContext`mass2$2967$$ = 0, $CellContext`Toven2$2968$$ = 
    0, $CellContext`t$2969$$ = 0, $CellContext`unit$2970$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`mass1$$ = 5, $CellContext`mass2$$ = 
        11, $CellContext`t$$ = 4.65, $CellContext`Toven1$$ = 
        182, $CellContext`Toven2$$ = 360, $CellContext`unit$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`mass1$$, $CellContext`mass1$2965$$, 0], 
        Hold[$CellContext`Toven1$$, $CellContext`Toven1$2966$$, 0], 
        Hold[$CellContext`mass2$$, $CellContext`mass2$2967$$, 0], 
        Hold[$CellContext`Toven2$$, $CellContext`Toven2$2968$$, 0], 
        Hold[$CellContext`t$$, $CellContext`t$2969$$, 0], 
        Hold[$CellContext`unit$$, $CellContext`unit$2970$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`mass$, $CellContext`Toven$, $CellContext`Traw$, \
$CellContext`k$, $CellContext`h$, $CellContext`\[Alpha]$, \
$CellContext`\[Rho]$, $CellContext`R$, $CellContext`\[Xi]$, \
$CellContext`temperature$, $CellContext`To$, $CellContext`Ti$, \
$CellContext`color$}, $CellContext`mass$ = 
         If[$CellContext`unit$$ == 
           1, $CellContext`mass1$$, $CellContext`mass2$$/
           2.2]; $CellContext`Toven$ = 
         If[$CellContext`unit$$ == 
           1, $CellContext`Toven1$$, ($CellContext`Toven2$$ - 32) (5/
            9)]; $CellContext`Traw$ = 0; $CellContext`k$ = 
         0.45; $CellContext`h$ = 10; $CellContext`\[Alpha]$ = 
         1.4*^-7; $CellContext`\[Rho]$ = 1070; $CellContext`R$ = 
         CubeRoot[(3/(4 
            Pi)) ($CellContext`mass$/$CellContext`\[Rho]$)]; $CellContext`\
\[Xi]$ = Map[ReplaceAll[$CellContext`x, 
            FindRoot[
            1 - $CellContext`x 
             Cot[$CellContext`x] - $CellContext`h$ \
($CellContext`R$/$CellContext`k$), {$CellContext`x, Rational[1, 10000] + 
              Pi #}]]& , 
           Range[
           0, 100]]; $CellContext`temperature$ = $CellContext`Toven$ - \
($CellContext`Toven$ - $CellContext`Traw$) Total[
            Map[(4 (Sin[
                 Part[$CellContext`\[Xi]$, #]] - Part[$CellContext`\[Xi]$, #] 
               Cos[
                 Part[$CellContext`\[Xi]$, #]])/(
              2 Part[$CellContext`\[Xi]$, #] - Sin[
              2 Part[$CellContext`\[Xi]$, #]])) (
              Sin[$CellContext`r 
                Part[$CellContext`\[Xi]$, #]]/($CellContext`r 
              Part[$CellContext`\[Xi]$, #])) 
             Exp[(-Part[$CellContext`\[Xi]$, #]^2) $CellContext`\[Alpha]$ \
(($CellContext`t$$ 3600)/$CellContext`R$^2)]& , 
             Range[
              Length[$CellContext`\[Xi]$]]]]; $CellContext`To$ = Evaluate[
           
           ReplaceAll[$CellContext`temperature$, $CellContext`r -> 
            1]]; $CellContext`Ti$ = Evaluate[
           
           ReplaceAll[$CellContext`temperature$, $CellContext`r -> 
            0.0001]]; $CellContext`color$ = Blend[{
            RGBColor[1, 1., 0.5], 
            RGBColor[1, 0.9, 0.5], 
            RGBColor[1, 0.8, 0.5], 
            RGBColor[1, 0.7000000000000001, 0.5], 
            RGBColor[1, 0.6000000000000001, 0.5], 
            RGBColor[1, 0.5, 0.4], 
            RGBColor[1, 0.5, 0.30000000000000004`], 
            RGBColor[1, 0.5, 0.2], 
            RGBColor[1, 0.5, 0.1], 
            RGBColor[1, 0.5, 0.], 
            RGBColor[1., 0.5, 0], 
            RGBColor[0.9, 0.45, 0], 
            RGBColor[0.8, 0.4, 0], 
            RGBColor[0.7, 0.35, 0], 
            RGBColor[0.6499999999999999, 0.32499999999999996`, 0.], 
            RGBColor[0.6, 0.3, 0], 
            RGBColor[0.5, 0.25, 0], 
            RGBColor[0.3999999999999999, 0.19999999999999996`, 0], 
            RGBColor[0.09999999999999998, 0.04999999999999999, 0]}, 
           Rescale[$CellContext`To$, {$CellContext`Traw$, 150}]]; Grid[{{
            
            Plot[{74, 150, $CellContext`temperature$}, {$CellContext`r, 0, 1},
              PlotStyle -> {{Thick, Dashed, 
                RGBColor[0., 1, 0.25]}, {Thick, Dashed, Red}, {Thick, Black}},
              PlotRange -> {{0, 1}, {0, 300}}, PlotRangePadding -> {None, 5}, 
             Frame -> True, FrameLabel -> {
               Style["distance from turkey center", 17], 
               Style["temperature  (\[Degree]C)", 17]}, 
             LabelStyle -> {14, Black}, ImageSize -> 335, AspectRatio -> 1, 
             PlotLabel -> Style["the holiday's are ruined!", 17, 
               If[$CellContext`To$ > 150, Black, White]]], 
            Column[{
              Text[
               Style[
                Row[{"center temperature = ", 
                  NumberForm[$CellContext`Ti$, {4, 0}], " \[Degree]C"}], 17]], 
              Text[
               Style[
                Row[{"outer temperature = ", 
                  NumberForm[$CellContext`To$, {4, 0}], " \[Degree]C"}], 17]], 
              Show[
               Graphics3D[{{$CellContext`color$, 
                  Tube[{{0, -0.75, 0}, {0, 0.75, 0.25}}, {0.75, 1}], 
                  Map[{
                    
                    Tube[{{# 0.75, -0.25, -0.25}, {# 0.75, -1.75, 1}}, {0.45, 
                    0.1}], 
                    Sphere[{# 0.75, -1.75, 1}, 0.2], 
                    
                    Tube[{{# 1, 0.45, -0.15}, {# 1, 1, -0.15}, {# 1, 0.25, 
                    0.5}}, {0.2, 0.15, 0.075}]}& , {1, -1}]}, {
                  GrayLevel[0.5], 
                  Scale[
                   Cylinder[{{0, 0, -0.75}, {0, 0, -0.7}}], {1.5, 2.5, 1}]}, 
                 Text[
                  Style[
                  "I'm really made out of tofu! Hahahahaha!", 10, 
                   Transparent], {0, 0, 0}], Null}], 
               
               ParametricPlot3D[{
                1.5 Cos[$CellContext`\[Theta]], 2.5 
                 Sin[$CellContext`\[Theta]], $CellContext`z}, {$CellContext`\
\[Theta], 0, 2 Pi}, {$CellContext`z, -0.75, 0}, Mesh -> None, PlotStyle -> 
                GrayLevel[0.5], PlotPoints -> 10, MaxRecursion -> 2], Boxed -> 
               False, ImageSize -> {250, 250}, AspectRatio -> Full, 
               ViewPoint -> {1.5, -0.5, 1}]}, Center]}}]], 
      "Specifications" :> {{{$CellContext`mass1$$, 5, "turkey mass (kg)"}, 1, 
         10, 0.1, Appearance -> "Labeled", ControlPlacement -> 
         1}, {{$CellContext`Toven1$$, 182, "oven temperature (\[Degree]C)"}, 
         80, 300, 1, Appearance -> "Labeled", ControlPlacement -> 
         2}, {{$CellContext`mass2$$, 11, "turkey mass (lbs)"}, 2.2, 22., 0.1, 
         Appearance -> "Labeled", ControlPlacement -> 
         3}, {{$CellContext`Toven2$$, 360, "oven temperature (\[Degree]F)"}, 
         175, 575, 1, Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`t$$, 4.65, "cook time (h)"}, 0.25, 8.5, 0.05, 
         Appearance -> "Labeled", ControlPlacement -> 
         5}, {{$CellContext`unit$$, 1, ""}, {
         1 -> " \[Degree]C ", 2 -> " \[Degree]F "}, ControlType -> Setter, 
         ControlPlacement -> 6}, 
        Grid[{{
           PaneSelector[{1 -> Column[{
                Manipulate`Place[1], 
                Manipulate`Place[2]}], 2 -> Column[{
                Manipulate`Place[3], 
                Manipulate`Place[4]}]}, 
            Dynamic[$CellContext`unit$$]]}, {
           Manipulate`Place[5], 
           Manipulate`Place[6]}}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{642., {243., 250.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({Attributes[PlotRange] = {ReadProtected}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.656839896880492*^9, 3.6568399541487675`*^9, 3.656840002109511*^9, 
   3.656840083894189*^9, {3.656841242396451*^9, 3.656841297771619*^9}, 
   3.656841423036783*^9, {3.6568456950591288`*^9, 3.656845705517727*^9}, {
   3.656845738764629*^9, 3.6568457519633837`*^9}, 3.6568457981530256`*^9, 
   3.6568459747701273`*^9, {3.65684602884422*^9, 3.656846042338992*^9}, 
   3.656846085083437*^9, 3.6568461465059505`*^9, {3.6568462051853065`*^9, 
   3.656846218217052*^9}, {3.6568462742302556`*^9, 3.656846299073677*^9}, 
   3.656846448386217*^9, 3.656846513982969*^9, {3.656846591708414*^9, 
   3.656846645701503*^9}, 3.656846717814627*^9, {3.6568467593550034`*^9, 
   3.656846834511302*^9}, 3.6568468679522147`*^9, 3.6568469787115498`*^9, {
   3.656847213077955*^9, 3.6568472346131864`*^9}, {3.656847297778799*^9, 
   3.6568473096694794`*^9}, {3.656847351371865*^9, 3.656847383125681*^9}, 
   3.6568474137874346`*^9, {3.6568474494114723`*^9, 3.656847493461992*^9}, 
   3.6568475819080505`*^9, {3.656847636031146*^9, 3.6568476457587023`*^9}, {
   3.656847694924515*^9, 3.6568477562640233`*^9}, 3.6568479247686615`*^9, 
   3.65684808087859*^9, 3.656848121405908*^9, {3.6568481785361757`*^9, 
   3.6568482230277205`*^9}, 3.6568482691933613`*^9, {3.6568483112497663`*^9, 
   3.6568483363142004`*^9}, {3.6568483977987165`*^9, 3.6568484636514835`*^9}, 
   3.6568484943952417`*^9, {3.656848564313241*^9, 3.656848579907133*^9}, {
   3.6568486330831747`*^9, 3.6568486653090177`*^9}, 3.656848698359908*^9, 
   3.6568487300087185`*^9, 3.656848788808081*^9, {3.6568488606081877`*^9, 
   3.6568490719152737`*^9}, {3.656849209282131*^9, 3.6568492449141693`*^9}, {
   3.65684929248289*^9, 3.6568493118309965`*^9}, 3.65684938147898*^9, 
   3.6568494298087444`*^9, 3.6568650079767647`*^9, 3.656865050444194*^9, {
   3.6568652641104145`*^9, 3.656865275154046*^9}, {3.6568653372405977`*^9, 
   3.6568653475841894`*^9}, {3.65686538466431*^9, 3.656865410612794*^9}, 
   3.656865676759017*^9, 3.6568657135001183`*^9, {3.656865743619841*^9, 
   3.6568657676792173`*^9}, 3.6568658884501247`*^9, 3.656865969220745*^9, 
   3.6569479838508787`*^9},
 CellID->210987863]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"N", "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#", "*", 
       RowBox[{"9", "/", "5"}]}], "+", "32"}], ")"}]}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"74", ",", "150"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.656865577449337*^9, 3.656865603054801*^9}, {
  3.6569480068521943`*^9, 3.6569480149326563`*^9}},
 CellID->248898421],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"165.2`", ",", "302.`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6568656053509326`*^9, {3.6569480108704243`*^9, 3.6569480153866825`*^9}},
 CellID->761969500]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", 
   RowBox[{"(", 
    RowBox[{"360", "-", "32"}], ")"}]}], "*", 
  RowBox[{"5", "/", "9"}]}]], "Input",
 CellChangeTimes->{{3.656865836926178*^9, 3.6568658491898794`*^9}},
 CellID->140950060],

Cell[BoxData["182.22222222222223`"], "Output",
 CellChangeTimes->{{3.6568658462747126`*^9, 3.6568658495519*^9}},
 CellID->480395456]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["XXXX", "ManipulateCaption"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[1]], RectangleBox[{0, 0}], 
   InsetBox[
    StyleBox["\<\"Thumbnail Placeholder\"\>",
     StripOnInput->False,
     FontFamily->"Verdana",
     FontSize->14], {0.5, 0.6}], InsetBox[
    StyleBox["\<\"Replace this with your\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.45}], InsetBox[
    StyleBox["\<\"Manipulate at a particular setting.\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.39}], InsetBox[
    StyleBox["\<\"(Do not use a bitmap.)\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.315}]},
  ImageMargins->0.,
  ImageSize->220]], "Output",
 CellEditDuplicate->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[1]], RectangleBox[{0, 0}], 
   InsetBox[
    StyleBox["\<\"Snapshot Placeholder\"\>",
     StripOnInput->False,
     FontFamily->"Verdana",
     FontSize->14], {0.5, 0.6}], InsetBox[
    StyleBox["\<\"Replace this with your\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.45}], InsetBox[
    StyleBox["\<\"Manipulate at a particular setting.\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.39}], InsetBox[
    StyleBox["\<\"(Do not use a bitmap.)\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.315}]},
  ImageMargins->0.,
  ImageSize->220]], "Output",
 CellEditDuplicate->False]
}, Open  ]],

Cell["", "DetailsSection"],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell["", "SearchTermsSection"],

Cell["", "RelatedLinksSection"],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell["Contributed by: XXXX", "Author"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[78068, 1844, 312, 8, 70, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[78383, 1854, 678, 16, 70, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[79064, 1872, 340, 11, 70, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[79407, 1885, 637, 15, 70, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[80047, 1902, 844, 21, 70, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[80894, 1925, 369, 9, 70, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[81266, 1936, 1464, 31, 70, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[82733, 1969, 908, 21, 70, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 84215, 2016},
 {"RotateAndZoomIn3D", 84324, 2019},
 {"DragLocators", 84434, 2022},
 {"CreateAndDeleteLocators", 84550, 2025},
 {"SliderZoom", 84664, 2028},
 {"GamepadControls", 84770, 2031},
 {"AutomaticAnimation", 84883, 2034},
 {"BookmarkAnimation", 85000, 2037}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 36, 0, 74, "DemoTitle"],
Cell[CellGroupData[{
Cell[641, 26, 33, 0, 287, "InitializationSection"],
Cell[677, 28, 386, 12, 27, "Input",
 InitializationCell->True,
 CellID->77866667],
Cell[1066, 42, 386, 12, 27, "Input",
 InitializationCell->True,
 CellID->81566010],
Cell[1455, 56, 195, 6, 27, "Input",
 InitializationCell->True,
 CellID->508810922],
Cell[1653, 64, 2621, 65, 88, "Input",
 InitializationCell->True,
 CellID->461104687]
}, Open  ]],
Cell[CellGroupData[{
Cell[4311, 134, 29, 0, 234, "ManipulateSection"],
Cell[CellGroupData[{
Cell[4365, 138, 57897, 1340, 1215, "Input"],
Cell[62265, 1480, 11923, 225, 505, "Output",
 CellID->210987863]
}, Open  ]],
Cell[CellGroupData[{
Cell[74225, 1710, 388, 12, 27, "Input",
 CellID->248898421],
Cell[74616, 1724, 199, 5, 25, "Output",
 CellID->761969500]
}, Open  ]],
Cell[CellGroupData[{
Cell[74852, 1734, 235, 7, 27, "Input",
 CellID->140950060],
Cell[75090, 1743, 132, 2, 25, "Output",
 CellID->480395456]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75271, 1751, 36, 0, 169, "ManipulateCaptionSection"],
Cell[75310, 1753, 33, 0, 22, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75380, 1758, 28, 0, 173, "ThumbnailSection"],
Cell[75411, 1760, 1242, 34, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76690, 1799, 28, 0, 143, "SnapshotsSection"],
Cell[76721, 1801, 1241, 34, 230, "Output"]
}, Open  ]],
Cell[77977, 1838, 26, 0, 70, "DetailsSection"],
Cell[CellGroupData[{
Cell[78028, 1842, 37, 0, 70, "ControlSuggestionsSection"],
Cell[78068, 1844, 312, 8, 70, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[78383, 1854, 678, 16, 70, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[79064, 1872, 340, 11, 70, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[79407, 1885, 637, 15, 70, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[80047, 1902, 844, 21, 70, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[80894, 1925, 369, 9, 70, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[81266, 1936, 1464, 31, 70, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[82733, 1969, 908, 21, 70, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[83656, 1993, 30, 0, 70, "SearchTermsSection"],
Cell[83689, 1995, 31, 0, 70, "RelatedLinksSection"],
Cell[CellGroupData[{
Cell[83745, 1999, 25, 0, 70, "AuthorSection"],
Cell[83773, 2001, 38, 0, 70, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
