(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     81882,       1542]
NotebookOptionsPosition[     81245,       1516]
NotebookOutlinePosition[     81588,       1531]
CellTagsIndexPosition[     81545,       1528]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\[Theta]1", ",", "x1", ",", "x2", ",", "\[Theta]2", ",", "x3", ",", 
        "x4"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Theta]1", "=", 
        RowBox[{"ArcSin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.5", "-", "v"}], ")"}], "/", "0.5"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x1", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"v", "<", "0.5"}], ",", 
          RowBox[{"0.5", "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "-", "\[Theta]1"}], "]"}]}], ",", 
          RowBox[{"-", "0.5"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x2", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"v", "<", "0.5"}], ",", 
          RowBox[{"0.5", "*", 
           RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], ",", "0.5"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"\[Theta]2", "=", 
        RowBox[{"ArcSin", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"v", "-", "0.5"}], ")"}], "/", "0.5"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x3", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"v", ">", "0.5"}], ",", 
          RowBox[{"0.5", "*", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], "-", "\[Theta]2"}], "]"}]}], ",", 
          RowBox[{"-", "0.5"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"x4", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"v", ">", "0.5"}], ",", 
          RowBox[{"0.5", "*", 
           RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], ",", "0.5"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0.5"}], "}"}], ",", "0.5"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Point", "/@", 
              RowBox[{"Tuples", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"i", ",", "v"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "x1", ",", "x2", ",", "0.05"}], "}"}]}], 
                 "]"}], ",", 
                RowBox[{"10", "*", "v"}]}], "]"}]}]}], "\[IndentingNewLine]", 
            "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{"Point", "/@", 
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", ",", "v"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "x1", ",", "x2", ",", "0.05"}], "}"}]}], 
            "]"}], ",", "2"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"v", ",", "0.2", ",", "\"\<\>\""}], "}"}], ",", "0.01", ",", 
      "0.4", ",", "0.01", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.632682477963089*^9, 3.63268250928088*^9}, {
   3.6326826171060476`*^9, 3.632682638973298*^9}, {3.6326826903112345`*^9, 
   3.6326826985207043`*^9}, {3.632682736879898*^9, 3.6326828039387336`*^9}, {
   3.6326828351775208`*^9, 3.6326829204974003`*^9}, {3.632682959251617*^9, 
   3.6326829876132393`*^9}, {3.632683194684083*^9, 3.6326832168743525`*^9}, {
   3.6326832676152544`*^9, 3.632683282606112*^9}, {3.6326833723052425`*^9, 
   3.632683437856992*^9}, {3.632683468524746*^9, 3.63268347209795*^9}, 
   3.632683628411891*^9, 3.6326837549281273`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Point", "/@", 
   RowBox[{"Tuples", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", "Pi", " ", 
           RowBox[{"i", "/", "8"}]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "Pi", " ", 
           RowBox[{"i", "/", "8"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "8"}], "}"}]}], "]"}], ",", "2"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6326833326179724`*^9, 3.632683354856244*^9}}],

Cell[BoxData[
 GraphicsBox[{
   PointBox[NCache[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
      2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0.7071067811865475, 
     0.7071067811865475}, {0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[NCache[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {0, 1}}, {{
      0.7071067811865475, 0.7071067811865475}, {0, 1}}]], 
   PointBox[NCache[{{
      2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
       Rational[-1, 2]}}, {{0.7071067811865475, 
     0.7071067811865475}, {-0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[NCache[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {-1, 0}}, {{
      0.7071067811865475, 0.7071067811865475}, {-1, 0}}]], 
   PointBox[NCache[{{
      2^Rational[-1, 2], 2^
       Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
     0.7071067811865475, 
     0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[NCache[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {0, -1}}, {{
      0.7071067811865475, 0.7071067811865475}, {0, -1}}]], 
   PointBox[NCache[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
      2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0.7071067811865475, 
     0.7071067811865475}, {0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[NCache[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {1, 0}}, {{
      0.7071067811865475, 0.7071067811865475}, {1, 0}}]], 
   PointBox[NCache[{{0, 1}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 
      1}, {0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[{{0, 1}, {0, 1}}], 
   PointBox[NCache[{{0, 1}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 
      1}, {-0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[{{0, 1}, {-1, 0}}], 
   PointBox[NCache[{{0, 1}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, 
      1}, {-0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[{{0, 1}, {0, -1}}], 
   PointBox[NCache[{{0, 1}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, 
      1}, {0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[{{0, 1}, {1, 0}}], 
   PointBox[
    NCache[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
      2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-0.7071067811865475, 
     0.7071067811865475}, {0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {0, 
      1}}, {{-0.7071067811865475, 0.7071067811865475}, {0, 1}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], 2^
       Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
       Rational[-1, 2]}}, {{-0.7071067811865475, 
     0.7071067811865475}, {-0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {-1, 
      0}}, {{-0.7071067811865475, 0.7071067811865475}, {-1, 0}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], 2^
       Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
        Rational[-1, 2]}}, {{-0.7071067811865475, 
     0.7071067811865475}, {-0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
      0, -1}}, {{-0.7071067811865475, 0.7071067811865475}, {0, -1}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
      2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-0.7071067811865475, 
     0.7071067811865475}, {0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {1, 
      0}}, {{-0.7071067811865475, 0.7071067811865475}, {1, 0}}]], 
   PointBox[NCache[{{-1, 0}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 
      0}, {0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[{{-1, 0}, {0, 1}}], 
   PointBox[NCache[{{-1, 0}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 
      0}, {-0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[{{-1, 0}, {-1, 0}}], 
   PointBox[NCache[{{-1, 0}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-1, 
      0}, {-0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[{{-1, 0}, {0, -1}}], 
   PointBox[NCache[{{-1, 0}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-1, 
      0}, {0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[{{-1, 0}, {1, 0}}], 
   PointBox[
    NCache[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
      2^Rational[-1, 2], 2^
       Rational[-1, 2]}}, {{-0.7071067811865475, -0.7071067811865475}, {
     0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {0, 
      1}}, {{-0.7071067811865475, -0.7071067811865475}, {0, 1}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
        Rational[-1, 2], 2^
       Rational[-1, 
         2]}}, {{-0.7071067811865475, -0.7071067811865475}, \
{-0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-1, 
      0}}, {{-0.7071067811865475, -0.7071067811865475}, {-1, 0}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
        Rational[-1, 2], -2^
        Rational[-1, 
          2]}}, {{-0.7071067811865475, -0.7071067811865475}, \
{-0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
      0, -1}}, {{-0.7071067811865475, -0.7071067811865475}, {0, -1}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
      2^Rational[-1, 2], -2^
        Rational[-1, 2]}}, {{-0.7071067811865475, -0.7071067811865475}, {
     0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[NCache[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {1, 
      0}}, {{-0.7071067811865475, -0.7071067811865475}, {1, 0}}]], 
   PointBox[NCache[{{0, -1}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
      0, -1}, {0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[{{0, -1}, {0, 1}}], 
   PointBox[NCache[{{0, -1}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
      0, -1}, {-0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[{{0, -1}, {-1, 0}}], 
   PointBox[NCache[{{0, -1}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
      0, -1}, {-0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[{{0, -1}, {0, -1}}], 
   PointBox[NCache[{{0, -1}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
      0, -1}, {0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[{{0, -1}, {1, 0}}], 
   PointBox[NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
      2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
     0.7071067811865475, -0.7071067811865475}, {0.7071067811865475, 
     0.7071067811865475}}]], 
   PointBox[NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {0, 1}}, {{
      0.7071067811865475, -0.7071067811865475}, {0, 1}}]], 
   PointBox[NCache[{{
      2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
       Rational[-1, 2]}}, {{
     0.7071067811865475, -0.7071067811865475}, {-0.7071067811865475, 
     0.7071067811865475}}]], 
   PointBox[NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {-1, 0}}, {{
      0.7071067811865475, -0.7071067811865475}, {-1, 0}}]], 
   PointBox[NCache[{{
      2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
        Rational[-1, 2]}}, {{
     0.7071067811865475, -0.7071067811865475}, {-0.7071067811865475, \
-0.7071067811865475}}]], 
   PointBox[NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {0, -1}}, {{
      0.7071067811865475, -0.7071067811865475}, {0, -1}}]], 
   PointBox[NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
      2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
     0.7071067811865475, -0.7071067811865475}, {
     0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[NCache[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {1, 0}}, {{
      0.7071067811865475, -0.7071067811865475}, {1, 0}}]], 
   PointBox[NCache[{{1, 0}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 
      0}, {0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[{{1, 0}, {0, 1}}], 
   PointBox[NCache[{{1, 0}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 
      0}, {-0.7071067811865475, 0.7071067811865475}}]], 
   PointBox[{{1, 0}, {-1, 0}}], 
   PointBox[NCache[{{1, 0}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 
      0}, {-0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[{{1, 0}, {0, -1}}], 
   PointBox[NCache[{{1, 0}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 
      0}, {0.7071067811865475, -0.7071067811865475}}]], 
   PointBox[{{1, 0}, {1, 0}}]}]], "Output",
 CellChangeTimes->{{3.632683333817041*^9, 3.632683355414276*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Theta]1", ",", "x1", ",", "x2", ",", "\[Theta]2", ",", "x3", ",", 
       "x4"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Theta]1", "=", 
       RowBox[{"ArcSin", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"0.5", "-", "v"}], ")"}], "/", "0.5"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x1", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"v", "<", "0.5"}], ",", 
         RowBox[{"0.5", "*", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "-", "\[Theta]1"}], "]"}]}], ",", 
         RowBox[{"-", "0.5"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x2", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"v", "<", "0.5"}], ",", 
         RowBox[{"0.5", "*", 
          RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], ",", "0.5"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"\[Theta]2", "=", 
       RowBox[{"ArcSin", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"v", "-", "0.5"}], ")"}], "/", "0.5"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"x3", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"v", ">", "0.5"}], ",", 
         RowBox[{"0.5", "*", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "-", "\[Theta]2"}], "]"}]}], ",", 
         RowBox[{"-", "0.5"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"x4", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"v", ">", "0.5"}], ",", 
         RowBox[{"0.5", "*", 
          RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], ",", "0.5"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0.5"}], "}"}], ",", "0.5"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Point", "/@", 
             RowBox[{"Tuples", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"i", ",", "v"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "x1", ",", "x2", ",", "0.05"}], "}"}]}], 
                "]"}], ",", 
               RowBox[{"10", "*", "v"}]}], "]"}]}]}], "\[IndentingNewLine]", 
           "}"}]}], "\[IndentingNewLine]", "}"}], "]"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Point", "/@", 
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"x1", ",", "x2", ",", "0.05"}], "]"}], ",", "v"}], "}"}],
           ",", "2"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v", ",", "0.2", ",", "\"\<\>\""}], "}"}], ",", "0.01", ",", 
     "0.4", ",", "0.01", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6326838157216043`*^9, 3.6326838548128405`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`v$$ = 0.2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`v$$], 0.2, ""}, 0.01, 0.4, 0.01}}, Typeset`size$$ = {
    360., {178., 181.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`v$1443$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`v$$ = 0.2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`v$$, $CellContext`v$1443$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`\[Theta]1$, $CellContext`x1$, $CellContext`x2$, \
$CellContext`\[Theta]2$, $CellContext`x3$, $CellContext`x4$}, $CellContext`\
\[Theta]1$ = ArcSin[(0.5 - $CellContext`v$$)/0.5]; $CellContext`x1$ = 
         If[$CellContext`v$$ < 0.5, 0.5 
           Cos[-Pi - $CellContext`\[Theta]1$], -0.5]; $CellContext`x2$ = 
         If[$CellContext`v$$ < 0.5, 0.5 Cos[$CellContext`\[Theta]1$], 
           0.5]; $CellContext`\[Theta]2$ = 
         ArcSin[($CellContext`v$$ - 0.5)/0.5]; $CellContext`x3$ = 
         If[$CellContext`v$$ > 0.5, 0.5 
           Cos[-Pi - $CellContext`\[Theta]2$], -0.5]; $CellContext`x4$ = 
         If[$CellContext`v$$ > 0.5, 0.5 Cos[$CellContext`\[Theta]2$], 0.5]; 
        Graphics[
          Map[Point, 
           Tuples[{
             
             Range[$CellContext`x1$, $CellContext`x2$, 
              0.05], $CellContext`v$$}, 2]]]], 
      "Specifications" :> {{{$CellContext`v$$, 0.2, ""}, 0.01, 0.4, 0.01, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {223., 230.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.632683856851957*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"ArcSin", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.5", "-", "h"}], ")"}], "/", "0.5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"h", "<", "0.5"}], ",", 
     RowBox[{"0.5", "*", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "-", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"-", "0.5"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"max", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"h", "<", "0.5"}], ",", 
     RowBox[{"0.5", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0.5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", "salt", "}"}], "=", 
   RowBox[{"Last", "@", "\[IndentingNewLine]", 
    RowBox[{"Reap", "@", "\[IndentingNewLine]", 
     RowBox[{"Scan", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "^", "3"}]}], "<", "2"}], 
            "\[And]", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "+", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "<", "1"}]}], ","}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"Sow", "[", 
          RowBox[{"#", ",", "\"\<Salt\>\""}], "]"}], "\[IndentingNewLine]", 
         "]"}], "&"}], ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5000", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
       "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{"Black", ",", 
    RowBox[{"Point", "[", "salt", "]"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.632683970539459*^9, 3.632683970793474*^9}, {
  3.6326841159567766`*^9, 3.632684267733458*^9}, {3.632684310220888*^9, 
  3.632684326951845*^9}, {3.6326843665331087`*^9, 3.632684424823443*^9}, {
  3.6326844737352405`*^9, 3.6326844746952953`*^9}}],

Cell[BoxData[
 GraphicsBox[
  {GrayLevel[0], PointBox[CompressedData["
1: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
S7yMFHlg/PJefuCiMfgfX00hdQ==
    "]]}]], "Output",
 CellChangeTimes->{
  3.6326839714585123`*^9, {3.6326841220941277`*^9, 3.6326841957973433`*^9}, {
   3.632684226926124*^9, 3.6326842295972767`*^9}, {3.632684260167025*^9, 
   3.6326842685385036`*^9}, {3.6326843118499813`*^9, 3.632684327874898*^9}, 
   3.632684428017626*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   RowBox[{"ArcSin", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.5", "-", "h"}], ")"}], "/", "0.5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"min", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"h", "<", "0.5"}], ",", 
     RowBox[{"0.5", "*", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "-", "\[Theta]"}], "]"}]}], ",", 
     RowBox[{"-", "0.5"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"max", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"h", "<", "0.5"}], ",", 
     RowBox[{"0.5", "*", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", "0.5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{3.632684545998374*^9}]
},
WindowSize->{667, 670},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 4280, 107, 352, "Input"],
Cell[CellGroupData[{
Cell[4863, 131, 607, 18, 52, "Input"],
Cell[5473, 151, 8373, 149, 374, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13883, 305, 3578, 97, 352, "Input"],
Cell[17464, 404, 2492, 49, 470, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19993, 458, 2614, 74, 272, "Input"],
Cell[22610, 534, 57738, 949, 306, "Output"]
}, Open  ]],
Cell[80363, 1486, 878, 28, 112, "Input"]
}
]
*)

(* End of internal cache information *)
