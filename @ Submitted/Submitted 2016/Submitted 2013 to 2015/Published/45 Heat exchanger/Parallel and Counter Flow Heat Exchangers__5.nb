(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    234222,       5563]
NotebookOptionsPosition[    227888,       5367]
NotebookOutlinePosition[    229504,       5417]
CellTagsIndexPosition[    229168,       5405]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Parallel and Counter Flow Heat Exchangers", "DemoTitle",
 CellChangeTimes->{3.6682750640476294`*^9}],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[
 RowBox[{"(*", "LIQUID", "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6622392056096735`*^9, 3.6622392075908775`*^9}},
 CellID->140338783],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]L", "=", 
    RowBox[{"Quiet", "@", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"300.", ",", "0.000855"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"305.", ",", "0.0007689"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"310.", ",", "0.000695"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"315.", ",", "0.0006309"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"320.", ",", "0.0005769"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"325.", ",", "0.0005279"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"330.", ",", "0.000489"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"335.", ",", "0.000453"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"340.", ",", "0.00041996"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"345.", ",", "0.00038897"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"350.", ",", "0.000365"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"355.", ",", "0.000343"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"360.", ",", "0.00032396"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"365.", ",", "0.000306"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"370.", ",", "0.000289"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"373.15", ",", "0.000279"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"375.", ",", "0.000274"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"380.", ",", "0.00026"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"385.", ",", "0.000248"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"390.", ",", "0.000237"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"400.", ",", "0.000217"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"410.", ",", "0.00019998"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"420.", ",", "0.000185"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"430.", ",", "0.000173"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"440.", ",", "0.00016198"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"450.", ",", "0.00015198"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"460.", ",", "0.000143"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"470.", ",", "0.000136"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"480.", ",", "0.000129"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"490.", ",", "0.000124"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"500.", ",", "0.000118"}], "}"}]}], "}"}], "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"N", " ", 
    RowBox[{"s", "/", "m2"}]}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.662239346590497*^9, 3.662239375751966*^9}},
 CellID->319149],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CpL", "=", 
    RowBox[{"Quiet", "@", 
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", 
          RowBox[{"1000", "*", "#2"}]}], "}"}], "&"}], "@@@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"300.", ",", "4.179"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"305.", ",", "4.178"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"310.", ",", "4.1785"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"315.", ",", "4.179"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"320.", ",", "4.180"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"325.", ",", "4.182"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"330.", ",", "4.184"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"335.", ",", "4.186"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"340.", ",", "4.188"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"345.", ",", "4.191"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"350.", ",", "4.195"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"355.", ",", "4.199"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"360.", ",", "4.203"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"365.", ",", "4.209"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"370.", ",", "4.214"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"373.15", ",", "4.217"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"375.", ",", "4.220"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"380.", ",", "4.226"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"385.", ",", "4.232"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"390.", ",", "4.239"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"400.", ",", "4.256"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"410.", ",", "4.278"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"420.", ",", "4.302"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"430.", ",", "4.331"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"440.", ",", "4.36"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"450.", ",", "4.4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"460.", ",", "4.44"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"470.", ",", "4.48"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"480.", ",", "4.53"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"490.", ",", "4.59"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"500.", ",", "4.66"}], "}"}]}], "}"}]}], "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"J", "/", "kg"}], "/", "K"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6622392355529284`*^9, {3.6622393482627*^9, 3.6622393781895704`*^9}},
 CellID->58733214],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kL", "=", 
    RowBox[{"Quiet", "@", 
     RowBox[{"Interpolation", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"300.", ",", "0.6130"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"305.", ",", "0.62"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"310.", ",", "0.628"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"315.", ",", "0.634"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"320.", ",", "0.64"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"325.", ",", "0.645"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"330.", ",", "0.65"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"335.", ",", "0.656"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"340.", ",", "0.66"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"345.", ",", "0.664"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"350.", ",", "0.668"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"355.", ",", "0.671"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"360.", ",", "0.674"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"365.", ",", "0.677"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"370.", ",", "0.679"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"373.15", ",", "0.68"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"375.", ",", "0.681"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"380.", ",", "0.683"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"385.", ",", "0.685"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"390.", ",", "0.686"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"400.", ",", "0.6880"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"410.", ",", "0.6880"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"420.", ",", "0.6880"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"430.", ",", "0.685"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"440.", ",", "0.682"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"450.", ",", "0.678"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"460.", ",", "0.673"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"470.", ",", "0.667"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"480.", ",", "0.66001"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"490.", ",", "0.651"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"500.", ",", "0.642"}], "}"}]}], "}"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"W", "/", "m"}], "/", "K"}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.662239349215302*^9, 3.662239355182513*^9}},
 CellID->760366309],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"LIQUID", " ", "SODIUM"}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6688768990192933`*^9, 3.6688769095599127`*^9}},
 CellID->158081709],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]Na", "=", 
    RowBox[{"Quiet", "@", 
     RowBox[{"Interpolation", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"366", ",", "6.983*^-4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"644", ",", "2.813*^-4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"977", ",", "1.779*^-4"}], "}"}]}], "}"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"N", " ", 
    RowBox[{"s", "/", "m2"}]}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6688769599298296`*^9, 3.668876978054019*^9}},
 CellID->66834795],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CpNa", "=", 
    RowBox[{"Quiet", "@", 
     RowBox[{"Interpolation", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", 
          RowBox[{"1000", "*", "#2"}]}], "}"}], "&"}], "@@@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"366", ",", "1.36"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"644", ",", "1.3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"977", ",", "1.26"}], "}"}]}], "}"}]}], "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"J", "/", "kg"}], "/", "K"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.668876949802764*^9, 3.6688769867206087`*^9}},
 CellID->46153829],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kNa", "=", 
    RowBox[{"Quiet", "@", 
     RowBox[{"Interpolation", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"366", ",", "86.2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"644", ",", "72.3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"977", ",", "59.7"}], "}"}]}], "}"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"W", "/", "m"}], "/", "K"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.668876939432187*^9, 3.668876943255209*^9}, {
  3.6688769897767706`*^9, 3.668876992914404*^9}},
 CellID->102039636],

Cell[BoxData[
 RowBox[{
  RowBox[{"color", "=", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0., 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0., 1.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.1, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.06666666666666668, 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.1, 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.1, 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.1, 0.9],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.2, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.13333333333333336`, 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.2, 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.2, 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.2, 0.8],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.30000000000000004`, 0.7], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.20000000000000004`, 0.4666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.30000000000000004, 0.7]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.30000000000000004`, 0.7]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.30000000000000004`, 0.7],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.4, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.2666666666666667, 0.4],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.4, 0.6]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.4, 0.6]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.4, 0.6],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.5, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.33333333333333337`, 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.5, 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.5, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.5, 0.5],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.6000000000000001, 0.3999999999999999], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.4000000000000001, 0.2666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.6000000000000001, 0.3999999999999999]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.6000000000000001, 0.3999999999999999]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.6000000000000001, 0.3999999999999999],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.7000000000000001, 0.29999999999999993`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.46666666666666673`, 0.19999999999999996`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.7000000000000001, 0.29999999999999993]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.7000000000000001, 0.29999999999999993`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.7000000000000001, 0.29999999999999993`],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.8, 0.19999999999999996`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.5333333333333334, 0.1333333333333333],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.8, 0.19999999999999996]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.8, 0.19999999999999996`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.8, 0.19999999999999996`],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.9, 0.09999999999999998], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6000000000000001, 0.06666666666666665],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.9, 0.09999999999999998]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.9, 0.09999999999999998]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.9, 0.09999999999999998],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666667, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0., 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0., 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0., 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.06666666666666668, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.1, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.1, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.1, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.2, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.13333333333333336`, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.2, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.2, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.2, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.30000000000000004`, 1, 0], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.20000000000000004`, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.30000000000000004, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.30000000000000004`, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.30000000000000004`, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.4, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.2666666666666667, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.4, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.4, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.4, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.5, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.6000000000000001, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.4000000000000001, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.6000000000000001, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.6000000000000001, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.6000000000000001, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.7000000000000001, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.46666666666666673`, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.7000000000000001, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.7000000000000001, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.7000000000000001, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.8, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.5333333333333334, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.8, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.8, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.8, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.9, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6000000000000001, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.9, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.9, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.9, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666667, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1., 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666667, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.6000000000000001, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.5333333333333334, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.4666666666666667, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.7, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.4, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.6, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.3999999999999999, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.2666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.3999999999999999, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.3999999999999999, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.3999999999999999, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.29999999999999993`, 0], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.19999999999999996`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.29999999999999993, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.29999999999999993`, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.29999999999999993`, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.19999999999999996`, 0], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.1333333333333333, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.19999999999999996, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.19999999999999996`, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.19999999999999996`, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.09999999999999998, 0], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.06666666666666665, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.09999999999999998, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.09999999999999998, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.09999999999999998, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1., 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 0., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.9, 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6000000000000001, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.9, 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.9, 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.9, 0., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.8, 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.5333333333333334, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.8, 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.8, 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.8, 0., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.7, 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.4666666666666667, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.7, 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.7, 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.7, 0., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.6, 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.4, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.6, 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.6, 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.6, 0., 0.],
      Editable->False,
      Selectable->False]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellID->495513759]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Tsat", " ", "at", " ", "5", " ", "bar"}], " ", "=", " ", 
    RowBox[{"424.98", " ", "K"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "di", ",", "do", ",", "d", ",", "m", ",", "Th1", ",", "Tc1", ",", "Cp", 
       ",", "\[Mu]", ",", "k", ",", "crt", ",", "Rei", ",", "Nu", ",", "U", 
       ",", "sol", ",", "T", ",", "q", ",", "col", ",", "arrow", ",", "p1", 
       ",", "p2", ",", "p3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"di", "=", "0.025"}], ";", 
      RowBox[{"do", "=", "0.045"}], ";", 
      RowBox[{"(*", "m", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"d", "[", "h", "]"}], "=", 
       RowBox[{"do", "-", "di"}]}], ";", 
      RowBox[{
       RowBox[{"d", "[", "c", "]"}], "=", "di"}], ";", 
      RowBox[{"(*", "m", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"m", "[", "h", "]"}], "=", "mh"}], ";", 
      RowBox[{
       RowBox[{"m", "[", "c", "]"}], "=", "mc"}], ";", 
      RowBox[{"(*", 
       RowBox[{"kg", "/", "s"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Th1", "=", "400"}], ";", 
      RowBox[{"Tc1", "=", "300"}], ";", 
      RowBox[{"(*", "K", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"cold", ",", " ", "inner"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Cp", "[", "c", "]"}], "=", 
       RowBox[{"CpL", "@", "Tc1"}]}], ";", 
      RowBox[{
       RowBox[{"\[Mu]", "[", "c", "]"}], "=", 
       RowBox[{"\[Mu]L", "@", "Tc1"}]}], ";", 
      RowBox[{
       RowBox[{"k", "[", "c", "]"}], "=", 
       RowBox[{"kL", "@", "Tc1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"hot", ",", " ", "outer", ",", " ", "annular"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"fluid", ",", "\[IndentingNewLine]", "1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Cp", "[", "h", "]"}], "=", 
           RowBox[{"CpL", "@", "Th1"}]}], ";", 
          RowBox[{
           RowBox[{"\[Mu]", "[", "h", "]"}], "=", 
           RowBox[{"\[Mu]L", "@", "Th1"}]}], ";", 
          RowBox[{
           RowBox[{"k", "[", "h", "]"}], "=", 
           RowBox[{"kL", "@", "Th1"}]}], ";"}], "}"}], ",", 
        "\[IndentingNewLine]", "2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Cp", "[", "h", "]"}], "=", "1014"}], ";", 
          RowBox[{
           RowBox[{"\[Mu]", "[", "h", "]"}], "=", "230.1*^-7"}], ";", 
          RowBox[{
           RowBox[{"k", "[", "h", "]"}], "=", "33.8*^-3"}], ";"}], "}"}], ",",
         "\[IndentingNewLine]", "3", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Cp", "[", "h", "]"}], "=", 
           RowBox[{"CpNa", "@", "Th1"}]}], ";", 
          RowBox[{
           RowBox[{"\[Mu]", "[", "h", "]"}], "=", 
           RowBox[{"\[Mu]Na", "@", "Th1"}]}], ";", 
          RowBox[{
           RowBox[{"k", "[", "h", "]"}], "=", 
           RowBox[{"kNa", "@", "Th1"}]}], ";"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"crt", "[", "h", "]"}], "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"do", "+", "di"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"do", "-", "di"}], ")"}]}]}], ";", 
      RowBox[{
       RowBox[{"crt", "[", "c", "]"}], "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Rei", "[", "i_", "]"}], ":=", 
       FractionBox[
        RowBox[{"4", "*", 
         RowBox[{"m", "[", "i", "]"}]}], 
        RowBox[{"\[Pi]", "*", 
         RowBox[{"\[Mu]", "[", "i", "]"}], "*", 
         RowBox[{"d", "[", "i", "]"}], "*", 
         RowBox[{"crt", "[", "i", "]"}]}]]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Nu", "[", "i_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Rei", "[", "i", "]"}], "\[GreaterEqual]", "10000"}], ",", 
         RowBox[{"0.023", "*", 
          SuperscriptBox[
           RowBox[{"Rei", "[", "i", "]"}], 
           RowBox[{"4", "/", "5"}]], "*", 
          RowBox[{
           RowBox[{"(", 
            FractionBox[
             RowBox[{
              RowBox[{"Cp", "[", "i", "]"}], "*", 
              RowBox[{"\[Mu]", "[", "i", "]"}]}], 
             RowBox[{"k", "[", "i", "]"}]], ")"}], "^", 
           RowBox[{"Switch", "[", 
            RowBox[{"i", ",", "c", ",", "0.4", ",", "h", ",", "0.3"}], 
            "]"}]}]}], ",", "4.36"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"U", "=", 
       RowBox[{"1", "/", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               RowBox[{"Nu", "[", "#", "]"}], "*", 
               RowBox[{"k", "[", "#", "]"}]}], 
              RowBox[{"d", "[", "#", "]"}]], ")"}], 
            RowBox[{"-", "1"}]], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"c", ",", "h"}], "}"}]}], "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"W", "/", "m2"}], "/", "K"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{
         RowBox[{"NDSolve", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"m", "[", "h", "]"}], "*", 
               RowBox[{"Cp", "[", "h", "]"}], "*", 
               RowBox[{
                RowBox[{"th", "'"}], "[", "z", "]"}]}], "\[Equal]", 
              RowBox[{
               RowBox[{"-", "U"}], "*", "\[Pi]", "*", "di", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"th", "[", "z", "]"}], "-", 
                 RowBox[{"tc", "[", "z", "]"}]}], ")"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"m", "[", "c", "]"}], "*", 
               RowBox[{"Cp", "[", "c", "]"}], "*", 
               RowBox[{
                RowBox[{"tc", "'"}], "[", "z", "]"}]}], "\[Equal]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"flow", "\[Equal]", "1"}], ",", "1", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "*", "U", "*", "\[Pi]", "*", 
               "di", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"th", "[", "z", "]"}], "-", 
                 RowBox[{"tc", "[", "z", "]"}]}], ")"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"th", "[", "0", "]"}], "\[Equal]", "Th1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"tc", "[", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"flow", "\[Equal]", "1"}], ",", "0", ",", "L"}], 
                "]"}], "]"}], "\[Equal]", "Tc1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"th", ",", "tc"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"z", ",", "0", ",", "L"}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"T", "[", "h", "]"}], "=", 
       RowBox[{"th", "/.", "sol"}]}], ";", 
      RowBox[{
       RowBox[{"T", "[", "c", "]"}], "=", 
       RowBox[{"tc", "/.", "sol"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"q", "=", 
       RowBox[{"U", "*", "\[Pi]", "*", "di", "*", "L", "*", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"T", "[", "h", "]"}], "[", "0", "]"}], "-", 
            RowBox[{
             RowBox[{"T", "[", "c", "]"}], "[", "0", "]"}]}], ")"}], "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"T", "[", "h", "]"}], "[", "L", "]"}], "-", 
            RowBox[{
             RowBox[{"T", "[", "c", "]"}], "[", "L", "]"}]}], ")"}]}], 
         RowBox[{"Log", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"T", "[", "h", "]"}], "[", "0", "]"}], "-", 
             RowBox[{
              RowBox[{"T", "[", "c", "]"}], "[", "0", "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"T", "[", "h", "]"}], "[", "L", "]"}], "-", 
             RowBox[{
              RowBox[{"T", "[", "c", "]"}], "[", "L", "]"}]}], ")"}]}], 
          "]"}]]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"col", "[", "h", "]"}], "[", "x_", "]"}], ":=", 
       RowBox[{"Blend", "[", 
        RowBox[{
         RowBox[{"Reverse", "@", "color"}], ",", 
         RowBox[{"Rescale", "[", 
          RowBox[{
           RowBox[{"Th1", "-", 
            RowBox[{
             FractionBox["x", "L"], "*", 
             RowBox[{"(", 
              RowBox[{"Th1", "-", 
               RowBox[{
                RowBox[{"T", "[", "h", "]"}], "[", "L", "]"}]}], ")"}]}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"Th1", ",", "Tc1"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"col", "[", "c", "]"}], "[", "x_", "]"}], ":=", 
       RowBox[{"Blend", "[", 
        RowBox[{"color", ",", 
         RowBox[{"Rescale", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"T", "[", "c", "]"}], "[", "0", "]"}], "+", 
            RowBox[{
             FractionBox["x", "L"], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"T", "[", "c", "]"}], "[", "L", "]"}], "-", 
               RowBox[{
                RowBox[{"T", "[", "c", "]"}], "[", "0", "]"}]}], ")"}]}]}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"Tc1", ",", "Th1"}], "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"arrow", "=", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "ds", ",", "gap"}], "}"}], ",", 
         RowBox[{
          RowBox[{"n", "=", "5"}], ";", 
          RowBox[{"ds", "=", 
           RowBox[{"0.15", "*", "L"}]}], ";", 
          RowBox[{"gap", "=", 
           FractionBox[
            RowBox[{"L", "-", 
             RowBox[{"n", "*", "ds"}]}], 
            RowBox[{"n", "-", "1"}]]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#", "*", 
                    RowBox[{"(", 
                    RowBox[{"ds", "+", "gap"}], ")"}]}], ",", "0", ",", 
                   RowBox[{"z", "*", "0.25", "*", "200", "*", 
                    RowBox[{"(", 
                    RowBox[{"do", "+", "di"}], ")"}]}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"#", "+", "1"}], ")"}], "*", "ds"}], "+", 
                    RowBox[{"#", "*", "gap"}]}], ",", "0", ",", 
                   RowBox[{"z", "*", "0.25", "*", "200", "*", 
                    RowBox[{"(", 
                    RowBox[{"do", "+", "di"}], ")"}]}]}], "}"}]}], "}"}], 
               "]"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"0", ",", 
               RowBox[{"n", "-", "1"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
           "]"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"ParametricPlot3D", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"L", "*", "z"}], ",", 
               RowBox[{
                RowBox[{"#1", "/", "2"}], "*", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"#1", "/", "2"}], "*", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{
                RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
               RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"z", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"Function", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"col", "[", "#2", "]"}], "[", "x", "]"}]}], "]"}]}], 
             ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}], 
           "&"}], "@@@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"200", "*", "do"}], ",", "h"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"200", "*", "di"}], ",", "c"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thick", ",", 
              RowBox[{"Arrowheads", "[", "0.04", "]"}], ",", 
              RowBox[{"Insert", "[", 
               RowBox[{"arrow", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"flow", "\[Equal]", "2"}], ",", 
                  RowBox[{"Arrowheads", "[", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.04"}], ",", "0"}], "}"}], "}"}], "]"}]}], 
                 "]"}], ",", 
                RowBox[{"-", "2"}]}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"T", "[", "h", "]"}], "[", "#1", "]"}], "]"}], 
                    ",", "\"\< K\>\""}], "}"}]}], ",", "18"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"#1", ",", "0", ",", 
                    RowBox[{"z", "*", "0.25", "*", "200", "*", 
                    RowBox[{"(", 
                    RowBox[{"do", "+", "di"}], ")"}]}]}], "}"}], ",", 
                    RowBox[{"1.3", "*", 
                    RowBox[{"{", 
                    RowBox[{"#2", ",", "0"}], "}"}]}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"z", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"T", "[", "c", "]"}], "[", "#1", "]"}], "]"}], 
                    ",", "\"\< K\>\""}], "}"}]}], ",", "18"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"#1", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"1.3", "*", 
                   RowBox[{"{", 
                    RowBox[{"#2", ",", "0"}], "}"}]}]}], "]"}]}], "}"}], 
              "&"}], "@@@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"L", ",", 
                 RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Row", "@", 
                 RowBox[{"{", 
                  RowBox[{"\"\<heat transfer rate = \>\"", ",", 
                   RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"N", "@", "q"}], "/", "1000"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], ",", 
                   "\"\< kW\>\""}], "}"}]}], ",", "18"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", 
                RowBox[{"200", "*", 
                 RowBox[{"do", "/", "2"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", 
                RowBox[{"-", "1.5"}]}], "}"}]}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.001"}], ",", 
              RowBox[{"200", "*", 
               RowBox[{"do", "/", "2"}]}]}], "}"}], ",", "All"}], "}"}]}], 
         ",", 
         RowBox[{"ViewPoint", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "2"}], ",", "0"}], "}"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"55", ",", "55"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"5", ",", "20"}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"T", "[", "i", "]"}], "[", "z", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"z", ",", "0", ",", "L"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"col", "[", "i", "]"}], "[", "#", "]"}], "&"}], 
               ")"}]}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"c", ",", "h"}], "}"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Riffle", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Arrowheads", "[", "#", "]"}], "&"}], "/@", 
               RowBox[{"{", 
                RowBox[{"0.05", ",", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"flow", "\[Equal]", "1"}], ",", "1", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "*", "0.05"}]}], "}"}]}], 
              ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"col", "[", "i", "]"}], "[", "#", "]"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "-", "0.01"}], ",", 
                    RowBox[{
                    RowBox[{"T", "[", "i", "]"}], "[", 
                    RowBox[{"#", "-", "0.01"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"#", ",", 
                    RowBox[{
                    RowBox[{"T", "[", "i", "]"}], "[", "#", "]"}]}], "}"}]}], 
                    "}"}], "]"}]}], "}"}], "&"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{"L", "*", 
                   RowBox[{"{", 
                    RowBox[{"0.2", ",", "0.4", ",", "0.6", ",", "0.8"}], 
                    "}"}]}], ")"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"{", 
                   RowBox[{"h", ",", "c"}], "}"}]}], "}"}]}], "]"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Subscript", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<T\>\"", ",", "Italic"}], "]"}], ",", "#1"}], 
                   "]"}], ",", "18"}], "]"}], ",", "#2", ",", "#3"}], "]"}], 
              "&"}], "@@@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\"\<h,1\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "Th1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\"\<h,2\>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"L", ",", 
                   RowBox[{
                    RowBox[{"T", "[", "h", "]"}], "[", "L", "]"}]}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"flow", "\[Equal]", "1"}], ",", "\"\<c,1\>\"", 
                   ",", "\"\<c,2\>\""}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{
                    RowBox[{"T", "[", "c", "]"}], "[", "0", "]"}]}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"flow", "\[Equal]", "1"}], ",", "\"\<c,2\>\"", 
                   ",", "\"\<c,1\>\""}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"L", ",", 
                   RowBox[{
                    RowBox[{"T", "[", "c", "]"}], "[", "L", "]"}]}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], 
              "}"}]}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "L"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Tc1", ",", "Th1"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<distance down heat exchanger (m)\>\"", ",", "17"}], 
             "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<temperature (K)\>\"", ",", "17"}], "]"}]}], "}"}]}],
          ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"14", ",", "Black"}], "}"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", "5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"45", ",", "5"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"PlotRangePadding", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Scaled", "@", "#"}], "&"}], "/@", 
            RowBox[{"{", 
             RowBox[{"0.09", ",", "0.1"}], "}"}]}], ")"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<heat transfer rate = \>\"", ",", 
               RowBox[{"NumberForm", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"N", "@", "q"}], "/", "1000"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "1"}], "}"}]}], "]"}], ",", 
               "\"\< kW\>\""}], "}"}]}], ",", "18"}], "]"}]}]}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"DensityPlot", "[", 
        RowBox[{"temp", ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"temp", ",", "Tc1", ",", "Th1"}], "}"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Blend", "[", 
             RowBox[{"color", ",", 
              RowBox[{"Rescale", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"Tc1", ",", "Th1"}], "}"}]}], "]"}]}], "]"}], "&"}], 
           ")"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"50", ",", "350"}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         RowBox[{"Frame", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"None", ",", "True"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"None", ",", "None"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"14", ",", "Black"}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"Switch", "[", 
             RowBox[{"show", ",", "1", ",", "p1", ",", "2", ",", "p2"}], 
             "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"525", ",", "350"}], "}"}]}]}], "]"}], ",", "p3"}], 
         "}"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"flow", ",", "1", ",", "\"\<fluid flow:\>\""}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "\[Rule]", "\"\< parallel \>\""}], ",", 
              RowBox[{"2", "\[Rule]", "\"\< counter \>\""}]}], "}"}], ",", 
            "Setter"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"fluid", ",", "1", ",", "\"\<hot fluid:\>\""}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "\[Rule]", "\"\<liquid water\>\""}], ",", 
              RowBox[{"2", "\[Rule]", "\"\<air\>\""}], ",", 
              RowBox[{"3", "\[Rule]", "\"\<liquid sodium\>\""}]}], "}"}], ",",
             "PopupMenu"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"show", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "\[Rule]", "\"\< diagram \>\""}], ",", 
              RowBox[{"2", "\[Rule]", "\"\< plot temperature \>\""}]}], "}"}],
             ",", "Setter"}], "}"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "L", ",", "15.", ",", "\"\<length of heat exchanger (m)\>\""}], 
             "}"}], ",", "10", ",", "25", ",", "1", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
          "]"}], ",", "SpanFromLeft"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<hot and cold mass flow rates (kg/s):\>\"", ",", "Bold"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mh", ",", "0.2", ",", "\"\<hot\>\""}], "}"}], ",", 
            "0.2", ",", "0.4", ",", "0.01", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mc", ",", "0.3", ",", "\"\<cold\>\""}], "}"}], ",", 
            "0.2", ",", "0.4", ",", "0.01", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}]}], 
        "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBmIQ/X3DR6d1Ia8dv8dXeoLobc9uBYJo9293wPSTfR6R
INribGYKiD5XuC8TRDulXygF0fv0/1aC6A3u79pA9IttH2eC6NrN52aD+XUl
C0D0tKRfi0A0x6/y9RdDXzseuaW6GUQH3l+8HUQvFbLeBxa3XHEIRM+RET4M
opl+yqpcAtLizpwaIJpRcL4hiI4JkTYC0Ty+WmYgWinhqQ2I/mn2yRlEz7m/
1gVEz7rm7QeiNXr2+YPoyTaGISA6V7ElEkRbFJ7XuAzi+wjogOjuogITEM1S
b2ENol/9vOUIove+ue4Mous5VG6B6E01sg9AdM5jpVcgeo9jIJgOsS04fgVI
P5vtdxZE16sXfATRH3SkPoHoFUK7Ba+C/D3puSiInphWag2iq6788APRUk/M
//wA0nFaW8D0wUcfVSIigPFy5weYBgDOk+o+
  "],
 CellID->676135749],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`flow$$ = 1, $CellContext`fluid$$ = 
    1, $CellContext`L$$ = 15., $CellContext`mc$$ = 0.3, $CellContext`mh$$ = 
    0.2, $CellContext`show$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`flow$$], 1, "fluid flow:"}, {
      1 -> " parallel ", 2 -> " counter "}}, {{
       Hold[$CellContext`fluid$$], 1, "hot fluid:"}, {
      1 -> "liquid water", 2 -> "air", 3 -> "liquid sodium"}}, {{
       Hold[$CellContext`show$$], 1, ""}, {
      1 -> " diagram ", 2 -> " plot temperature "}}, {{
       Hold[$CellContext`L$$], 15., "length of heat exchanger (m)"}, 10, 25, 
      1}, {{
       Hold[$CellContext`mh$$], 0.2, "hot"}, 0.2, 0.4, 0.01}, {{
       Hold[$CellContext`mc$$], 0.3, "cold"}, 0.2, 0.4, 0.01}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3]}, {
          Manipulate`Place[4], SpanFromLeft}, {
          Style["hot and cold mass flow rates (kg/s):", Bold], 
          Manipulate`Place[5], 
          Manipulate`Place[6]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    583., {171.5, 178.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`flow$14331$$ = 
    False, $CellContext`fluid$14332$$ = False, $CellContext`show$14333$$ = 
    False, $CellContext`L$14334$$ = 0, $CellContext`mh$14335$$ = 
    0, $CellContext`mc$14336$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`flow$$ = 1, $CellContext`fluid$$ = 
        1, $CellContext`L$$ = 15., $CellContext`mc$$ = 0.3, $CellContext`mh$$ = 
        0.2, $CellContext`show$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`flow$$, $CellContext`flow$14331$$, False], 
        Hold[$CellContext`fluid$$, $CellContext`fluid$14332$$, False], 
        Hold[$CellContext`show$$, $CellContext`show$14333$$, False], 
        Hold[$CellContext`L$$, $CellContext`L$14334$$, 0], 
        Hold[$CellContext`mh$$, $CellContext`mh$14335$$, 0], 
        Hold[$CellContext`mc$$, $CellContext`mc$14336$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`di$, $CellContext`do$, $CellContext`d$, \
$CellContext`m$, $CellContext`Th1$, $CellContext`Tc1$, $CellContext`Cp$, \
$CellContext`\[Mu]$, $CellContext`k$, $CellContext`crt$, $CellContext`Rei$, \
$CellContext`Nu$, $CellContext`U$, $CellContext`sol$, $CellContext`T$, \
$CellContext`q$, $CellContext`col$, $CellContext`arrow$, $CellContext`p1$, \
$CellContext`p2$, $CellContext`p3$}, $CellContext`di$ = 
         0.025; $CellContext`do$ = 
         0.045; $CellContext`d$[$CellContext`h] = $CellContext`do$ - \
$CellContext`di$; $CellContext`d$[$CellContext`c] = $CellContext`di$; \
$CellContext`m$[$CellContext`h] = $CellContext`mh$$; \
$CellContext`m$[$CellContext`c] = $CellContext`mc$$; $CellContext`Th1$ = 
         400; $CellContext`Tc1$ = 
         300; $CellContext`Cp$[$CellContext`c] = \
$CellContext`CpL[$CellContext`Tc1$]; $CellContext`\[Mu]$[$CellContext`c] = \
$CellContext`\[Mu]L[$CellContext`Tc1$]; $CellContext`k$[$CellContext`c] = \
$CellContext`kL[$CellContext`Tc1$]; 
        Switch[$CellContext`fluid$$, 
          1, {$CellContext`Cp$[$CellContext`h] = \
$CellContext`CpL[$CellContext`Th1$]; $CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]L[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kL[$CellContext`Th1$]; Null}, 
          2, {$CellContext`Cp$[$CellContext`h] = 
            1014; $CellContext`\[Mu]$[$CellContext`h] = 
            0.00002301; $CellContext`k$[$CellContext`h] = 0.0338; Null}, 
          3, {$CellContext`Cp$[$CellContext`h] = \
$CellContext`CpNa[$CellContext`Th1$]; $CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]Na[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kNa[$CellContext`Th1$]; 
           Null}]; $CellContext`crt$[$CellContext`h] = ($CellContext`do$ + \
$CellContext`di$)/($CellContext`do$ - $CellContext`di$); \
$CellContext`crt$[$CellContext`c] = 1; $CellContext`Rei$[
           Pattern[$CellContext`i$, 
            Blank[]]] := 
         4 $CellContext`m$[$CellContext`i$]/(
          Pi $CellContext`\[Mu]$[$CellContext`i$] \
$CellContext`d$[$CellContext`i$] $CellContext`crt$[$CellContext`i$]); \
$CellContext`Nu$[
           Pattern[$CellContext`i$, 
            Blank[]]] := 
         If[$CellContext`Rei$[$CellContext`i$] >= 10000, 
           0.023 $CellContext`Rei$[$CellContext`i$]^(4/
             5) ($CellContext`Cp$[$CellContext`i$] \
$CellContext`\[Mu]$[$CellContext`i$]/$CellContext`k$[$CellContext`i$])^
            Switch[$CellContext`i$, $CellContext`c, 0.4, $CellContext`h, 0.3],
            4.36]; $CellContext`U$ = 1/Total[
           
           Map[($CellContext`Nu$[#] \
$CellContext`k$[#]/$CellContext`d$[#])^(-1)& , {$CellContext`c, \
$CellContext`h}]]; $CellContext`sol$ = Quiet[
           Part[
            
            NDSolve[{$CellContext`m$[$CellContext`h] \
$CellContext`Cp$[$CellContext`h] 
               Derivative[
                1][$CellContext`th][$CellContext`z] == (-$CellContext`U$) 
               Pi $CellContext`di$ ($CellContext`th[$CellContext`z] - \
$CellContext`tc[$CellContext`z]), $CellContext`m$[$CellContext`c] \
$CellContext`Cp$[$CellContext`c] 
               Derivative[1][$CellContext`tc][$CellContext`z] == 
              If[$CellContext`flow$$ == 1, 1, -1] $CellContext`U$ 
               Pi $CellContext`di$ ($CellContext`th[$CellContext`z] - \
$CellContext`tc[$CellContext`z]), $CellContext`th[
               0] == $CellContext`Th1$, $CellContext`tc[
                
                If[$CellContext`flow$$ == 1, 
                 0, $CellContext`L$$]] == $CellContext`Tc1$}, \
{$CellContext`th, $CellContext`tc}, {$CellContext`z, 0, $CellContext`L$$}], 
            1]]; $CellContext`T$[$CellContext`h] = 
         ReplaceAll[$CellContext`th, $CellContext`sol$]; \
$CellContext`T$[$CellContext`c] = 
         ReplaceAll[$CellContext`tc, $CellContext`sol$]; $CellContext`q$ = \
$CellContext`U$ 
          Pi $CellContext`di$ $CellContext`L$$ \
((($CellContext`T$[$CellContext`h][0] - $CellContext`T$[$CellContext`c][
             0]) - ($CellContext`T$[$CellContext`h][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][$CellContext`L$$]))/
           Log[($CellContext`T$[$CellContext`h][
              0] - $CellContext`T$[$CellContext`c][
             0])/($CellContext`T$[$CellContext`h][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][$CellContext`L$$])]); \
$CellContext`col$[$CellContext`h][
           Pattern[$CellContext`x$, 
            Blank[]]] := Blend[
           Reverse[$CellContext`color], 
           
           Rescale[$CellContext`Th1$ - ($CellContext`x$/$CellContext`L$$) \
($CellContext`Th1$ - $CellContext`T$[$CellContext`h][$CellContext`L$$]), \
{$CellContext`Th1$, $CellContext`Tc1$}]]; $CellContext`col$[$CellContext`c][
           Pattern[$CellContext`x$, 
            Blank[]]] := Blend[$CellContext`color, 
           
           Rescale[$CellContext`T$[$CellContext`c][
             0] + ($CellContext`x$/$CellContext`L$$) \
($CellContext`T$[$CellContext`c][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][
              0]), {$CellContext`Tc1$, $CellContext`Th1$}]]; \
$CellContext`arrow$ = 
         Module[{$CellContext`n$, $CellContext`ds$, $CellContext`gap$}, \
$CellContext`n$ = 5; $CellContext`ds$ = 
            0.15 $CellContext`L$$; $CellContext`gap$ = ($CellContext`L$$ - \
$CellContext`n$ $CellContext`ds$)/($CellContext`n$ - 1); Table[
             Map[
             Arrow[{{# ($CellContext`ds$ + $CellContext`gap$), 
                 0, $CellContext`z 0.25 
                 200 ($CellContext`do$ + $CellContext`di$)}, {(# + 
                   1) $CellContext`ds$ + # $CellContext`gap$, 
                 0, $CellContext`z 0.25 
                 200 ($CellContext`do$ + $CellContext`di$)}}]& , 
              Range[0, $CellContext`n$ - 1]], {$CellContext`z, {-1, 1, 
              0}}]]; $CellContext`p1$ = Show[
           Apply[
           ParametricPlot3D[{$CellContext`L$$ $CellContext`z, (#/2) 
              Cos[$CellContext`\[Theta]], (#/2) 
              Sin[$CellContext`\[Theta]]}, {$CellContext`\[Theta], (-Pi)/2, 
              Pi/2}, {$CellContext`z, 0, 1}, Mesh -> None, ColorFunction -> 
             Function[{$CellContext`x$, $CellContext`y$, $CellContext`z$}, 
               $CellContext`col$[#2][$CellContext`x$]], ColorFunctionScaling -> 
             False]& , {{200 $CellContext`do$, $CellContext`h}, {
             200 $CellContext`di$, $CellContext`c}}, {1}], 
           Graphics3D[{{Thick, 
              Arrowheads[0.04], 
              Insert[$CellContext`arrow$, 
               If[$CellContext`flow$$ == 2, 
                Arrowheads[{{-0.04, 0}}]], -2]}, 
             Apply[{
               Table[
                Text[
                 Style[
                  Row[{
                    Round[
                    $CellContext`T$[$CellContext`h][#]], " K"}], 18], {#, 
                  0, $CellContext`z 0.25 
                  200 ($CellContext`do$ + $CellContext`di$)}, 
                 1.3 {#2, 0}], {$CellContext`z, {-1, 1}}], 
               Text[
                Style[
                 Row[{
                   Round[
                    $CellContext`T$[$CellContext`c][#]], " K"}], 18], {#, 0, 
                 0}, 1.3 {#2, 0}]}& , {{0, 1}, {$CellContext`L$$, -1}}, {1}], 
             Text[
              Style[
               Row[{"heat transfer rate = ", 
                 NumberForm[N[$CellContext`q$]/1000, {3, 1}], " kW"}], 18], {
              0, 0, 200 ($CellContext`do$/2)}, {-1, -1.5}]}], Boxed -> False, 
           Axes -> False, 
           PlotRange -> {All, {-0.001, 200 ($CellContext`do$/2)}, All}, 
           ViewPoint -> {0, -2, 0}, 
           ImagePadding -> {{55, 55}, {5, 20}}]; $CellContext`p2$ = Show[
           Table[
            Plot[
             $CellContext`T$[$CellContext`i][$CellContext`z], {$CellContext`z,
               0, $CellContext`L$$}, PlotStyle -> Thick, 
             ColorFunction -> ($CellContext`col$[$CellContext`i][#]& ), 
             ColorFunctionScaling -> False, PlotRange -> 
             All], {$CellContext`i, {$CellContext`c, $CellContext`h}}], 
           Graphics[{
             Riffle[
              Map[
              Arrowheads[#]& , {
               0.05, If[$CellContext`flow$$ == 1, 1, -1] 0.05}], 
              Table[
               Map[{
                 $CellContext`col$[$CellContext`i][#], 
                 Arrow[{{# - 0.01, 
                    $CellContext`T$[$CellContext`i][# - 0.01]}, {#, 
                    $CellContext`T$[$CellContext`i][#]}}]}& , \
$CellContext`L$$ {0.2, 0.4, 0.6, 
                 0.8}], {$CellContext`i, {$CellContext`h, $CellContext`c}}]], 
             Apply[Text[
               Style[
                Subscript[
                 Style["T", Italic], #], 18], #2, #3]& , {{
               "h,1", {0, $CellContext`Th1$}, {1, -1}}, {
               "h,2", {$CellContext`L$$, 
                 $CellContext`T$[$CellContext`h][$CellContext`L$$]}, {-1, \
-1}}, {
                If[$CellContext`flow$$ == 1, "c,1", "c,2"], {0, 
                 $CellContext`T$[$CellContext`c][0]}, {1, 1}}, {
                If[$CellContext`flow$$ == 1, "c,2", "c,1"], {$CellContext`L$$, 
                 $CellContext`T$[$CellContext`c][$CellContext`L$$]}, {-1, 
                1}}}, {1}]}], 
           PlotRange -> {{
             0, $CellContext`L$$}, {$CellContext`Tc1$, $CellContext`Th1$}}, 
           Axes -> False, Frame -> True, FrameLabel -> {
             Style["distance down heat exchanger (m)", 17], 
             Style["temperature (K)", 17]}, LabelStyle -> {14, Black}, 
           ImagePadding -> {{50, 5}, {45, 5}}, PlotRangePadding -> 
           Map[Scaled[#]& , {0.09, 0.1}], PlotLabel -> Style[
             Row[{"heat transfer rate = ", 
               NumberForm[N[$CellContext`q$]/1000, {3, 1}], " kW"}], 
             18]]; $CellContext`p3$ = 
         DensityPlot[$CellContext`temp, {$CellContext`y, 0, 
            1}, {$CellContext`temp, $CellContext`Tc1$, $CellContext`Th1$}, 
           ColorFunction -> (Blend[$CellContext`color, 
             Rescale[#, {$CellContext`Tc1$, $CellContext`Th1$}]]& ), 
           ColorFunctionScaling -> False, ImageSize -> {50, 350}, AspectRatio -> 
           Full, Frame -> {{None, True}, {None, None}}, FrameTicks -> All, 
           LabelStyle -> {14, Black}]; Grid[{{
            Show[
             
             Switch[$CellContext`show$$, 1, $CellContext`p1$, 
              2, $CellContext`p2$], 
             ImageSize -> {525, 350}], $CellContext`p3$}}]], 
      "Specifications" :> {{{$CellContext`flow$$, 1, "fluid flow:"}, {
         1 -> " parallel ", 2 -> " counter "}, ControlType -> Setter, 
         ControlPlacement -> 1}, {{$CellContext`fluid$$, 1, "hot fluid:"}, {
         1 -> "liquid water", 2 -> "air", 3 -> "liquid sodium"}, ControlType -> 
         PopupMenu, ControlPlacement -> 2}, {{$CellContext`show$$, 1, ""}, {
         1 -> " diagram ", 2 -> " plot temperature "}, ControlType -> Setter, 
         ControlPlacement -> 
         3}, {{$CellContext`L$$, 15., "length of heat exchanger (m)"}, 10, 25,
          1, Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`mh$$, 0.2, "hot"}, 0.2, 0.4, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`mc$$, 0.3, "cold"}, 0.2, 0.4, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 6}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           Manipulate`Place[3]}, {
           Manipulate`Place[4], SpanFromLeft}, {
           Style["hot and cold mass flow rates (kg/s):", Bold], 
           Manipulate`Place[5], 
           Manipulate`Place[6]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{632., {245., 252.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`CpL = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {4179., 4178., 4178.5, 4179., 4180., 4182., 4184., 4186., 
          4188., 4191., 4195., 4199., 4203., 4209., 4214., 4217., 4220., 
          4226., 4232., 4239., 4256., 4278., 4302., 4331., 4360., 4400., 
          4440., 4480., 4530., 4590., 4660.}}, {
         Automatic}], $CellContext`\[Mu]L = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {0.000855, 0.0007689, 0.000695, 0.0006309, 0.0005769, 
          0.0005279, 0.000489, 0.000453, 0.00041996, 0.00038897, 0.000365, 
          0.000343, 0.00032396, 0.000306, 0.000289, 0.000279, 0.000274, 
          0.00026, 0.000248, 0.000237, 0.000217, 0.00019998, 0.000185, 
          0.000173, 0.00016198, 0.00015198, 0.000143, 0.000136, 0.000129, 
          0.000124, 0.000118}}, {Automatic}], $CellContext`kL = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {0.613, 0.62, 0.628, 0.634, 0.64, 0.645, 0.65, 0.656, 
          0.66, 0.664, 0.668, 0.671, 0.674, 0.677, 0.679, 0.68, 0.681, 0.683, 
          0.685, 0.686, 0.688, 0.688, 0.688, 0.685, 0.682, 0.678, 0.673, 
          0.667, 0.66001, 0.651, 0.642}}, {Automatic}], $CellContext`CpNa = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {1360., 1300., 1260.}}, {
         Automatic}], $CellContext`\[Mu]Na = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {0.0006983, 0.0002813, 
          0.0001779}}, {Automatic}], $CellContext`kNa = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {86.2, 72.3, 59.7}}, {
         Automatic}], 
       Attributes[Derivative] = {NHoldAll, ReadProtected}, $CellContext`color = {
         RGBColor[0, 0., 1.], 
         RGBColor[0, 0.1, 0.9], 
         RGBColor[0, 0.2, 0.8], 
         RGBColor[0, 0.30000000000000004`, 0.7], 
         RGBColor[0, 0.4, 0.6], 
         RGBColor[0, 0.5, 0.5], 
         RGBColor[0, 0.6000000000000001, 0.3999999999999999], 
         RGBColor[0, 0.7000000000000001, 0.29999999999999993`], 
         RGBColor[0, 0.8, 0.19999999999999996`], 
         RGBColor[0, 0.9, 0.09999999999999998], 
         RGBColor[0, 1., 0.], 
         RGBColor[0., 1, 0], 
         RGBColor[0.1, 1, 0], 
         RGBColor[0.2, 1, 0], 
         RGBColor[0.30000000000000004`, 1, 0], 
         RGBColor[0.4, 1, 0], 
         RGBColor[0.5, 1, 0], 
         RGBColor[0.6000000000000001, 1, 0], 
         RGBColor[0.7000000000000001, 1, 0], 
         RGBColor[0.8, 1, 0], 
         RGBColor[0.9, 1, 0], 
         RGBColor[1., 1, 0], 
         RGBColor[1, 1., 0], 
         RGBColor[1, 0.9, 0], 
         RGBColor[1, 0.8, 0], 
         RGBColor[1, 0.7, 0], 
         RGBColor[1, 0.6, 0], 
         RGBColor[1, 0.5, 0], 
         RGBColor[1, 0.3999999999999999, 0], 
         RGBColor[1, 0.29999999999999993`, 0], 
         RGBColor[1, 0.19999999999999996`, 0], 
         RGBColor[1, 0.09999999999999998, 0], 
         RGBColor[1, 0., 0], 
         RGBColor[1., 0., 0.], 
         RGBColor[0.9, 0., 0.], 
         RGBColor[0.8, 0., 0.], 
         RGBColor[0.7, 0., 0.], 
         RGBColor[0.6, 0., 0.]}, Attributes[Subscript] = {NHoldRest}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->123771040]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["\<\
This Demonstration shows the rate of heat transfer and temperature \
distributions for hot and cold fluids in a concentric tube heat exchanger. \
The cold fluid is liquid water, which flows through the center of the heat \
exchanger. Select the hot fluid, which flows through the annular region, from \
the drop-down menu. Use buttons to select either parallel or counter flow. \
Set the length of the heat exchanger with a slider, and set the mass flow \
rates of the hot and cold fluids with sliders. When \"diagram\" is selected, \
a schematic of the heat exchanger is shown with colors representing the \
temperatures and arrows showing the direction of flow. Select \"plot \
temperature\" to view a plot of the temperatures versus distance down the \
heat exchanger for the hot and cold streams; arrows indicate the direction of \
flow, and colors indicate the relative temperatures. A color gradient for the \
temperature scale is shown to the right of both the diagram and temperature \
plot.\
\>", "ManipulateCaption",
 CellChangeTimes->{
  3.6682750733070498`*^9, {3.669726338686719*^9, 3.66972633943681*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`flow$$ = 1, $CellContext`fluid$$ = 
    1, $CellContext`L$$ = 15., $CellContext`mc$$ = 0.3, $CellContext`mh$$ = 
    0.2, $CellContext`show$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`flow$$], 1, "fluid flow:"}, {
      1 -> " parallel ", 2 -> " counter "}}, {{
       Hold[$CellContext`fluid$$], 1, "hot fluid:"}, {
      1 -> "liquid water", 2 -> "air", 3 -> "liquid sodium"}}, {{
       Hold[$CellContext`show$$], 1, ""}, {
      1 -> " diagram ", 2 -> " plot temperature "}}, {{
       Hold[$CellContext`L$$], 15., "length of heat exchanger (m)"}, 10, 25, 
      1}, {{
       Hold[$CellContext`mh$$], 0.2, "hot"}, 0.2, 0.4, 0.01}, {{
       Hold[$CellContext`mc$$], 0.3, "cold"}, 0.2, 0.4, 0.01}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3]}, {
          Manipulate`Place[4], SpanFromLeft}, {
          Style["hot and cold mass flow rates (kg/s):", Bold], 
          Manipulate`Place[5], 
          Manipulate`Place[6]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    583., {171.5, 178.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`flow$14419$$ = 
    False, $CellContext`fluid$14420$$ = False, $CellContext`show$14421$$ = 
    False, $CellContext`L$14422$$ = 0, $CellContext`mh$14423$$ = 
    0, $CellContext`mc$14424$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`flow$$ = 1, $CellContext`fluid$$ = 
        1, $CellContext`L$$ = 15., $CellContext`mc$$ = 0.3, $CellContext`mh$$ = 
        0.2, $CellContext`show$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`flow$$, $CellContext`flow$14419$$, False], 
        Hold[$CellContext`fluid$$, $CellContext`fluid$14420$$, False], 
        Hold[$CellContext`show$$, $CellContext`show$14421$$, False], 
        Hold[$CellContext`L$$, $CellContext`L$14422$$, 0], 
        Hold[$CellContext`mh$$, $CellContext`mh$14423$$, 0], 
        Hold[$CellContext`mc$$, $CellContext`mc$14424$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`di$, $CellContext`do$, $CellContext`d$, \
$CellContext`m$, $CellContext`Th1$, $CellContext`Tc1$, $CellContext`Cp$, \
$CellContext`\[Mu]$, $CellContext`k$, $CellContext`crt$, $CellContext`Rei$, \
$CellContext`Nu$, $CellContext`U$, $CellContext`sol$, $CellContext`T$, \
$CellContext`q$, $CellContext`col$, $CellContext`arrow$, $CellContext`p1$, \
$CellContext`p2$, $CellContext`p3$}, $CellContext`di$ = 
         0.025; $CellContext`do$ = 
         0.045; $CellContext`d$[$CellContext`h] = $CellContext`do$ - \
$CellContext`di$; $CellContext`d$[$CellContext`c] = $CellContext`di$; \
$CellContext`m$[$CellContext`h] = $CellContext`mh$$; \
$CellContext`m$[$CellContext`c] = $CellContext`mc$$; $CellContext`Th1$ = 
         400; $CellContext`Tc1$ = 
         300; $CellContext`Cp$[$CellContext`c] = \
$CellContext`CpL[$CellContext`Tc1$]; $CellContext`\[Mu]$[$CellContext`c] = \
$CellContext`\[Mu]L[$CellContext`Tc1$]; $CellContext`k$[$CellContext`c] = \
$CellContext`kL[$CellContext`Tc1$]; 
        Switch[$CellContext`fluid$$, 
          1, {$CellContext`Cp$[$CellContext`h] = \
$CellContext`CpL[$CellContext`Th1$]; $CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]L[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kL[$CellContext`Th1$]; Null}, 
          2, {$CellContext`Cp$[$CellContext`h] = 
            1014; $CellContext`\[Mu]$[$CellContext`h] = 
            0.00002301; $CellContext`k$[$CellContext`h] = 0.0338; Null}, 
          3, {$CellContext`Cp$[$CellContext`h] = \
$CellContext`CpNa[$CellContext`Th1$]; $CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]Na[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kNa[$CellContext`Th1$]; 
           Null}]; $CellContext`crt$[$CellContext`h] = ($CellContext`do$ + \
$CellContext`di$)/($CellContext`do$ - $CellContext`di$); \
$CellContext`crt$[$CellContext`c] = 1; $CellContext`Rei$[
           Pattern[$CellContext`i$, 
            Blank[]]] := 
         4 $CellContext`m$[$CellContext`i$]/(
          Pi $CellContext`\[Mu]$[$CellContext`i$] \
$CellContext`d$[$CellContext`i$] $CellContext`crt$[$CellContext`i$]); \
$CellContext`Nu$[
           Pattern[$CellContext`i$, 
            Blank[]]] := 
         If[$CellContext`Rei$[$CellContext`i$] >= 10000, 
           0.023 $CellContext`Rei$[$CellContext`i$]^(4/
             5) ($CellContext`Cp$[$CellContext`i$] \
$CellContext`\[Mu]$[$CellContext`i$]/$CellContext`k$[$CellContext`i$])^
            Switch[$CellContext`i$, $CellContext`c, 0.4, $CellContext`h, 0.3],
            4.36]; $CellContext`U$ = 1/Total[
           
           Map[($CellContext`Nu$[#] \
$CellContext`k$[#]/$CellContext`d$[#])^(-1)& , {$CellContext`c, \
$CellContext`h}]]; $CellContext`sol$ = Quiet[
           Part[
            
            NDSolve[{$CellContext`m$[$CellContext`h] \
$CellContext`Cp$[$CellContext`h] 
               Derivative[
                1][$CellContext`th][$CellContext`z] == (-$CellContext`U$) 
               Pi $CellContext`di$ ($CellContext`th[$CellContext`z] - \
$CellContext`tc[$CellContext`z]), $CellContext`m$[$CellContext`c] \
$CellContext`Cp$[$CellContext`c] 
               Derivative[1][$CellContext`tc][$CellContext`z] == 
              If[$CellContext`flow$$ == 1, 1, -1] $CellContext`U$ 
               Pi $CellContext`di$ ($CellContext`th[$CellContext`z] - \
$CellContext`tc[$CellContext`z]), $CellContext`th[
               0] == $CellContext`Th1$, $CellContext`tc[
                
                If[$CellContext`flow$$ == 1, 
                 0, $CellContext`L$$]] == $CellContext`Tc1$}, \
{$CellContext`th, $CellContext`tc}, {$CellContext`z, 0, $CellContext`L$$}], 
            1]]; $CellContext`T$[$CellContext`h] = 
         ReplaceAll[$CellContext`th, $CellContext`sol$]; \
$CellContext`T$[$CellContext`c] = 
         ReplaceAll[$CellContext`tc, $CellContext`sol$]; $CellContext`q$ = \
$CellContext`U$ 
          Pi $CellContext`di$ $CellContext`L$$ \
((($CellContext`T$[$CellContext`h][0] - $CellContext`T$[$CellContext`c][
             0]) - ($CellContext`T$[$CellContext`h][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][$CellContext`L$$]))/
           Log[($CellContext`T$[$CellContext`h][
              0] - $CellContext`T$[$CellContext`c][
             0])/($CellContext`T$[$CellContext`h][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][$CellContext`L$$])]); \
$CellContext`col$[$CellContext`h][
           Pattern[$CellContext`x$, 
            Blank[]]] := Blend[
           Reverse[$CellContext`color], 
           
           Rescale[$CellContext`Th1$ - ($CellContext`x$/$CellContext`L$$) \
($CellContext`Th1$ - $CellContext`T$[$CellContext`h][$CellContext`L$$]), \
{$CellContext`Th1$, $CellContext`Tc1$}]]; $CellContext`col$[$CellContext`c][
           Pattern[$CellContext`x$, 
            Blank[]]] := Blend[$CellContext`color, 
           
           Rescale[$CellContext`T$[$CellContext`c][
             0] + ($CellContext`x$/$CellContext`L$$) \
($CellContext`T$[$CellContext`c][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][
              0]), {$CellContext`Tc1$, $CellContext`Th1$}]]; \
$CellContext`arrow$ = 
         Module[{$CellContext`n$, $CellContext`ds$, $CellContext`gap$}, \
$CellContext`n$ = 5; $CellContext`ds$ = 
            0.15 $CellContext`L$$; $CellContext`gap$ = ($CellContext`L$$ - \
$CellContext`n$ $CellContext`ds$)/($CellContext`n$ - 1); Table[
             Map[
             Arrow[{{# ($CellContext`ds$ + $CellContext`gap$), 
                 0, $CellContext`z 0.25 
                 200 ($CellContext`do$ + $CellContext`di$)}, {(# + 
                   1) $CellContext`ds$ + # $CellContext`gap$, 
                 0, $CellContext`z 0.25 
                 200 ($CellContext`do$ + $CellContext`di$)}}]& , 
              Range[0, $CellContext`n$ - 1]], {$CellContext`z, {-1, 1, 
              0}}]]; $CellContext`p1$ = Show[
           Apply[
           ParametricPlot3D[{$CellContext`L$$ $CellContext`z, (#/2) 
              Cos[$CellContext`\[Theta]], (#/2) 
              Sin[$CellContext`\[Theta]]}, {$CellContext`\[Theta], (-Pi)/2, 
              Pi/2}, {$CellContext`z, 0, 1}, Mesh -> None, ColorFunction -> 
             Function[{$CellContext`x$, $CellContext`y$, $CellContext`z$}, 
               $CellContext`col$[#2][$CellContext`x$]], ColorFunctionScaling -> 
             False]& , {{200 $CellContext`do$, $CellContext`h}, {
             200 $CellContext`di$, $CellContext`c}}, {1}], 
           Graphics3D[{{Thick, 
              Arrowheads[0.04], 
              Insert[$CellContext`arrow$, 
               If[$CellContext`flow$$ == 2, 
                Arrowheads[{{-0.04, 0}}]], -2]}, 
             Apply[{
               Table[
                Text[
                 Style[
                  Row[{
                    Round[
                    $CellContext`T$[$CellContext`h][#]], " K"}], 18], {#, 
                  0, $CellContext`z 0.25 
                  200 ($CellContext`do$ + $CellContext`di$)}, 
                 1.3 {#2, 0}], {$CellContext`z, {-1, 1}}], 
               Text[
                Style[
                 Row[{
                   Round[
                    $CellContext`T$[$CellContext`c][#]], " K"}], 18], {#, 0, 
                 0}, 1.3 {#2, 0}]}& , {{0, 1}, {$CellContext`L$$, -1}}, {1}], 
             Text[
              Style[
               Row[{"heat transfer rate = ", 
                 NumberForm[N[$CellContext`q$]/1000, {3, 1}], " kW"}], 18], {
              0, 0, 200 ($CellContext`do$/2)}, {-1, -1.5}]}], Boxed -> False, 
           Axes -> False, 
           PlotRange -> {All, {-0.001, 200 ($CellContext`do$/2)}, All}, 
           ViewPoint -> {0, -2, 0}, 
           ImagePadding -> {{55, 55}, {5, 20}}]; $CellContext`p2$ = Show[
           Table[
            Plot[
             $CellContext`T$[$CellContext`i][$CellContext`z], {$CellContext`z,
               0, $CellContext`L$$}, PlotStyle -> Thick, 
             ColorFunction -> ($CellContext`col$[$CellContext`i][#]& ), 
             ColorFunctionScaling -> False, PlotRange -> 
             All], {$CellContext`i, {$CellContext`c, $CellContext`h}}], 
           Graphics[{
             Riffle[
              Map[
              Arrowheads[#]& , {
               0.05, If[$CellContext`flow$$ == 1, 1, -1] 0.05}], 
              Table[
               Map[{
                 $CellContext`col$[$CellContext`i][#], 
                 Arrow[{{# - 0.01, 
                    $CellContext`T$[$CellContext`i][# - 0.01]}, {#, 
                    $CellContext`T$[$CellContext`i][#]}}]}& , \
$CellContext`L$$ {0.2, 0.4, 0.6, 
                 0.8}], {$CellContext`i, {$CellContext`h, $CellContext`c}}]], 
             Apply[Text[
               Style[
                Subscript[
                 Style["T", Italic], #], 18], #2, #3]& , {{
               "h,1", {0, $CellContext`Th1$}, {1, -1}}, {
               "h,2", {$CellContext`L$$, 
                 $CellContext`T$[$CellContext`h][$CellContext`L$$]}, {-1, \
-1}}, {
                If[$CellContext`flow$$ == 1, "c,1", "c,2"], {0, 
                 $CellContext`T$[$CellContext`c][0]}, {1, 1}}, {
                If[$CellContext`flow$$ == 1, "c,2", "c,1"], {$CellContext`L$$, 
                 $CellContext`T$[$CellContext`c][$CellContext`L$$]}, {-1, 
                1}}}, {1}]}], 
           PlotRange -> {{
             0, $CellContext`L$$}, {$CellContext`Tc1$, $CellContext`Th1$}}, 
           Axes -> False, Frame -> True, FrameLabel -> {
             Style["distance down heat exchanger (m)", 17], 
             Style["temperature (K)", 17]}, LabelStyle -> {14, Black}, 
           ImagePadding -> {{50, 5}, {45, 5}}, PlotRangePadding -> 
           Map[Scaled[#]& , {0.09, 0.1}], PlotLabel -> Style[
             Row[{"heat transfer rate = ", 
               NumberForm[N[$CellContext`q$]/1000, {3, 1}], " kW"}], 
             18]]; $CellContext`p3$ = 
         DensityPlot[$CellContext`temp, {$CellContext`y, 0, 
            1}, {$CellContext`temp, $CellContext`Tc1$, $CellContext`Th1$}, 
           ColorFunction -> (Blend[$CellContext`color, 
             Rescale[#, {$CellContext`Tc1$, $CellContext`Th1$}]]& ), 
           ColorFunctionScaling -> False, ImageSize -> {50, 350}, AspectRatio -> 
           Full, Frame -> {{None, True}, {None, None}}, FrameTicks -> All, 
           LabelStyle -> {14, Black}]; Grid[{{
            Show[
             
             Switch[$CellContext`show$$, 1, $CellContext`p1$, 
              2, $CellContext`p2$], 
             ImageSize -> {525, 350}], $CellContext`p3$}}]], 
      "Specifications" :> {{{$CellContext`flow$$, 1, "fluid flow:"}, {
         1 -> " parallel ", 2 -> " counter "}, ControlType -> Setter, 
         ControlPlacement -> 1}, {{$CellContext`fluid$$, 1, "hot fluid:"}, {
         1 -> "liquid water", 2 -> "air", 3 -> "liquid sodium"}, ControlType -> 
         PopupMenu, ControlPlacement -> 2}, {{$CellContext`show$$, 1, ""}, {
         1 -> " diagram ", 2 -> " plot temperature "}, ControlType -> Setter, 
         ControlPlacement -> 
         3}, {{$CellContext`L$$, 15., "length of heat exchanger (m)"}, 10, 25,
          1, Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`mh$$, 0.2, "hot"}, 0.2, 0.4, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`mc$$, 0.3, "cold"}, 0.2, 0.4, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 6}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           Manipulate`Place[3]}, {
           Manipulate`Place[4], SpanFromLeft}, {
           Style["hot and cold mass flow rates (kg/s):", Bold], 
           Manipulate`Place[5], 
           Manipulate`Place[6]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{632., {245., 252.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`CpL = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {4179., 4178., 4178.5, 4179., 4180., 4182., 4184., 4186., 
          4188., 4191., 4195., 4199., 4203., 4209., 4214., 4217., 4220., 
          4226., 4232., 4239., 4256., 4278., 4302., 4331., 4360., 4400., 
          4440., 4480., 4530., 4590., 4660.}}, {
         Automatic}], $CellContext`\[Mu]L = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {0.000855, 0.0007689, 0.000695, 0.0006309, 0.0005769, 
          0.0005279, 0.000489, 0.000453, 0.00041996, 0.00038897, 0.000365, 
          0.000343, 0.00032396, 0.000306, 0.000289, 0.000279, 0.000274, 
          0.00026, 0.000248, 0.000237, 0.000217, 0.00019998, 0.000185, 
          0.000173, 0.00016198, 0.00015198, 0.000143, 0.000136, 0.000129, 
          0.000124, 0.000118}}, {Automatic}], $CellContext`kL = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {0.613, 0.62, 0.628, 0.634, 0.64, 0.645, 0.65, 0.656, 
          0.66, 0.664, 0.668, 0.671, 0.674, 0.677, 0.679, 0.68, 0.681, 0.683, 
          0.685, 0.686, 0.688, 0.688, 0.688, 0.685, 0.682, 0.678, 0.673, 
          0.667, 0.66001, 0.651, 0.642}}, {Automatic}], $CellContext`CpNa = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {1360., 1300., 1260.}}, {
         Automatic}], $CellContext`\[Mu]Na = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {0.0006983, 0.0002813, 
          0.0001779}}, {Automatic}], $CellContext`kNa = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {86.2, 72.3, 59.7}}, {
         Automatic}], 
       Attributes[Derivative] = {NHoldAll, ReadProtected}, $CellContext`color = {
         RGBColor[0, 0., 1.], 
         RGBColor[0, 0.1, 0.9], 
         RGBColor[0, 0.2, 0.8], 
         RGBColor[0, 0.30000000000000004`, 0.7], 
         RGBColor[0, 0.4, 0.6], 
         RGBColor[0, 0.5, 0.5], 
         RGBColor[0, 0.6000000000000001, 0.3999999999999999], 
         RGBColor[0, 0.7000000000000001, 0.29999999999999993`], 
         RGBColor[0, 0.8, 0.19999999999999996`], 
         RGBColor[0, 0.9, 0.09999999999999998], 
         RGBColor[0, 1., 0.], 
         RGBColor[0., 1, 0], 
         RGBColor[0.1, 1, 0], 
         RGBColor[0.2, 1, 0], 
         RGBColor[0.30000000000000004`, 1, 0], 
         RGBColor[0.4, 1, 0], 
         RGBColor[0.5, 1, 0], 
         RGBColor[0.6000000000000001, 1, 0], 
         RGBColor[0.7000000000000001, 1, 0], 
         RGBColor[0.8, 1, 0], 
         RGBColor[0.9, 1, 0], 
         RGBColor[1., 1, 0], 
         RGBColor[1, 1., 0], 
         RGBColor[1, 0.9, 0], 
         RGBColor[1, 0.8, 0], 
         RGBColor[1, 0.7, 0], 
         RGBColor[1, 0.6, 0], 
         RGBColor[1, 0.5, 0], 
         RGBColor[1, 0.3999999999999999, 0], 
         RGBColor[1, 0.29999999999999993`, 0], 
         RGBColor[1, 0.19999999999999996`, 0], 
         RGBColor[1, 0.09999999999999998, 0], 
         RGBColor[1, 0., 0], 
         RGBColor[1., 0., 0.], 
         RGBColor[0.9, 0., 0.], 
         RGBColor[0.8, 0., 0.], 
         RGBColor[0.7, 0., 0.], 
         RGBColor[0.6, 0., 0.]}, Attributes[Subscript] = {NHoldRest}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->96049622]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`flow$$ = 2, $CellContext`fluid$$ = 
    2, $CellContext`L$$ = 20, $CellContext`mc$$ = 0.3, $CellContext`mh$$ = 
    0.34, $CellContext`show$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`flow$$], 2, "fluid flow:"}, {
      1 -> " parallel ", 2 -> " counter "}}, {{
       Hold[$CellContext`fluid$$], 2, "hot fluid:"}, {
      1 -> "liquid water", 2 -> "air", 3 -> "liquid sodium"}}, {{
       Hold[$CellContext`show$$], 2, ""}, {
      1 -> " diagram ", 2 -> " plot temperature "}}, {{
       Hold[$CellContext`L$$], 20, "length of heat exchanger (m)"}, 10, 25, 
      1}, {{
       Hold[$CellContext`mh$$], 0.34, "hot"}, 0.2, 0.4, 0.01}, {{
       Hold[$CellContext`mc$$], 0.3, "cold"}, 0.2, 0.4, 0.01}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3]}, {
          Manipulate`Place[4], SpanFromLeft}, {
          Style["hot and cold mass flow rates (kg/s):", Bold], 
          Manipulate`Place[5], 
          Manipulate`Place[6]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    583., {171.5, 178.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`flow$14507$$ = 
    False, $CellContext`fluid$14508$$ = False, $CellContext`show$14509$$ = 
    False, $CellContext`L$14510$$ = 0, $CellContext`mh$14511$$ = 
    0, $CellContext`mc$14512$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`flow$$ = 2, $CellContext`fluid$$ = 
        2, $CellContext`L$$ = 20, $CellContext`mc$$ = 0.3, $CellContext`mh$$ = 
        0.34, $CellContext`show$$ = 2}, "ControllerVariables" :> {
        Hold[$CellContext`flow$$, $CellContext`flow$14507$$, False], 
        Hold[$CellContext`fluid$$, $CellContext`fluid$14508$$, False], 
        Hold[$CellContext`show$$, $CellContext`show$14509$$, False], 
        Hold[$CellContext`L$$, $CellContext`L$14510$$, 0], 
        Hold[$CellContext`mh$$, $CellContext`mh$14511$$, 0], 
        Hold[$CellContext`mc$$, $CellContext`mc$14512$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`di$, $CellContext`do$, $CellContext`d$, \
$CellContext`m$, $CellContext`Th1$, $CellContext`Tc1$, $CellContext`Cp$, \
$CellContext`\[Mu]$, $CellContext`k$, $CellContext`crt$, $CellContext`Rei$, \
$CellContext`Nu$, $CellContext`U$, $CellContext`sol$, $CellContext`T$, \
$CellContext`q$, $CellContext`col$, $CellContext`arrow$, $CellContext`p1$, \
$CellContext`p2$, $CellContext`p3$}, $CellContext`di$ = 
         0.025; $CellContext`do$ = 
         0.045; $CellContext`d$[$CellContext`h] = $CellContext`do$ - \
$CellContext`di$; $CellContext`d$[$CellContext`c] = $CellContext`di$; \
$CellContext`m$[$CellContext`h] = $CellContext`mh$$; \
$CellContext`m$[$CellContext`c] = $CellContext`mc$$; $CellContext`Th1$ = 
         400; $CellContext`Tc1$ = 
         300; $CellContext`Cp$[$CellContext`c] = \
$CellContext`CpL[$CellContext`Tc1$]; $CellContext`\[Mu]$[$CellContext`c] = \
$CellContext`\[Mu]L[$CellContext`Tc1$]; $CellContext`k$[$CellContext`c] = \
$CellContext`kL[$CellContext`Tc1$]; 
        Switch[$CellContext`fluid$$, 
          1, {$CellContext`Cp$[$CellContext`h] = \
$CellContext`CpL[$CellContext`Th1$]; $CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]L[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kL[$CellContext`Th1$]; Null}, 
          2, {$CellContext`Cp$[$CellContext`h] = 
            1014; $CellContext`\[Mu]$[$CellContext`h] = 
            0.00002301; $CellContext`k$[$CellContext`h] = 0.0338; Null}, 
          3, {$CellContext`Cp$[$CellContext`h] = \
$CellContext`CpNa[$CellContext`Th1$]; $CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]Na[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kNa[$CellContext`Th1$]; 
           Null}]; $CellContext`crt$[$CellContext`h] = ($CellContext`do$ + \
$CellContext`di$)/($CellContext`do$ - $CellContext`di$); \
$CellContext`crt$[$CellContext`c] = 1; $CellContext`Rei$[
           Pattern[$CellContext`i$, 
            Blank[]]] := 
         4 $CellContext`m$[$CellContext`i$]/(
          Pi $CellContext`\[Mu]$[$CellContext`i$] \
$CellContext`d$[$CellContext`i$] $CellContext`crt$[$CellContext`i$]); \
$CellContext`Nu$[
           Pattern[$CellContext`i$, 
            Blank[]]] := 
         If[$CellContext`Rei$[$CellContext`i$] >= 10000, 
           0.023 $CellContext`Rei$[$CellContext`i$]^(4/
             5) ($CellContext`Cp$[$CellContext`i$] \
$CellContext`\[Mu]$[$CellContext`i$]/$CellContext`k$[$CellContext`i$])^
            Switch[$CellContext`i$, $CellContext`c, 0.4, $CellContext`h, 0.3],
            4.36]; $CellContext`U$ = 1/Total[
           
           Map[($CellContext`Nu$[#] \
$CellContext`k$[#]/$CellContext`d$[#])^(-1)& , {$CellContext`c, \
$CellContext`h}]]; $CellContext`sol$ = Quiet[
           Part[
            
            NDSolve[{$CellContext`m$[$CellContext`h] \
$CellContext`Cp$[$CellContext`h] 
               Derivative[
                1][$CellContext`th][$CellContext`z] == (-$CellContext`U$) 
               Pi $CellContext`di$ ($CellContext`th[$CellContext`z] - \
$CellContext`tc[$CellContext`z]), $CellContext`m$[$CellContext`c] \
$CellContext`Cp$[$CellContext`c] 
               Derivative[1][$CellContext`tc][$CellContext`z] == 
              If[$CellContext`flow$$ == 1, 1, -1] $CellContext`U$ 
               Pi $CellContext`di$ ($CellContext`th[$CellContext`z] - \
$CellContext`tc[$CellContext`z]), $CellContext`th[
               0] == $CellContext`Th1$, $CellContext`tc[
                
                If[$CellContext`flow$$ == 1, 
                 0, $CellContext`L$$]] == $CellContext`Tc1$}, \
{$CellContext`th, $CellContext`tc}, {$CellContext`z, 0, $CellContext`L$$}], 
            1]]; $CellContext`T$[$CellContext`h] = 
         ReplaceAll[$CellContext`th, $CellContext`sol$]; \
$CellContext`T$[$CellContext`c] = 
         ReplaceAll[$CellContext`tc, $CellContext`sol$]; $CellContext`q$ = \
$CellContext`U$ 
          Pi $CellContext`di$ $CellContext`L$$ \
((($CellContext`T$[$CellContext`h][0] - $CellContext`T$[$CellContext`c][
             0]) - ($CellContext`T$[$CellContext`h][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][$CellContext`L$$]))/
           Log[($CellContext`T$[$CellContext`h][
              0] - $CellContext`T$[$CellContext`c][
             0])/($CellContext`T$[$CellContext`h][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][$CellContext`L$$])]); \
$CellContext`col$[$CellContext`h][
           Pattern[$CellContext`x$, 
            Blank[]]] := Blend[
           Reverse[$CellContext`color], 
           
           Rescale[$CellContext`Th1$ - ($CellContext`x$/$CellContext`L$$) \
($CellContext`Th1$ - $CellContext`T$[$CellContext`h][$CellContext`L$$]), \
{$CellContext`Th1$, $CellContext`Tc1$}]]; $CellContext`col$[$CellContext`c][
           Pattern[$CellContext`x$, 
            Blank[]]] := Blend[$CellContext`color, 
           
           Rescale[$CellContext`T$[$CellContext`c][
             0] + ($CellContext`x$/$CellContext`L$$) \
($CellContext`T$[$CellContext`c][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][
              0]), {$CellContext`Tc1$, $CellContext`Th1$}]]; \
$CellContext`arrow$ = 
         Module[{$CellContext`n$, $CellContext`ds$, $CellContext`gap$}, \
$CellContext`n$ = 5; $CellContext`ds$ = 
            0.15 $CellContext`L$$; $CellContext`gap$ = ($CellContext`L$$ - \
$CellContext`n$ $CellContext`ds$)/($CellContext`n$ - 1); Table[
             Map[
             Arrow[{{# ($CellContext`ds$ + $CellContext`gap$), 
                 0, $CellContext`z 0.25 
                 200 ($CellContext`do$ + $CellContext`di$)}, {(# + 
                   1) $CellContext`ds$ + # $CellContext`gap$, 
                 0, $CellContext`z 0.25 
                 200 ($CellContext`do$ + $CellContext`di$)}}]& , 
              Range[0, $CellContext`n$ - 1]], {$CellContext`z, {-1, 1, 
              0}}]]; $CellContext`p1$ = Show[
           Apply[
           ParametricPlot3D[{$CellContext`L$$ $CellContext`z, (#/2) 
              Cos[$CellContext`\[Theta]], (#/2) 
              Sin[$CellContext`\[Theta]]}, {$CellContext`\[Theta], (-Pi)/2, 
              Pi/2}, {$CellContext`z, 0, 1}, Mesh -> None, ColorFunction -> 
             Function[{$CellContext`x$, $CellContext`y$, $CellContext`z$}, 
               $CellContext`col$[#2][$CellContext`x$]], ColorFunctionScaling -> 
             False]& , {{200 $CellContext`do$, $CellContext`h}, {
             200 $CellContext`di$, $CellContext`c}}, {1}], 
           Graphics3D[{{Thick, 
              Arrowheads[0.04], 
              Insert[$CellContext`arrow$, 
               If[$CellContext`flow$$ == 2, 
                Arrowheads[{{-0.04, 0}}]], -2]}, 
             Apply[{
               Table[
                Text[
                 Style[
                  Row[{
                    Round[
                    $CellContext`T$[$CellContext`h][#]], " K"}], 18], {#, 
                  0, $CellContext`z 0.25 
                  200 ($CellContext`do$ + $CellContext`di$)}, 
                 1.3 {#2, 0}], {$CellContext`z, {-1, 1}}], 
               Text[
                Style[
                 Row[{
                   Round[
                    $CellContext`T$[$CellContext`c][#]], " K"}], 18], {#, 0, 
                 0}, 1.3 {#2, 0}]}& , {{0, 1}, {$CellContext`L$$, -1}}, {1}], 
             Text[
              Style[
               Row[{"heat transfer rate = ", 
                 NumberForm[N[$CellContext`q$]/1000, {3, 1}], " kW"}], 18], {
              0, 0, 200 ($CellContext`do$/2)}, {-1, -1.5}]}], Boxed -> False, 
           Axes -> False, 
           PlotRange -> {All, {-0.001, 200 ($CellContext`do$/2)}, All}, 
           ViewPoint -> {0, -2, 0}, 
           ImagePadding -> {{55, 55}, {5, 20}}]; $CellContext`p2$ = Show[
           Table[
            Plot[
             $CellContext`T$[$CellContext`i][$CellContext`z], {$CellContext`z,
               0, $CellContext`L$$}, PlotStyle -> Thick, 
             ColorFunction -> ($CellContext`col$[$CellContext`i][#]& ), 
             ColorFunctionScaling -> False, PlotRange -> 
             All], {$CellContext`i, {$CellContext`c, $CellContext`h}}], 
           Graphics[{
             Riffle[
              Map[
              Arrowheads[#]& , {
               0.05, If[$CellContext`flow$$ == 1, 1, -1] 0.05}], 
              Table[
               Map[{
                 $CellContext`col$[$CellContext`i][#], 
                 Arrow[{{# - 0.01, 
                    $CellContext`T$[$CellContext`i][# - 0.01]}, {#, 
                    $CellContext`T$[$CellContext`i][#]}}]}& , \
$CellContext`L$$ {0.2, 0.4, 0.6, 
                 0.8}], {$CellContext`i, {$CellContext`h, $CellContext`c}}]], 
             Apply[Text[
               Style[
                Subscript[
                 Style["T", Italic], #], 18], #2, #3]& , {{
               "h,1", {0, $CellContext`Th1$}, {1, -1}}, {
               "h,2", {$CellContext`L$$, 
                 $CellContext`T$[$CellContext`h][$CellContext`L$$]}, {-1, \
-1}}, {
                If[$CellContext`flow$$ == 1, "c,1", "c,2"], {0, 
                 $CellContext`T$[$CellContext`c][0]}, {1, 1}}, {
                If[$CellContext`flow$$ == 1, "c,2", "c,1"], {$CellContext`L$$, 
                 $CellContext`T$[$CellContext`c][$CellContext`L$$]}, {-1, 
                1}}}, {1}]}], 
           PlotRange -> {{
             0, $CellContext`L$$}, {$CellContext`Tc1$, $CellContext`Th1$}}, 
           Axes -> False, Frame -> True, FrameLabel -> {
             Style["distance down heat exchanger (m)", 17], 
             Style["temperature (K)", 17]}, LabelStyle -> {14, Black}, 
           ImagePadding -> {{50, 5}, {45, 5}}, PlotRangePadding -> 
           Map[Scaled[#]& , {0.09, 0.1}], PlotLabel -> Style[
             Row[{"heat transfer rate = ", 
               NumberForm[N[$CellContext`q$]/1000, {3, 1}], " kW"}], 
             18]]; $CellContext`p3$ = 
         DensityPlot[$CellContext`temp, {$CellContext`y, 0, 
            1}, {$CellContext`temp, $CellContext`Tc1$, $CellContext`Th1$}, 
           ColorFunction -> (Blend[$CellContext`color, 
             Rescale[#, {$CellContext`Tc1$, $CellContext`Th1$}]]& ), 
           ColorFunctionScaling -> False, ImageSize -> {50, 350}, AspectRatio -> 
           Full, Frame -> {{None, True}, {None, None}}, FrameTicks -> All, 
           LabelStyle -> {14, Black}]; Grid[{{
            Show[
             
             Switch[$CellContext`show$$, 1, $CellContext`p1$, 
              2, $CellContext`p2$], 
             ImageSize -> {525, 350}], $CellContext`p3$}}]], 
      "Specifications" :> {{{$CellContext`flow$$, 2, "fluid flow:"}, {
         1 -> " parallel ", 2 -> " counter "}, ControlType -> Setter, 
         ControlPlacement -> 1}, {{$CellContext`fluid$$, 2, "hot fluid:"}, {
         1 -> "liquid water", 2 -> "air", 3 -> "liquid sodium"}, ControlType -> 
         PopupMenu, ControlPlacement -> 2}, {{$CellContext`show$$, 2, ""}, {
         1 -> " diagram ", 2 -> " plot temperature "}, ControlType -> Setter, 
         ControlPlacement -> 
         3}, {{$CellContext`L$$, 20, "length of heat exchanger (m)"}, 10, 25, 
         1, Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`mh$$, 0.34, "hot"}, 0.2, 0.4, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`mc$$, 0.3, "cold"}, 0.2, 0.4, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 6}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           Manipulate`Place[3]}, {
           Manipulate`Place[4], SpanFromLeft}, {
           Style["hot and cold mass flow rates (kg/s):", Bold], 
           Manipulate`Place[5], 
           Manipulate`Place[6]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{632., {245., 252.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`CpL = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {4179., 4178., 4178.5, 4179., 4180., 4182., 4184., 4186., 
          4188., 4191., 4195., 4199., 4203., 4209., 4214., 4217., 4220., 
          4226., 4232., 4239., 4256., 4278., 4302., 4331., 4360., 4400., 
          4440., 4480., 4530., 4590., 4660.}}, {
         Automatic}], $CellContext`\[Mu]L = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {0.000855, 0.0007689, 0.000695, 0.0006309, 0.0005769, 
          0.0005279, 0.000489, 0.000453, 0.00041996, 0.00038897, 0.000365, 
          0.000343, 0.00032396, 0.000306, 0.000289, 0.000279, 0.000274, 
          0.00026, 0.000248, 0.000237, 0.000217, 0.00019998, 0.000185, 
          0.000173, 0.00016198, 0.00015198, 0.000143, 0.000136, 0.000129, 
          0.000124, 0.000118}}, {Automatic}], $CellContext`kL = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {0.613, 0.62, 0.628, 0.634, 0.64, 0.645, 0.65, 0.656, 
          0.66, 0.664, 0.668, 0.671, 0.674, 0.677, 0.679, 0.68, 0.681, 0.683, 
          0.685, 0.686, 0.688, 0.688, 0.688, 0.685, 0.682, 0.678, 0.673, 
          0.667, 0.66001, 0.651, 0.642}}, {Automatic}], $CellContext`CpNa = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {1360., 1300., 1260.}}, {
         Automatic}], $CellContext`\[Mu]Na = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {0.0006983, 0.0002813, 
          0.0001779}}, {Automatic}], $CellContext`kNa = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {86.2, 72.3, 59.7}}, {
         Automatic}], 
       Attributes[Derivative] = {NHoldAll, ReadProtected}, $CellContext`color = {
         RGBColor[0, 0., 1.], 
         RGBColor[0, 0.1, 0.9], 
         RGBColor[0, 0.2, 0.8], 
         RGBColor[0, 0.30000000000000004`, 0.7], 
         RGBColor[0, 0.4, 0.6], 
         RGBColor[0, 0.5, 0.5], 
         RGBColor[0, 0.6000000000000001, 0.3999999999999999], 
         RGBColor[0, 0.7000000000000001, 0.29999999999999993`], 
         RGBColor[0, 0.8, 0.19999999999999996`], 
         RGBColor[0, 0.9, 0.09999999999999998], 
         RGBColor[0, 1., 0.], 
         RGBColor[0., 1, 0], 
         RGBColor[0.1, 1, 0], 
         RGBColor[0.2, 1, 0], 
         RGBColor[0.30000000000000004`, 1, 0], 
         RGBColor[0.4, 1, 0], 
         RGBColor[0.5, 1, 0], 
         RGBColor[0.6000000000000001, 1, 0], 
         RGBColor[0.7000000000000001, 1, 0], 
         RGBColor[0.8, 1, 0], 
         RGBColor[0.9, 1, 0], 
         RGBColor[1., 1, 0], 
         RGBColor[1, 1., 0], 
         RGBColor[1, 0.9, 0], 
         RGBColor[1, 0.8, 0], 
         RGBColor[1, 0.7, 0], 
         RGBColor[1, 0.6, 0], 
         RGBColor[1, 0.5, 0], 
         RGBColor[1, 0.3999999999999999, 0], 
         RGBColor[1, 0.29999999999999993`, 0], 
         RGBColor[1, 0.19999999999999996`, 0], 
         RGBColor[1, 0.09999999999999998, 0], 
         RGBColor[1, 0., 0], 
         RGBColor[1., 0., 0.], 
         RGBColor[0.9, 0., 0.], 
         RGBColor[0.8, 0., 0.], 
         RGBColor[0.7, 0., 0.], 
         RGBColor[0.6, 0., 0.]}, Attributes[Subscript] = {NHoldRest}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->527641038],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`flow$$ = 1, $CellContext`fluid$$ = 
    2, $CellContext`L$$ = 25, $CellContext`mc$$ = 0.2, $CellContext`mh$$ = 
    0.23, $CellContext`show$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`flow$$], 1, "fluid flow:"}, {
      1 -> " parallel ", 2 -> " counter "}}, {{
       Hold[$CellContext`fluid$$], 2, "hot fluid:"}, {
      1 -> "liquid water", 2 -> "air", 3 -> "liquid sodium"}}, {{
       Hold[$CellContext`show$$], 1, ""}, {
      1 -> " diagram ", 2 -> " plot temperature "}}, {{
       Hold[$CellContext`L$$], 25, "length of heat exchanger (m)"}, 10, 25, 
      1}, {{
       Hold[$CellContext`mh$$], 0.23, "hot"}, 0.2, 0.4, 0.01}, {{
       Hold[$CellContext`mc$$], 0.2, "cold"}, 0.2, 0.4, 0.01}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3]}, {
          Manipulate`Place[4], SpanFromLeft}, {
          Style["hot and cold mass flow rates (kg/s):", Bold], 
          Manipulate`Place[5], 
          Manipulate`Place[6]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    583., {171.5, 178.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`flow$14595$$ = 
    False, $CellContext`fluid$14596$$ = False, $CellContext`show$14597$$ = 
    False, $CellContext`L$14598$$ = 0, $CellContext`mh$14599$$ = 
    0, $CellContext`mc$14600$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`flow$$ = 1, $CellContext`fluid$$ = 
        2, $CellContext`L$$ = 25, $CellContext`mc$$ = 0.2, $CellContext`mh$$ = 
        0.23, $CellContext`show$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`flow$$, $CellContext`flow$14595$$, False], 
        Hold[$CellContext`fluid$$, $CellContext`fluid$14596$$, False], 
        Hold[$CellContext`show$$, $CellContext`show$14597$$, False], 
        Hold[$CellContext`L$$, $CellContext`L$14598$$, 0], 
        Hold[$CellContext`mh$$, $CellContext`mh$14599$$, 0], 
        Hold[$CellContext`mc$$, $CellContext`mc$14600$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`di$, $CellContext`do$, $CellContext`d$, \
$CellContext`m$, $CellContext`Th1$, $CellContext`Tc1$, $CellContext`Cp$, \
$CellContext`\[Mu]$, $CellContext`k$, $CellContext`crt$, $CellContext`Rei$, \
$CellContext`Nu$, $CellContext`U$, $CellContext`sol$, $CellContext`T$, \
$CellContext`q$, $CellContext`col$, $CellContext`arrow$, $CellContext`p1$, \
$CellContext`p2$, $CellContext`p3$}, $CellContext`di$ = 
         0.025; $CellContext`do$ = 
         0.045; $CellContext`d$[$CellContext`h] = $CellContext`do$ - \
$CellContext`di$; $CellContext`d$[$CellContext`c] = $CellContext`di$; \
$CellContext`m$[$CellContext`h] = $CellContext`mh$$; \
$CellContext`m$[$CellContext`c] = $CellContext`mc$$; $CellContext`Th1$ = 
         400; $CellContext`Tc1$ = 
         300; $CellContext`Cp$[$CellContext`c] = \
$CellContext`CpL[$CellContext`Tc1$]; $CellContext`\[Mu]$[$CellContext`c] = \
$CellContext`\[Mu]L[$CellContext`Tc1$]; $CellContext`k$[$CellContext`c] = \
$CellContext`kL[$CellContext`Tc1$]; 
        Switch[$CellContext`fluid$$, 
          1, {$CellContext`Cp$[$CellContext`h] = \
$CellContext`CpL[$CellContext`Th1$]; $CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]L[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kL[$CellContext`Th1$]; Null}, 
          2, {$CellContext`Cp$[$CellContext`h] = 
            1014; $CellContext`\[Mu]$[$CellContext`h] = 
            0.00002301; $CellContext`k$[$CellContext`h] = 0.0338; Null}, 
          3, {$CellContext`Cp$[$CellContext`h] = \
$CellContext`CpNa[$CellContext`Th1$]; $CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]Na[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kNa[$CellContext`Th1$]; 
           Null}]; $CellContext`crt$[$CellContext`h] = ($CellContext`do$ + \
$CellContext`di$)/($CellContext`do$ - $CellContext`di$); \
$CellContext`crt$[$CellContext`c] = 1; $CellContext`Rei$[
           Pattern[$CellContext`i$, 
            Blank[]]] := 
         4 $CellContext`m$[$CellContext`i$]/(
          Pi $CellContext`\[Mu]$[$CellContext`i$] \
$CellContext`d$[$CellContext`i$] $CellContext`crt$[$CellContext`i$]); \
$CellContext`Nu$[
           Pattern[$CellContext`i$, 
            Blank[]]] := 
         If[$CellContext`Rei$[$CellContext`i$] >= 10000, 
           0.023 $CellContext`Rei$[$CellContext`i$]^(4/
             5) ($CellContext`Cp$[$CellContext`i$] \
$CellContext`\[Mu]$[$CellContext`i$]/$CellContext`k$[$CellContext`i$])^
            Switch[$CellContext`i$, $CellContext`c, 0.4, $CellContext`h, 0.3],
            4.36]; $CellContext`U$ = 1/Total[
           
           Map[($CellContext`Nu$[#] \
$CellContext`k$[#]/$CellContext`d$[#])^(-1)& , {$CellContext`c, \
$CellContext`h}]]; $CellContext`sol$ = Quiet[
           Part[
            
            NDSolve[{$CellContext`m$[$CellContext`h] \
$CellContext`Cp$[$CellContext`h] 
               Derivative[
                1][$CellContext`th][$CellContext`z] == (-$CellContext`U$) 
               Pi $CellContext`di$ ($CellContext`th[$CellContext`z] - \
$CellContext`tc[$CellContext`z]), $CellContext`m$[$CellContext`c] \
$CellContext`Cp$[$CellContext`c] 
               Derivative[1][$CellContext`tc][$CellContext`z] == 
              If[$CellContext`flow$$ == 1, 1, -1] $CellContext`U$ 
               Pi $CellContext`di$ ($CellContext`th[$CellContext`z] - \
$CellContext`tc[$CellContext`z]), $CellContext`th[
               0] == $CellContext`Th1$, $CellContext`tc[
                
                If[$CellContext`flow$$ == 1, 
                 0, $CellContext`L$$]] == $CellContext`Tc1$}, \
{$CellContext`th, $CellContext`tc}, {$CellContext`z, 0, $CellContext`L$$}], 
            1]]; $CellContext`T$[$CellContext`h] = 
         ReplaceAll[$CellContext`th, $CellContext`sol$]; \
$CellContext`T$[$CellContext`c] = 
         ReplaceAll[$CellContext`tc, $CellContext`sol$]; $CellContext`q$ = \
$CellContext`U$ 
          Pi $CellContext`di$ $CellContext`L$$ \
((($CellContext`T$[$CellContext`h][0] - $CellContext`T$[$CellContext`c][
             0]) - ($CellContext`T$[$CellContext`h][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][$CellContext`L$$]))/
           Log[($CellContext`T$[$CellContext`h][
              0] - $CellContext`T$[$CellContext`c][
             0])/($CellContext`T$[$CellContext`h][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][$CellContext`L$$])]); \
$CellContext`col$[$CellContext`h][
           Pattern[$CellContext`x$, 
            Blank[]]] := Blend[
           Reverse[$CellContext`color], 
           
           Rescale[$CellContext`Th1$ - ($CellContext`x$/$CellContext`L$$) \
($CellContext`Th1$ - $CellContext`T$[$CellContext`h][$CellContext`L$$]), \
{$CellContext`Th1$, $CellContext`Tc1$}]]; $CellContext`col$[$CellContext`c][
           Pattern[$CellContext`x$, 
            Blank[]]] := Blend[$CellContext`color, 
           
           Rescale[$CellContext`T$[$CellContext`c][
             0] + ($CellContext`x$/$CellContext`L$$) \
($CellContext`T$[$CellContext`c][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][
              0]), {$CellContext`Tc1$, $CellContext`Th1$}]]; \
$CellContext`arrow$ = 
         Module[{$CellContext`n$, $CellContext`ds$, $CellContext`gap$}, \
$CellContext`n$ = 5; $CellContext`ds$ = 
            0.15 $CellContext`L$$; $CellContext`gap$ = ($CellContext`L$$ - \
$CellContext`n$ $CellContext`ds$)/($CellContext`n$ - 1); Table[
             Map[
             Arrow[{{# ($CellContext`ds$ + $CellContext`gap$), 
                 0, $CellContext`z 0.25 
                 200 ($CellContext`do$ + $CellContext`di$)}, {(# + 
                   1) $CellContext`ds$ + # $CellContext`gap$, 
                 0, $CellContext`z 0.25 
                 200 ($CellContext`do$ + $CellContext`di$)}}]& , 
              Range[0, $CellContext`n$ - 1]], {$CellContext`z, {-1, 1, 
              0}}]]; $CellContext`p1$ = Show[
           Apply[
           ParametricPlot3D[{$CellContext`L$$ $CellContext`z, (#/2) 
              Cos[$CellContext`\[Theta]], (#/2) 
              Sin[$CellContext`\[Theta]]}, {$CellContext`\[Theta], (-Pi)/2, 
              Pi/2}, {$CellContext`z, 0, 1}, Mesh -> None, ColorFunction -> 
             Function[{$CellContext`x$, $CellContext`y$, $CellContext`z$}, 
               $CellContext`col$[#2][$CellContext`x$]], ColorFunctionScaling -> 
             False]& , {{200 $CellContext`do$, $CellContext`h}, {
             200 $CellContext`di$, $CellContext`c}}, {1}], 
           Graphics3D[{{Thick, 
              Arrowheads[0.04], 
              Insert[$CellContext`arrow$, 
               If[$CellContext`flow$$ == 2, 
                Arrowheads[{{-0.04, 0}}]], -2]}, 
             Apply[{
               Table[
                Text[
                 Style[
                  Row[{
                    Round[
                    $CellContext`T$[$CellContext`h][#]], " K"}], 18], {#, 
                  0, $CellContext`z 0.25 
                  200 ($CellContext`do$ + $CellContext`di$)}, 
                 1.3 {#2, 0}], {$CellContext`z, {-1, 1}}], 
               Text[
                Style[
                 Row[{
                   Round[
                    $CellContext`T$[$CellContext`c][#]], " K"}], 18], {#, 0, 
                 0}, 1.3 {#2, 0}]}& , {{0, 1}, {$CellContext`L$$, -1}}, {1}], 
             Text[
              Style[
               Row[{"heat transfer rate = ", 
                 NumberForm[N[$CellContext`q$]/1000, {3, 1}], " kW"}], 18], {
              0, 0, 200 ($CellContext`do$/2)}, {-1, -1.5}]}], Boxed -> False, 
           Axes -> False, 
           PlotRange -> {All, {-0.001, 200 ($CellContext`do$/2)}, All}, 
           ViewPoint -> {0, -2, 0}, 
           ImagePadding -> {{55, 55}, {5, 20}}]; $CellContext`p2$ = Show[
           Table[
            Plot[
             $CellContext`T$[$CellContext`i][$CellContext`z], {$CellContext`z,
               0, $CellContext`L$$}, PlotStyle -> Thick, 
             ColorFunction -> ($CellContext`col$[$CellContext`i][#]& ), 
             ColorFunctionScaling -> False, PlotRange -> 
             All], {$CellContext`i, {$CellContext`c, $CellContext`h}}], 
           Graphics[{
             Riffle[
              Map[
              Arrowheads[#]& , {
               0.05, If[$CellContext`flow$$ == 1, 1, -1] 0.05}], 
              Table[
               Map[{
                 $CellContext`col$[$CellContext`i][#], 
                 Arrow[{{# - 0.01, 
                    $CellContext`T$[$CellContext`i][# - 0.01]}, {#, 
                    $CellContext`T$[$CellContext`i][#]}}]}& , \
$CellContext`L$$ {0.2, 0.4, 0.6, 
                 0.8}], {$CellContext`i, {$CellContext`h, $CellContext`c}}]], 
             Apply[Text[
               Style[
                Subscript[
                 Style["T", Italic], #], 18], #2, #3]& , {{
               "h,1", {0, $CellContext`Th1$}, {1, -1}}, {
               "h,2", {$CellContext`L$$, 
                 $CellContext`T$[$CellContext`h][$CellContext`L$$]}, {-1, \
-1}}, {
                If[$CellContext`flow$$ == 1, "c,1", "c,2"], {0, 
                 $CellContext`T$[$CellContext`c][0]}, {1, 1}}, {
                If[$CellContext`flow$$ == 1, "c,2", "c,1"], {$CellContext`L$$, 
                 $CellContext`T$[$CellContext`c][$CellContext`L$$]}, {-1, 
                1}}}, {1}]}], 
           PlotRange -> {{
             0, $CellContext`L$$}, {$CellContext`Tc1$, $CellContext`Th1$}}, 
           Axes -> False, Frame -> True, FrameLabel -> {
             Style["distance down heat exchanger (m)", 17], 
             Style["temperature (K)", 17]}, LabelStyle -> {14, Black}, 
           ImagePadding -> {{50, 5}, {45, 5}}, PlotRangePadding -> 
           Map[Scaled[#]& , {0.09, 0.1}], PlotLabel -> Style[
             Row[{"heat transfer rate = ", 
               NumberForm[N[$CellContext`q$]/1000, {3, 1}], " kW"}], 
             18]]; $CellContext`p3$ = 
         DensityPlot[$CellContext`temp, {$CellContext`y, 0, 
            1}, {$CellContext`temp, $CellContext`Tc1$, $CellContext`Th1$}, 
           ColorFunction -> (Blend[$CellContext`color, 
             Rescale[#, {$CellContext`Tc1$, $CellContext`Th1$}]]& ), 
           ColorFunctionScaling -> False, ImageSize -> {50, 350}, AspectRatio -> 
           Full, Frame -> {{None, True}, {None, None}}, FrameTicks -> All, 
           LabelStyle -> {14, Black}]; Grid[{{
            Show[
             
             Switch[$CellContext`show$$, 1, $CellContext`p1$, 
              2, $CellContext`p2$], 
             ImageSize -> {525, 350}], $CellContext`p3$}}]], 
      "Specifications" :> {{{$CellContext`flow$$, 1, "fluid flow:"}, {
         1 -> " parallel ", 2 -> " counter "}, ControlType -> Setter, 
         ControlPlacement -> 1}, {{$CellContext`fluid$$, 2, "hot fluid:"}, {
         1 -> "liquid water", 2 -> "air", 3 -> "liquid sodium"}, ControlType -> 
         PopupMenu, ControlPlacement -> 2}, {{$CellContext`show$$, 1, ""}, {
         1 -> " diagram ", 2 -> " plot temperature "}, ControlType -> Setter, 
         ControlPlacement -> 
         3}, {{$CellContext`L$$, 25, "length of heat exchanger (m)"}, 10, 25, 
         1, Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`mh$$, 0.23, "hot"}, 0.2, 0.4, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`mc$$, 0.2, "cold"}, 0.2, 0.4, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 6}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           Manipulate`Place[3]}, {
           Manipulate`Place[4], SpanFromLeft}, {
           Style["hot and cold mass flow rates (kg/s):", Bold], 
           Manipulate`Place[5], 
           Manipulate`Place[6]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{632., {245., 252.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`CpL = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {4179., 4178., 4178.5, 4179., 4180., 4182., 4184., 4186., 
          4188., 4191., 4195., 4199., 4203., 4209., 4214., 4217., 4220., 
          4226., 4232., 4239., 4256., 4278., 4302., 4331., 4360., 4400., 
          4440., 4480., 4530., 4590., 4660.}}, {
         Automatic}], $CellContext`\[Mu]L = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {0.000855, 0.0007689, 0.000695, 0.0006309, 0.0005769, 
          0.0005279, 0.000489, 0.000453, 0.00041996, 0.00038897, 0.000365, 
          0.000343, 0.00032396, 0.000306, 0.000289, 0.000279, 0.000274, 
          0.00026, 0.000248, 0.000237, 0.000217, 0.00019998, 0.000185, 
          0.000173, 0.00016198, 0.00015198, 0.000143, 0.000136, 0.000129, 
          0.000124, 0.000118}}, {Automatic}], $CellContext`kL = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {0.613, 0.62, 0.628, 0.634, 0.64, 0.645, 0.65, 0.656, 
          0.66, 0.664, 0.668, 0.671, 0.674, 0.677, 0.679, 0.68, 0.681, 0.683, 
          0.685, 0.686, 0.688, 0.688, 0.688, 0.685, 0.682, 0.678, 0.673, 
          0.667, 0.66001, 0.651, 0.642}}, {Automatic}], $CellContext`CpNa = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {1360., 1300., 1260.}}, {
         Automatic}], $CellContext`\[Mu]Na = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {0.0006983, 0.0002813, 
          0.0001779}}, {Automatic}], $CellContext`kNa = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {86.2, 72.3, 59.7}}, {
         Automatic}], 
       Attributes[Derivative] = {NHoldAll, ReadProtected}, $CellContext`color = {
         RGBColor[0, 0., 1.], 
         RGBColor[0, 0.1, 0.9], 
         RGBColor[0, 0.2, 0.8], 
         RGBColor[0, 0.30000000000000004`, 0.7], 
         RGBColor[0, 0.4, 0.6], 
         RGBColor[0, 0.5, 0.5], 
         RGBColor[0, 0.6000000000000001, 0.3999999999999999], 
         RGBColor[0, 0.7000000000000001, 0.29999999999999993`], 
         RGBColor[0, 0.8, 0.19999999999999996`], 
         RGBColor[0, 0.9, 0.09999999999999998], 
         RGBColor[0, 1., 0.], 
         RGBColor[0., 1, 0], 
         RGBColor[0.1, 1, 0], 
         RGBColor[0.2, 1, 0], 
         RGBColor[0.30000000000000004`, 1, 0], 
         RGBColor[0.4, 1, 0], 
         RGBColor[0.5, 1, 0], 
         RGBColor[0.6000000000000001, 1, 0], 
         RGBColor[0.7000000000000001, 1, 0], 
         RGBColor[0.8, 1, 0], 
         RGBColor[0.9, 1, 0], 
         RGBColor[1., 1, 0], 
         RGBColor[1, 1., 0], 
         RGBColor[1, 0.9, 0], 
         RGBColor[1, 0.8, 0], 
         RGBColor[1, 0.7, 0], 
         RGBColor[1, 0.6, 0], 
         RGBColor[1, 0.5, 0], 
         RGBColor[1, 0.3999999999999999, 0], 
         RGBColor[1, 0.29999999999999993`, 0], 
         RGBColor[1, 0.19999999999999996`, 0], 
         RGBColor[1, 0.09999999999999998, 0], 
         RGBColor[1, 0., 0], 
         RGBColor[1., 0., 0.], 
         RGBColor[0.9, 0., 0.], 
         RGBColor[0.8, 0., 0.], 
         RGBColor[0.7, 0., 0.], 
         RGBColor[0.6, 0., 0.]}, Attributes[Subscript] = {NHoldRest}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->138767934],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`flow$$ = 1, $CellContext`fluid$$ = 
    3, $CellContext`L$$ = 10, $CellContext`mc$$ = 0.4, $CellContext`mh$$ = 
    0.4, $CellContext`show$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`flow$$], 1, "fluid flow:"}, {
      1 -> " parallel ", 2 -> " counter "}}, {{
       Hold[$CellContext`fluid$$], 3, "hot fluid:"}, {
      1 -> "liquid water", 2 -> "air", 3 -> "liquid sodium"}}, {{
       Hold[$CellContext`show$$], 2, ""}, {
      1 -> " diagram ", 2 -> " plot temperature "}}, {{
       Hold[$CellContext`L$$], 10, "length of heat exchanger (m)"}, 10, 25, 
      1}, {{
       Hold[$CellContext`mh$$], 0.4, "hot"}, 0.2, 0.4, 0.01}, {{
       Hold[$CellContext`mc$$], 0.4, "cold"}, 0.2, 0.4, 0.01}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3]}, {
          Manipulate`Place[4], SpanFromLeft}, {
          Style["hot and cold mass flow rates (kg/s):", Bold], 
          Manipulate`Place[5], 
          Manipulate`Place[6]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    583., {171.5, 178.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`flow$14683$$ = 
    False, $CellContext`fluid$14684$$ = False, $CellContext`show$14685$$ = 
    False, $CellContext`L$14686$$ = 0, $CellContext`mh$14687$$ = 
    0, $CellContext`mc$14688$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`flow$$ = 1, $CellContext`fluid$$ = 
        3, $CellContext`L$$ = 10, $CellContext`mc$$ = 0.4, $CellContext`mh$$ = 
        0.4, $CellContext`show$$ = 2}, "ControllerVariables" :> {
        Hold[$CellContext`flow$$, $CellContext`flow$14683$$, False], 
        Hold[$CellContext`fluid$$, $CellContext`fluid$14684$$, False], 
        Hold[$CellContext`show$$, $CellContext`show$14685$$, False], 
        Hold[$CellContext`L$$, $CellContext`L$14686$$, 0], 
        Hold[$CellContext`mh$$, $CellContext`mh$14687$$, 0], 
        Hold[$CellContext`mc$$, $CellContext`mc$14688$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`di$, $CellContext`do$, $CellContext`d$, \
$CellContext`m$, $CellContext`Th1$, $CellContext`Tc1$, $CellContext`Cp$, \
$CellContext`\[Mu]$, $CellContext`k$, $CellContext`crt$, $CellContext`Rei$, \
$CellContext`Nu$, $CellContext`U$, $CellContext`sol$, $CellContext`T$, \
$CellContext`q$, $CellContext`col$, $CellContext`arrow$, $CellContext`p1$, \
$CellContext`p2$, $CellContext`p3$}, $CellContext`di$ = 
         0.025; $CellContext`do$ = 
         0.045; $CellContext`d$[$CellContext`h] = $CellContext`do$ - \
$CellContext`di$; $CellContext`d$[$CellContext`c] = $CellContext`di$; \
$CellContext`m$[$CellContext`h] = $CellContext`mh$$; \
$CellContext`m$[$CellContext`c] = $CellContext`mc$$; $CellContext`Th1$ = 
         400; $CellContext`Tc1$ = 
         300; $CellContext`Cp$[$CellContext`c] = \
$CellContext`CpL[$CellContext`Tc1$]; $CellContext`\[Mu]$[$CellContext`c] = \
$CellContext`\[Mu]L[$CellContext`Tc1$]; $CellContext`k$[$CellContext`c] = \
$CellContext`kL[$CellContext`Tc1$]; 
        Switch[$CellContext`fluid$$, 
          1, {$CellContext`Cp$[$CellContext`h] = \
$CellContext`CpL[$CellContext`Th1$]; $CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]L[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kL[$CellContext`Th1$]; Null}, 
          2, {$CellContext`Cp$[$CellContext`h] = 
            1014; $CellContext`\[Mu]$[$CellContext`h] = 
            0.00002301; $CellContext`k$[$CellContext`h] = 0.0338; Null}, 
          3, {$CellContext`Cp$[$CellContext`h] = \
$CellContext`CpNa[$CellContext`Th1$]; $CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]Na[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kNa[$CellContext`Th1$]; 
           Null}]; $CellContext`crt$[$CellContext`h] = ($CellContext`do$ + \
$CellContext`di$)/($CellContext`do$ - $CellContext`di$); \
$CellContext`crt$[$CellContext`c] = 1; $CellContext`Rei$[
           Pattern[$CellContext`i$, 
            Blank[]]] := 
         4 $CellContext`m$[$CellContext`i$]/(
          Pi $CellContext`\[Mu]$[$CellContext`i$] \
$CellContext`d$[$CellContext`i$] $CellContext`crt$[$CellContext`i$]); \
$CellContext`Nu$[
           Pattern[$CellContext`i$, 
            Blank[]]] := 
         If[$CellContext`Rei$[$CellContext`i$] >= 10000, 
           0.023 $CellContext`Rei$[$CellContext`i$]^(4/
             5) ($CellContext`Cp$[$CellContext`i$] \
$CellContext`\[Mu]$[$CellContext`i$]/$CellContext`k$[$CellContext`i$])^
            Switch[$CellContext`i$, $CellContext`c, 0.4, $CellContext`h, 0.3],
            4.36]; $CellContext`U$ = 1/Total[
           
           Map[($CellContext`Nu$[#] \
$CellContext`k$[#]/$CellContext`d$[#])^(-1)& , {$CellContext`c, \
$CellContext`h}]]; $CellContext`sol$ = Quiet[
           Part[
            
            NDSolve[{$CellContext`m$[$CellContext`h] \
$CellContext`Cp$[$CellContext`h] 
               Derivative[
                1][$CellContext`th][$CellContext`z] == (-$CellContext`U$) 
               Pi $CellContext`di$ ($CellContext`th[$CellContext`z] - \
$CellContext`tc[$CellContext`z]), $CellContext`m$[$CellContext`c] \
$CellContext`Cp$[$CellContext`c] 
               Derivative[1][$CellContext`tc][$CellContext`z] == 
              If[$CellContext`flow$$ == 1, 1, -1] $CellContext`U$ 
               Pi $CellContext`di$ ($CellContext`th[$CellContext`z] - \
$CellContext`tc[$CellContext`z]), $CellContext`th[
               0] == $CellContext`Th1$, $CellContext`tc[
                
                If[$CellContext`flow$$ == 1, 
                 0, $CellContext`L$$]] == $CellContext`Tc1$}, \
{$CellContext`th, $CellContext`tc}, {$CellContext`z, 0, $CellContext`L$$}], 
            1]]; $CellContext`T$[$CellContext`h] = 
         ReplaceAll[$CellContext`th, $CellContext`sol$]; \
$CellContext`T$[$CellContext`c] = 
         ReplaceAll[$CellContext`tc, $CellContext`sol$]; $CellContext`q$ = \
$CellContext`U$ 
          Pi $CellContext`di$ $CellContext`L$$ \
((($CellContext`T$[$CellContext`h][0] - $CellContext`T$[$CellContext`c][
             0]) - ($CellContext`T$[$CellContext`h][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][$CellContext`L$$]))/
           Log[($CellContext`T$[$CellContext`h][
              0] - $CellContext`T$[$CellContext`c][
             0])/($CellContext`T$[$CellContext`h][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][$CellContext`L$$])]); \
$CellContext`col$[$CellContext`h][
           Pattern[$CellContext`x$, 
            Blank[]]] := Blend[
           Reverse[$CellContext`color], 
           
           Rescale[$CellContext`Th1$ - ($CellContext`x$/$CellContext`L$$) \
($CellContext`Th1$ - $CellContext`T$[$CellContext`h][$CellContext`L$$]), \
{$CellContext`Th1$, $CellContext`Tc1$}]]; $CellContext`col$[$CellContext`c][
           Pattern[$CellContext`x$, 
            Blank[]]] := Blend[$CellContext`color, 
           
           Rescale[$CellContext`T$[$CellContext`c][
             0] + ($CellContext`x$/$CellContext`L$$) \
($CellContext`T$[$CellContext`c][$CellContext`L$$] - \
$CellContext`T$[$CellContext`c][
              0]), {$CellContext`Tc1$, $CellContext`Th1$}]]; \
$CellContext`arrow$ = 
         Module[{$CellContext`n$, $CellContext`ds$, $CellContext`gap$}, \
$CellContext`n$ = 5; $CellContext`ds$ = 
            0.15 $CellContext`L$$; $CellContext`gap$ = ($CellContext`L$$ - \
$CellContext`n$ $CellContext`ds$)/($CellContext`n$ - 1); Table[
             Map[
             Arrow[{{# ($CellContext`ds$ + $CellContext`gap$), 
                 0, $CellContext`z 0.25 
                 200 ($CellContext`do$ + $CellContext`di$)}, {(# + 
                   1) $CellContext`ds$ + # $CellContext`gap$, 
                 0, $CellContext`z 0.25 
                 200 ($CellContext`do$ + $CellContext`di$)}}]& , 
              Range[0, $CellContext`n$ - 1]], {$CellContext`z, {-1, 1, 
              0}}]]; $CellContext`p1$ = Show[
           Apply[
           ParametricPlot3D[{$CellContext`L$$ $CellContext`z, (#/2) 
              Cos[$CellContext`\[Theta]], (#/2) 
              Sin[$CellContext`\[Theta]]}, {$CellContext`\[Theta], (-Pi)/2, 
              Pi/2}, {$CellContext`z, 0, 1}, Mesh -> None, ColorFunction -> 
             Function[{$CellContext`x$, $CellContext`y$, $CellContext`z$}, 
               $CellContext`col$[#2][$CellContext`x$]], ColorFunctionScaling -> 
             False]& , {{200 $CellContext`do$, $CellContext`h}, {
             200 $CellContext`di$, $CellContext`c}}, {1}], 
           Graphics3D[{{Thick, 
              Arrowheads[0.04], 
              Insert[$CellContext`arrow$, 
               If[$CellContext`flow$$ == 2, 
                Arrowheads[{{-0.04, 0}}]], -2]}, 
             Apply[{
               Table[
                Text[
                 Style[
                  Row[{
                    Round[
                    $CellContext`T$[$CellContext`h][#]], " K"}], 18], {#, 
                  0, $CellContext`z 0.25 
                  200 ($CellContext`do$ + $CellContext`di$)}, 
                 1.3 {#2, 0}], {$CellContext`z, {-1, 1}}], 
               Text[
                Style[
                 Row[{
                   Round[
                    $CellContext`T$[$CellContext`c][#]], " K"}], 18], {#, 0, 
                 0}, 1.3 {#2, 0}]}& , {{0, 1}, {$CellContext`L$$, -1}}, {1}], 
             Text[
              Style[
               Row[{"heat transfer rate = ", 
                 NumberForm[N[$CellContext`q$]/1000, {3, 1}], " kW"}], 18], {
              0, 0, 200 ($CellContext`do$/2)}, {-1, -1.5}]}], Boxed -> False, 
           Axes -> False, 
           PlotRange -> {All, {-0.001, 200 ($CellContext`do$/2)}, All}, 
           ViewPoint -> {0, -2, 0}, 
           ImagePadding -> {{55, 55}, {5, 20}}]; $CellContext`p2$ = Show[
           Table[
            Plot[
             $CellContext`T$[$CellContext`i][$CellContext`z], {$CellContext`z,
               0, $CellContext`L$$}, PlotStyle -> Thick, 
             ColorFunction -> ($CellContext`col$[$CellContext`i][#]& ), 
             ColorFunctionScaling -> False, PlotRange -> 
             All], {$CellContext`i, {$CellContext`c, $CellContext`h}}], 
           Graphics[{
             Riffle[
              Map[
              Arrowheads[#]& , {
               0.05, If[$CellContext`flow$$ == 1, 1, -1] 0.05}], 
              Table[
               Map[{
                 $CellContext`col$[$CellContext`i][#], 
                 Arrow[{{# - 0.01, 
                    $CellContext`T$[$CellContext`i][# - 0.01]}, {#, 
                    $CellContext`T$[$CellContext`i][#]}}]}& , \
$CellContext`L$$ {0.2, 0.4, 0.6, 
                 0.8}], {$CellContext`i, {$CellContext`h, $CellContext`c}}]], 
             Apply[Text[
               Style[
                Subscript[
                 Style["T", Italic], #], 18], #2, #3]& , {{
               "h,1", {0, $CellContext`Th1$}, {1, -1}}, {
               "h,2", {$CellContext`L$$, 
                 $CellContext`T$[$CellContext`h][$CellContext`L$$]}, {-1, \
-1}}, {
                If[$CellContext`flow$$ == 1, "c,1", "c,2"], {0, 
                 $CellContext`T$[$CellContext`c][0]}, {1, 1}}, {
                If[$CellContext`flow$$ == 1, "c,2", "c,1"], {$CellContext`L$$, 
                 $CellContext`T$[$CellContext`c][$CellContext`L$$]}, {-1, 
                1}}}, {1}]}], 
           PlotRange -> {{
             0, $CellContext`L$$}, {$CellContext`Tc1$, $CellContext`Th1$}}, 
           Axes -> False, Frame -> True, FrameLabel -> {
             Style["distance down heat exchanger (m)", 17], 
             Style["temperature (K)", 17]}, LabelStyle -> {14, Black}, 
           ImagePadding -> {{50, 5}, {45, 5}}, PlotRangePadding -> 
           Map[Scaled[#]& , {0.09, 0.1}], PlotLabel -> Style[
             Row[{"heat transfer rate = ", 
               NumberForm[N[$CellContext`q$]/1000, {3, 1}], " kW"}], 
             18]]; $CellContext`p3$ = 
         DensityPlot[$CellContext`temp, {$CellContext`y, 0, 
            1}, {$CellContext`temp, $CellContext`Tc1$, $CellContext`Th1$}, 
           ColorFunction -> (Blend[$CellContext`color, 
             Rescale[#, {$CellContext`Tc1$, $CellContext`Th1$}]]& ), 
           ColorFunctionScaling -> False, ImageSize -> {50, 350}, AspectRatio -> 
           Full, Frame -> {{None, True}, {None, None}}, FrameTicks -> All, 
           LabelStyle -> {14, Black}]; Grid[{{
            Show[
             
             Switch[$CellContext`show$$, 1, $CellContext`p1$, 
              2, $CellContext`p2$], 
             ImageSize -> {525, 350}], $CellContext`p3$}}]], 
      "Specifications" :> {{{$CellContext`flow$$, 1, "fluid flow:"}, {
         1 -> " parallel ", 2 -> " counter "}, ControlType -> Setter, 
         ControlPlacement -> 1}, {{$CellContext`fluid$$, 3, "hot fluid:"}, {
         1 -> "liquid water", 2 -> "air", 3 -> "liquid sodium"}, ControlType -> 
         PopupMenu, ControlPlacement -> 2}, {{$CellContext`show$$, 2, ""}, {
         1 -> " diagram ", 2 -> " plot temperature "}, ControlType -> Setter, 
         ControlPlacement -> 
         3}, {{$CellContext`L$$, 10, "length of heat exchanger (m)"}, 10, 25, 
         1, Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`mh$$, 0.4, "hot"}, 0.2, 0.4, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`mc$$, 0.4, "cold"}, 0.2, 0.4, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 6}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           Manipulate`Place[3]}, {
           Manipulate`Place[4], SpanFromLeft}, {
           Style["hot and cold mass flow rates (kg/s):", Bold], 
           Manipulate`Place[5], 
           Manipulate`Place[6]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{632., {245., 252.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`CpL = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {4179., 4178., 4178.5, 4179., 4180., 4182., 4184., 4186., 
          4188., 4191., 4195., 4199., 4203., 4209., 4214., 4217., 4220., 
          4226., 4232., 4239., 4256., 4278., 4302., 4331., 4360., 4400., 
          4440., 4480., 4530., 4590., 4660.}}, {
         Automatic}], $CellContext`\[Mu]L = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {0.000855, 0.0007689, 0.000695, 0.0006309, 0.0005769, 
          0.0005279, 0.000489, 0.000453, 0.00041996, 0.00038897, 0.000365, 
          0.000343, 0.00032396, 0.000306, 0.000289, 0.000279, 0.000274, 
          0.00026, 0.000248, 0.000237, 0.000217, 0.00019998, 0.000185, 
          0.000173, 0.00016198, 0.00015198, 0.000143, 0.000136, 0.000129, 
          0.000124, 0.000118}}, {Automatic}], $CellContext`kL = 
       InterpolatingFunction[{{300., 500.}}, {
         5, 7, 0, {31}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{300., 
         305., 310., 315., 320., 325., 330., 335., 340., 345., 350., 355., 
         360., 365., 370., 373.15, 375., 380., 385., 390., 400., 410., 420., 
         430., 440., 450., 460., 470., 480., 490., 500.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
           13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
           30, 31}, {0.613, 0.62, 0.628, 0.634, 0.64, 0.645, 0.65, 0.656, 
          0.66, 0.664, 0.668, 0.671, 0.674, 0.677, 0.679, 0.68, 0.681, 0.683, 
          0.685, 0.686, 0.688, 0.688, 0.688, 0.685, 0.682, 0.678, 0.673, 
          0.667, 0.66001, 0.651, 0.642}}, {Automatic}], $CellContext`CpNa = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {1360., 1300., 1260.}}, {
         Automatic}], $CellContext`\[Mu]Na = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {0.0006983, 0.0002813, 
          0.0001779}}, {Automatic}], $CellContext`kNa = 
       InterpolatingFunction[{{366., 977.}}, {
         5, 7, 0, {3}, {3}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{366., 
         644., 977.}}, {
         Developer`PackedArrayForm, {0, 1, 2, 3}, {86.2, 72.3, 59.7}}, {
         Automatic}], 
       Attributes[Derivative] = {NHoldAll, ReadProtected}, $CellContext`color = {
         RGBColor[0, 0., 1.], 
         RGBColor[0, 0.1, 0.9], 
         RGBColor[0, 0.2, 0.8], 
         RGBColor[0, 0.30000000000000004`, 0.7], 
         RGBColor[0, 0.4, 0.6], 
         RGBColor[0, 0.5, 0.5], 
         RGBColor[0, 0.6000000000000001, 0.3999999999999999], 
         RGBColor[0, 0.7000000000000001, 0.29999999999999993`], 
         RGBColor[0, 0.8, 0.19999999999999996`], 
         RGBColor[0, 0.9, 0.09999999999999998], 
         RGBColor[0, 1., 0.], 
         RGBColor[0., 1, 0], 
         RGBColor[0.1, 1, 0], 
         RGBColor[0.2, 1, 0], 
         RGBColor[0.30000000000000004`, 1, 0], 
         RGBColor[0.4, 1, 0], 
         RGBColor[0.5, 1, 0], 
         RGBColor[0.6000000000000001, 1, 0], 
         RGBColor[0.7000000000000001, 1, 0], 
         RGBColor[0.8, 1, 0], 
         RGBColor[0.9, 1, 0], 
         RGBColor[1., 1, 0], 
         RGBColor[1, 1., 0], 
         RGBColor[1, 0.9, 0], 
         RGBColor[1, 0.8, 0], 
         RGBColor[1, 0.7, 0], 
         RGBColor[1, 0.6, 0], 
         RGBColor[1, 0.5, 0], 
         RGBColor[1, 0.3999999999999999, 0], 
         RGBColor[1, 0.29999999999999993`, 0], 
         RGBColor[1, 0.19999999999999996`, 0], 
         RGBColor[1, 0.09999999999999998, 0], 
         RGBColor[1, 0., 0], 
         RGBColor[1., 0., 0.], 
         RGBColor[0.9, 0., 0.], 
         RGBColor[0.8, 0., 0.], 
         RGBColor[0.7, 0., 0.], 
         RGBColor[0.6, 0., 0.]}, Attributes[Subscript] = {NHoldRest}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->505046009]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell[TextData[{
 "The temperatures of the hot stream ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", 
    StyleBox["h",
     FontSlant->"Plain"]], TraditionalForm]], "InlineMath"],
 " and the cold stream ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", 
    StyleBox["c",
     FontSlant->"Plain"]], TraditionalForm]], "InlineMath"],
 " of the heat exchanger are calculated from these differential equations:"
}], "DetailNotes",
 CellChangeTimes->{{3.6676745162929955`*^9, 3.667674560456751*^9}, {
  3.6697264408903713`*^9, 3.669726512064102*^9}, {3.670196870766329*^9, 
  3.6701968815529633`*^9}},
 CellID->263676552],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["C", 
      StyleBox["h",
       FontSlant->"Plain"]], " ", 
     FractionBox[
      RowBox[{"\[DifferentialD]", 
       SubscriptBox["T", 
        StyleBox["h",
         FontSlant->"Plain"]]}], 
      RowBox[{"\[DifferentialD]", "z"}]]}], "=", 
    RowBox[{
     RowBox[{"-", "U"}], " ", "\[Pi]", " ", 
     SubscriptBox["d", "i"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["T", 
        StyleBox["h",
         FontSlant->"Plain"]], "-", 
       SubscriptBox["T", 
        StyleBox["c",
         FontSlant->"Plain"]]}], ")"}]}]}], TraditionalForm]], "InlineMath"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.6676745162929955`*^9, 3.6676746766273794`*^9}, {
  3.667747607384647*^9, 3.667747607907155*^9}},
 CellID->119783357],

Cell["for parallel flow:", "DetailNotes",
 CellChangeTimes->{{3.6676745162929955`*^9, 3.667674693689412*^9}},
 CellID->484805353],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["C", 
      StyleBox["c",
       FontSlant->"Plain"]], " ", 
     FractionBox[
      RowBox[{"\[DifferentialD]", 
       SubscriptBox["T", 
        StyleBox["c",
         FontSlant->"Plain"]]}], 
      RowBox[{"\[DifferentialD]", "z"}]]}], "=", 
    RowBox[{"U", " ", "\[Pi]", " ", 
     SubscriptBox["d", "i"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["T", 
        StyleBox["h",
         FontSlant->"Plain"]], "-", 
       SubscriptBox["T", 
        StyleBox["c",
         FontSlant->"Plain"]]}], ")"}]}]}], TraditionalForm]], "InlineMath"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.6676745162929955`*^9, 3.66767471807166*^9}, {
  3.6677476195218334`*^9, 3.667747620554349*^9}},
 CellID->242439386],

Cell["for counter flow:", "DetailNotes",
 CellChangeTimes->{{3.6676745162929955`*^9, 3.6676747224424696`*^9}},
 CellID->44897604],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["C", 
      StyleBox["c",
       FontSlant->"Plain"]], " ", 
     FractionBox[
      RowBox[{"\[DifferentialD]", 
       SubscriptBox["T", 
        StyleBox["c",
         FontSlant->"Plain"]]}], 
      RowBox[{"\[DifferentialD]", "z"}]]}], "=", 
    RowBox[{
     RowBox[{"-", "U"}], " ", "\[Pi]", " ", 
     SubscriptBox["d", "i"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["T", 
        StyleBox["h",
         FontSlant->"Plain"]], "-", 
       SubscriptBox["T", 
        StyleBox["c",
         FontSlant->"Plain"]]}], ")"}]}]}], TraditionalForm]], "InlineMath"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.6676745162929955`*^9, 3.667674752278326*^9}, {
  3.6677476239669013`*^9, 3.667747624789414*^9}},
 CellID->170680053],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["C", "j"], "=", 
    RowBox[{
     OverscriptBox[
      SubscriptBox["m", "j"], "."], " ", 
     SubscriptBox["Cp", "j"]}]}], TraditionalForm]], "InlineMath"],
 ", ",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    SubscriptBox["m", "j"], "."], TraditionalForm]], "InlineMath"],
 " is mass flow rate (kg/s), ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Cp", "j"], TraditionalForm]], "InlineMath"],
 " is heat capacity (J/kg/K), ",
 Cell[BoxData[
  FormBox["z", TraditionalForm]], "InlineMath"],
 " is length down the heat exchanger (m), ",
 Cell[BoxData[
  FormBox["U", TraditionalForm]], "InlineMath"],
 " is the overall heat transfer coefficient (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"W", "/", 
     SuperscriptBox["m", "2"]}], "/", "K"}], TraditionalForm]], "InlineMath"],
 "), and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "i"], TraditionalForm]], "InlineMath"],
 " is the inner diameter (m)."
}], "DetailNotes",
 CellChangeTimes->{{3.6676745162929955`*^9, 3.667674880644314*^9}, {
  3.6677476384666243`*^9, 3.6677476576414185`*^9}},
 CellID->307806183],

Cell[TextData[{
 "The overall heat transfer coefficient is calculated using the heat transfer \
coefficients of the cold ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Eta]", 
    StyleBox["c",
     FontSlant->"Plain"]], TraditionalForm]], "InlineMath"],
 " and hot ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Eta]", 
    StyleBox["h",
     FontSlant->"Plain"]], TraditionalForm]], "InlineMath"],
 " streams:"
}], "DetailNotes",
 CellChangeTimes->{{3.6676734126016693`*^9, 3.6676734395292096`*^9}, {
  3.667673504179908*^9, 3.667673535455696*^9}, {3.6677474543652954`*^9, 
  3.667747455165308*^9}},
 CellID->794086493],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"U", "=", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", 
        SubscriptBox["\[Eta]", 
         StyleBox["c",
          FontSlant->"Plain"]]], "+", 
       FractionBox["1", 
        SubscriptBox["\[Eta]", 
         StyleBox["h",
          FontSlant->"Plain"]]]}], ")"}], 
     RowBox[{"-", "1"}]]}], TraditionalForm]], "InlineMath"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.6676734126016693`*^9, 3.667673478733452*^9}, {
  3.667673541405037*^9, 3.6676735421520796`*^9}, {3.66836035575617*^9, 
  3.6683603765983057`*^9}},
 CellID->387659817],

Cell["\<\
The heat transfer coefficients of the cold and hot streams are calculated \
from Nusselt correlations. The Reynolds number: \
\>", "DetailNotes",
 CellChangeTimes->{{3.6676734126016693`*^9, 3.667673478733452*^9}, {
   3.667673541405037*^9, 3.667673609807949*^9}, 3.667674173388911*^9, {
   3.6697265779746103`*^9, 3.6697265890447826`*^9}},
 CellID->610517971],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Re", "j"], "=", 
    FractionBox[
     OverscriptBox[
      SubscriptBox["m", "j"], "."], 
     RowBox[{
      SubscriptBox["\[Mu]", "j"], " ", 
      RowBox[{"\[Pi]", "/", "4"}], " ", 
      SubscriptBox["d", "j"]}]]}], TraditionalForm]], "InlineMath"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.6676734126016693`*^9, 3.667673478733452*^9}, {
  3.667673541405037*^9, 3.667673612258089*^9}, {3.6676736632110033`*^9, 
  3.667673794132492*^9}, {3.667673951953444*^9, 3.6676739731066847`*^9}, {
  3.667747374052966*^9, 3.6677473743779707`*^9}, {3.667747495045921*^9, 
  3.6677475672825303`*^9}, {3.667747684874837*^9, 3.6677477617596016`*^9}, {
  3.66774790419529*^9, 3.6677479042002897`*^9}, {3.667748192574401*^9, 
  3.667748193064409*^9}},
 CellID->155786836],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "j"], TraditionalForm]], "InlineMath"],
 " is the dynamic viscosity (",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", " ", 
    RowBox[{"s", "/", 
     SuperscriptBox["m", "2"]}]}], TraditionalForm]], "InlineMath"],
 "), ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "j"], TraditionalForm]], "InlineMath"],
 " is diameter (m), and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"j", "=", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["c",
       FontSlant->"Plain"], ",", 
      StyleBox["h",
       FontSlant->"Plain"]}], 
     StyleBox[")",
      FontSlant->"Plain"]}]}], TraditionalForm]], "InlineMath"],
 " for the cold or hot streams. The diameter of the tube that the cold fluid \
flows through is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", 
     StyleBox["c",
      FontSlant->"Plain"]], "=", 
    SubscriptBox["d", "i"]}], TraditionalForm]], "InlineMath"],
 ", and the hydraulic diameter of the annulus that the hot fluid flows \
through is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["d", 
     StyleBox["h",
      FontSlant->"Plain"]], "=", 
    RowBox[{
     SubscriptBox["d", "o"], "-", 
     SubscriptBox["d", "i"]}]}], TraditionalForm]], "InlineMath"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["d", "o"], TraditionalForm]], "InlineMath"],
 " is the outer diameter."
}], "DetailNotes",
 CellChangeTimes->{{3.6676734126016693`*^9, 3.667673478733452*^9}, {
  3.667673541405037*^9, 3.667673612258089*^9}, {3.6676736632110033`*^9, 
  3.667673794132492*^9}, {3.667673951953444*^9, 3.6676739731066847`*^9}, {
  3.667747374052966*^9, 3.6677473743779707`*^9}, {3.667747495045921*^9, 
  3.6677475672825303`*^9}, {3.667747684874837*^9, 3.6677477617596016`*^9}, {
  3.66774790419529*^9, 3.667747961723174*^9}, {3.66774799531169*^9, 
  3.667748186315805*^9}, {3.6677482196828175`*^9, 3.667748230951491*^9}, {
  3.6677607895340047`*^9, 3.667760800661605*^9}},
 CellID->113943091],

Cell[TextData[{
 "For turbulent flow (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Re", "j"], ">", "10000"}], TraditionalForm]], "InlineMath"],
 "), the Dittus-Boelter correlation for the Nusselt number is used:"
}], "DetailNotes",
 CellChangeTimes->{{3.6676734126016693`*^9, 3.6676734866429043`*^9}, {
  3.667673990244317*^9, 3.667674099409524*^9}, {3.667674337342865*^9, 
  3.667674367837966*^9}, {3.6677482670585456`*^9, 3.667748267668555*^9}, {
  3.667760813609318*^9, 3.667760825279091*^9}, {3.668360425478789*^9, 
  3.6683604261262937`*^9}, {3.6697266349982977`*^9, 3.6697266427218995`*^9}},
 CellID->314736008],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Nu", "j"], "=", 
    RowBox[{"0.023", " ", 
     SubsuperscriptBox["Re", "j", 
      RowBox[{"4", "/", "5"}]], " ", 
     SubsuperscriptBox["Pr", "j", "n"]}]}], TraditionalForm]], "InlineMath"],
 ", "
}], "DetailNotes",
 CellChangeTimes->{{3.6676734126016693`*^9, 3.6676734866429043`*^9}, {
  3.667673990244317*^9, 3.6676741028123302`*^9}, {3.6677473845591273`*^9, 
  3.66774738539764*^9}, {3.6677482712811103`*^9, 3.667748279369735*^9}},
 CellID->163143181],

Cell[TextData[{
 "otherwise, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Nu", "j"], "=", "4.36"}], TraditionalForm]], "InlineMath"],
 " is used for laminar flow,"
}], "DetailNotes",
 CellChangeTimes->{{3.6676734126016693`*^9, 3.6676734866429043`*^9}, {
   3.667673990244317*^9, 3.667674109993744*^9}, {3.6677482832172937`*^9, 
   3.6677482839958057`*^9}, 3.6677608337731247`*^9, {3.669726661932076*^9, 
   3.6697266643519597`*^9}},
 CellID->130439237],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Pr", "j"], "=", 
    FractionBox[
     RowBox[{
      SubscriptBox["Cp", "j"], " ", 
      SubscriptBox["\[Mu]", "j"]}], 
     SubscriptBox["k", "j"]]}], TraditionalForm]], "InlineMath"],
 " is the Prandtl number, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "j"], TraditionalForm]], "InlineMath"],
 " is thermal conductivity (W/m/K), and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "0.4"}], TraditionalForm]], "InlineMath"],
 " for heating and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "0.3"}], TraditionalForm]], "InlineMath"],
 " for cooling."
}], "DetailNotes",
 CellChangeTimes->{{3.6676734126016693`*^9, 3.6676734866429043`*^9}, {
  3.667673990244317*^9, 3.667674161505138*^9}, {3.667674201503321*^9, 
  3.6676742428642445`*^9}, {3.6676743156856213`*^9, 3.6676743296890492`*^9}, {
  3.667674374278178*^9, 3.667674374278178*^9}, {3.667747396904817*^9, 
  3.667747399953364*^9}, {3.6677482869108505`*^9, 3.667748300722063*^9}},
 CellID->219642224],

Cell[TextData[{
 "The heat transfer coefficients for each stream are calculated from ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Nu", "j"], "=", 
    FractionBox[
     RowBox[{
      SubscriptBox["\[Eta]", "j"], " ", 
      SubscriptBox["d", "j"]}], 
     SubscriptBox["k", "j"]]}], TraditionalForm]], "InlineMath"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.6676734126016693`*^9, 3.6676734866429043`*^9}, {
  3.667673990244317*^9, 3.667674161505138*^9}, {3.667674201503321*^9, 
  3.6676742428642445`*^9}, {3.6676743156856213`*^9, 3.6676743296890492`*^9}, {
  3.667674374278178*^9, 3.667674474166175*^9}, {3.6677483061968412`*^9, 
  3.6677483135019503`*^9}, {3.6677608436649446`*^9, 3.6677608506300645`*^9}},
 CellID->21193939],

Cell["Reference", "DetailNotes",
 CellChangeTimes->{{3.6615431805576982`*^9, 3.6615432000496435`*^9}},
 CellID->59472999],

Cell[TextData[{
 "[1] T. L. Bergman, A. S. Lavine, F. P. Incropera, and D. P. DeWitt, ",
 StyleBox["Introduction to Heat Transfer",
  FontSlant->"Italic"],
 ", 6th ed., Hoboken, NJ: John Wiley & Sons, 2011."
}], "DetailNotes",
 CellChangeTimes->{{3.6615431805576982`*^9, 3.661543185933609*^9}},
 CellID->68638492]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.6682750858760853`*^9},
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.6682750869232874`*^9},
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9, 
  3.6682750886764903`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.6682750893336916`*^9},
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["heat transfer", "SearchTerms",
 CellChangeTimes->{{3.6615432113317647`*^9, 3.6615432138327694`*^9}},
 CellID->73370916],

Cell["chemical engineering", "SearchTerms",
 CellChangeTimes->{{3.6615432113317647`*^9, 3.6615432199911814`*^9}},
 CellID->451406792],

Cell["heat exchanger", "SearchTerms",
 CellChangeTimes->{{3.6615432113317647`*^9, 3.661543238653517*^9}, {
  3.667748360955179*^9, 3.6677483609601793`*^9}},
 CellID->6964994],

Cell["mechanical engineering", "SearchTerms",
 CellChangeTimes->{{3.6615432113317647`*^9, 3.661543238653517*^9}, {
  3.667748360955179*^9, 3.6677483750928974`*^9}},
 CellID->76535417],

Cell["Nusselt number", "SearchTerms",
 CellChangeTimes->{{3.6615432113317647`*^9, 3.661543238653517*^9}, {
  3.667748360955179*^9, 3.667748389970126*^9}, {3.667760722416254*^9, 
  3.6677607263498497`*^9}},
 CellID->373910821],

Cell["concentric tube heat exchanger", "SearchTerms",
 CellChangeTimes->{{3.66774840976243*^9, 3.6677484164885335`*^9}},
 CellID->237151333],

Cell["parallel flow", "SearchTerms",
 CellChangeTimes->{{3.66774840976243*^9, 3.66774841949608*^9}},
 CellID->560315906],

Cell["counter flow", "SearchTerms",
 CellChangeTimes->{{3.66774840976243*^9, 3.667748421728614*^9}},
 CellID->806064687]
}, Open  ]],

Cell["", "RelatedLinksSection"],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Rachael L. Baumann",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Rachael+L.+\
Baumann"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Rachael+L.+Baumann"]
}], "Author",
 CellChangeTimes->{{3.609784090101136*^9, 3.609784090103136*^9}, 
   3.60978412565917*^9, {3.6109793544694567`*^9, 3.6109793544704585`*^9}, {
   3.6109921182558336`*^9, 3.6109921182578335`*^9}, {3.6325066799655933`*^9, 
   3.632506689057065*^9}, {3.63258095035064*^9, 3.632580960165201*^9}, {
   3.632675426689807*^9, 3.6326754405424213`*^9}, {3.6508294982911205`*^9, 
   3.6508295003882403`*^9}},
 CellID->9119879],

Cell[TextData[{
 "Additional contributions by: ",
 ButtonBox["John L. Falconer",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=John+L.+\
Falconer"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=John+L.+Falconer"],
 " and ",
 ButtonBox["Nathan S Nelson",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Nathan%20S.%\
20Nelson"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Nathan%20S.%20Nelson"]
}], "Author",
 CellChangeTimes->{{3.609784090101136*^9, 3.609784090103136*^9}, 
   3.60978412565917*^9, {3.6109793544694567`*^9, 3.6109793544704585`*^9}, {
   3.6109921182558336`*^9, 3.6109921185688515`*^9}, {3.6321448389752903`*^9, 
   3.632144846238706*^9}, {3.632144877483493*^9, 3.6321448807876825`*^9}, {
   3.6322490388279934`*^9, 3.6322491007665367`*^9}, {3.632495028348035*^9, 
   3.632495036484501*^9}, {3.6325066930439334`*^9, 3.6325066935222616`*^9}, {
   3.6679349358861156`*^9, 3.667934938518634*^9}},
 CellID->142231542],

Cell["\<\
(University of Colorado Boulder, Department of Chemical and Biological \
Engineering)\
\>", "Author",
 CellChangeTimes->{{3.609784090101136*^9, 3.6097841105263042`*^9}, {
  3.610992060718543*^9, 3.610992060722543*^9}, {3.632580939566023*^9, 
  3.632580959043137*^9}},
 CellID->122665613]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.4 for Microsoft Windows (64-bit) (February 25, 2016)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "AutomaticAnimation"->{
  Cell[221890, 5206, 1507, 32, 22, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[223400, 5240, 908, 21, 22, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]},
 "CreateAndDeleteLocators"->{
  Cell[219962, 5153, 637, 15, 22, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "DragLocators"->{
  Cell[219619, 5140, 340, 11, 22, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "GamepadControls"->{
  Cell[221492, 5194, 395, 10, 22, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "ResizeImages"->{
  Cell[218580, 5111, 355, 9, 22, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[218938, 5122, 678, 16, 22, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "SliderZoom"->{
  Cell[220602, 5170, 887, 22, 22, "ControlSuggestions",
   CellTags->"SliderZoom"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"AutomaticAnimation", 228266, 5378},
 {"BookmarkAnimation", 228384, 5381},
 {"CreateAndDeleteLocators", 228506, 5384},
 {"DragLocators", 228623, 5387},
 {"GamepadControls", 228732, 5390},
 {"ResizeImages", 228841, 5393},
 {"RotateAndZoomIn3D", 228951, 5396},
 {"SliderZoom", 229060, 5399}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 106, 1, 74, "DemoTitle"],
Cell[CellGroupData[{
Cell[711, 27, 33, 0, 287, "InitializationSection"],
Cell[747, 29, 173, 4, 27, "Input",
 InitializationCell->True,
 CellID->140338783],
Cell[923, 35, 2849, 75, 128, "Input",
 InitializationCell->True,
 CellID->319149],
Cell[3775, 112, 2971, 81, 148, "Input",
 InitializationCell->True,
 CellID->58733214],
Cell[6749, 195, 2761, 76, 128, "Input",
 InitializationCell->True,
 CellID->760366309],
Cell[9513, 273, 201, 5, 27, "Input",
 InitializationCell->True,
 CellID->158081709],
Cell[9717, 280, 620, 19, 27, "Input",
 InitializationCell->True,
 CellID->66834795],
Cell[10340, 301, 761, 24, 27, "Input",
 InitializationCell->True,
 CellID->46153829],
Cell[11104, 327, 650, 20, 27, "Input",
 InitializationCell->True,
 CellID->102039636],
Cell[11757, 349, 60880, 1585, 27, "Input",
 InitializationCell->True,
 CellID->495513759]
}, Open  ]],
Cell[CellGroupData[{
Cell[72674, 1939, 29, 0, 234, "ManipulateSection"],
Cell[CellGroupData[{
Cell[72728, 1943, 32040, 806, 1644, "Input",
 CellID->676135749],
Cell[104771, 2751, 19885, 379, 509, "Output",
 CellID->123771040]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124705, 3136, 36, 0, 169, "ManipulateCaptionSection"],
Cell[124744, 3138, 1128, 17, 82, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125909, 3160, 28, 0, 173, "ThumbnailSection"],
Cell[125940, 3162, 19884, 379, 509, "Output",
 CellID->96049622]
}, Open  ]],
Cell[CellGroupData[{
Cell[145861, 3546, 28, 0, 143, "SnapshotsSection"],
Cell[145892, 3548, 19885, 379, 509, "Output",
 CellID->527641038],
Cell[165780, 3929, 19885, 379, 509, "Output",
 CellID->138767934],
Cell[185668, 4310, 19881, 379, 509, "Output",
 CellID->505046009]
}, Open  ]],
Cell[CellGroupData[{
Cell[205586, 4694, 26, 0, 336, "DetailsSection"],
Cell[205615, 4696, 620, 18, 23, "DetailNotes",
 CellID->263676552],
Cell[206238, 4716, 831, 29, 34, "DetailNotes",
 CellID->119783357],
Cell[207072, 4747, 129, 2, 22, "DetailNotes",
 CellID->484805353],
Cell[207204, 4751, 809, 28, 34, "DetailNotes",
 CellID->242439386],
Cell[208016, 4781, 129, 2, 22, "DetailNotes",
 CellID->44897604],
Cell[208148, 4785, 831, 29, 34, "DetailNotes",
 CellID->170680053],
Cell[208982, 4816, 1164, 39, 42, "DetailNotes",
 CellID->307806183],
Cell[210149, 4857, 623, 19, 23, "DetailNotes",
 CellID->794086493],
Cell[210775, 4878, 634, 21, 40, "DetailNotes",
 CellID->387659817],
Cell[211412, 4901, 369, 7, 22, "DetailNotes",
 CellID->610517971],
Cell[211784, 4910, 835, 21, 42, "DetailNotes",
 CellID->155786836],
Cell[212622, 4933, 2000, 61, 42, "DetailNotes",
 CellID->113943091],
Cell[214625, 4996, 631, 13, 26, "DetailNotes",
 CellID->314736008],
Cell[215259, 5011, 530, 14, 29, "DetailNotes",
 CellID->163143181],
Cell[215792, 5027, 466, 12, 26, "DetailNotes",
 CellID->130439237],
Cell[216261, 5041, 1053, 30, 41, "DetailNotes",
 CellID->219642224],
Cell[217317, 5073, 746, 18, 41, "DetailNotes",
 CellID->21193939],
Cell[218066, 5093, 121, 2, 22, "DetailNotes",
 CellID->59472999],
Cell[218190, 5097, 313, 7, 22, "DetailNotes",
 CellID->68638492]
}, Open  ]],
Cell[CellGroupData[{
Cell[218540, 5109, 37, 0, 126, "ControlSuggestionsSection"],
Cell[218580, 5111, 355, 9, 22, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[218938, 5122, 678, 16, 22, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[219619, 5140, 340, 11, 22, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[219962, 5153, 637, 15, 22, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[220602, 5170, 887, 22, 22, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[221492, 5194, 395, 10, 22, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[221890, 5206, 1507, 32, 22, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[223400, 5240, 908, 21, 22, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224345, 5266, 30, 0, 155, "SearchTermsSection"],
Cell[224378, 5268, 125, 2, 22, "SearchTerms",
 CellID->73370916],
Cell[224506, 5272, 133, 2, 22, "SearchTerms",
 CellID->451406792],
Cell[224642, 5276, 174, 3, 22, "SearchTerms",
 CellID->6964994],
Cell[224819, 5281, 183, 3, 22, "SearchTerms",
 CellID->76535417],
Cell[225005, 5286, 225, 4, 22, "SearchTerms",
 CellID->373910821],
Cell[225233, 5292, 140, 2, 22, "SearchTerms",
 CellID->237151333],
Cell[225376, 5296, 120, 2, 22, "SearchTerms",
 CellID->560315906],
Cell[225499, 5300, 120, 2, 22, "SearchTerms",
 CellID->806064687]
}, Open  ]],
Cell[225634, 5305, 31, 0, 141, "RelatedLinksSection"],
Cell[CellGroupData[{
Cell[225690, 5309, 25, 0, 129, "AuthorSection"],
Cell[225718, 5311, 727, 16, 22, "Author",
 CellID->9119879],
Cell[226448, 5329, 1112, 25, 22, "Author",
 CellID->142231542],
Cell[227563, 5356, 297, 7, 22, "Author",
 CellID->122665613]
}, Open  ]]
}, Open  ]]
}
]
*)

