(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    120616,       3141]
NotebookOptionsPosition[    115791,       2989]
NotebookOutlinePosition[    117410,       3039]
CellTagsIndexPosition[    117074,       3027]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Your Title Here", "DemoTitle"],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"saturated", " ", "liquid"}], "*)"}]], "Input",
 InitializationCell->True,
 CellID->1963837],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Mu]L", "[", "T_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "5*^-15"}], "*", 
      SuperscriptBox["T", "5"]}], "+", 
     RowBox[{"1*^-11", "*", 
      SuperscriptBox["T", "4"]}], "-", 
     RowBox[{"1*^-8", "*", 
      SuperscriptBox["T", "3"]}], "+", 
     RowBox[{"6*^-6", "*", 
      SuperscriptBox["T", "2"]}], "-", 
     RowBox[{"0.0013", "*", "T"}], "+", "0.1229"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"N", " ", 
    RowBox[{"s", "/", "m2"}]}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellID->1811688],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CpL", "[", "T_", "]"}], ":=", 
    RowBox[{
     RowBox[{"2*^-7", "*", 
      SuperscriptBox["T", "3"]}], "-", 
     RowBox[{"0.0002", "*", 
      SuperscriptBox["T", "2"]}], "+", 
     RowBox[{"0.0797", "*", "T"}], "-", "5.3801"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"kJ", "/", "kg"}], "/", "K"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellID->115550327],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"kL", "[", "T_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "6*^-6"}], "*", 
      SuperscriptBox["T", "2"]}], "+", 
     RowBox[{"0.0049", "*", "T"}], "-", "0.3191"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"W", "/", "m"}], "/", "K"}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellID->7800428],

Cell[BoxData[
 RowBox[{"(*", "steam", "*)"}]], "Input",
 InitializationCell->True,
 CellID->7231118],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]S", "[", "T_", "]"}], ":=", 
   RowBox[{
    RowBox[{"4*^-8", "*", "T"}], "-", "1*^-6"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellID->350416859],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CpS", "[", "T_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "6*^-9"}], "*", 
     SuperscriptBox["T", "3"]}], "+", 
    RowBox[{"1*^-5", "*", 
     SuperscriptBox["T", "2"]}], "-", 
    RowBox[{"0.0085", "*", "T"}], "+", "3.6971"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellID->766845346],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kS", "[", "T_", "]"}], ":=", 
   RowBox[{
    RowBox[{"8*^-5", "*", "T"}], "-", "0.0075"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.658589899371496*^9, 3.6585899262759438`*^9}},
 CellID->156570552],

Cell[BoxData[
 RowBox[{"(*", "sodium", "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6591949806092267`*^9, 3.6591949841024265`*^9}},
 CellID->66281030],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]Na", "[", "T_", "]"}], ":=", 
   RowBox[{
    RowBox[{"2*^-9", "*", 
     SuperscriptBox["T", "2"]}], "-", 
    RowBox[{"3*^-6", "*", "T"}], "+", "0.0017"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.659194990769808*^9, 3.659195028868987*^9}},
 CellID->160161020],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CpNa", "[", "T_", "]"}], ":=", 
   RowBox[{
    RowBox[{"3*^-7", "*", 
     SuperscriptBox["T", "2"]}], "-", 
    RowBox[{"0.0006", "*", "T"}], "+", "1.55"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.659195033679262*^9, 3.6591950644830236`*^9}},
 CellID->15907638],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kNa", "[", "T_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.0432"}], "*", "T"}], "+", "101.34"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.659195068153234*^9, 3.6591950892274394`*^9}},
 CellID->52304312],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"oil", ",", " ", 
   RowBox[{"unused", " ", "engine", " ", "oil"}]}], "*)"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.659196622423133*^9, 3.659196628850501*^9}},
 CellID->647463784],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Mu]O", "[", "T_", "]"}], ":=", 
   RowBox[{"5*^35", "*", 
    SuperscriptBox["T", 
     RowBox[{"-", "14.52"}]]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.659196630773611*^9, 3.6591966591132317`*^9}},
 CellID->5424510],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CpO", "[", "T_", "]"}], ":=", 
   RowBox[{
    RowBox[{"0.0043", "*", "T"}], "+", "0.6222"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.659196661386362*^9, 3.6591966776572924`*^9}},
 CellID->526955546],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"kO", "[", "T_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.0986"}], "*", "T"}], "+", "173.54"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6591966795323997`*^9, 3.6591967034317665`*^9}},
 CellID->228348789],

Cell[BoxData[
 RowBox[{
  RowBox[{"color", "=", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0., 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0., 1.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.1, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.06666666666666668, 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.1, 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.1, 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.1, 0.9],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.2, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.13333333333333336`, 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.2, 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.2, 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.2, 0.8],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.30000000000000004`, 0.7], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.20000000000000004`, 0.4666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.30000000000000004, 0.7]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.30000000000000004`, 0.7]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.30000000000000004`, 0.7],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.4, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.2666666666666667, 0.4],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.4, 0.6]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.4, 0.6]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.4, 0.6],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.5, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.33333333333333337`, 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.5, 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.5, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.5, 0.5],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.6000000000000001, 0.3999999999999999], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.4000000000000001, 0.2666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.6000000000000001, 0.3999999999999999]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.6000000000000001, 0.3999999999999999]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.6000000000000001, 0.3999999999999999],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.7000000000000001, 0.29999999999999993`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.46666666666666673`, 0.19999999999999996`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.7000000000000001, 0.29999999999999993]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.7000000000000001, 0.29999999999999993`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.7000000000000001, 0.29999999999999993`],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.8, 0.19999999999999996`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.5333333333333334, 0.1333333333333333],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.8, 0.19999999999999996]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.8, 0.19999999999999996`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.8, 0.19999999999999996`],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.9, 0.09999999999999998], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6000000000000001, 0.06666666666666665],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.9, 0.09999999999999998]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.9, 0.09999999999999998]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.9, 0.09999999999999998],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666667, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0., 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0., 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0., 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.06666666666666668, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.1, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.1, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.1, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.2, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.13333333333333336`, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.2, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.2, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.2, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.30000000000000004`, 1, 0], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.20000000000000004`, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.30000000000000004, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.30000000000000004`, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.30000000000000004`, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.4, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.2666666666666667, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.4, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.4, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.4, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.5, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.6000000000000001, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.4000000000000001, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.6000000000000001, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.6000000000000001, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.6000000000000001, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.7000000000000001, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.46666666666666673`, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.7000000000000001, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.7000000000000001, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.7000000000000001, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.8, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.5333333333333334, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.8, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.8, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.8, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.9, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6000000000000001, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.9, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.9, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.9, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666667, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1., 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666667, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.6000000000000001, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.5333333333333334, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.4666666666666667, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.7, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.4, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.6, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.3999999999999999, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.2666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.3999999999999999, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.3999999999999999, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.3999999999999999, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.29999999999999993`, 0], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.19999999999999996`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.29999999999999993, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.29999999999999993`, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.29999999999999993`, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.19999999999999996`, 0], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.1333333333333333, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.19999999999999996, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.19999999999999996`, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.19999999999999996`, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.09999999999999998, 0], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.06666666666666665, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.09999999999999998, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.09999999999999998, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.09999999999999998, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1., 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 0., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.9, 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6000000000000001, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.9, 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.9, 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.9, 0., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.8, 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.5333333333333334, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.8, 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.8, 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.8, 0., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.7, 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.4666666666666667, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.7, 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.7, 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.7, 0., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.6, 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.4, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.6, 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.6, 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.6, 0., 0.],
      Editable->False,
      Selectable->False]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6588466476112404`*^9, 3.658846649986445*^9}},
 CellID->655988300]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "do", ",", "di", ",", "Th1", ",", "Tc1", ",", "d", ",", "m", ",", 
       "\[Mu]", ",", "Cp", ",", "k", ",", "ReD", ",", "ho", ",", "hi", ",", 
       "U", ",", "\[CapitalDelta]T1", ",", "\[CapitalDelta]T2", ",", "tc2", 
       ",", "th2", ",", "q", ",", "Th2", ",", "Tc2", ",", "xTh2", ",", 
       "xTc2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"do", "=", "0.7"}], ";", 
      RowBox[{"di", "=", "0.3"}], ";", 
      RowBox[{"(*", "m", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Th1", "=", "500"}], ";", 
      RowBox[{"(*", "K", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Tc1", "=", "300"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"d", "[", "h", "]"}], "=", "do"}], ";", 
      RowBox[{
       RowBox[{"m", "[", "h", "]"}], "=", "mh"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"fluid", ",", 
        RowBox[{"(*", 
         RowBox[{"hot", " ", "fluid"}], "*)"}], "\[IndentingNewLine]", "1", 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Mu]", "[", "h", "]"}], "=", 
           RowBox[{"\[Mu]S", "[", "Th1", "]"}]}], ";", 
          RowBox[{
           RowBox[{"Cp", "[", "h", "]"}], "=", 
           RowBox[{"CpS", "[", "Th1", "]"}]}], ";", 
          RowBox[{
           RowBox[{"k", "[", "h", "]"}], "=", 
           RowBox[{"kS", "[", "Th1", "]"}]}], ";"}], "}"}], ",", 
        RowBox[{"(*", "steam", "*)"}], "\[IndentingNewLine]", "2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Mu]", "[", "h", "]"}], "=", 
           RowBox[{"\[Mu]L", "[", "Th1", "]"}]}], ";", 
          RowBox[{
           RowBox[{"Cp", "[", "h", "]"}], "=", 
           RowBox[{"CpL", "[", "Th1", "]"}]}], ";", 
          RowBox[{
           RowBox[{"k", "[", "h", "]"}], "=", 
           RowBox[{"kL", "[", "Th1", "]"}]}], ";"}], "}"}], ",", 
        RowBox[{"(*", "liquid", "*)"}], "\[IndentingNewLine]", "3", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Mu]", "[", "h", "]"}], "=", 
           RowBox[{"\[Mu]Na", "[", "Th1", "]"}]}], ";", 
          RowBox[{
           RowBox[{"Cp", "[", "h", "]"}], "=", 
           RowBox[{"CpNa", "[", "Th1", "]"}]}], ";", 
          RowBox[{
           RowBox[{"k", "[", "h", "]"}], "=", 
           RowBox[{"kNa", "[", "Th1", "]"}]}], ";"}], "}"}], ",", 
        RowBox[{"(*", "sodium", "*)"}], "\[IndentingNewLine]", "4", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Mu]", "[", "h", "]"}], "=", 
           RowBox[{"\[Mu]O", "[", "Th1", "]"}]}], ";", 
          RowBox[{
           RowBox[{"Cp", "[", "h", "]"}], "=", 
           RowBox[{"CpO", "[", "Th1", "]"}]}], ";", 
          RowBox[{
           RowBox[{"k", "[", "h", "]"}], "=", 
           RowBox[{"kO", "[", "Th1", "]"}]}], ";"}], "}"}]}], 
       RowBox[{"(*", "oil", "*)"}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"d", "[", "c", "]"}], "=", "di"}], ";", 
      RowBox[{
       RowBox[{"m", "[", "c", "]"}], "=", "mc"}], ";", 
      RowBox[{
       RowBox[{"\[Mu]", "[", "c", "]"}], "=", 
       RowBox[{"\[Mu]L", "[", "Tc1", "]"}]}], ";", 
      RowBox[{
       RowBox[{"Cp", "[", "c", "]"}], "=", 
       RowBox[{"CpL", "[", "Tc1", "]"}]}], ";", 
      RowBox[{
       RowBox[{"k", "[", "c", "]"}], "=", 
       RowBox[{"kL", "[", "Tc1", "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"cold", ",", " ", "liquid"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ReD", "[", "i_", "]"}], ":=", 
       FractionBox[
        RowBox[{"m", "[", "i", "]"}], 
        RowBox[{
         RowBox[{"\[Pi]", "/", "4"}], "*", 
         RowBox[{"d", "[", "i", "]"}], "*", 
         RowBox[{"\[Mu]", "[", "i", "]"}]}]]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ho", "=", 
       RowBox[{
        FractionBox[
         RowBox[{"k", "[", "h", "]"}], 
         RowBox[{"d", "[", "h", "]"}]], "*", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ReD", "[", "h", "]"}], ">", "1000"}], ",", 
          RowBox[{"0.023", "*", 
           SuperscriptBox[
            RowBox[{"ReD", "[", "h", "]"}], 
            RowBox[{"4", "/", "5"}]], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               RowBox[{"Cp", "[", "h", "]"}], "*", 
               RowBox[{"\[Mu]", "[", "h", "]"}]}], 
              RowBox[{"k", "[", "h", "]"}]], ")"}], "0.3"]}], ",", 
          RowBox[{"Quiet", "@", 
           RowBox[{
            RowBox[{"Interpolation", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.05", ",", "4.06"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.1", ",", "4.11"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.25", ",", "4.23"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", "4.43"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "4.86"}], "}"}]}], "}"}], "]"}], "[", 
            RowBox[{"di", "/", "do"}], "]"}]}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hi", "=", 
       RowBox[{
        FractionBox[
         RowBox[{"k", "[", "c", "]"}], 
         RowBox[{"d", "[", "c", "]"}]], "*", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ReD", "[", "c", "]"}], ">", "10000"}], ",", 
          RowBox[{"0.023", "*", 
           SuperscriptBox[
            RowBox[{"ReD", "[", "c", "]"}], 
            RowBox[{"4", "/", "5"}]], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               RowBox[{"Cp", "[", "c", "]"}], "*", 
               RowBox[{"\[Mu]", "[", "c", "]"}]}], 
              RowBox[{"k", "[", "c", "]"}]], ")"}], "0.4"]}], ",", 
          RowBox[{"Quiet", "@", 
           RowBox[{
            RowBox[{"Interpolation", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0.05", ",", "17.46"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.1", ",", "11.56"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.25", ",", "7.37"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.5", ",", "5.74"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "4.86"}], "}"}]}], "}"}], "]"}], "[", 
            RowBox[{"di", "/", "do"}], "]"}]}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"U", "=", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"1", "/", "hi"}], "+", 
          RowBox[{"1", "/", "ho"}]}], ")"}], 
        RowBox[{"-", "1"}]]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalDelta]T1", "[", "tc_", "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"flow", "\[Equal]", "1"}], ",", 
         RowBox[{"Th1", "-", "Tc1"}], ",", 
         RowBox[{"Th1", "-", "tc"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalDelta]T2", "[", 
        RowBox[{"tc_", ",", "th_"}], "]"}], ":=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"flow", "\[Equal]", "1"}], ",", 
         RowBox[{"th", "-", "tc"}], ",", 
         RowBox[{"th", "-", "Tc1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tc2", "=", 
       RowBox[{"tc", "/.", 
        RowBox[{"Quiet", "@", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", "c", "]"}], "*", 
             RowBox[{"Cp", "[", "c", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"tc", "-", "Tc1"}], ")"}]}], "\[Equal]", 
            RowBox[{
             RowBox[{"m", "[", "h", "]"}], "*", 
             RowBox[{"Cp", "[", "h", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"Th1", "-", "th"}], ")"}]}]}], ",", "tc"}], "]"}]}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"th2", "=", 
       RowBox[{"th", "/.", 
        RowBox[{"Quiet", "@", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"m", "[", "c", "]"}], "*", 
             RowBox[{"Cp", "[", "c", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"tc", "-", "Tc1"}], ")"}]}], "\[Equal]", 
            RowBox[{
             RowBox[{"m", "[", "h", "]"}], "*", 
             RowBox[{"Cp", "[", "h", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"Th1", "-", "th"}], ")"}]}]}], ",", "th"}], "]"}]}]}]}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"q", "[", 
        RowBox[{"tc_", ",", "th_", ",", "z_"}], "]"}], ":=", 
       RowBox[{"U", "*", "\[Pi]", "*", "di", "*", "z", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[CapitalDelta]T1", "[", "tc", "]"}], "-", 
           RowBox[{"\[CapitalDelta]T2", "[", 
            RowBox[{"tc", ",", "th"}], "]"}]}], ")"}], "/", 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{"\[CapitalDelta]T1", "[", "tc", "]"}], 
           RowBox[{"\[CapitalDelta]T2", "[", 
            RowBox[{"tc", ",", "th"}], "]"}]], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Th2", "=", 
       RowBox[{"th", "/.", 
        RowBox[{"Quiet", "@", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "[", 
              RowBox[{"tc2", ",", "th", ",", "L"}], "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"m", "[", "h", "]"}], "*", 
              RowBox[{"Cp", "[", "h", "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"Th1", "-", "th"}], ")"}]}]}], ",", "th"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Tc2", "=", 
       RowBox[{"tc", "/.", 
        RowBox[{"Quiet", "@", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"q", "[", 
              RowBox[{"tc", ",", "th2", ",", "L"}], "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"m", "[", "h", "]"}], "*", 
              RowBox[{"Cp", "[", "h", "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"Th1", "-", "th2"}], ")"}]}]}], ",", "tc"}], "]"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"xTh2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"#", ",", 
           RowBox[{"th", "/.", 
            RowBox[{"Quiet", "@", 
             RowBox[{"FindRoot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"q", "[", 
                 RowBox[{"tc2", ",", "th", ",", "#"}], "]"}], "\[Equal]", 
                RowBox[{
                 RowBox[{"m", "[", "h", "]"}], "*", 
                 RowBox[{"Cp", "[", "h", "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"Th1", "-", "th"}], ")"}]}]}], ",", 
               RowBox[{"{", 
                RowBox[{"th", ",", "Th2"}], "}"}]}], "]"}]}]}]}], "}"}], 
         "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "L", ",", "0.1"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"xTc2", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"tc", "/.", 
              RowBox[{"Quiet", "@", 
               RowBox[{"FindRoot", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"q", "[", 
                   RowBox[{"tc", ",", "th2", ",", "#"}], "]"}], "\[Equal]", 
                  RowBox[{
                   RowBox[{"m", "[", "h", "]"}], "*", 
                   RowBox[{"Cp", "[", "h", "]"}], "*", 
                   RowBox[{"(", 
                    RowBox[{"Th1", "-", "th2"}], ")"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tc", ",", "Tc2"}], "}"}]}], "]"}]}]}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "L", ",", "0.1"}], "]"}]}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"xTc2", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"flow", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"tc", "/.", 
              RowBox[{"Quiet", "@", 
               RowBox[{"FindRoot", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"q", "[", 
                   RowBox[{"tc", ",", "th2", ",", "#"}], "]"}], "\[Equal]", 
                  RowBox[{
                   RowBox[{"m", "[", "h", "]"}], "*", 
                   RowBox[{"Cp", "[", "h", "]"}], "*", 
                   RowBox[{"(", 
                    RowBox[{"Th1", "-", "th2"}], ")"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tc", ",", "Tc2"}], "}"}]}], "]"}]}]}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "L", ",", "0.1"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"L", "-", "#"}], ",", 
             RowBox[{"tc", "/.", 
              RowBox[{"Quiet", "@", 
               RowBox[{"FindRoot", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"q", "[", 
                   RowBox[{"tc", ",", "th2", ",", "#"}], "]"}], "\[Equal]", 
                  RowBox[{
                   RowBox[{"m", "[", "h", "]"}], "*", 
                   RowBox[{"Cp", "[", "h", "]"}], "*", 
                   RowBox[{"(", 
                    RowBox[{"Th1", "-", "th2"}], ")"}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tc", ",", "Tc2"}], "}"}]}], "]"}]}]}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", "L", ",", "0.1"}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xTh2", ",", "xTc2"}], "}"}], ",", 
            RowBox[{"Joined", "\[Rule]", "True"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "350"}]}], "]"}], ",", 
          RowBox[{"Spacer", "[", "10", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Text", "@", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Grid", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(T\), \(c, 1\)]\) =\>\"", ",", 
                  "Tc1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(T\), \(c, 2\)]\) =\>\"", ",", 
                  "Tc2"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(T\), \(h, 1\)]\) =\>\"", ",", 
                  "Th1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<\!\(\*SubscriptBox[\(T\), \(h, 2\)]\) =\>\"", ",", 
                  "Th2"}], "}"}]}], "}"}], "]"}], ",", "17"}], "]"}]}]}], 
         "\[IndentingNewLine]", "}"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"flow", ",", "1", ",", "\"\<fluid flow:\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "\"\< parallel \>\""}], ",", 
           RowBox[{"2", "\[Rule]", "\"\< counter \>\""}]}], "}"}], ",", 
         "Setter"}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "25", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fluid", ",", "1", ",", "\"\<hot fluid:\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "\"\<steam\>\""}], ",", 
           RowBox[{"2", "\[Rule]", "\"\<liquid water\>\""}], ",", 
           RowBox[{"3", "\[Rule]", "\"\<liquid sodium\>\""}], ",", 
           RowBox[{"4", "\[Rule]", "\"\<oil\>\""}]}], "}"}], ",", 
         "PopupMenu"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"L", ",", "1.5", ",", "\"\<length (m)\>\""}], "}"}], ",", 
      "0.7", ",", "3", ",", "0.1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<hot and cold mass flow rates (kg/s):\>\"", ",", "Bold"}], 
       "]"}], ",", 
      RowBox[{"Spacer", "[", "25", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mh", ",", "3", ",", "\"\<hot\>\""}], "}"}], ",", "1", ",", 
         "5", ",", "0.1", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mc", ",", "1", ",", "\"\<cold\>\""}], "}"}], ",", "1", ",",
          "5", ",", "0.1", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6611093452964363`*^9, 3.6611093516496477`*^9}, {
   3.6611093836245055`*^9, 3.6611093880705132`*^9}, {3.661109423661577*^9, 
   3.6611094737186675`*^9}, {3.6611095203987513`*^9, 3.661109611728916*^9}, {
   3.661109749162567*^9, 3.661109768577001*^9}, {3.6611099487085304`*^9, 
   3.6611099868221993`*^9}, {3.661110020027459*^9, 3.6611101077248173`*^9}, {
   3.6611101856973577`*^9, 3.661110185868958*^9}, {3.661110218779817*^9, 
   3.661110222358224*^9}, {3.6611102776897235`*^9, 3.6611102806713285`*^9}, {
   3.6611103788045063`*^9, 3.6611104139345694`*^9}, {3.661110926875497*^9, 
   3.6611109278894987`*^9}, {3.661110971961378*^9, 3.661111014044454*^9}, {
   3.661111054294327*^9, 3.661111070642556*^9}, {3.6611113525650663`*^9, 
   3.6611113947131414`*^9}, {3.661111440439624*^9, 3.6611114843851037`*^9}, {
   3.6611116402451844`*^9, 3.6611116511828036`*^9}, {3.661111772964023*^9, 
   3.661111822232712*^9}, {3.661111885089425*^9, 3.66111194353893*^9}, {
   3.66111197675019*^9, 3.6611119997858305`*^9}, {3.6611120529765277`*^9, 
   3.661112111978034*^9}, {3.6611121481618986`*^9, 3.661112186378767*^9}, {
   3.6611122268404408`*^9, 3.6611122456660748`*^9}, {3.661112411934374*^9, 
   3.661112477730892*^9}, {3.661112647464997*^9, 3.661112667390633*^9}, {
   3.6611127245553365`*^9, 3.661112737000559*^9}, {3.66111387055698*^9, 
   3.6611138714773817`*^9}, {3.6611770437401004`*^9, 3.661177043958501*^9}, {
   3.6611815511026936`*^9, 3.661181553785898*^9}, {3.6612780495126305`*^9, 
   3.661278051681034*^9}, {3.6612801645671177`*^9, 3.6612802283178363`*^9}, 
   3.6612803152185926`*^9, {3.6612803519182587`*^9, 3.661280753439705*^9}, {
   3.6612807916950893`*^9, 3.661280916084712*^9}, {3.6612809488511705`*^9, 
   3.6612810198430977`*^9}, {3.6612810639123774`*^9, 3.661281348110691*^9}, {
   3.6612813797197475`*^9, 3.6612816510214415`*^9}, {3.6612816894517097`*^9, 
   3.6612817021249323`*^9}, {3.661281827413982*^9, 3.661281857664836*^9}, {
   3.661281968727035*^9, 3.6612819696006365`*^9}, {3.661282121420531*^9, 
   3.6612821454223733`*^9}, {3.661282536201606*^9, 3.661282552982636*^9}, {
   3.6612826036825266`*^9, 3.6612826448836*^9}, {3.6612828805952535`*^9, 
   3.6612828907870717`*^9}, {3.661282933351348*^9, 3.661282962487802*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`flow$$ = 1, $CellContext`fluid$$ = 
    1, $CellContext`L$$ = 1.5, $CellContext`mc$$ = 1, $CellContext`mh$$ = 3, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`flow$$], 1, "fluid flow:"}, {
      1 -> " parallel ", 2 -> " counter "}}, {{
       Hold[$CellContext`fluid$$], 1, "hot fluid:"}, {
      1 -> "steam", 2 -> "liquid water", 3 -> "liquid sodium", 4 -> "oil"}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Spacer[25], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`L$$], 1.5, "length (m)"}, 0.7, 3, 0.1}, {{
       Hold[$CellContext`mh$$], 3, "hot"}, 1, 5, 0.1}, {{
       Hold[$CellContext`mc$$], 1, "cold"}, 1, 5, 0.1}, {
      Hold[
       Row[{
         Style["hot and cold mass flow rates (kg/s):", Bold], 
         Spacer[25], 
         Manipulate`Place[3], 
         Manipulate`Place[4]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {468., {108.5, 115.5}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`flow$3279$$ = False, $CellContext`fluid$3280$$ = 
    False, $CellContext`L$3281$$ = 0, $CellContext`mh$3282$$ = 
    0, $CellContext`mc$3283$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`flow$$ = 1, $CellContext`fluid$$ = 
        1, $CellContext`L$$ = 1.5, $CellContext`mc$$ = 1, $CellContext`mh$$ = 
        3}, "ControllerVariables" :> {
        Hold[$CellContext`flow$$, $CellContext`flow$3279$$, False], 
        Hold[$CellContext`fluid$$, $CellContext`fluid$3280$$, False], 
        Hold[$CellContext`L$$, $CellContext`L$3281$$, 0], 
        Hold[$CellContext`mh$$, $CellContext`mh$3282$$, 0], 
        Hold[$CellContext`mc$$, $CellContext`mc$3283$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`do$, $CellContext`di$, $CellContext`Th1$, \
$CellContext`Tc1$, $CellContext`d$, $CellContext`m$, $CellContext`\[Mu]$, \
$CellContext`Cp$, $CellContext`k$, $CellContext`ReD$, $CellContext`ho$, \
$CellContext`hi$, $CellContext`U$, $CellContext`\[CapitalDelta]T1$, \
$CellContext`\[CapitalDelta]T2$, $CellContext`tc2$, $CellContext`th2$, \
$CellContext`q$, $CellContext`Th2$, $CellContext`Tc2$, $CellContext`xTh2$, \
$CellContext`xTc2$}, $CellContext`do$ = 0.7; $CellContext`di$ = 
         0.3; $CellContext`Th1$ = 500; $CellContext`Tc1$ = 
         300; $CellContext`d$[$CellContext`h] = $CellContext`do$; \
$CellContext`m$[$CellContext`h] = $CellContext`mh$$; 
        Switch[$CellContext`fluid$$, 
          1, {$CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]S[$CellContext`Th1$]; $CellContext`Cp$[$CellContext`h] = \
$CellContext`CpS[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kS[$CellContext`Th1$]; Null}, 
          2, {$CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]L[$CellContext`Th1$]; $CellContext`Cp$[$CellContext`h] = \
$CellContext`CpL[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kL[$CellContext`Th1$]; Null}, 
          3, {$CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]Na[$CellContext`Th1$]; $CellContext`Cp$[$CellContext`h] = \
$CellContext`CpNa[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kNa[$CellContext`Th1$]; Null}, 
          4, {$CellContext`\[Mu]$[$CellContext`h] = \
$CellContext`\[Mu]O[$CellContext`Th1$]; $CellContext`Cp$[$CellContext`h] = \
$CellContext`CpO[$CellContext`Th1$]; $CellContext`k$[$CellContext`h] = \
$CellContext`kO[$CellContext`Th1$]; 
           Null}]; $CellContext`d$[$CellContext`c] = $CellContext`di$; \
$CellContext`m$[$CellContext`c] = $CellContext`mc$$; \
$CellContext`\[Mu]$[$CellContext`c] = $CellContext`\[Mu]L[$CellContext`Tc1$]; \
$CellContext`Cp$[$CellContext`c] = $CellContext`CpL[$CellContext`Tc1$]; \
$CellContext`k$[$CellContext`c] = $CellContext`kL[$CellContext`Tc1$]; \
$CellContext`ReD$[
           Pattern[$CellContext`i$, 
            Blank[]]] := $CellContext`m$[$CellContext`i$]/((Pi/
           4) $CellContext`d$[$CellContext`i$] \
$CellContext`\[Mu]$[$CellContext`i$]); $CellContext`ho$ = \
($CellContext`k$[$CellContext`h]/$CellContext`d$[$CellContext`h]) 
          If[$CellContext`ReD$[$CellContext`h] > 1000, 
            0.023 $CellContext`ReD$[$CellContext`h]^(4/
              5) ($CellContext`Cp$[$CellContext`h] \
$CellContext`\[Mu]$[$CellContext`h]/$CellContext`k$[$CellContext`h])^0.3, 
            Quiet[
             
             Interpolation[{{0.05, 4.06}, {0.1, 4.11}, {0.25, 4.23}, {0.5, 
               4.43}, {
               1, 4.86}}][$CellContext`di$/$CellContext`do$]]]; \
$CellContext`hi$ = \
($CellContext`k$[$CellContext`c]/$CellContext`d$[$CellContext`c]) 
          If[$CellContext`ReD$[$CellContext`c] > 10000, 
            0.023 $CellContext`ReD$[$CellContext`c]^(4/
              5) ($CellContext`Cp$[$CellContext`c] \
$CellContext`\[Mu]$[$CellContext`c]/$CellContext`k$[$CellContext`c])^0.4, 
            Quiet[
             
             Interpolation[{{0.05, 17.46}, {0.1, 11.56}, {0.25, 7.37}, {0.5, 
               5.74}, {
               1, 4.86}}][$CellContext`di$/$CellContext`do$]]]; \
$CellContext`U$ = (1/$CellContext`hi$ + 
           1/$CellContext`ho$)^(-1); $CellContext`\[CapitalDelta]T1$[
           Pattern[$CellContext`tc$, 
            Blank[]]] := 
         If[$CellContext`flow$$ == 
           1, $CellContext`Th1$ - $CellContext`Tc1$, $CellContext`Th1$ - \
$CellContext`tc$]; $CellContext`\[CapitalDelta]T2$[
           Pattern[$CellContext`tc$, 
            Blank[]], 
           Pattern[$CellContext`th$, 
            Blank[]]] := 
         If[$CellContext`flow$$ == 
           1, $CellContext`th$ - $CellContext`tc$, $CellContext`th$ - \
$CellContext`Tc1$]; $CellContext`tc2$ = ReplaceAll[$CellContext`tc, 
           Quiet[
            
            Solve[$CellContext`m$[$CellContext`c] \
$CellContext`Cp$[$CellContext`c] ($CellContext`tc - $CellContext`Tc1$) == \
$CellContext`m$[$CellContext`h] $CellContext`Cp$[$CellContext`h] \
($CellContext`Th1$ - $CellContext`th), $CellContext`tc]]]; $CellContext`th2$ = 
         ReplaceAll[$CellContext`th, 
           Quiet[
            
            Solve[$CellContext`m$[$CellContext`c] \
$CellContext`Cp$[$CellContext`c] ($CellContext`tc - $CellContext`Tc1$) == \
$CellContext`m$[$CellContext`h] $CellContext`Cp$[$CellContext`h] \
($CellContext`Th1$ - $CellContext`th), $CellContext`th]]]; $CellContext`q$[
           Pattern[$CellContext`tc$, 
            Blank[]], 
           Pattern[$CellContext`th$, 
            Blank[]], 
           Pattern[$CellContext`z$, 
            Blank[]]] := $CellContext`U$ 
          Pi $CellContext`di$ $CellContext`z$ \
(($CellContext`\[CapitalDelta]T1$[$CellContext`tc$] - $CellContext`\
\[CapitalDelta]T2$[$CellContext`tc$, $CellContext`th$])/
           Log[$CellContext`\[CapitalDelta]T1$[$CellContext`tc$]/$CellContext`\
\[CapitalDelta]T2$[$CellContext`tc$, $CellContext`th$]]); $CellContext`Th2$ = 
         ReplaceAll[$CellContext`th, 
           Quiet[
            Part[
             
             Solve[$CellContext`q$[$CellContext`tc2$, $CellContext`th, \
$CellContext`L$$] == $CellContext`m$[$CellContext`h] \
$CellContext`Cp$[$CellContext`h] ($CellContext`Th1$ - $CellContext`th), \
$CellContext`th], 1]]]; $CellContext`Tc2$ = ReplaceAll[$CellContext`tc, 
           Quiet[
            Part[
             
             Solve[$CellContext`q$[$CellContext`tc, $CellContext`th2$, \
$CellContext`L$$] == $CellContext`m$[$CellContext`h] \
$CellContext`Cp$[$CellContext`h] ($CellContext`Th1$ - $CellContext`th2$), \
$CellContext`tc], 1]]]; $CellContext`xTh2$ = Map[{#, 
            ReplaceAll[$CellContext`th, 
             Quiet[
              
              FindRoot[$CellContext`q$[$CellContext`tc2$, $CellContext`th, #] == \
$CellContext`m$[$CellContext`h] $CellContext`Cp$[$CellContext`h] \
($CellContext`Th1$ - $CellContext`th), {$CellContext`th, \
$CellContext`Th2$}]]]}& , 
           Range[0, $CellContext`L$$, 0.1]]; $CellContext`xTc2$ = 
         If[$CellContext`flow$$ == 1, 
           Map[{#, 
             ReplaceAll[$CellContext`tc, 
              Quiet[
               
               FindRoot[$CellContext`q$[$CellContext`tc, $CellContext`th2$, \
#] == $CellContext`m$[$CellContext`h] $CellContext`Cp$[$CellContext`h] \
($CellContext`Th1$ - $CellContext`th2$), {$CellContext`tc, \
$CellContext`Tc2$}]]]}& , 
            Range[0, $CellContext`L$$, 0.1]], 
           Map[{$CellContext`L$$ - #, 
             ReplaceAll[$CellContext`tc, 
              Quiet[
               
               FindRoot[$CellContext`q$[$CellContext`tc, $CellContext`th2$, \
#] == $CellContext`m$[$CellContext`h] $CellContext`Cp$[$CellContext`h] \
($CellContext`Th1$ - $CellContext`th2$), {$CellContext`tc, \
$CellContext`Tc2$}]]]}& , 
            Range[0, $CellContext`L$$, 0.1]]]; Grid[{{
            
            ListPlot[{$CellContext`xTh2$, $CellContext`xTc2$}, Joined -> True,
              PlotStyle -> {{Thick, Red}, {Thick, Blue}}, ImageSize -> 350], 
            Spacer[10], 
            Text[
             Style[
              
              Grid[{{"\!\(\*SubscriptBox[\(T\), \(c, 1\)]\) =", \
$CellContext`Tc1$}, {
                "\!\(\*SubscriptBox[\(T\), \(c, 2\)]\) =", \
$CellContext`Tc2$}, {
                "\!\(\*SubscriptBox[\(T\), \(h, 1\)]\) =", \
$CellContext`Th1$}, {
                "\!\(\*SubscriptBox[\(T\), \(h, 2\)]\) =", \
$CellContext`Th2$}}], 17]]}}]], 
      "Specifications" :> {{{$CellContext`flow$$, 1, "fluid flow:"}, {
         1 -> " parallel ", 2 -> " counter "}, ControlType -> Setter, 
         ControlPlacement -> 1}, {{$CellContext`fluid$$, 1, "hot fluid:"}, {
         1 -> "steam", 2 -> "liquid water", 3 -> "liquid sodium", 4 -> "oil"},
          ControlType -> PopupMenu, ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Spacer[25], 
          Manipulate`Place[2]}], {{$CellContext`L$$, 1.5, "length (m)"}, 0.7, 
         3, 0.1, Appearance -> "Labeled"}, {{$CellContext`mh$$, 3, "hot"}, 1, 
         5, 0.1, Appearance -> "Labeled", ImageSize -> Small, 
         ControlPlacement -> 3}, {{$CellContext`mc$$, 1, "cold"}, 1, 5, 0.1, 
         Appearance -> "Labeled", ImageSize -> Small, ControlPlacement -> 4}, 
        Row[{
          Style["hot and cold mass flow rates (kg/s):", Bold], 
          Spacer[25], 
          Manipulate`Place[3], 
          Manipulate`Place[4]}]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{612., {182., 189.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`\[Mu]S[
         Pattern[$CellContext`T, 
          Blank[]]] := $CellContext`T/25000000 - 1/1000000, $CellContext`CpS[
         Pattern[$CellContext`T, 
          Blank[]]] := (-(3/500000000)) $CellContext`T^3 + $CellContext`T^2/
         100000 - 0.0085 $CellContext`T + 3.6971, $CellContext`kS[
         Pattern[$CellContext`T, 
          Blank[]]] := $CellContext`T/12500 - 0.0075, $CellContext`\[Mu]L[
         Pattern[$CellContext`T, 
          
          Blank[]]] := (-(1/
           200000000000000)) $CellContext`T^5 + $CellContext`T^4/
         100000000000 - $CellContext`T^3/
        100000000 + (3 $CellContext`T^2)/500000 - 0.0013 $CellContext`T + 
        0.1229, $CellContext`CpL[
         Pattern[$CellContext`T, 
          Blank[]]] := $CellContext`T^3/5000000 - 0.0002 $CellContext`T^2 + 
        0.0797 $CellContext`T - 5.3801, $CellContext`kL[
         Pattern[$CellContext`T, 
          Blank[]]] := (-(3/500000)) $CellContext`T^2 + 0.0049 $CellContext`T - 
        0.3191, $CellContext`\[Mu]Na[
         Pattern[$CellContext`T, 
          Blank[]]] := $CellContext`T^2/500000000 - (3 $CellContext`T)/
        1000000 + 0.0017, $CellContext`CpNa[
         Pattern[$CellContext`T, 
          Blank[]]] := (3 $CellContext`T^2)/10000000 - 0.0006 $CellContext`T + 
        1.55, $CellContext`kNa[
         Pattern[$CellContext`T, 
          Blank[]]] := (-0.0432) $CellContext`T + 101.34, $CellContext`\[Mu]O[
         Pattern[$CellContext`T, 
          Blank[]]] := 
       500000000000000000000000000000000000/$CellContext`T^14.52, \
$CellContext`CpO[
         Pattern[$CellContext`T, 
          Blank[]]] := 0.0043 $CellContext`T + 0.6222, $CellContext`kO[
         Pattern[$CellContext`T, 
          Blank[]]] := (-0.0986) $CellContext`T + 173.54}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6611096576586*^9, 3.661109769140602*^9, 3.661109968335766*^9, {
   3.6611100308734784`*^9, 3.6611101082708178`*^9}, 3.661110186588559*^9, 
   3.661110239830655*^9, 3.6611103840939155`*^9, 3.6611104145585704`*^9, {
   3.6611109896532097`*^9, 3.661111015261256*^9}, 3.6611110730781603`*^9, 
   3.6611113540158687`*^9, 3.6611114877099094`*^9, {3.661111645346393*^9, 
   3.661111651853605*^9}, {3.6611117817810388`*^9, 3.661111823137513*^9}, {
   3.6611118872276287`*^9, 3.6611119444749317`*^9}, {3.6611119847570043`*^9, 
   3.661112000645832*^9}, {3.6611120541153297`*^9, 3.661112059639739*^9}, {
   3.6611120901647944`*^9, 3.661112119599848*^9}, {3.6611121581141167`*^9, 
   3.6611121869267683`*^9}, 3.6611122480684786`*^9, {3.6611124333758116`*^9, 
   3.661112478698094*^9}, {3.661112648619399*^9, 3.6611126682194347`*^9}, 
   3.6611127384055614`*^9, 3.6611138726649837`*^9, 3.6611729501688433`*^9, 
   3.661177820536892*^9, 3.6611815563131027`*^9, 3.6612643729834743`*^9, 
   3.6612802316874423`*^9, {3.6612804273687162`*^9, 3.6612804503314133`*^9}, {
   3.6612805327974005`*^9, 3.661280628270572*^9}, {3.661280662083233*^9, 
   3.661280723461543*^9}, 3.6612807952070956`*^9, 3.6612810210442996`*^9, 
   3.6612810654265804`*^9, 3.6612812198830605`*^9, {3.661281405390194*^9, 
   3.661281423195343*^9}, {3.6612814619781017`*^9, 3.661281509100586*^9}, 
   3.661281570951897*^9, {3.66128162217859*^9, 3.6612816518668427`*^9}, 
   3.661281858320037*^9, 3.6612819710046387`*^9, 3.661282147593777*^9, {
   3.6612825396688128`*^9, 3.661282553576437*^9}, {3.661282615913948*^9, 
   3.6612826457104015`*^9}, {3.661282881702855*^9, 3.6612829877084465`*^9}, 
   3.661530156544979*^9, 3.661531096781925*^9, 3.6615329422553415`*^9},
 CellID->304537534]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"flow", "\[Equal]", "1"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalDelta]T1", "=", 
        RowBox[{"Th1", "-", "Tc1"}]}], ";", 
       RowBox[{"\[CapitalDelta]T2", "=", 
        RowBox[{"th2", "-", "tc2"}]}], ";"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalDelta]T1", "=", 
        RowBox[{"Th1", "-", "tc2"}]}], ";", 
       RowBox[{"\[CapitalDelta]T2", "=", 
        RowBox[{"th2", "-", "Tc1"}]}], ";"}], "}"}]}], "]"}], ";", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"tc2", "=", 
    RowBox[{"t", "/.", 
     RowBox[{"Quiet", "@", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"m", "[", "c", "]"}], "*", 
          RowBox[{"Cp", "[", "c", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"t", "-", "Tc1"}], ")"}]}], "\[Equal]", 
         RowBox[{
          RowBox[{"m", "[", "h", "]"}], "*", 
          RowBox[{"Cp", "[", "h", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"Th1", "-", "th2"}], ")"}]}]}], ",", "t"}], "]"}]}]}]}], 
   ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Th2", "=", 
    RowBox[{"th2", "/.", 
     RowBox[{"Quiet", "@", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "/", "hi"}], "+", 
              RowBox[{"1", "/", "ho"}]}], ")"}], 
            RowBox[{"-", "1"}]], "*", "\[Pi]", "*", "di", "*", "L", "*", 
           FractionBox[
            RowBox[{"\[CapitalDelta]T1", "-", "\[CapitalDelta]T2"}], 
            RowBox[{"Log", "[", 
             RowBox[{"\[CapitalDelta]T1", "/", "\[CapitalDelta]T2"}], 
             "]"}]]}], "\[Equal]", 
          RowBox[{
           RowBox[{"m", "[", "h", "]"}], "*", 
           RowBox[{"Cp", "[", "h", "]"}], "*", 
           RowBox[{"(", 
            RowBox[{"Th1", "-", "th2"}], ")"}]}]}], ",", "th2"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"Tc2", "=", 
    RowBox[{"First", "@", 
     RowBox[{"(", 
      RowBox[{"tc2", "/.", 
       RowBox[{"th2", "\[Rule]", "Th2"}]}], ")"}]}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"q", "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", "hi"}], "+", 
         RowBox[{"1", "/", "ho"}]}], ")"}], 
       RowBox[{"-", "1"}]], "*", "\[Pi]", "*", "di", "*", "L", "*", 
      FractionBox[
       RowBox[{"\[CapitalDelta]T1", "-", "\[CapitalDelta]T2"}], 
       RowBox[{"Log", "[", 
        RowBox[{"\[CapitalDelta]T1", "/", "\[CapitalDelta]T2"}], "]"}]]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"th2", "\[Rule]", "Th2"}], ",", 
       RowBox[{"tc2", "\[Rule]", "Tc2"}]}], "}"}]}]}], ";", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"xTh2", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", ",", 
        RowBox[{"th2", "/.", 
         RowBox[{"Quiet", "@", 
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"1", "/", "ho"}], "+", 
                 RowBox[{"1", "/", "hi"}]}], ")"}], 
               RowBox[{"-", "1"}]], "*", "\[Pi]", "*", "di", "*", "#", "*", 
              FractionBox[
               RowBox[{"\[CapitalDelta]T1", "-", "\[CapitalDelta]T2"}], 
               RowBox[{"Log", "[", 
                RowBox[{"\[CapitalDelta]T1", "/", "\[CapitalDelta]T2"}], 
                "]"}]]}], "\[Equal]", 
             RowBox[{
              RowBox[{"m", "[", "h", "]"}], "*", 
              RowBox[{"Cp", "[", "h", "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"Th1", "-", "th2"}], ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"th2", ",", "Th2"}], "}"}]}], "]"}]}]}]}], "}"}], "&"}], 
     "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "L", ",", "0.1"}], "]"}]}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{3.6611778203028917`*^9, 3.6612808807754483`*^9},
 CellID->828140239]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["XXXX", "ManipulateCaption"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[1]], RectangleBox[{0, 0}], 
   InsetBox[
    StyleBox["\<\"Thumbnail Placeholder\"\>",
     StripOnInput->False,
     FontFamily->"Verdana",
     FontSize->14], {0.5, 0.6}], InsetBox[
    StyleBox["\<\"Replace this with your\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.45}], InsetBox[
    StyleBox["\<\"Manipulate at a particular setting.\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.39}], InsetBox[
    StyleBox["\<\"(Do not use a bitmap.)\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.315}]},
  ImageMargins->0.,
  ImageSize->220]], "Output",
 CellEditDuplicate->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[1]], RectangleBox[{0, 0}], 
   InsetBox[
    StyleBox["\<\"Snapshot Placeholder\"\>",
     StripOnInput->False,
     FontFamily->"Verdana",
     FontSize->14], {0.5, 0.6}], InsetBox[
    StyleBox["\<\"Replace this with your\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.45}], InsetBox[
    StyleBox["\<\"Manipulate at a particular setting.\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.39}], InsetBox[
    StyleBox["\<\"(Do not use a bitmap.)\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.315}]},
  ImageMargins->0.,
  ImageSize->220]], "Output",
 CellEditDuplicate->False]
}, Open  ]],

Cell["", "DetailsSection"],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell["", "SearchTermsSection"],

Cell["", "RelatedLinksSection"],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell["Contributed by: XXXX", "Author"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[110020, 2828, 312, 8, 70, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[110335, 2838, 678, 16, 70, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[111016, 2856, 340, 11, 70, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[111359, 2869, 637, 15, 70, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[111999, 2886, 844, 21, 70, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[112846, 2909, 369, 9, 70, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[113218, 2920, 1464, 31, 70, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[114685, 2953, 908, 21, 70, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 116167, 3000},
 {"RotateAndZoomIn3D", 116277, 3003},
 {"DragLocators", 116388, 3006},
 {"CreateAndDeleteLocators", 116505, 3009},
 {"SliderZoom", 116620, 3012},
 {"GamepadControls", 116727, 3015},
 {"AutomaticAnimation", 116841, 3018},
 {"BookmarkAnimation", 116959, 3021}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 36, 0, 74, "DemoTitle"],
Cell[CellGroupData[{
Cell[641, 26, 33, 0, 287, "InitializationSection"],
Cell[677, 28, 132, 4, 27, "Input",
 InitializationCell->True,
 CellID->1963837],
Cell[812, 34, 600, 20, 27, "Input",
 InitializationCell->True,
 CellID->1811688],
Cell[1415, 56, 441, 15, 27, "Input",
 InitializationCell->True,
 CellID->115550327],
Cell[1859, 73, 389, 14, 27, "Input",
 InitializationCell->True,
 CellID->7800428],
Cell[2251, 89, 100, 3, 27, "Input",
 InitializationCell->True,
 CellID->7231118],
Cell[2354, 94, 207, 7, 27, "Input",
 InitializationCell->True,
 CellID->350416859],
Cell[2564, 103, 359, 12, 27, "Input",
 InitializationCell->True,
 CellID->766845346],
Cell[2926, 117, 272, 8, 27, "Input",
 InitializationCell->True,
 CellID->156570552],
Cell[3201, 127, 172, 4, 27, "Input",
 InitializationCell->True,
 CellID->66281030],
Cell[3376, 133, 341, 10, 27, "Input",
 InitializationCell->True,
 CellID->160161020],
Cell[3720, 145, 338, 10, 27, "Input",
 InitializationCell->True,
 CellID->15907638],
Cell[4061, 157, 294, 9, 27, "Input",
 InitializationCell->True,
 CellID->52304312],
Cell[4358, 168, 240, 6, 27, "Input",
 InitializationCell->True,
 CellID->647463784],
Cell[4601, 176, 295, 9, 27, "Input",
 InitializationCell->True,
 CellID->5424510],
Cell[4899, 187, 274, 8, 27, "Input",
 InitializationCell->True,
 CellID->526955546],
Cell[5176, 197, 296, 9, 27, "Input",
 InitializationCell->True,
 CellID->228348789],
Cell[5475, 208, 60948, 1586, 27, "Input",
 InitializationCell->True,
 CellID->655988300]
}, Open  ]],
Cell[CellGroupData[{
Cell[66460, 1799, 29, 0, 234, "ManipulateSection"],
Cell[CellGroupData[{
Cell[66514, 1803, 21313, 513, 1175, "Input"],
Cell[87830, 2318, 15036, 291, 383, "Output",
 CellID->304537534]
}, Open  ]],
Cell[102881, 2612, 4305, 118, 215, "Input",
 CellID->828140239]
}, Open  ]],
Cell[CellGroupData[{
Cell[107223, 2735, 36, 0, 169, "ManipulateCaptionSection"],
Cell[107262, 2737, 33, 0, 22, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107332, 2742, 28, 0, 173, "ThumbnailSection"],
Cell[107363, 2744, 1242, 34, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108642, 2783, 28, 0, 143, "SnapshotsSection"],
Cell[108673, 2785, 1241, 34, 230, "Output"]
}, Open  ]],
Cell[109929, 2822, 26, 0, 336, "DetailsSection"],
Cell[CellGroupData[{
Cell[109980, 2826, 37, 0, 70, "ControlSuggestionsSection"],
Cell[110020, 2828, 312, 8, 70, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[110335, 2838, 678, 16, 70, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[111016, 2856, 340, 11, 70, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[111359, 2869, 637, 15, 70, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[111999, 2886, 844, 21, 70, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[112846, 2909, 369, 9, 70, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[113218, 2920, 1464, 31, 70, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[114685, 2953, 908, 21, 70, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[115608, 2977, 30, 0, 70, "SearchTermsSection"],
Cell[115641, 2979, 31, 0, 70, "RelatedLinksSection"],
Cell[CellGroupData[{
Cell[115697, 2983, 25, 0, 70, "AuthorSection"],
Cell[115725, 2985, 38, 0, 70, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
