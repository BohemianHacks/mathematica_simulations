(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    262394,       5583]
NotebookOptionsPosition[    260868,       5527]
NotebookOutlinePosition[    261210,       5542]
CellTagsIndexPosition[    261167,       5539]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "t", ",", "S", ",", "L", ",", "w", ",", "r1", ",", "r2", ",", "h", ",", 
       "Tb", ",", "k", ",", "m", ",", "T", ",", "base", ",", "RY", ",", "YG", 
       ",", "GB", ",", "col", ",", "cgrad", ",", "rectangular", ",", 
       "annular", ",", "temperature"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"size", " ", "stuff"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t", "=", "0.0015"}], ";", 
      RowBox[{"(*", "m", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"S", "=", "0.01"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "rectangular", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"L", ":=", 
       RowBox[{"length", "/", "1000"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"w", ":=", 
       RowBox[{"width", "/", "1000"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "annular", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"r1", "=", "0.003"}], ";", 
      RowBox[{"(*", 
       RowBox[{"base", " ", "radius"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"r2", ":=", 
       RowBox[{"radius2", "/", "1000"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"fin", " ", "radius"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"therm", ".", " ", "data"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"h", "=", "35"}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"W", "/", "m2"}], "/", "K"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Tb", "=", "500"}], ";", 
      RowBox[{"(*", 
       RowBox[{"base", " ", 
        RowBox[{"temp", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"k", ":=", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"mat", "\[Equal]", "1"}], ",", "14", ",", 
         RowBox[{"(*", 
          RowBox[{"s", ".", "steel"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"mat", "\[Equal]", "2"}], ",", "60.5", ",", 
         RowBox[{"(*", 
          RowBox[{"carbon", " ", "steel"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"mat", "\[Equal]", "3"}], ",", "80.2", ",", 
         RowBox[{"(*", "iron", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"mat", "\[Equal]", "4"}], ",", "110", ",", 
         RowBox[{"(*", "brass", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"mat", "\[Equal]", "5"}], ",", "237", ",", 
         RowBox[{"(*", "aluminum", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"mat", "\[Equal]", "6"}], ",", "401", ",", 
         RowBox[{"(*", "copper", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"mat", "\[Equal]", "7"}], ",", "2300"}], 
        RowBox[{"(*", "diamond", "*)"}], "\[IndentingNewLine]", "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"W", "/", "m"}], "/", "K"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"m", ":=", 
       SqrtBox[
        FractionBox[
         RowBox[{"2", "*", "h"}], 
         RowBox[{"k", "*", "t"}]]]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"T", "[", "x_", "]"}], ":=", 
       RowBox[{"Tb", "*", 
        FractionBox[
         RowBox[{"Cosh", "[", 
          RowBox[{"m", "*", 
           RowBox[{"(", 
            RowBox[{"L", "-", "x"}], ")"}]}], "]"}], 
         RowBox[{"Cosh", "[", 
          RowBox[{"m", "*", "L"}], "]"}]]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"base", "=", 
       RowBox[{"-", "0.005"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"RY", ":=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "i", ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"YG", ":=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{
             RowBox[{"1", "-", "j"}], ",", "1", ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0.1", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"GB", ":=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "k"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "0.1", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}],
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"col", ":=", 
         RowBox[{"Join", "[", 
          RowBox[{"RY", ",", "YG", ",", "GB"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"cgrad", "[", "x_", "]"}], ":=", 
         RowBox[{"Blend", "[", 
          RowBox[{"col", ",", 
           RowBox[{"1", "-", 
            RowBox[{"Rescale", "[", 
             RowBox[{
              RowBox[{"T", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"286.7", ",", "500"}], "}"}]}], "]"}]}]}], "]"}]}], 
        ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cgrad", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
        RowBox[{"Rescale", "[", 
         RowBox[{
          RowBox[{"T", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"286.7", ",", "500"}], "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rectangular", ":=", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"GrayLevel", "[", "0.5", "]"}], ",", 
            RowBox[{"Cuboid", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"base", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "w", ",", 
                RowBox[{
                 RowBox[{"2", "*", "S"}], "+", "t"}]}], "}"}]}], "]"}]}], 
           "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"RegionPlot3D", "[", 
          RowBox[{
           RowBox[{"z", "<", 
            RowBox[{"S", "+", "t"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "L"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "0", ",", "w"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"z", ",", "S", ",", 
             RowBox[{"S", "+", "t"}]}], "}"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ColorFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"cgrad", "[", "#1", "]"}], "&"}], ")"}]}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"annular", ":=", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{"Graphics3D", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"GrayLevel", "[", "0.5", "]"}], ",", 
           RowBox[{"Cylinder", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{
                  RowBox[{"2", "*", "S"}], "+", "t"}]}], "}"}]}], "}"}], ",", 
             "r1"}], "]"}]}], "}"}], "]"}], "\[IndentingNewLine]", "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"temperature", ":=", 
       RowBox[{"Plot3D", "[", 
        RowBox[{"T", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "L"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "0", ",", "w"}], "}"}], ",", 
         RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
         RowBox[{"ColorFunction", "\[Rule]", 
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
            RowBox[{
             RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
             RowBox[{"Rescale", "[", 
              RowBox[{"z", ",", 
               RowBox[{"{", 
                RowBox[{"286.7", ",", "500"}], "}"}]}], "]"}], "]"}]}], 
           "]"}]}], ",", 
         RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Switch", "[", 
         RowBox[{
         "fin", ",", "1", ",", "rectangular", ",", "2", ",", "annular", ",", 
          "3", ",", "temperature"}], "]"}], ",", 
        RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
        RowBox[{"ViewPoint", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"-", "2"}], ",", "1"}], "}"}]}], ",", 
        RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"250", ",", "350"}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"T", "[", "L", "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fin", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "\"\< rectangular \>\""}], ",", 
           RowBox[{"2", "\[Rule]", "\"\< annular \>\""}], ",", 
           RowBox[{"3", "\[Rule]", "\"\< temperature \>\""}]}], "}"}], ",", 
         "Setter"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mat", ",", "1", ",", "\"\<material:\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "\"\<stainless steel\>\""}], ",", 
           RowBox[{"2", "\[Rule]", "\"\<carbon steel\>\""}], ",", 
           RowBox[{"3", "\[Rule]", "\"\<iron\>\""}], ",", 
           RowBox[{"4", "\[Rule]", "\"\<brass\>\""}], ",", 
           RowBox[{"5", "\[Rule]", "\"\<aluminum\>\""}], ",", 
           RowBox[{"6", "\[Rule]", "\"\<copper\>\""}], ",", 
           RowBox[{"7", "\[Rule]", "\"\<diamond\>\""}]}], "}"}], ",", 
         "PopupMenu"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<fin measurements (mm)\>\"", ",", "Bold"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PaneSelector", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"1", "\[Rule]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"length", ",", "10", ",", "\"\<length\>\""}], "}"}],
                  ",", "5", ",", "20", ",", "1", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"width", ",", "20", ",", "\"\<width\>\""}], "}"}], 
                 ",", "20", ",", "50", ",", "1", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"2", "\[Rule]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"radius2", ",", "10", ",", "\"\<radius\>\""}], "}"}], 
              ",", "5", ",", "15", ",", "1", ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}]}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"3", "\[Rule]", 
           RowBox[{"Row", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"length", ",", "10", ",", "\"\<length\>\""}], "}"}],
                  ",", "5", ",", "20", ",", "1", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Control", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"width", ",", "20", ",", "\"\<width\>\""}], "}"}], 
                 ",", "20", ",", "50", ",", "1", ",", 
                 RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
         "}"}], ",", 
        RowBox[{"Dynamic", "@", "fin"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQveWNFkOT2WtHEc9IYRC9XOaxOIiuFVeTANFXnsuo
gmirrVOsQDSn6Q57EM3TEuAMon9YK3iA6CTWTUEg2vxIZCSIznNbDabrTk5P
AdE9ZnFpIHrF9O9ZINrFyj0HRBvIXCoA0TNrtjSAaCfjl+1g9X6rZoFoiSnl
80D03hV880F0g+XZxSBaxfbrMhDtuvrAarD4n8kbQfSMRIHdIPr01Adg2n/r
Ov5mIH0t7Zk8iH7LPK+xDeT+lDmTQbRJ0apZIFom9NAKEH3T+m/hRiB9T9Ks
CEQHWTHPAtFZNmxguuzUH67NIH+ufS8Iop/xl+eD6FPRIZUg2rQ9fj+IfpC5
D0yX8s1k2gKk+1LbWEC0dGhpN5iv/AxMd96ey3AJSF84c4oZRAMA6h6/wQ==

  "]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`fin$$ = 1, $CellContext`length$$ = 
    10, $CellContext`mat$$ = 1, $CellContext`radius2$$ = 
    10, $CellContext`width$$ = 20, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`fin$$], 1, ""}, {
      1 -> " rectangular ", 2 -> " annular ", 3 -> " temperature "}}, {{
       Hold[$CellContext`mat$$], 1, "material:"}, {
      1 -> "stainless steel", 2 -> "carbon steel", 3 -> "iron", 4 -> "brass", 
       5 -> "aluminum", 6 -> "copper", 7 -> "diamond"}}, {{
       Hold[$CellContext`length$$], 10, "length"}, 5, 20, 1}, {{
       Hold[$CellContext`width$$], 20, "width"}, 20, 50, 1}, {{
       Hold[$CellContext`radius2$$], 10, "radius"}, 5, 15, 1}, {{
       Hold[$CellContext`length$$], 10, "length"}, 5, 20, 1}, {{
       Hold[$CellContext`width$$], 20, "width"}, 20, 50, 1}, {
      Hold[
       Column[{
         Manipulate`Place[1], 
         Manipulate`Place[2], 
         Style["fin measurements (mm)", Bold], 
         PaneSelector[{1 -> Row[{
              Manipulate`Place[3], 
              Manipulate`Place[4]}], 2 -> Manipulate`Place[5], 3 -> Row[{
              Manipulate`Place[6], 
              Manipulate`Place[7]}]}, 
          Dynamic[$CellContext`fin$$]]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    250., {173., 177.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`fin$14458$$ = 
    False, $CellContext`mat$14459$$ = False, $CellContext`length$14460$$ = 
    0, $CellContext`width$14461$$ = 0, $CellContext`radius2$14462$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`fin$$ = 1, $CellContext`length$$ = 
        10, $CellContext`mat$$ = 1, $CellContext`radius2$$ = 
        10, $CellContext`width$$ = 20}, "ControllerVariables" :> {
        Hold[$CellContext`fin$$, $CellContext`fin$14458$$, False], 
        Hold[$CellContext`mat$$, $CellContext`mat$14459$$, False], 
        Hold[$CellContext`length$$, $CellContext`length$14460$$, 0], 
        Hold[$CellContext`width$$, $CellContext`width$14461$$, 0], 
        Hold[$CellContext`radius2$$, $CellContext`radius2$14462$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`t$, $CellContext`S$, $CellContext`L$, \
$CellContext`w$, $CellContext`r1$, $CellContext`r2$, $CellContext`h$, \
$CellContext`Tb$, $CellContext`k$, $CellContext`m$, $CellContext`T$, \
$CellContext`base$, $CellContext`RY$, $CellContext`YG$, $CellContext`GB$, \
$CellContext`col$, $CellContext`cgrad$, $CellContext`rectangular$, \
$CellContext`annular$, $CellContext`temperature$}, $CellContext`t$ = 
         0.0015; $CellContext`S$ = 
         0.01; $CellContext`L$ := $CellContext`length$$/
          1000; $CellContext`w$ := $CellContext`width$$/
          1000; $CellContext`r1$ = 
         0.003; $CellContext`r2$ := $CellContext`radius2$$/
          1000; $CellContext`h$ = 35; $CellContext`Tb$ = 500; $CellContext`k$ := 
         Which[$CellContext`mat$$ == 1, 14, $CellContext`mat$$ == 2, 
           60.5, $CellContext`mat$$ == 3, 80.2, $CellContext`mat$$ == 4, 
           110, $CellContext`mat$$ == 5, 237, $CellContext`mat$$ == 6, 
           401, $CellContext`mat$$ == 7, 2300]; $CellContext`m$ := 
         Sqrt[2 ($CellContext`h$/($CellContext`k$ $CellContext`t$))]; \
$CellContext`T$[
           Pattern[$CellContext`x$, 
            Blank[]]] := $CellContext`Tb$ (
           Cosh[$CellContext`m$ ($CellContext`L$ - $CellContext`x$)]/
           Cosh[$CellContext`m$ $CellContext`L$]); $CellContext`base$ = \
-0.005; $CellContext`cgrad$[
           Pattern[$CellContext`x$, 
            Blank[]]] := ColorData["TemperatureMap"][
           Rescale[
            $CellContext`T$[$CellContext`x$], {
            286.7, 500}]]; $CellContext`rectangular$ := Show[
           Graphics3D[{
             GrayLevel[0.5], 
             
             Cuboid[{$CellContext`base$, 0, 0}, {
              0, $CellContext`w$, 2 $CellContext`S$ + $CellContext`t$}]}], 
           
           RegionPlot3D[$CellContext`z < $CellContext`S$ + $CellContext`t$, \
{$CellContext`x, 0, $CellContext`L$}, {$CellContext`y, 
             0, $CellContext`w$}, {$CellContext`z, $CellContext`S$, \
$CellContext`S$ + $CellContext`t$}, Mesh -> None, 
            ColorFunction -> ($CellContext`cgrad$[#]& ), ColorFunctionScaling -> 
            False]]; $CellContext`annular$ := Show[
           Graphics3D[{
             GrayLevel[0.5], 
             
             Cylinder[{{0, 0, 0}, {
               0, 0, 2 $CellContext`S$ + $CellContext`t$}}, \
$CellContext`r1$]}]]; $CellContext`temperature$ := 
         Plot3D[$CellContext`T$, {$CellContext`x, 
            0, $CellContext`L$}, {$CellContext`y, 0, $CellContext`w$}, Mesh -> 
           None, ColorFunction -> 
           Function[{$CellContext`x, $CellContext`y, $CellContext`z}, 
             ColorData["TemperatureMap"][
              Rescale[$CellContext`z, {286.7, 500}]]], ColorFunctionScaling -> 
           False]; Show[
          
          Switch[$CellContext`fin$$, 1, $CellContext`rectangular$, 
           2, $CellContext`annular$, 3, $CellContext`temperature$], Boxed -> 
          False, ViewPoint -> {2, -2, 1}, Lighting -> "Neutral", 
          ImageSize -> {250, 350}]], 
      "Specifications" :> {{{$CellContext`fin$$, 1, ""}, {
         1 -> " rectangular ", 2 -> " annular ", 3 -> " temperature "}, 
         ControlType -> Setter, ControlPlacement -> 
         1}, {{$CellContext`mat$$, 1, "material:"}, {
         1 -> "stainless steel", 2 -> "carbon steel", 3 -> "iron", 4 -> 
          "brass", 5 -> "aluminum", 6 -> "copper", 7 -> "diamond"}, 
         ControlType -> PopupMenu, ControlPlacement -> 
         2}, {{$CellContext`length$$, 10, "length"}, 5, 20, 1, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         3}, {{$CellContext`width$$, 20, "width"}, 20, 50, 1, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         4}, {{$CellContext`radius2$$, 10, "radius"}, 5, 15, 1, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`length$$, 10, "length"}, 5, 20, 1, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         6}, {{$CellContext`width$$, 20, "width"}, 20, 50, 1, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 7}, 
        Column[{
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Style["fin measurements (mm)", Bold], 
          PaneSelector[{1 -> Row[{
               Manipulate`Place[3], 
               Manipulate`Place[4]}], 2 -> Manipulate`Place[5], 3 -> Row[{
               Manipulate`Place[6], 
               Manipulate`Place[7]}]}, 
           Dynamic[$CellContext`fin$$]]}]}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{431., {250., 257.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.652457001240961*^9, 3.652457032097726*^9}, 
   3.6524571103472013`*^9, 3.652457167124449*^9, 3.6524572683572392`*^9, 
   3.6524573149589047`*^9, {3.652457389944194*^9, 3.6524573951344905`*^9}, 
   3.6524574790612907`*^9, {3.6524575427379327`*^9, 3.6524577212151413`*^9}, 
   3.652457784990789*^9, {3.6524578231819735`*^9, 3.652457846001279*^9}, 
   3.652457878776153*^9, 3.6524579515843177`*^9, 3.652458645954033*^9, 
   3.6524587538152027`*^9, {3.652465761293804*^9, 3.6524657843611236`*^9}, 
   3.6524658225963106`*^9, {3.652465898870673*^9, 3.6524659200818863`*^9}, {
   3.652465960234183*^9, 3.6524659701627507`*^9}, 3.6524660014745417`*^9, 
   3.6525536212088585`*^9, 3.652553937317939*^9, 3.6525541315320473`*^9, 
   3.652556910368*^9, 3.6525569461290455`*^9, {3.6525583124081917`*^9, 
   3.652558339063717*^9}, 3.6525601348914323`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", ":=", 
     RowBox[{
      RowBox[{"0.5733", "*", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"21.905", "*", "x"}], "+", "500"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Plot3D", "[", 
      RowBox[{"f", ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0", ",", "20"}], "}"}], ",", 
       RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", 
            RowBox[{"1", "-", 
             RowBox[{"Rescale", "[", 
              RowBox[{"z", ",", 
               RowBox[{"{", 
                RowBox[{"291.2", ",", "500"}], "}"}]}], "]"}]}], ",", "0"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Plot3D", "[", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "20"}], "}"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
          RowBox[{"Rescale", "[", 
           RowBox[{"z", ",", 
            RowBox[{"{", 
             RowBox[{"291.2", ",", "500"}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
      ",", 
      RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6524579789788847`*^9, 3.652458003635295*^9}, {
  3.6524580949665184`*^9, 3.6524581839416075`*^9}, {3.652458245454126*^9, 
  3.652458429486652*^9}, {3.652458469760956*^9, 3.6524586013014793`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxtmW9oVWUAh++mbrMiNUrXf82j5r+5KUX4oXvASq8FSmWBhpUg9cGrtpWJ
aQOzEqmEMwq/lCRCYCFFdhdlEKWCZlaKFlxCwkr7o8syZ6N5k3Wfd/G8+eVl
z/3d3zk+533fnXM2atGyuxfX5nK5b2tyuQEXxn1Nr/ywrbvzVsa5x6YcreTb
09oPXqwsLZ/Nw19NTr7VsHBNemTRl/ml5boUPuvc59euff2pdN6ZX9uzZFjg
cxcebFly0ao033n6aLE8PPD37us5sWfTynT8qrP5QnZN4Cu/u31GdteT6YbX
eudkyajAN53fkR4YsyKt9P0bHfjl22d+typ5In384dq3i+WxgXd19SabZj2e
/vTJwIfKpfGBj9v19cVjs7Z0YVI/tJBNCvyjCYdfTmra0kPPDv64VJwS+PbR
Zz/peLk13frHoFuypCXw89und7TNaU0f7OuZGvhb+7fU7WpqTa+a13CiUpkW
eGl107XPTmsNP+PVnhntGW7PoUee4fYMt2e4PcPtGW7PcHuG2zPcnuH2DLdn
uD3jz57h9sxoz6FHnuH2DLdnuD3D7Rluz3B7htsz3J7h9gy3Z7g948me4fYM
t+fQI89we4bbM9ye4fYMt2e4PcPtGW7PcHuG2zPcnvFhz3B7httz6JFnRnuG
2zPcnuH2DLdnuD3D7Rluz3B7htsz3J75f9sz3J7h9hx65Bluz4z2DLdnuD3D
7Rluz3B7htsz3J7h9gy3Z/5/9gy3Z7g9hx55htsz3J4Z7Rluz3B7htsz3J7h
9gy3Z7g9w+2Z/4c9w+0Zbs+hR57h9gy3Z7g9M9oz3J7h9gy3Z7g9w+0Zbs9w
e+Z87Rluz3B7Dj3yDLdnuD3D7Rluz4z2DLdnuD3D7Rluz3B7htsz52XPcHuG
23PokWe4PcPtGW7PcHuG2zOjPcPtGW7PcHuG2zPcnjm+PcPtGW7PoUee4fYM
t2e4PcPtGW7PcHtmtGe4PcPtGW7PcHvmOPYMt2e4PYceeYbbM9ye4fYMt2e4
PcPtGW7PjPYMt2e4PcPtmT57htsz3J5DjzzD7Rluz3B7htsz3J7h9gy3Z7g9
M9oz3J7h9sz37Bluz3B7Dj3yDLdnuD3D7Rluz3B7htsz3J7h9gy3Z0Z7htsz
n9sz3J7h9hx65Bluz3B7htsz3J7h9gy3Z7g9w+0Zbs9we2bE84JHG9qXl3/M
M745bFvLfbOfDv7h+J+5YND+UrE5fO+i7ndfOVxsTWtfqNtaLLcEvuHODe8X
p/fz8DxU5Tt31q9OCtNCfvHUdWtWTOrn5OGcN3nOn/P5dfNnR7OkJvX5wH1c
OP30fDzm8OZCdknUA3cP3D375nVNyeUuj3rg7oG7Z0fjmY3l0pVRD9w9cPe8
Vj7XVSpeH/XA3QN3z21fnB9XyG6IeuDugbvng+aab0rFMVEP3D1w9zRlA9Yn
hRujHrh74O75dz1NjHrg7oG7p7Fvnk6OeuDugbuH0T1w98Ddw/fcw+geOD2s
Nz73/gD3/gD3ceE+LiPHJR+e+6t5fibPPsDPfO7z53w5f/ZPPvf+CWf/JM++
4TzcefYH5+HOsw9Ef3+pcudZ787DnWddOw93nvXrPNx51qnzcOdZj87DnWfd
/f/928Qoz/pyHu4889d5uPPM0+jvOFVOnvnE/PQ8ZP66B05PWL+8R/T6rXKv
o/B+UXm48+G9o/Jw58P7SOXhzof3lMrDnQ/vL5WHOx/eayoPdz6871Qe7nx4
D6o83PnwflR5uPPhvanycOfD+9T//T3VEuXDe1bl4eSbv6mbX775wnrpXr+5
IzmdX79szfzihf32l4aGqdnWaYH3TE9nHWzqzz9cc2BjLjcwJQ+/6fmv53QW
h0R83XO/1XcWr4j40sKfj2TJ1RGfVNd7rFQcGfEtj1Q6ksLoiI/YW3NbloyN
+AsTBp6pVG6MeE2fp4kRX3Gy4d5yqSnmbwxam+xtjjgj/KXl9XtKJ/t9nlnU
s/Ox/3g+uTp7cHb2d955OHk4nt1z566DXeXS4Oi4cPdwXdwzdMyp+wvZZVEP
3D1cR/f0HP+9Myk0Rj1w93Dd3fP9tu4Rudx1UQ/cPcwT9xy/+fyHxfKoqAfu
HuaVex7YlFtSLiVRD9w9zEP3fPVX7TWFbFzUA3cP89Y9d/T9npoQ9cDdwzx3
z4d9+8HkqAfuHtaFexqHDBpeuKw5nv9VHvVU15F7DuXrTlXaW6IeuHv4nnv4
3D2M5Nnfwjyt7m/h/qG6fvm9DGc9mrO+zFkv5sx/c+azOfPTnPlmzvwxZz6Y
c30jXr1e5viGX7q7d01b+Uie8edv73mm8unTIQf3dYH7+nI/7+tF3teL/dPn
yX5ozv5mzn5lzv5jzn5izv5gzno3Z/2asx7NWV/mrBdfF/xxXcjjmzzXi7zv
Bxjxz/0uz0c8r5FjvTjP85HzrCPneT5ynvXlPM9HzrPunOf5yHnWo/M8HznP
OnWe5yPnWb/O83zkPOvaeZ6PnGe9O8/zkfPsA87zfBTlq/uD89yHOh/uF6p5
1jnzlPcM5Picecj8Jv/OQ3tH7p7Rf98L576X49LDcbkfJs/9MHn2E/Jw9hNz
9hNz9hNz9hNz9hNz9hNz9hNz9hNz9hNz9hNzfMP5mc/xz3WHc93ZX+Ds5/iH
45/rQZ/3K/Le37i+zvO535PD/fcI+j0P+Z73Qzh+mId8zjzEA3k8/AOCns6H

   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
ouREcLLXxfem7Qp/elN8b9sG7zu2wfeubfCttQ2+92yD733bFf5EG370gbjh
Dw3lSK/Kl+BC14dsX5RcFg03edp78Fy++5BT8JznivzN5dOwF7NfIf8Ju1vo
RvKVZ4r8bYjrz4e+Uf/uoRvLbbD5brNbyjyzqlyOvIWXkMfUfc4qzqZG8hPu
9wi7ie0BjglXuTN0U214DLwBztBcG87QRP7A/Z5hN7N9gn3hEneHbq5Nn68d
o5M2Z3ozz3fu9wr7INsn2Zez/t7QLbQ7+yyMcUmRuffm9vve+0eEfbDtU+zL
WXxf6JbarMWPrk1d14pnGeR1zseDPSvxPTLsVn87O3/R9yxtzqlDPQuwHwj7
EM/WVp5l9OtdZL/K2fabY4zR5hwZbl/Ouz6h2zjuaaFbe748HLqtNvVoPWsm
NZS6T51vY81nzFH6F7b/dM75jslcfUO3s8+CkI7W3nbWZMY8KnSHv7WZlzkf
Dd3e8a8qMlc7jGf0OuNcFtLVfDk6pJO1+DznopY+EdLFGtXB+zzXotCd9aF2
U+Oob/2Yp8g1brQ+9H1Wn8Upy2ZeW61Njhxmviw218nzf4S+WAzE1VNixj6g
yHWI+nNM6MPtDz7OBvaBGoUPdXW+18GLbzXn5f1jbpHfQdY472r7bWnfTj4T
fV8LfXvIdiHTixwH8AxqDDWHdzXqCu855PUtRc5n3j3eL3Kdoi81Bh/q0Jgi
1xrekcj/nex7RZHrAn3fKnLNwYe8552BPP1Sm3y5ssj5z/vD1UXOPbgv+Q13
Jx+/0abv5CLnNjx+UpHrBX0/EwNjEj+99LmmyLkHT51S5HxmfHIULktOkee7
F2VtwCZnX3HdeF/9SX+ur3Ht2euxRc5J+OW0Iuce9rgi5wMcnVyt4VzkKJyP
HPpd+2zzCY5FTpA/tfS5tsg5zH7dWuQ8ZEzypo6xU0Wbvux5ffd9RpHzBw5E
HO3r9euKnD/wj/FFzkl8poYMda021H+O9amGOCcUOWfgAbOKnDPYGzvv4vCZ
WeScZHxqJ7n8rXmzvzE7scg5QP0lfhu6ntW08SGumrinrxf5LCeH3ihy/HN2
zilyXcDmnZ0zqHrK396xOdc4CxsZn3zzZ8x6Kb9fN9V+Ubt+yt+rwd0l5e/t
nDEtUn7Pba7915ljzBDPzYxPfu9oJIYl+h/svhzm+hBvBxtLfH/GPjrldWJe
6h7fzw/Svsi+z6X8bthSf2KyVVG+i1HzB6f8fRh7SMqxd6h7x3da7HNSfidq
rb1c+1xjsk1Rfi/FvjLld5O22iu0r0r5u3Qr5yVu2xmHvJ9St282PjsYS+dq
z035O2c7fVbqf0vK3+F5xn4pc/iO+hOTnYzhC7QfTplLd9Zepf1Iyt8n6Xt7
ynV2/6LksV1cz8bGDVyI71fU2VdS5gZdtYmXHsZJVX2Iz8v1eTXlGkc9/Ngx
uxt7O9v3c2Owm7FBzaLuVWKnp3FFzaJ2EV/kPLnPnlCzqI2V2DnCGGDtj3T9
D7IvMQOn6+5z7aUP8UKek+9V3Ns+7ik1hXqVjJHexsbe2sTRatft+ZT3ra97
N7vIZx65TC2gPlTivd/f1nmAz86+He1+0Yc6UFnXY1xzzqD++jfSZg3HuF/V
XVvGhGdy7hznHjXV/sK1PdH1ZB+Pd83xOUF/zqCBrv8kfbjewbWa637hDxet
J37ikfw+6W97h02tm+y8XG/u+PSt/PbDdwLOo0HuF7/nwKXWudecU/BMzsTB
7jU5TZ7DCVvoQ9+W+uBPDR+iP/s+VP9r7DvY+BliPHBmner1Vtq/Otdwr3MG
nW6ccN6NMDZaa6+zxow0Vve27zqxDRXPdH3oS/0Y5ZhtHR8uyhl3hteJ/9O8
3lr7HOsYY+1jDJ9h3HKmXGL8cPadZXy20ybmqQfnuafUG+oUnBP7bP3rasM5
OcvO1b+DNvvOuXmO1+s5JtySs5V6RGx31uY6uUAdJ86Jf+oXOYLPaP05W6lN
5MssfR42N0eJcz/94ajjxA9m8vJi+zbQhnPOdt7n9LnQvh3FzzN2dd3w512S
d0bqGGcqZyt8Gw5EvaPWEcvkzK72vcw176oP/tQ5cpU8JRfJT/K1p33Ji2P1
oXZSt+BtxPPJ2uQTde5q46evz8zzUs+IaeJzmDbxTjwSo8TgYPuSTz3EQF73
1odYOto9e9gzi/FZ76Pc47mefeRApR5jE5/UK86Maq4l/sTOHK+zJtSziUV5
pmCzP/Dim4r8Ps6eTHBv3yzy+378/fXOjw1Pv8k+W3jWYFPb33K/uP52kb8J
bJny+/7N+lA7b3H9yfuprhV1blJR1rZJrg81bLJ7NMC+1T1nWSvi/UR92KN+
4ifGhjo++0UtmeZeUKumFCW3meK+cGbR5lwbrv9gx6F2ULvI3RlFmZczjIF3
iswJX0s5P251X8jRmUWZlzPdR/JgdlHmx2wxk2ezXP8DHHML95C9rOTBHPeR
7xL87we87t0ic9EPU84R3heIf76B8L8f9c2jucbJaOci3tbq/1HK/8fBdwrO
DsZmjq88O+52rqaOy5h3aHPGneGz13YMxoK78u7Jb3+vWof5fgGn4tsC/+cA
P+S3er4FUGPn6cM5wv0HXP9DtIdYhzmn4Ir0oz88kGsPer2tY3Kd93p+Q4fX
oWlTx3hP5/dWuATfCvgtG56Gpk1d4p2d35cfsVY/6jgtfE6esaP+9AX7PJ/x
ceeg1nXRft6avMgxF2pTnzlbOFOoCawZa0c95F17jXvHdzTegXn/5T0Yu8L3
XnAvyEW+u22h72J9btBmDPKS/PzUfaTvbl7nu96WxsCL7nVT7a+MkyXGA2u/
3DXnuZe6Ji20f3DfX3Ifm9uXGLtRDJ+41y+5bqz/Ste5teP/4d6tcE+JB94x
ON8f1B5ireJ7ZWEMrHCvu7qer7ovq1z/ztrsEd8o+M5A7rCnL7sv7MVq966L
NvtC3vB+/lHK74P0JQcbul+8S97uuFt7H5vvGOQ375PUDfKSHN5GH8YiX3kW
ajHfR1irt9zTufp8aEyyVsTqDfpQmxeK/3YxrHXeucZTNTFQv/hew75Tu+Hs
YHjf8f8PmCKbow==
         "]]],
       Lighting->"Neutral"]}, {}, {}, {}, {}}, 
    {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0E1KAmEcwOGxzMoyA7Vl0QEK2ucJauUyd+5qods6gR0g8gRFRESERUQY
ZBeo7EPtE0HyFj0vtnje3/8d5h1mZrFUKZRjURQVeTGEuWHp6SwLLJNn/f++
LXbYpcYhF9yTdrbNk7mlK7TMz+H5vPJGmw5d3vngky8yznT4Dtc1R5cf+wfN
8mi+0aZea12v9EAvdV/rWtVz3dYz3dRT3dATXdNjXdUjXQrfo/M6CO9qTuud
/uqezuit9jXFNFMkmWSCcRKMEWeUEeZiw//8BxYZMcU=
      "],
      VertexColors->None]}},
   VertexColors->CompressedData["
1:eJztmWtIU2EYx6cymmYi0RVK0mlRlloYIal/zaHDQEcqKBiEmZeyFEvRpoKR
pZkKitMoKC+VlaRQpGRTSty8ZHmZF0TLraburiZdPpT5MYgjHZvgh+fTgT9/
/u/D73nfh3Pe4xiTfOKMJYfDmbDgcKyWnq6+leGX92iRUmeUbHV9jcryOu52
bgdEVb3z127ocft0QcVewSeIRI96zlf34qIucjL+hxHj0tTrrRo9WsMqtIEO
QxAqj9wrVZgwu86tYeSFCZ5nU/eXH1Njfsrf73GoCVYal7mSDBOeLbgPpYkN
2KjltQR16+GRkNbJzTegJrIlKafRBMtXFcafTjNwErtNDIxpkNr85Wuxtwkv
s8LLr8pUUEGoq7+jRpfwvilEasThd0l6rvc4JLzn4fz3Sozyp67oTxmR+S3u
YZvrMKKClTtkJz/gkl/ulgx3Ix5M8woNlf3w5XsGhViMwWMxosTG1oiRzTn1
AtlbzES0x96sGsZctGZf7YIBAaNt1m8knVAps0uSLyiQV2aniFEbICtoSN80
LUOe/63AssJBtNt7Zft8NCCir33bd50Mpdw0W5fiQTgX2oWGLunEmTgTZ+JM
nIkzcSbOxJk4E2fiTJyJM3EmzsSZOBPntcM5K06lzhTpsGgrbgg4NwZebvHT
5vQuRv4FQQIVJ74bTR7iyMSYIeySdk380hmgk8865UfIEZ3YY323YxAOk00b
+iaZdaY62dbPth6mfMqhHMr5O2e15wPTukx+pjnAtn6285P85P8fv7n2obnO
EfnJ/y/+4wEHbIq0MqT4uPnFFQ2i9dAAP3iZecvkJ31l3Ni+J1MO5VDO6uWQ
vjK9ZmeUV6xUi05uV8JuST8yG7nKsAA59WWN9sVc54jt9xr5yf+nn+megWkf
Hqx1zBB8lqM/+Khztb0C65+kC0dV5ruHJH15nYk/276ba16x9bP9H8F2HrLd
h78BLbnqnw==
    "],
   VertexNormals->CompressedData["
1:eJxTTMoPSmViYGC4y8jAwAyk0zfySlZ9f2/PAAENN+L/VuVFLrc/k7f9Mvc3
hLiNlnF5uvVKe+UFO9gsvyDEp/81ZDhTuNo+oP+O682PCPH554ICHoiss1+i
LD177TuEuFn5ebFpizfYa+0UmOn/CiHuXqPrfmTuJvv5AXM7+Z8gxFnKGxoY
FbbaP9hwOXL1LYT46g8nrZMzd9i/CLdwWXAaIa56KH7lxWd77MMton0CNyLE
Z7H0J6zbdNA+JLbqBVstQnwah0gp55lj9oHFJeuX/30HF3eosm3yfnLenpn5
nUuq7Vu4uO3cvwJLGG7Z/9f++F1j/QO4eI7FCf5cv9f2jBPmznJ4+2w/TJxj
Upb616Bn9qPhPBrOo+E8Gs6j4TwazqPhPBrOo+E8Gs6j4TwazqPhPBrOo+E8
Gs6j4TwazqPhPHjC+fYUv1lnkcJT+HvlYzHHFTjD/+/72T5bchDu4YyP7Ei8
etn+8rJ556IsX8HFM2ryrZeFPcIprqkx7eRDgVNw95j4Wd0MD3mPUxyX+0l1
Dy7zR80ZNWfUHExzaF0+4LIXl3pc5QCp7ie1/BxVP6qeEvXUSofUykej6kfV
E6M+9NbHc+K3n8HVZxe5hvakPrNnDX26Q+zCA7j6lVsZFIytXuNUPyoOEX96
SPLyeo+TcHHLDk/d6XG4wxmX+lFzRs0ZNYd25uAq33DVy6Pi+MUntv7wU0Pq
L5i8PvqM//RyqsXvaHxRN15wqSe1PYCrvzaqflQ9MepxjTPgSoc6vy9p2su+
gYtrNDnkm0+8h7Pdi8teXO1hXOpHxSHiuMIfV7zjKs9xhT+p5RWp6kmdjyC1
PMSVDnGFAwDh6N+i
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 20}, {0, 20}, {290.777768114159, 499.99996870714403`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6524585054489965`*^9, 3.6524586017785063`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0.5733", "*", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"21.905", "*", "x"}], "+", "500"}], ")"}], "/.", 
  RowBox[{"x", "\[Rule]", "20"}]}]], "Input",
 CellChangeTimes->{{3.6524583661110272`*^9, 3.6524583965877705`*^9}, 
   3.6524589435310535`*^9, 3.6524642880895414`*^9}],

Cell[BoxData["291.22`"], "Output",
 CellChangeTimes->{{3.6524583696982327`*^9, 3.6524583971288013`*^9}, 
   3.6524589439300766`*^9, 3.6524642930418253`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", ":=", 
     RowBox[{
      RowBox[{"0.5733", "*", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"21.905", "*", "x"}], "+", "500"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot3D", "[", 
     RowBox[{
      RowBox[{"z", "<", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"f", ",", "x", ",", "y"}], "}"}], ",", 
         RowBox[{
          RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
          RowBox[{"Rescale", "[", 
           RowBox[{"f", ",", 
            RowBox[{"{", 
             RowBox[{"291.2", ",", "500"}], "}"}]}], "]"}], "]"}]}], "]"}]}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6524588005668764`*^9, 3.6524589620071106`*^9}, {
  3.652464297531082*^9, 3.652464320453393*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJztnT+rc1sRxg+Kb3+bXdlsiAEhINmk91SCrR9BsLz6Xe5Hsbj2ae1S2MQi
BAlIEDtb9b7HeefM73kej4KlQfDmx7yzJrP2zJr1Z6+z/vI3v/jV915eXn72
g5eX77/8559vdj//5/9++9P6/ruvr99+ff3bTxNP3xMvPcXTv5vy52DPWf49
5evzndS3X/9e9BSnHspP/ZdgzyXYcxE9n9Vf/yB6ilMP5aed1/C7ruF3XYO/
b6E/b6GfbsE/9+Cfe/DPXfR8xt/8SfQUpx7K1+ft5z6Cnx/Bzw/R81n97s+i
pzj1UL4+b/5/hv56hv56ip7PYt/+RfQUp57E//gd/vtfJR6LUz859Uz5T68+
b3x6pV5yr4d54NOrj+uSZ5x+evVxV3oYR2UP46L08zn/9Oqf22qXz+GnV/9c
lT18Tj69sh+LJ/+Tv7X3lfRLcfYLuddzFj3slyl/Ec5+mXquwc5b0H8Xzn6Z
7T6Es1+mPU/h7Jfiyf++v5YQL4v0C7nXw3hZQrwsIV6WEC9LiJeyh/GyhHhZ
QrwsIV6WEC9LiJclxMsS/U/+o88N/lD6pTj7hdzrOYse9suUvwhnv0w912Dn
Lei/C2e/zHYfwtkv056ncPZL8eR/H0dryGOr9Au518M8toY8toY8toY8toY8
VvYwj60hj60hj60hj60hj60hj60hj63R/74e2Em/FGe/kHs9rOd30i9TnvX2
Tvpl6mE9XPawvt1JvxT39edO+qW4rw930i/Fff22i/73+W0fxpf96/xeebK5
18PxZR/Gl30YX/ZhfNmH8aXs4fiyD+PLPowv+zC+7MP4sg/jyz6ML/vof/Jf
f/73P5Z+Kc5+Ifd6zqKH/TLlL8LZL1PPNdh5C/rvwtkvs92HcPbLtOcpnP1S
PPnfjzuHMO4fpF/IvR6O+4cw7h/CuH8I4/4hjPtlD8f9Qxj3D2HcP4Rx/xDG
/UMY9w9h3D9E/5N//v71T6RfirNfyL2es+hhv0z5i3D2y9RzDXbegv67cPbL
bPchnP0y7XkKZ78UT/739cAx1GNH6Rdyr4f12DHUY8dQjx1DPXYM9VjZw3rs
GOqxY6jHjqEeO4Z67BjqsWOox47R/z6OtpDHNukXcq+HeWwLeWwLeWwLeWwL
eazsYR7bQh7bQh7bQh7bQh7bQh7bQh7bov99nXYKdfJJ+oXy5C/2c/rSX14P
6+rTl36kPPt36uG69ynU4acv/U55Pg+zXa5jn0LdXn7genVzbz/XpU+hzj99
ea4o7+v/05fnzf9ezgtOX55Dyvv5wunL8+n9w3nEKcwjMk/P7Vw3zuu29X0+
t59e/f4R5c+ifz6flL8In88b9VyD/beg/y58Pg9s9yF89i/teQqf/dKc/uf6
/ORcb29O+Tf7uA7c3Ovn+mRzyvt1s+beHq7nNPfPIdcZmnv7Of9tTnk/L2vu
fy/nC80p7+vY5t4/rK+ae3s47jf3/uS409z7meNOcx+/HEea+/jluEB7GL/M
8819/DJvN/fxyzzc3Mdv50/GW33Iy//FmT+9/Fn0l/+9/EV4+d/ruQb7b0H/
XXj537f7EF7+9/Y8hZf/yel/5s/Jmb+/kvxZ3Nv7leTPqWcJ+heRZ/4k9/as
wZ41PIc7kS/u7d+LPPNnceZPcv97DyLP/Dn8+y5/knv/HEWe+XO2uwV7tuDP
zp/k3s+dP8l9/Hb+JPfx2/nT28P47fxJ7uO38ye5j9/On+Q+fll/5n3Q+j7H
ryXUn5Q/i/45flH+InyOX9RzDfbfgv678Dl+sd2H8PK/t+cpfI5fzel/X38u
of5cQv25hPpzCfXnEurPJdSfS6g/l1B/LqH+XEL9WXaw/mzu7Wf9uYT6cwn1
5xLqzyXUn0uoP5dQfy6h/lxC/bmE+nMJ9ecS6s/yG+vP5t7PrD+b+/hl/dnc
xy/rT9rD+GX92dzHL+vP5j5+WX829/Hb+fOj8wr1vfxfnPnTy59Ff/nfy1+E
l/+9nmuw/xb034WX/327D+Hlf2/PU3j5n5z+Z/6cvPMnOeWZP8m9/iXoX0Se
v4Pc27MGe9bwHO5Evri3fy/yzJ/FmT/J/e89iDzz5/j97/InuffPUeSZP2e7
W7BnC/7s/Enu/dz5k9zHb+dPch+/nT+9PYzfzp/kPn47f5L7+O38Se7jl/P3
fK6ovpf/i/v5O+XPon/W/5S/CC//ez3XYP8t6L8LL//7dh/Cy//enqfw8j85
/e/n76vkT3LKM3+Se/2sr1fJn8X9eLJK/pzt0n+r5M8px/l7c28/5++r5M/i
fv6+hvn7KvmTnPJ+/r5K/px+4Px9lfw52+X8fZX8Of3G+Xtz72fO35v7+OX8
vbmPX87faQ/jl/P35j5+OX9v7uOX8/fmPn65r5TP/9V/lf+LM396+bPoL/97
+Yvw8r/Xcw3234L+u/Dyv2/3Ibz87+15Ci//k9P/zJ+Tc39sJ/mzOPMnudfP
9Y+d5M/ivt7fSf6c7XJ820n+nP5hfzb39vOc5E7yZ3F/fm8n+XP+Lp4r20n+
HPbJeaed5M/pB57D2Un+nO3yfMhO8uf0G885NKeeKc/45TkEyjN+ea6Aehi/
PCdA/Yxf7vuzXcYv9/FpD+O38yf5XCfJ53Tre/m/uF//pPxZ9M/1E8pfhJf/
vZ5rsP8W9N+Fl/99uw/h5X9vz1N4+Z+c/vfrn3vJn+SUZ/4k9/q5/rmX/Fnc
r3/uJX/Odrn+uZf8Of3D9c/m3n6uf+4lf9Z3v/65D+ufe8mf5JT36597yZ/T
D1z/3Ev+nO1y/XMv+XP6heufzb2fuf7Z3Mcv1z+b+/jl+iftYfxy/bO5j1+u
fzb38cv1z+Y+fjt/fnSevr6X/4szf3r5s+gv/3v5i/Dyv9dzDfbfgv678PK/
b/chvPzv7XkKL/+T0//Mn5N3/iSnPPMnude/BP2LyDN/knt71mDPGp7DncgX
9/bvRZ75szj7gdz/3oPIM3+Of/8uf5J7/xxFnvlztrsFe7bgz86f5N7PnT/J
ffx2/iT38dv509vD+O38Se7jt/MnuY/fzp/kPn65f5Tfe6nv5f/ifv+I8mfR
X/738hfh5X+v5xrsvwX9d+Hlf9/uQ3j539vzFF7+J6f//f7RQfInOeWZP8m9
fu4fHSR/Fvf7RwfJn7Nd7h8dJH9O/3D/qLm3n/tHB8mfxf3+0SHsHx0kf5JT
3u8fHSR/Tj9w/+gg+XO2y/2jg+TPaTf3j5p7P3P/qLmPX+4fNffxy/0j2sP4
5f5Rcx+/3D9q7uOX+0fNffx2/vTrNfo+W/m/OPOnlz+L/vK/l78IL/97Pddg
/y3ovwsv//t2H8LL/96ep/DyPzn9z/w5Oc7dv+OUZ/4k9/qXoH8ReeZPcm/P
GuxZw3O4E/ni3v69yDN/FrfzgHfc/96DyDN/jvzIfn7HvX+OIs/8Odvdgj1b
8GfnT3Lv586f5D5+O3+S+/jt/OntYfx2/iT38dv5k9zHb+dPch+/3H/P75HW
9/J/cb//Tvmz6C//e/mL8PK/13MN9t+C/rvw8r9v9yG8/O/teQov/9s4eed/
v/9+lPxJTnnmT3Kvn/vvR8mfxf3++1Hy52yX++9HyZ/TP9yva+7t5/r0UfJn
cb8ecwz770fJn+SU9+PtUfLn9AOfr6Pkz9ku99+Pkj+nXu6/N/d+5v57cx+/
3H9v7uOX+++0h/HL/ffmPn65/97cxy/335v7+OX8Pb/vXd/L/8X9/J3yZ9E/
63/KX4SX/72ea7D/FvTfhZf/fbsP4eV/b89TePnf1g3v/O/n71uYv29h/r5J
/iT3+jl/38L8fQvz903y52yX8/dN8uf0D+fvzb39nL9vYf6+hfn7Fubvm+RP
csr7+fsm+XP6gfP3TfLnbJfz903y55Tj/L259zPn7819/HL+3tzHL+fvtIfx
y/l7cx+/nL839/HL+XtzH788v5TvX/DnlJpXv1AP+ZQ/B/mzyFd/UZ586r8E
/ReRr/6lPPm05xrsuYr82/db8PMt2H8P9t9Fvp4fypPP3/sIv/ch8vW8UZ58
+ucZ/PMU+Xo+KZ84n1t/7usk4w65fz55T29z/7zxnt7m/vnhPb20k88D7+lt
7vuX9/Q29/3Fe3qb0/8cr4tzvCannyc/C6efp/xFOP089VyDnbeg/y6cfp7t
PoTTz9Oep3D6mXXO9D/PGTb3zzPv0W3un2feo9vcP8+8R5d28nnmPbrN/fPM
e3Sb++eZ9+g2988zz2eewvnM5vTz5Gfh9POUvwinn6eea7DzFvTfhdPPs92H
cPp52vMUTj+zri7+ppfnWpv7vMF7bpv7vMF7bpv7vMF7bmkn8wbvuW3u8wbv
uW3u8wbvuW3u8wbPA9e4yfPAzX39xntrm/t6jPfWNvf1Fe+tpZ2sl3hvbXNf
//De2ua+nuG9tc19HcJz1JVPeA60uc/PvIe2uc/PvIe2uc/PvIeWdjI/8x7a
5j4/8x7a5j4/8x7a5j4/8/z5KZw/b04/+3tlm9PP/l7Z5vSzv1eWdt6C/rtw
+tnfK9ucfvb3yjann/25/ZOsG5D7cZD3xDb34yDviW3ux0HeE0s7OQ7yntjm
fhzkPbHN/TjIe2Kb+3GQ7zucwvsOzennyc/C6ecpfxFOP08912DnLei/C6ef
Z7sP4fTztOcpnH7mOlXxN73cp2ru6w3e49rc1xu8x7W5rzd4jyvtZL3Be1yb
+3qD97g29/UG73Ft7usNvl9zep3rTO3n4j5v8F7W5j5v8F7W5j5v8F5W2sm8
wXtZm/u8wXtZm/u8wXtZm/u8wfeSqg7helJzX9fxvaTmvq7je0nNfV3H95Jo
J+s6vpfU3Nd1fC+pua/r+F5Sc1/XpftC9ePXRfUe0Pq82af35Pl5vd5HMvXo
+/pvH30P1delet5/tqvnYf04pecOph7dl3v7fHTfr94nPJ/b5vO5pXy+v9fr
yffxev35fl3fbr4v19uT778l988t37PTe3Hn85rudUz3laV7eNL9Eum96fQ+
YHrPJZ3fTucS03mbtI+c9keUp/ycxsdUn6T6MNXnaX5Ufk3rLWm9K603pvXe
tN7+n67Pv/zrk/bx0/ko3796npw8vb9jz//J86n3dfh29X4kez5S4kvvQ/Zc
/+7hCz7k3v8f/309L5//vpjXk/++ktef/76Mbzf/fQ0vr/fY+zjVz//H+/f2
/O/G+8T//b6z7ut5f+d9k7TO7/2d11HTul9ap0rrKmkdwPs7z7Pm/2eezlFw
fCzO8XTq0fcp0ntqHN+nnXqvAuuH2a7eA8b6ZOrRe2tZ/0z+8d+n8Fz/DvXk
H/995yn/8d9fnno+/vvIU//Hf794tvvx3xee9nz893/rk+oEP5/VcyOzXT03
4uezet5j6tHzHm8fPdfh57N6HmO2q+cx/HxWz1EUT36bfv7/+oC3579fH/gH
hO21xQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtln1IlWcYxs/H89eIETFijIgtQkKciIjIYWxDJEIiRGSISFSISMhZSIw4
RMSMMWJEiIwQEREVkSESQ5yr5pyz5r6dmTlX5pwz59yIEHERuy6e3x8X5z3P
ez/3933d72un3q3OphKJxKQQhDb9GdfDF0Kdns8mE4n3hDeFN4RHOn9dcr/r
d1m4JJkPhGPCUSErmTNCmVDK3XPC2+iYkMyk8JFwWWjQWaNQKBQIp9OJRLNQ
IhQLTT4TioUioUVnk7L7lZDR8/up6INtV+LLh0IVPo0Io8JF4QLPY6l4z2ct
yRijY8vgewvPjsF+XhHeEWocn2yeEcqEUuE8eg8LFcKn2PTZeXxxnNX45Nin
0Gnd3yiOO8KAdPUL19HhuznhX+EJPtv3G8It4nTcPbrTS86cO9fmLWElxBr9
KpRL7gVhUc/3hAOSW9f/eT0f1HOesKn/G8Jt3Z0X/ta7DWFdObip3xvCdWrR
LJRQE/syTpz2aSFEv23Ttv1ughxYxrVuopauuXNxR7hKTnI6+1z3xuw3veOz
cnooR24qsDFGTi5RU+chS23cQ/Y1Sy/aZ9fOPZShhs6Fc+DYnRPX4rYwmI41
uR9iTXLEdkpnDUKBkC9Mh1jDfurQLnwsHBfqhWtCRzreOyE0uqeFIqFQ+DZE
Hb7rWl6mL2romSP09R5ht9AlmW50WNd3Iero4fyhfVSc+cKSnh8IHcl49pCZ
9mzfch+4J1Xrk8Kq/v+BbGcyzqXvTEvmyxA5oY05qBVeFfYLd30uu3XCXIix
XyNW56CNnNQj04DfheTwMDE6thcdn2x20yPulUpm+yVyUIMPtr1P6EzHnDSi
+yhzv5c7ruWU8DU1da85pjZ67iJ9U4kfTcxRMTW6imwdcV/hXi1+OHctwp8h
5vAYc/4yPlRRx1c4q4ArHOuuVKxZDzZtuxyZXczsCXrHvXYoHefAs/GZsMOs
u4aunWfetesid65hNTnbhw/uxU5yZb0XyMER/MrDjnlnEz/s65x0zSbjO/vy
BG5ahzfMWZ6T49T+ELzi3LQKayHmyJyzjux95mYATvXc9shGLxxjrvk+xB7v
ps4/hHjWRRwb+DmCD8+E56nIK+baXng1C0fa1iAcYJvbktmBo8xVRfBaC3NR
Tx/nwRObxD2KzX7JDrA3suw489RjeHQHnyax4bw9hbPMXY61n7vN7CHr8F1z
8aCeP2FHeS/tpY+W9PwA24O8sw8J+ZhKxx53r2fQaV0jQrvQJ6wrh49DnGPz
gHl+LRn7xLO1qucVdqB1jHBvP7NvWcvUMdsH4dJS7vRhy7VIMHdT9KBtWPdy
Ms6oY3Isi8kYm2X8bgnOts52+qiPOP4KMYZiZFqZw93wxIJzKPwYYs90wsN7
4AXbWiC3Q3ynnKV2njHPlmvoWm2l4p5zzVqJy7lbg0PNpTfZlSPUzbvTPpoT
68iNd28+3zmeW+/qAvZgFbM8j91/QtzBzrP1evcOJyNnmju36KM54uxm7n3X
vv+HDu9888iM3v0WYm9MhMjp03CMZ9yzPYMd73rvYO/dGf3+DK+3M/v24Sm9
7Hc/hcj5llkiRsf2CM419/qbzTNnWdekgz0xRFznqMEwPuQ4m6dOPcRYCxcf
oA9L2PXPmTPHMUcuOpmRJebEc2Ze951nzH0RXO/nbfpuhb4Y5O4yz9ZhLnSP
zWPHtTNnnISHt9AzTs904/tpdpq/O/ztOkEtVpm7YfqwkL2zTd+5Zq6L97J3
+azwCzv3Lu9midUy/qbJwAGeuwXmqhc/FslJP2crzPEQMVu3a97O7nYvedeM
hthTznUZup1zfyM00NOu+/+Ai67C
         "]]],
       Lighting->"Neutral"]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJxNm3vczVX2x88533NcEkJCkuSWENKTiIhcck3uSUSSQQghuUYqSY1xKSNj
qpGfkNSYwpRuM7pQUUYqNSqVcklCJb/Pe9bnefHH53WWtdZee+211157nf0c
lfoPv/72TCqV2p6kUll9NtHnVcKdwhhhrHjjhPuF+4Qxwr3CTOFOYbgwQpgq
TBEmCpOEOcJDwgThbmG28KDpiZbBu8s6yGYJrYU2Qi+hpzA6FT4w9wzLrhVu
sA6+jRcesI/jbXOWea1sE1s97OtIYZp9hh4lTDfvAY/9s7DINh8w/Zj9uN/0
o14Ha/2LsMT0w8JS82ZbB9njts1aF3sOYjXZYxi7NBtrZq1/zYaMuD5inQdt
83HbmOJ1/NE62rJUYaG+UFe4QKgsVBEqCVVzqVRFfV4oVBOd1qc+UgWECiLO
F84QXVSoKPpgNvKioHBIRCF9FhHO9DzQxYTi5p0tlBHKCqWFEuZBl7RuCdPF
PSdzMydzMydzn4XvoisJpUSfg8+54CGDh4zcLWRfEuugW45158KXc4Xy9ok1
s/aqQvVcxKYatGOEbgV88ZgKjmEl86pozHmpiCGxnOq8mes9wCa2LwKi/5wN
v9iLxdnwCd/Os60aQk3RtYQ6HsNYeMhq6PNifV7Cp32tYRqf2Zt6wqXeI3wh
l+fZJ87qAmFhKs7sYW34T0ItBa6m8GM6eNAXZ0J2RKidCZ0fiIPmP1e4WvyT
+vfvQgvR1wifpEIHWdN0nMvewlBhiNBHuCkVdeJ24WfpHBXqyPYlmZD1TcW5
RKef0D8VZ3KkZf1Mo3OjbWJrWCp8xSa28PlQOtbEWmoIPytAv+nfl4k+Kjqn
zybCVUIBISs0Ng/ZL9K9VJ/1hV9FHxOOC/X077rEQ/R+oZroqpmgDwjVM8GD
PihclAneUdtgLGv+VnQZcpTc1r/3pcMmtipnYixrwHds/EU+D0hFTaA23JKK
GkztHZgK2a2pqJHoUOOodYOF24Tu5kEPEpbIxvUeh+1u1hlkO11SMQe2u6ZC
t5tlA7yn7C01nFpOnaImUgvnC52Ezt7Dft4n9nVKKmrZUO/bJNsYZp3J5nW0
jX7ee2p9W+fUDabbOQ962y98H+cYDPJax5t3m2Nxl3nQf0jFnXOX6SFeCzxq
7gyv5YlszHGj/cR3aizn/Al07Ut75yR6veznENtG1iEVed7He9PLssGWdfRa
0aGOUUcvS0UNb5mKO6yH9wkZdTPPOpxpznYD5UxeOvICHnT9dMiWCw3TofO/
2kf+pqNOUceqpIOHjLpUOR08ZMeF/YrDOuHvwjHzoF8QXhL9ttBE+lem446g
Dp3HORR9jj7LCWXJe+HsdPCgS6fj7jlXn+XTcQ/gKzaxhc/kILlYj5ohnCWU
FEoJJTj7kh0Vntdca4WnhX369//pc3k2ZPiMr+iUtA+lbYO62UKoTQ1Mh+/w
oFkDMnxgbnTwhRgT23qOIbGsnj5Vty/i/KajpsP7nywdMtbIWiuk487jLrgw
HTEn9txrF4iulI577DlhrfC68BrrZC3Cm8Iblj1vGp1nhTXCq8Im0895LLwn
FYNl+vyH8JToJ/X5N2Gd7XJXPO19IHdW2ya2XknFOaf3WUGMfQ6e9Fj8mG8d
ZMyzyjYY+7Kw0jzof3quF73nzMndfz65l457frfwuXBIOJiKmBE7dNAlRsSK
GBJLxjCWGBLLb4TvnMPk7We2ia0DjgGx2EwcHBt8X+8Yfeox6O63jLVvsM4z
XhNr2WjZM6bROU8J/lsq7kzuzn22syIbOfq96BOpuGO5R+mL6JUaCJenomeh
D2koXGFZWdPo0JPQm1wpNEpFbSjpsXkee75lDa1Ln9PYY+gj6C2aCVelouZQ
V6g716Sit2ieinPAuahrHWRXp6KnqWv68WyMZd5WtpFnX1qbhw663CvcRQ28
Fup8G+s2MN3aMvxua51G9pu62s6yRqbbem30RU1OWyOfHTymidfJHdPRNGvv
bF5j63T0GNbOndjVMbjaa+/mNVzjdXY3r4B7i6ZCwUz4crHnwS53B30ZZ4az
Q27QhKfTkSPI6N3+Zh1yhdx7Jhs586Xor1JR944Ie1LBg/5J+K950IeFL8yD
/lHYm4ozwVk4ZtuchZXZmONr6yCjdn5uG4w95Lm/tuxnz8Pcz2nsGuEMreNM
zqZQxHQxobh5h2xrtXRX8d2Cuk/d5S4wXUgobB53Cz0mvSV3DLHKCIljxnci
7mTu4qVeC3NgmzX96LU/m405i/kOKWGfsJX13Ng84nVxl7AmfDnDa8Gnw14z
a8Um3wv5HkcN4NwX0p43E64WCguJcKV7THpN7oqbhL7pU/dCP+Fm3xk18+8Z
YYB1+lrnIt8b3YTuroHcsdxTXfFN9A36/KMwV+jtNbG21kIr32k1bburZcS5
jXW4i68XuqTjnirodV9rnbRtYqtlOvqGPl5TNd9jzHtjOnoIZPOE+dbhc4uw
VVhg2bvmzfdYfP+TbdymmA0WltILZ8KnLo5BBdf9GzyusmNCbHqk4x6oYjt9
7GtFy3qmT92zvWzjQvN6moeMM5n2Wls4FuRCW8cEmrxuZx5jHxYesQ18nSXM
ts/sEXF/UPgpGzqPeM9usG9zbKOnxzD2Ia+ru+k51qVHolcaJYz03j3gObvY
R/yaJky1n+2F6cI9lrUzPc2yDsIM60B3FO41D7qTMNM8eqjS5iHjTJXwOGzR
59H7dRauc6yKW9bOY8tY1sk5QW68Jyy0rVK2jU36MPquwcIgj2HsffaptnWQ
DbSMue+3DmPp3YbYBjS98jDziCV1Zoxjyj4tErYJr5teLHxo3gDPs9gyxo0V
Vgsr05F75DJ5Tg529ZhFtt3P63w0HTWgr2Ow0LL8M7PAspH2a4Ww3HONF9Z4
zsFexxPCUvtGLJbYx0HWWWreKPu80jaxVU69SNlc2Jzufd8obBAmCZOFdcLf
TU8R/mEeNHn2onkTPQbdF4QJ5kGvtS5595LHQJOL68271/v6svBP+3Kv6Y3e
U/Z2k/CKx063r+s99j7LsDHcMSR2yxwr9v4px2yYdZaZt8Sx2insMI3eLvPW
ei18h9/nGC+xLjnCOf63sDkd5/wR02+l48xzjv9lHXTJlXfSURPneV/ZC94M
vvUYxr6djjo51/Q7HktteNM259g3Yr/fPq7zvvDOcMCydabRoda8YRvYIifI
ja+EPemoK69ZB11qzavmIaOmkdeclSPZyGPO8vvpyPHltomtLxxjYr1b+FR4
3jEllt9btty66Kx2TIjFXu/FUx67y76utgyf+c7b0HvOvtJH8FZFnnN28qwz
3HuP35zrIpl4N/rKtirq3xUywS8qtBRaZGJthXzXs0ZqF31fIcu41wq4F9zq
fc357WmL18TayunfZWy7uNDac5BH5FkJ87c5r4ralw+da8U99gvHtnwmbMJn
7LW22dr0VGGye9U7hbHuWeldxgnj3cM0tWycZS3s10Rhgt/NxtgGti6zDrKh
1m3tuRjTTuggzBDusS/tTONTJ6GzcL8w03QXYZZ5Hawz0zY+dQyJXelMxIo8
KOV173JuICvlPS1iH/F1r3OJtzj2eI/3nL0mht87F3mbqyLw4HyF0FBICyfJ
H/OQ/a5/X54JHrKMPhu5B6QX5NycSIceZyxtW+igiywvEzbQ4Q2St8g8y14z
78Rp5xQ95sqvIyn7Rp2hTlL3eIf82TS18Jh5b9lHfMuvI/Sp5Ci5Cg8ZPGTs
RTdhtvdko+fANm+x1N2Npn+yTyftE75RK37xGljLZscAH96yb9Ty4/aRGsKZ
ZN94y2XuHsIc+wDdS3jEvAHCLcKfhUWZeMv9gzAkE3F8QDYeFVqpns7Kxrt3
LY9hLG/Elzl3j2VjH4cLI7zHV5ge6X1jn263Drq82fJ2e7PQz7Z5lx7oOXiX
rum5+tsnfBvmPc4zfbttM5a37VttA5p35EHmQfO2fJt59OX08dzLk0zTt08x
D5qecKp5TVwTqYX0Abzp0+dyT9+djjt0g/eSvxPQB7ey7YnWbWmaMTW8xv6O
AbWWvx3QU1BzX7JNbPFOz13Evc+b90HTL1kGj7qZX5eoqdUdY2LbNxPnnjpH
nejkXCituc7ORU70FvoI84S5pm8S5pt3o3WQ/ck2sb1QWGCadTxq3s1e22Pm
9fdeLjLvJttY4Dlu8b4tdk4O9L49bt6t3rcl5vE9cXQmaiq1lboxyjxk1Ik7
zENGjaJWcS66mKaO9TCPGkjdo8ZSa0s7ZsSqg2WlTbdzLMvbVmfbquS4YrOa
96Cv18oZGGmf8K2qdW5yrBnL3zrYE2xUtk4fx72Keb29F7y584bIOxxvlbw1
LvJ36xX+rs3fPVf5O/cV0mkttBEaCo2Ea4W2wpVCY6Gd0F5oYp021kG3RaKc
F+4WJgg9hDnCw0JP4WqhuXCXMF54Vz5uEQqIziUxR1vPwVzvSfa+UFiyQknQ
HwhnJMGD3iYUSYK3NRNj0C0oNKA2eU2sLU+4RmgpXM7bmXCd0Flo7rl78b3f
PrQz3dtrbip0FDoJzYSrhA7mNXVM2puH7DJi4jmZu671GFvPPrS0j/h6qX3C
l/pGc9vA1hKtaSmx0P4XzMXatwtnJhED6A+FoknwoD8SiiXBe0P0v4STwgnT
m4V0Erx3hLeFhN8vCL9ozk/077NF/yp6FzkuurTwaSYAfY7wmegjwlGhjv5d
Wzgk+rBQU3QN4bVM+MDcvwrNnBPkwrgkxh4X6iVh47BtYgsbmzJh41frvZwJ
3nHPu9G8ox63Q/iPcJbGFk8i18gRcoOcQ7aTc52Ezkcegy4x+1h0ySTWzNrb
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
TuJMzTL9rnWxiW1sYpszy9l9LBs1+f8B6AZCdA==
         "]]],
       Lighting->"Neutral"]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{251, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 
       1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
        1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 
       1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
        1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 251},
       VertexColors->None]}, 
     {GrayLevel[0], 
      Line3DBox[{1, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 
       1318, 1319, 1320, 1321, 47, 44, 297, 353, 409, 465, 521, 577, 633, 689,
        745, 801, 857, 913, 1335, 981, 979, 977, 975, 973, 971, 969, 967, 965,
        963, 961, 959, 957, 954, 898, 842, 786, 730, 674, 618, 562, 506, 450, 
       394, 338, 282, 5, 1},
       VertexColors->None], 
      Line3DBox[{4, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 
       1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
        1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 
       1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 253, 236, 
       219, 202, 185, 168, 151, 134, 117, 100, 83, 66, 49, 4},
       VertexColors->None], 
      Line3DBox[{46, 1322, 41, 38, 35, 32, 29, 26, 23, 20, 17, 14, 11, 8, 2, 
       1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
        1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 
       1202, 1203, 1204, 1205, 1206, 1207, 1262, 234, 217, 200, 183, 166, 149,
        132, 115, 98, 81, 64, 46},
       VertexColors->None], 
      Line3DBox[{252, 1308, 255, 324, 380, 436, 492, 548, 604, 660, 716, 772, 
       828, 884, 940, 1293, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 
       1345, 1346, 1347, 1348, 1349, 1178, 953, 897, 841, 785, 729, 673, 617, 
       561, 505, 449, 393, 337, 280, 281, 278, 276, 274, 272, 270, 268, 266, 
       264, 262, 260, 258, 256, 252},
       VertexColors->None], 
      Line3DBox[{982, 983, 998, 1013, 1028, 1043, 1058, 1073, 1088, 1103, 
       1118, 1133, 1148, 1163, 1350, 1177, 1176, 1175, 1174, 1173, 1172, 1171,
        1170, 1169, 1168, 1167, 1166, 1165, 1164, 1149, 1134, 1119, 1104, 
       1089, 1074, 1059, 1044, 1029, 1014, 999, 984, 955, 1278, 1323, 1324, 
       1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 982},
       VertexColors->None]}}},
   VertexColors->CompressedData["
1:eJztyKENg1AUAMCXEjyiCzAGgvxg/gAdgQSNwyERTWVVp+gQJCzAAJVV7NBu
gTl1ydX9eBsuEZHLiOLvdn9P1++Wlu6Vn489rVUzt58jee+9995777333nvv
vffee++9995777333nvvvffee++9995777333nvvvffee++9995777333nvv
vffee++9995777333nvvvffee++9P/d/ML7Wxw==
    "],
   VertexNormals->CompressedData["
1:eJztmsFNw0AQRVcgCqGS3CiAEpA4U2JaogRuSOwIfzssnj+Tl5vfvll5PZ6v
RMrz28fr+8MY4+VpjMcxfz4v0/U1KJtcefP+is/73Ho/q87FPuzTeR/F5/VV
9xnqxHmOnvfeePBEv+jLOTx49MWCB4++WPDg0RcLHjz6YsGDR18sePDoiwUP
Hn2x4MGjLxY8ePTFggePvljw4F32cbXfvO52bjj8B9/53qv9ju4D31l3tG/4
+FsefC0nP1O5rDOZR/xavl3OdOXkZyqXdSbziF/Lt8uZrpz8TOWyzmQe8Wv5
djnTlZOfqVzWmcwjfi3fLme6cvIzlcs6k3nEr+Xb5UxXTn6mcllnMo/4tXy7
nOnKyc9ULutM5hG/lm+XM105+ZnKZZ3JPOLX8u1ypisnP1O5rDOZR/xavl3O
dOXkZyqXdSbziF/Lt8uZrpz8TOWyzmQe8Wv5djnTlc/PfdH84+P/hw+Hw+Fw
OBwOh8PhcDgcDofv4d/r1+1rOLwCD57ZvMHhcPhZ/M85aZbv1bj63nX2/XTn
6n13uc/qfNX/0O6d8xxv47+tH/2dC9/m8Xl+Aepckb0=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]]},
  PlotRange->{{0, 20}, {0, 20}, {-5, 5}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6524588476475697`*^9, 3.652458962753153*^9}, 
   3.652460497504936*^9, 3.6524643213164425`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"colors", ",", "grad"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"colors", ":=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "i", ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "1", ",", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0.1", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"grad", "[", "x_", "]"}], ":=", 
     RowBox[{"Blend", "[", 
      RowBox[{"colors", ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "-", 
        SuperscriptBox["y", "2"]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
         RowBox[{"grad", "[", "z", "]"}]}], "]"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6524641213680058`*^9, 3.652464252129485*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
xPsVdb5APJRAPJRAPJRAPJRAPJRAPJRAPJRAPJRAPJRAPJRAPJRAPJRAPJRA
PBQfD6mbBtZ3CazvEljfJbC+S2B9l8D6LoH1XQLruwTWdwms7xJY3yWwvktg
fZfA+i7Z1/eUBPJVCeSrEshXJZCvSiBflUC+KoF8VQL5qgTyVQnkqxLIVyWQ
r0ogX5VAvio+X6WuH9h/SWD/JYH9lwT2XxLYf0lg/yWB/ZcE9l8S2H9JYP8l
gf2XBPZfEth/SWD/JX7/xTmJr8+A+zoMuK+3gPu6Crivn4D7Ogl4oO4hvu4B
7usb4L6OAe7rFeC+LgHu6w/gvs5g53eunkDd7O9af3B1MKEO5updQr3L1bWE
uparXwn1K1enEupUrh4lgXqUnd+5+pJQX3J1JKGO5OpFQr3I1YWEupCr/wj1
H1fnEeo88Mnv8MZT8s6r18H4fGfVpTvrDf0lOnrtyCUtKz5jfH7Qp2Hxobmn
osqNVxRsv2Gg8Undul33K/6576I3jM+t62fXz63/a/RhtTuLKtUfZnwe1fpq
5W2zp36eN9z4LFuzwptzu52O5u8sv+u+Pe8Yn49pfWmP89t+an+F+3ucnldq
kvGJ/a93/epAYfJd4xP7F8753VWvNHvH+MT+n+4/OqTDB4OMzwK1//jHa3t0
u/dZ4xP7Tzy54c0ZbTsan5/Mv3/i3G4nogaXTyyakJuJt/zm396j/pRHBhuf
3184fV+9oSejUg9OXrvjulHGZ5nFu84dmvtj9PybL/RIjJ9ofFbudnHNgrk/
Rr17v7f284pTjM/bK9Rvnlv/p+iK3BfLtT71gfHZ5PO+z3Qr+Cn6eV3tL+pX
n258TtU6UnMXb5eo/d1/LPb09hfzjc8tav++jaVuqFXxI+MT+5PFO3U8et9U
4xP788bPm/eXEuONT+yvMvbxcouavmF8Yj/n+8SBpmr/icfuLrZxYGfjuWTT
ya90K0hFFZKjc29olMkffn9q67S53Y5GS3cmvpnzxVjj2fZbRf8eXXn+FOO5
Uau6R+sNPRa12fLzieeqfmQ8dyzR65KhuT9EA2quHPD9gnzjue+sqX8smPtD
lPfL/jH9f1lsPL/9lx2P5NY/Hg3cOGTymEWfGM+HtY60weUPpdT+xBO3l/yw
zCrjuaLa//6zf1rXaMQy4xn7H5zWYVnFLxYaz9h/V2HBpFv/Mst4xn70KvCM
/Zc327uved6bxvMwtf+ydgNarruxj/H89pl5dDCqsK3XXaXaZ/LhT8/Ml++i
uqXyKhV+OtnsS8+LQ9Hhpos/GlBtvvHMb+lbH7y7f5dPjefEmC2/1Bt6JFpe
7Zq/F+SsMJ4X1ytXeWju99GGN565dctTq43njT/cfW/B3O+jOgceu+TyNWvc
unYgesblw++o/RveOt262MEtxvNStf94cv+6waPXGc/Yv6961f3Hl68wnrEf
/RU8Y3/TwT+1WjR/lvGM/Sf3bpze/dN3jedNav/qxXdWOHlksPF85Zn3/k1U
eMukei2mZvZ3D5x5v7uj/Cmzex0eN8d4Tr/Hb6OlF+0Yv3T8ErNvqp5b1j0y
q1PZZ1YZz/xu3HF88suz1hvP6Xm6L2rab+6LD0uB8Zyej/ujIaffenThy9uN
5yNaR1rl9ncV1f4/37ei88zJu43nRmr/w9L6u7rNdhrP2I+eEJ6x//tNJccV
v2OF8bxZ7W+h/g/P2L+3+sCbH1ozzXj+o9o/8fxdie49RhrPDc7Ysy56e+nC
eyrNed/lwxui2b1/nvdr94+N57Jn+t8crb5r/cT7ei03nh/Xc+Dqm6vefHnn
dcbzsjN+tS062Gf0zBYrtxnP/BYrtjf/6vrfGJ/fax2ppqtLNFY7e826+c9P
FO03PqepnS2HVfnywvnfGp/nqJ3Nmw5cfF25HcYndq6uurf/h+XXGp+fqZ0n
ug4Z9PDfPjM+sfM7jfPwueSMP++Kzm2xIvfYjXnG584z9udF9w8bc375FQm3
j5sdjStq0++mCzL1ru5n7PlvNLrV725c8PdMveuYnp/37pSzqdlDG43PmWfG
uyzq//aO7QP773L1Ln4z9a4SE9P2fF30aN1nV2bqXSfVniZ/vGnWquGZetdT
as/a2U+f+8KxXcYb9mwu/lqBrM7Uc6arPWfdV21+iVpfGm/dzvSzIvrmxamb
h7XL1HOu1/lUVfMTeMtl3igerzOskB3aD7z9J/1c+bVu+rnwVqT6gvVqJ7wc
CNS7+J1Z46IHR55/0Phpp8/dkyyaXH3GXuPnPX3uAOUffnhuP31f8PNomk95
V98v/GzX8/GJ6g/mV2n/kXrqP/CTjp+7pKz6G/xUVnv3q3/Cz+K0P8sP6s/w
0171HavU/+HnIHUwF8cW6XOfLHn7j7t778msy/pbQucv/PDcozrf4Yfn1tT4
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
X/5E1DFZuOC5KSNsvJYnv/DXGbOb/8vmD/htygPjhY/ruuwb+Ke2c2284JdO
apvXYNBiGy/4uqtemvbDts9svOB1+7Xqs7Hcl2a/9fOPNf8q9a85Zj94i3tf
rTVz7/tmv313TceF/eCz9P1iJ+O49NaSH50zZqXZCX5qnNy0cmtGhwSe3+Ce
EU2eyNz7Br9Y7cQe8KPKP/aA44c8F7vK/Kn+wdff22rPBW/Y7o62c87ZZf1b
3qvvnf7B89T/wXnOf3W+xL9LmcjP/l3KRH7271Im8rN/lzKRn/27lIl89JPx
+wiJ/Oz3ERL56MHi359M5Gf//mQiP/v3JxP52b8/mcj335+096xxJv5dykT+
cMePfbepTv/WI+7M3McHrz+2+ZXDd2W+Pwne8uarN33ZKPMdVKvDF7Vp9fhl
mftW4BOTp2qebrjX4gD48pW7Hl5TO3Ofy+7fqJ/Aj32/x/kteD2dd/Bj+bzG
H3gAb67xmfFi110Xn5275njme5K27nxaZdOomzJ6WfCXGp58d1/PrWa/6Y7U
/7Ef/Kzx6fmI/RYXNZ5gP/iFGlexH/wGXXewk+ePqlp3/LIaX5qd9h2jZXc/
17HBOrPHvr+lcQN7wK/UuIc94GM0/mMP+CpdH3kuzxmt9uAP4GuUT/wVvLX6
FfbYvkDjM/aAN9F1KpNXpfE/6TrOc+nvHn2/PBe8kfo5/YPP0PWR/sEbav5A
P/x3V+s8su/hKD5Z8xDmoZ2nu+/EMi/fc+39vQ/82L4boc+19V79mjyHdnav
QcdF/+DTNM5Y3U1x4gD+Bw6fPNfWVeWf54KTV9g5seKsv9jj7wVgDzjxB3vA
maf4JTjzAjvtezbqt9gJTp5j950VJx+gX8N1HmG/19vbvWPF/XwEZ774ulBz
rQvFv6+yw/JP7AcnH8N+8LUaZ7AfnDyB54GX1TgGz+Bv6v6CcYG/rPGQcYEz
3xkXuPcf5lNTjc+MC/wSjeeMC/xejf+MC3yRrheMC7yBri/YAf6Zrkf4G/gM
dx8Z/D1d1+ycQPHJug7CA/jDLr6BP+DiD3ium9f2PSr3vR3sWqB5EbyBH9B8
274Tova+q/kV7cHJw3keeCPljX7Bz1c/oX/GTX5I//b9Ic0n7bsNil+i+afV
5RW/zsUBu6+v7xd7wIvpOmvfVVC8qs5T2+/pe5ipebXdW+M7c5qHY6d9l0Pz
dvwN/GJnv9dDYj94ffVb7AffpPMU+61+pfGH8YCzPjIu20/ofodx2feKdH/E
uEw3qONlXOApfV/MI/BW6ieM1+sSGS94BbcfBL9A4xXjBSffsHqi4qz7xpfi
M3VdgwfW4VGuPmD7KrcvBscf4AEcf4YHcPbp9h1FxfN1PjKfbR/jvmvh9Yfw
Bk6+Cm/g5IH23TnFycfgDfwOXZfhDZx8xr6jqPgUzUP4G17hM/79zL0R+bDF
L+WDuMp47T6L7o/A/fmv3YtXnDhMvzz/TffdAPA1ui+zuKn4F2oP/YOzT6F/
04fouOjf6/bp3777qPGf9v5emJ2PKs5z4/+/Bon87P+/Bon8pNtvYg/rzv8B
jIwhTg==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
dzDj3A/7vtg3xjYlXNfUgI8Lnx9tAZ8YrmVqakz4zMjc8XEG9qnY68H1kvXo
HQprbcrPa8Gtk/1mZ3gJ9nnY28Itk33rTnCrZH/aCW6b7Ae7wi2SfWtHeG6y
fqH1cEGy9iFfPS/5XEdro1myhq7+5yRrNIoRl4R19SbwwrA/bwU3TdbZ2yjO
J9fGyseuDPvzlvCAZJ1IOWr/5BpeOeqC0ncpfvVNrsOVXw1M1piUuy4Oxwv1
vygcL1prXyTX5Mo590uuq5UL9Uuu25ULdUvOxZV775tc2ytPOz9ZS1LMOi9Z
b1JcvjBZt1KsvyhZt1Ksvzh8jtAY/qOwrq392yc5N1Ju0zE5xuwiX5F8XrKr
+gmfTTRS/+HzEc3vpfAsuCl8TRnftY/uK3244sWuyZqpcmzVsKpX/lEumpyr
KTfukBzPusH7JGtDysfODZ+PbAt3ST7L6a7vTdbUlJ/smKwjtFesT9bglMM0
T9Ya2um3w2ty63WXJ+ti8gltkuNul8Iah3SD7eSjks+xesCzw2c69QvXaFr/
2gftk+PuzthOC58T1YY7J59p7QbvlazrKf+cG9Y9msE9knUT1RGPhvM9xeV/
Cp8NyJe+GdYElHc9Fj7b0lz8Vvgs57/DluQzbO3rt8Jnanrmutin5D5jqglP
yO1jN4fH5n7OLeBxuX1FDXh8bp1c53San9nYGiafaTXHVr3c7/IJDZLPrvRb
tk0+J9PaUN2yvuJa9c/C5x/y/38VPiOR/9eZrOqe+Xzu78JnKoqVOhNUTSwt
pHHyOZz25ialvi2fUz/5HE5r+IHwuZ7WzHbJZ3La178WPuNRjPul8NmP8u3t
k8/qtFbvDOdCypWy5L8JkD+sWurh8qtPhvNe5SFPhc80Nad7J+u2qhHuD59d
ag0MStaOVfM+jf3xitdq72QNV/XCnskaruqF7sm6mOrKnsl6merNXskanGrw
PZK1YNUUOueWVqa5aJJ8XigfsnXyGb/WbaPks0b5K52h69w8+Fy1Uv+XD98o
+W8FFGc3Ls8CFDtqJ5/fa50/yGdWVuwHaiX/TYD24AHJWqdq8MHJmqbq+kj+
+wnFuzz57y0UR1Ly3zco5lZJ/vsJxeUDk7VR1f4vhXVd1Tu7J9fqqtk3FD6T
Uy4hXeioijW/G8K5qHLFG8N5r+KCzl2kZakG198SKBe4QucG4ZxZMUVn/Yqn
RVjjUh2wOLl2Vd74F6+XhfNw+Q2dNUvbkf4nXVE6lGqPCYVrbtXmOpuTZqR8
5dpwXiFfpOfQ80hjk54sjWcy7ce5tRNpbtqLqgWknb2fWzOUBjQ6tx6sv6EY
k/tMUPqU9ob2iPQc1RfSsBS/lyffpzgrjUtamrTP65P7kqan2lw112+5dUPl
BtK/pU9Kg5NGdmTyc0jTlhat750oP5x8fqD6bkX4LF5xWT5Gdb70N9VmqtF0
dnZX+JxdfnVc8t8oKEcam6zLqxYbk6zLq0aTNqVcaxM+NzpZ71bNKN1SfX6b
W2vQGOpcfXzy3zEo15KW9V8el3xOIW2xSjjv0W/877fm1n6lD85MPp9QvTy5
nBf1PSv5vEG186jSH6qGvYW+rqs4bzm69KWqT0eW/lP59k3hWkw5zP8Bz8Zy
dg==
          "]], Polygon3DBox[CompressedData["
1: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
P0JzB2XnnsM4U2o3Uf9xwTGd2M6cHsJ7FP7sIRXnX3Ay3HxQxf4Q/g9+GPp+
QHDOgZ7biOcUPlW4Z/kOzxQ+tPC75R2fJXxY4XdPTOgv3KJwrCAm9At+ZmIF
MWRQeT6JLeQvQ8p8Ae19TMXnF71LPsM7597No9eCd85n949eC9aQZ2kWvba9
hXsJdxfuVrFm6wO3CPeoWOOh9XoJ9wTrnW0Kf6KphQcKbwa/8p2FBwjXRF/p
6ivcNVu7r4rWlzwjuVeb6GcfINxf+GThE9grwicLdxPuSryJzv3xAPD++ujq
rXYP9XfX+FHCrYQPFm5d8ZrsKLxV9FrdEu01cgY4Cw9F565wCtzCmu6u9g7R
a31PtNcGJ8ANeJrfBnuKeJ3ksGuFlxXObdmjeJPcg70L/5Krb6b7HAifoQOE
q2hOTPacPlX70cJeFOJgI/a3rsCzJPud2+tzB1fsMXwS7LHiPeCRfRycU+Od
jUQjFs5ZOE/s5/7l/mH/jsl+NvY0e3tU9vshJ+H8EkPxDsjhia3ESLwCPAVi
JzESb4CYTOwk5+f94QngJaMB/izjCdqAmIv3gKdALMYTxTvFf8U/IF9GG+PZ
oV/I2deX60suv4Wuzwq/M/xXPM9vyvfN+uN5fl2uD14qnibeJxyF14lHiVdJ
TMfbhUPwOuEguAVP4sdy/fGC8SDwItAQeK//eTLBnI6XTU5FbgWHrtDznKzr
n8Ixn9jfP9onRbOh3eZW7DPiN/bFm+N9ROePvbPz/xDsSfVSu2n2XHLMYWov
1Pz3ojXuacn5XUaL6jpN7a/UVy94z/QT7pgdaziTnE081UOCPTK81vejdSx6
tr/G5uv+b0ZzfHf1j8j22tFw5MPf6+qq9q7E6HL98LbRQKvL9/FP9DPxbOg/
vFdyanLrBXB4tMY4lfiUnXsTEwaU+Qm57PalvuV8ry3PF3yEB4QXhAbEy/5F
1+fsDfiBWJPNv+Sc5J61snNhclpy25rZ/EnOSu66ifDAwjkt+SecC/eOUt9H
xLJs/iWnJ7e/reKcPxHfNHaD8FvRmq1H+X3QutQoRghvnu1Hk5OTm1fPznfx
jMhvdsrWt+SI6Afy1XXEtMK5PpwGt3GPD3lXandh70b7z2gGtMNI9mN2DooO
qIv2L68RhXNYxmoI9yzsYZFP4c9+z17S1U/3ma6+5dE56Q7J+2ed2r/puiD5
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
          "]], Polygon3DBox[CompressedData["
1:eJwt13XcFlUWAOAvaRWRUCQWBVwJEelWCVeQlHBREBVwVUoEJFfpkFJCpJVQ
aSSkUbpBxcTaNVYljVXWYp/zm/ePA/c898y8M3fu3LlfqQd7t+mVkZaWtlNk
iylZaWktwej0tLT28g6ZaWmXsS5sHOvIHmUjWXXWg9Vn9dlk1oKNYu1YezaK
1WA9WQN2K5vKWrExrAO7h00QvbS/46fFKTU3iKHaS9UN1TdDzdPsJtaVVWPV
WSnWj30rnmAT2Ro2V/6+ulVsAxvKSrJ2rCy7gW1kr7CT7F0xyCDM5MP0n+Fn
xcdqJolm2sPVPC2y1D3FKrKH5A+Ki3FtYhRbJR/jHPOcazirxLqx6qwGG8JK
sLbsbnFOPlrUZX3lj4tL8jvF3Y4ZIX9PX1P5GFEv7pU10tfY+cay+qwfa8ya
sCvYg+w+19pb3kccZQdZVoyxun+xcayBvL9jm7A72HjWiA1md7EW7BnWhA1l
LVhLlp89xDr5jcflfcWzcc1svLp71XWK32ZF5Hm1v45nIL9cPKB9r2Mf4z1E
OTY5npfaC/o6yieKO7SHsZb6Wqlry76P6+cfirdTz6hpRjJ2MYYtnPc51pZN
kN+n/j7H1mEvsqNsCdvKXo3fYfvZfLaEVWQj2Uo2ms1lNdkstofNY+tYFTaF
bWXT2Kvsr2wYezk9mUsxp1ayGewEe4WtZhXYCLaCjWJz2Go2h73HVrL1rDwb
zpazkWw2W8VmZyTzNubvze63MpvA1ssnqVusbgWbzo6zl9lKtpDFi7845jwb
yyrFHGSr2Vg2ny1n09gxtpStivkc76FYoK+HvgJ+d5h22Zhr6m5Sd7P+qmwq
28ams2Xsn/Fex3xhlVglVpstZEfYYraF3czGs3VsIlvE6rHVMW/ZOnaQLWJD
2Fo2nj3HXmKD2Ro2jk1j1dlzbAebyVawN9jr7Av2ZYyr+6jFFrDD8kXqNqtb
FnOLHWAL2FI2iOVn9Vk98UVcBx8sWmufV9fG/y+LsereUDOLLYiaeBdYc1aS
lWI12PNsN5vLXmNL2FNsE5vCOsf6EOdk77AVbJe6+mxNrFNsPTvElsY6wXay
59nCeH9Fb+1/xz2Lj2LuiWraj8V96Gugphp7lm1nM9hylpe1ZgNZU9Yx1mzW
mA1hzVlzdlZcyRqw3KyoPEPdLezvrDyrw27JSt6feI9+1feAPE+sd9p9WEN9
d6vLZFViHWAVWF12Or5JrAbLwYrIc6irHedhVVkj9m1cN6sS6zUrJM/WqMW6
sCqsIftInNR+g/8pPlHzHcunXS09+S4Wlp/gR1hO8Sn7kmWxqrGGqavI6rEX
WV/2Snqy5sXal1Pcxv4hr62uqbpc7Hb2CKvDmrF0Vpndw8qx2qxhVrLOx3r/
lr5G8jP8cu1aLKe+q+VH+AGWGc+Wfc6OsUPy7Jgf8ezZcXZYniPulX2RWkte
kO91vn3x/XHTu9gW9l/5EXXvqMvNGrJHWV12F/teFGJ3sMtYCfkFUZA1ZvlY
8czke1khI/nexXfv1uzkHdzEfpT/IGqyLWwl+yY92ZfsS71vV7A68bsxhuo2
sxXsP/Id6vaq28SWs6/Z9phfcR3s4aiLe4l9ifw18VLcv7oNbLu69Wwx+4y9
znawdWxRPG+2kW1LfbuLZyTvfbz/dV3L62wZ+0q+Td1udW+xoyxXnJN9xXaw
9fLz6vazY6y76BbfprieWPfVnGMFtG9Tl0fftfIfRYkYc3Yi+tR9w/JoV2aa
aQX9s5tvZT+zo+wk28k2sAvsADvODrN9LD2+oewzdl5cJW8Y32pWTL5d3Tp2
LuYGO8q2xRiys2wvO8y2srXsDNvDjrA32Wb2EzvM3mb/iz1bzGNWlJWL+xdd
te+NuRvrW6wtWcleJvY0b7Mm8gKim/b9xry/YwbEesO6ss7sCXk/MZN1YtPS
k7GNMS7O+rAXWE82nj3POrPprDt7mBVjvdks1oONS+1NYo/yQmpPlTs72U/F
vmp2ag+Uh/WS9xSzUnubXOw67f7aC5yvn/NNiufIHmez05N9b+x/p7P2bCLr
zO5P7adiXzUndY95nW+/9i7tP2LPqu6U/hmsA5vE7mdd2DTWjj3DOsX3I97B
+AaL+foe03el8+XTbqM9SF2zeAb6N7Al7HO2ie1MjWuM79zUM8jn2APau2Pd
jP2puo/1DxNDxTx9j+rLr+6XGFft2uoKqysrP6R/L0sTH/jvU3aQ7ZFfUvc+
+yTe/czkvY3395Q4GXsNMUh7kbqB+p5Vcz0bwBay/mwyK82eZC+yAWwK+1Vc
F/OJXcvKy69OjUe37GRvE3uc3+Kc7G/qiqmrIL8o/sJuZ9ewGzOTfXudjORv
gPhboIlzFEnde9fsZLxj3H8Qhdmdai53bEn5Nak9VHd1I+QjRRk2kL2k7kl1
U9nP4lpWkxViZeQ/xfGsKruKXR/jJIqy6qwgKy3/Pb4J8t/8vzHWNnGJl5O3
1i6trqp8j9/dxn5hx9i7cS7Wk81kj7BRsciw8qwNKyOtxhqwnew0280+ZPvY
m+z39OT7Gt/ZtfHdj+fNVrON7I+454xkXYv17abM5O+yVzOSfVnsz6oZn9/j
ebKm8uLqKsr3qtvOLrLj7D32p7iRtWLXsyqxxqrLF/so8YG+ZvL/A33Z3vk=

          "]], 
         Polygon3DBox[{{1188, 638, 439, 438, 756, 1116}, {1192, 651, 454, 453,
           765, 1122}, {1046, 617, 734, 1239, 892, 893}, {1045, 616, 732, 
          1237, 890, 891}, {1095, 723, 384, 385, 724, 1096}, {886, 885, 1240, 
          735, 736, 1241}}]}],
       Lighting->"Neutral"]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0r1LG3EYB/BfYmLiu9BNwRJEfAGDUkREg2gpRRIcHBWX0kVBXXVX4ioF
3cRFp+Kkk3Sqkzip1cZ3EfGPUGs/p8P3Ps9z3N1zPHeZb3Njs7EQwpK0K6K6
2eGeH8pCqGeGH9nFLAeZ4ygLnOQEZzgr0+oiF/iDy9zgGre5xV/c5SH3+T0R
QtLcTjnWt7JBnuRE/8w/fOEp//GMr/zLEA+hhBjjcq4u4wUTvGSSVyznNVO8
YZq30b3eJeV5WbnTt7FRHp0/0pf4mwfc4R43+ZOrXGeRK5yPdspFmVJPc5wT
zLPAAebYySybOGwPD+wwt44trJC81OpHWMOvrOYXVvEzKzkUXR99I6Y5wH5J
qftYzl4m2UPjwicaH7pjb2sMcU069v4//AfLJTXv
       "],
       VertexColors->None]}, 
     {GrayLevel[0.2], 
      Line3DBox[{787, 1088, 521, 786, 1246, 1000, 788, 1247, 1001, 789, 1248, 
       1002, 790, 1249, 1003, 791, 1250, 1004, 792, 1251, 1145, 1338, 793, 
       1252, 1005, 794, 1253, 1006, 795, 1254, 1007, 796, 1255, 1008, 797, 
       1256, 1009, 798, 1257, 1010, 799, 1431, 1089, 1011, 1090},
       VertexColors->None], 
      Line3DBox[{801, 1146, 1339, 800, 536, 802, 1258, 1012, 803, 1259, 1013, 
       804, 1260, 1014, 805, 1261, 1015, 806, 1262, 1147, 1340, 807, 1148, 
       1341, 808, 1263, 1016, 809, 1264, 1017, 810, 1265, 1018, 811, 1266, 
       1019, 812, 1267, 1020, 813, 1268, 1021, 814},
       VertexColors->None], 
      Line3DBox[{816, 1149, 1342, 815, 1150, 1343, 817, 552, 818, 1269, 1022, 
       819, 1270, 1023, 820, 1271, 1024, 821, 1272, 1151, 1344, 822, 1152, 
       1345, 823, 1153, 1346, 824, 560, 825, 1273, 1025, 826, 1274, 1026, 827,
        1275, 1027, 828, 1276, 1028, 829},
       VertexColors->None], 
      Line3DBox[{831, 1154, 1347, 830, 1155, 1348, 832, 1156, 1349, 833, 568, 
       834, 1277, 1029, 835, 1278, 1030, 836, 1279, 1157, 1350, 837, 1158, 
       1351, 838, 1159, 1352, 839, 1160, 1353, 840, 576, 841, 1280, 1031, 842,
        1281, 1032, 843, 1282, 1033, 844},
       VertexColors->None], 
      Line3DBox[{846, 1161, 1354, 845, 1162, 1355, 847, 1163, 1356, 848, 1164,
        1357, 849, 584, 850, 1283, 1034, 851, 1284, 1165, 1358, 852, 1091, 
       1092, 1443, 853, 1093, 1094, 1432, 854, 1166, 1359, 855, 1167, 1360, 
       856, 1168, 1361, 857, 1285, 1035, 858, 1286, 1036, 859},
       VertexColors->None], 
      Line3DBox[{861, 1169, 1362, 860, 1170, 1363, 862, 1171, 1364, 863, 1172,
        1365, 864, 1173, 1366, 865, 600, 866, 1433, 1095, 1096, 1444, 867, 
       1097, 1098, 1445, 868, 1100, 1367, 1235, 869, 1104, 1368, 1238, 870, 
       1174, 1369, 871, 1175, 1370, 872, 607, 873, 1287, 1037, 874},
       VertexColors->None], 
      Line3DBox[{878, 1288, 1038, 876, 1289, 1039, 880, 1290, 1040, 882, 1291,
        1041, 884, 1292, 1042, 886, 1241, 1293, 1130, 1043, 1108, 1234, 1294, 
       1131, 1139, 1143, 614, 1144, 1140, 1142, 1141, 1132, 1446, 1044, 1110, 
       1103, 1133, 1447, 1045, 891, 1106, 1295, 1046, 893, 1296, 1047, 895, 
       1297, 1048, 897, 1298, 1049, 899, 1300, 1051, 901},
       VertexColors->None], 
      Line3DBox[{900, 1050, 1299, 898, 1382, 1183, 896, 1381, 1182, 894, 1380,
        1181, 892, 1239, 1379, 1129, 1105, 890, 1237, 1378, 1128, 1102, 889, 
       1236, 1377, 1127, 1101, 888, 1434, 1099, 1126, 727, 887, 1107, 1376, 
       1240, 885, 1375, 1180, 883, 1374, 1179, 881, 1373, 1178, 879, 1372, 
       1177, 875, 1371, 1176, 877},
       VertexColors->None], 
      Line3DBox[{903, 1184, 1383, 902, 1301, 1052, 904, 1302, 1053, 905, 1303,
        1054, 906, 1243, 1304, 1134, 1055, 907, 1242, 1305, 1135, 1056, 1113, 
       1436, 1109, 1136, 1185, 1435, 1115, 1111, 1137, 627, 1117, 1112, 1306, 
       1057, 908, 1307, 1058, 909, 1308, 1059, 910, 1309, 1060, 911, 1310, 
       1061, 912, 1311, 1062, 913},
       VertexColors->None], 
      Line3DBox[{915, 1186, 1384, 914, 1187, 1385, 916, 1312, 1063, 917, 1313,
        1064, 918, 1244, 1314, 1065, 919, 1437, 1114, 1066, 1119, 1440, 1116, 
       1188, 1438, 1120, 1118, 1189, 1439, 920, 640, 921, 1315, 1067, 922, 
       1316, 1068, 923, 1317, 1069, 924, 1318, 1070, 925, 1319, 1071, 926},
       VertexColors->None], 
      Line3DBox[{928, 1190, 1386, 927, 1191, 1387, 929, 648, 930, 1320, 1072, 
       931, 1321, 1073, 932, 1441, 1121, 1074, 1138, 1448, 1122, 1192, 1442, 
       933, 1193, 1388, 934, 1194, 1389, 935, 654, 936, 1322, 1075, 937, 1323,
        1076, 938, 1324, 1077, 939, 1325, 1078, 940},
       VertexColors->None], 
      Line3DBox[{942, 1195, 1390, 941, 1196, 1391, 943, 1197, 1392, 944, 662, 
       945, 1326, 1079, 946, 1327, 1080, 947, 1328, 1198, 1393, 948, 1199, 
       1394, 949, 1200, 1395, 950, 1201, 1396, 951, 670, 952, 1329, 1081, 953,
        1330, 1082, 954, 1331, 1083, 955},
       VertexColors->None], 
      Line3DBox[{957, 1202, 1397, 956, 1203, 1398, 958, 1204, 1399, 959, 1205,
        1400, 960, 678, 961, 1332, 1084, 962, 1333, 1206, 1401, 963, 1207, 
       1402, 964, 1208, 1403, 965, 1209, 1404, 966, 1210, 1405, 967, 686, 968,
        1334, 1085, 969, 1335, 1086, 970},
       VertexColors->None], 
      Line3DBox[{972, 1211, 1406, 971, 1212, 1407, 973, 1213, 1408, 974, 1214,
        1409, 975, 1215, 1410, 976, 694, 977, 1336, 1216, 1411, 978, 1217, 
       1412, 979, 1218, 1413, 980, 1219, 1414, 981, 1220, 1415, 982, 1221, 
       1416, 983, 702, 984, 1337, 1087, 985},
       VertexColors->None], 
      Line3DBox[{999, 1125, 767, 998, 1430, 1233, 997, 1429, 1232, 996, 1428, 
       1231, 995, 1427, 1230, 994, 1426, 1229, 993, 1425, 1228, 992, 1424, 
       1423, 1227, 991, 1422, 1226, 990, 1421, 1225, 989, 1420, 1224, 988, 
       1419, 1223, 987, 1418, 1222, 986, 1245, 1417, 1123, 1124},
       VertexColors->None]}, 
     {GrayLevel[0.2], 
      Line3DBox[{305, 522, 1246, 306, 536, 334, 1343, 551, 349, 1348, 566, 
       364, 1355, 581, 379, 1363, 596, 394, 1372, 610, 1289, 408, 623, 1301, 
       421, 1385, 635, 433, 1387, 647, 448, 1391, 660, 463, 1398, 675, 478, 
       1407, 690, 493, 1418, 705, 508},
       VertexColors->None], 
      Line3DBox[{307, 523, 1247, 308, 537, 1258, 335, 552, 350, 1349, 567, 
       365, 1356, 582, 380, 1364, 597, 395, 1373, 611, 1290, 409, 624, 1302, 
       422, 636, 1312, 434, 648, 449, 1392, 661, 464, 1399, 676, 479, 1408, 
       691, 494, 1419, 706, 509},
       VertexColors->None], 
      Line3DBox[{309, 524, 1248, 310, 538, 1259, 336, 553, 1269, 351, 568, 
       366, 1357, 583, 381, 1365, 598, 396, 1374, 612, 1291, 410, 625, 1303, 
       423, 637, 1313, 435, 649, 1320, 450, 662, 465, 1400, 677, 480, 1409, 
       692, 495, 1420, 707, 510},
       VertexColors->None], 
      Line3DBox[{311, 525, 1249, 312, 539, 1260, 337, 554, 1270, 352, 569, 
       1277, 367, 584, 382, 1366, 599, 397, 1375, 613, 1292, 411, 746, 747, 
       1304, 777, 748, 749, 1314, 436, 650, 1321, 451, 663, 1326, 466, 678, 
       481, 1410, 693, 496, 1421, 708, 511},
       VertexColors->None], 
      Line3DBox[{313, 526, 1250, 314, 540, 1261, 338, 555, 1271, 353, 570, 
       1278, 368, 585, 1283, 383, 600, 398, 1376, 735, 736, 1293, 775, 738, 
       739, 1305, 778, 751, 1437, 752, 437, 761, 1441, 762, 452, 664, 1327, 
       467, 679, 1332, 482, 694, 497, 1422, 709, 512},
       VertexColors->None], 
      Line3DBox[{315, 527, 1251, 317, 541, 1262, 339, 556, 1272, 354, 571, 
       1279, 369, 586, 1284, 384, 723, 1433, 725, 773, 727, 737, 729, 1294, 
       776, 741, 750, 1436, 742, 779, 754, 759, 1440, 756, 438, 763, 780, 
       1448, 765, 453, 665, 1328, 468, 680, 1333, 483, 695, 1336, 498, 1423, 
       710, 513},
       VertexColors->None], 
      Line3DBox[{319, 529, 1252, 320, 1341, 543, 341, 1345, 558, 356, 1351, 
       573, 371, 721, 1443, 771, 588, 386, 726, 1445, 774, 602, 400, 1377, 
       731, 743, 615, 1446, 413, 744, 757, 627, 425, 758, 1439, 639, 440, 
       1388, 652, 455, 1394, 667, 470, 1402, 682, 485, 1412, 697, 500, 1425, 
       712, 515},
       VertexColors->None], 
      Line3DBox[{321, 530, 1253, 322, 544, 1263, 342, 1346, 559, 357, 1352, 
       574, 372, 722, 1432, 589, 387, 1367, 730, 603, 401, 1378, 732, 616, 
       1447, 414, 745, 628, 1306, 426, 640, 441, 1389, 653, 456, 1395, 668, 
       471, 1403, 683, 486, 1413, 698, 501, 1426, 713, 516},
       VertexColors->None], 
      Line3DBox[{323, 531, 1254, 324, 545, 1264, 343, 560, 358, 1353, 575, 
       373, 1359, 590, 388, 1368, 733, 604, 402, 1379, 734, 617, 1295, 415, 
       629, 1307, 427, 641, 1315, 442, 654, 457, 1396, 669, 472, 1404, 684, 
       487, 1414, 699, 502, 1427, 714, 517},
       VertexColors->None], 
      Line3DBox[{325, 532, 1255, 326, 546, 1265, 344, 561, 1273, 359, 576, 
       374, 1360, 591, 389, 1369, 605, 403, 1380, 618, 1296, 416, 630, 1308, 
       428, 642, 1316, 443, 655, 1322, 458, 670, 473, 1405, 685, 488, 1415, 
       700, 503, 1428, 715, 518},
       VertexColors->None], 
      Line3DBox[{327, 533, 1256, 328, 547, 1266, 345, 562, 1274, 360, 577, 
       1280, 375, 1361, 592, 390, 1370, 606, 404, 1381, 619, 1297, 417, 631, 
       1309, 429, 643, 1317, 444, 656, 1323, 459, 671, 1329, 474, 686, 489, 
       1416, 701, 504, 1429, 716, 519},
       VertexColors->None], 
      Line3DBox[{329, 534, 1257, 330, 548, 1267, 346, 563, 1275, 361, 578, 
       1281, 376, 593, 1285, 391, 607, 405, 1382, 620, 1298, 418, 632, 1310, 
       430, 644, 1318, 445, 657, 1324, 460, 672, 1330, 475, 687, 1334, 490, 
       702, 505, 1430, 717, 520},
       VertexColors->None], 
      Line3DBox[{331, 719, 1431, 720, 332, 549, 1268, 347, 564, 1276, 362, 
       579, 1282, 377, 594, 1286, 392, 608, 1287, 406, 621, 1299, 1300, 419, 
       633, 1311, 431, 645, 1319, 446, 658, 1325, 461, 673, 1331, 476, 688, 
       1335, 491, 703, 1337, 506, 767, 768, 769},
       VertexColors->None], 
      Line3DBox[{507, 704, 766, 1417, 492, 689, 1406, 477, 674, 1397, 462, 
       659, 1390, 447, 646, 1386, 432, 634, 1384, 420, 622, 1383, 407, 1288, 
       609, 1371, 393, 595, 1362, 378, 580, 1354, 363, 565, 1347, 348, 550, 
       1342, 333, 535, 1339, 304, 521, 718, 770},
       VertexColors->None], 
      Line3DBox[{514, 711, 1424, 499, 696, 1411, 484, 681, 1401, 469, 666, 
       1393, 454, 651, 1442, 764, 439, 638, 1438, 760, 755, 424, 626, 1435, 
       753, 783, 784, 782, 412, 614, 785, 781, 740, 1434, 728, 399, 601, 772, 
       1444, 724, 385, 587, 1358, 370, 572, 1350, 355, 557, 1344, 340, 542, 
       1340, 318, 528, 1338, 316},
       VertexColors->None]}, {}, {}}},
   VertexColors->CompressedData["
1:eJztnWtYz1nXx2MkUxjnEQZhRmYapwlDzp5BTjk0xnGMHJrK4xC6LzlEhKIk
ySFmHGoiTCgl5VzNdCJiSmI6IGUmJJRD7hdz/XrxWz76/+5bz/Mmb/bVd/a1
/2uv/9prrb32d/3HxGbe2FnV9fT0Dujr6X2gp/x71E/vrf8e9QtxXXXkk9+t
+6nxhPC21hPOzRf4wBiTkLInrgJvXuPmIC+rzQLv6DtpY+n0nQJvWxzcaWnR
HoGnbay75KX9Pp3n0/okD8lP+yX96L31H88fVW3OoKPdFgncq9YpwyXJHgK3
SyxOsAvZJfDi++FGgQcPCrxbWavBETahAvepftXbIOWkwFOrlU6u++iUzvNp
fZKH5Kf9kn602ietT/aT7XOkW9+MYwLXH3jM8daZswIPCExwDS34Ta5T4N8h
acslgTfO3dXp9LYUnefT+iQPyU/7Jf1oPe/0/ZI8vZfOXPgi9ILAPwb9mE/7
2GXqi3SBB3cvmJ744E+BP+qzcsi9Mdk6z6f1SR6Sn/ZL+tHqP+l8kT2Q/NUj
V82daH9L4IVrc44nmNwT+KsxyZluQ/4S+IXlixZfDCnUeT6tT/KQ/LRf0o/W
eET+jc4j2Q/tVxmjLg+YEREX0E+N786rdjq+yXWBV3Ns2mGVdabO89Xrkzwk
P+2X9KM1vlN8IX9I55fsTRlJPxGlWX4dJ98T+KPFVu16vyzQeb56fZKH5Kf9
kn605ksU3ykekf+k866MZJ+kTxppvnp9kofkp/2SfrTmn1X2/O79arXnKv/8
bvnfl3+uyjfeLf/7yjeq8ud3y/++8ueq++C75X9f98Gq+sa75X9f9Q29t/6r
qtdVtF+t+ty9PKVJrebjxfxdk+oFdP28v8C1zlfG1m9eZLT3iiv/e4W/TfVv
nj/E+R2DggbM7XhH5A+Ezyr81d51/t8CDx5edCFqX7rO89XrVySnel8VyWnm
fWm+cUK+zvNXtJvWJD+sUGf5aX1d90v7qkgP9Lmkf9rX+9KbXtO0MXGNsgU+
22bcoOcD7v7H329lnxetuDIOP+lke7VHVIX7VUbSJ+lN63yt8pA9EE7r0Odq
3Rfh6vW1fl/2Ncd/Y+OlO66M5uZ/jd018aGQR1dc6+fWiCoa+oWLmc7yVDQ/
wzDs2rbDFc9/Xzh97vuSh9bp5WlvavGto5i/5sLdr9ZHOgjct+aSlJQ9awWe
seNfzq1Klws8Kutmimmxn8B73nPw94yXedfYoO0lh/UCBG6SYejiFO4r8D6j
C/zr+f4qcHM74/MnB8p8b7hL0gSjM2FSHtu0rzeY7BU45UvOOd3tazWKFDjl
sb1g/aWwTneQfyTI3xb0MxD00w/0Px70nwXf7xn4fj3AfraD/Xz/5X6/Kf5j
BN4X7LOgeuDcyy7rBT4kJO2+bazUW7uGpcVRhw4LfIF9p2ueSfJ+cdomd82B
XHn/LXq24nCpb7zALX+xejQgT/f74zCYXwzrnwV5nEB+U9jvcNBPIehz4Kj1
y6KHyvz/zNMc92FTpV21PPb9zJQGZwR+vLWV3anHcl97r9iPjIxOFXi9xknP
T4ZnCPyAS9zFWSZZAqd6CM1vCOsHgDzhIH8b2O9F0M9g0Kdx9PJRdu5BAt9/
aWnEpBpRAu81Qb+a07EEgRuO+sjKqFqawH9ctvtp3nKpn2M9py7veShP4It7
5Gzy9NW9vucE80NhfQeQpy7I3xf2GwT6+QT0WT/1TIf58bLeUv3VTY+pU2IE
vmln8cfLml6T56J5j8hlVlL+Lq1MXsWNKRB4+b639nIdlR0t4nv+yTXBK8t0
r1f/DfM3qNbvBvJ8A/L7wH71QT+NQJ9uC46P6RgbLuNdZ6v6GbXk99jlpzcz
G4fckOe3e3bciZZc/3cuMEzb9lGw0INXQZcdv5ZlCJzeWb6bNmVkfvc8gV83
mtD5iz03Be48xbZu6uOD5X8fBjm7wb5WgB7Wgd5+TDAcGn1S+vn0RQU+uwck
CXxzG4vEwX/elPOnOt++pncf9Zm2afGa+GfnxX5p3Do99Yeg/AcCP5H88EHz
cHl/yVOtnwnybAX5M2G/DqCf/ys71GpXfmCfGSp7rmy7qvKH/+CV7Q+r4vs/
eGXH96p89R+8svPVqvvXP3hl37+oPkN1GKq3UF2F6idUJ9Fa96D6BtUxqF5B
dQmqP1CdgeoJE6H+QHUwqndRXYvqV1Sn0lqPovoS1ZGoXkR1Iar/UJ0nvVZZ
aLG7fO9b5fOvE5PPrZHf+4To2cEuWwReNtElImD2T9L/zEvKv1u0X9phieHU
8yN+EXidP0J/6OQdKPAUsFvDQ0PHh2fKfOnzqZ4ZEw4cFfi0kfsfz3ol7fNc
nq3BsjfSPm/fct688a6bwO3jn1r9unuBwN2Tm/5QELdOntOOEYkNQ6R/tvmx
WYv61w7IuNwromjyYvluXv3T890Mn8pzWq94lvvD1NMyT/hqbfe71WQcaQj+
9qfX7T3GzZd5+8beXX0NDGMFvvX3FyZWLWTcn2jgHlUvRPqH3t13uK7YL+2E
3vffPHf9Rv+3hQIPs+ph7fLzDnneX3XKNl8k/fnloC87zPeS9pMwpNbpEXXl
vj74y3ScQ5DUQ+yGtR2eFb2FhzO40Z02J64I/CHkD+Yb9/hbVrstv68abgH9
vP4QeImxd1LIiWSBt/L63i/M8rzAia+yPqXl7vjhkj9goDfkrOVVd4GXGkdO
q1db5m+9+oYdb7FT2qFNkO+n25v8LvBRL42tv7CR+U/zJw8GdSyR+VLnpplr
Y+bJ/GqPgZudSbLU5znIh51D2hZcuS/vEQZmto5X/O4I3DotsnjSOXmfJf7V
7A/31BkcIPVvaRRpmbtd+p/VPvUnzR3kL3DvP5wvZ66U31eCfWrRHo+LAj/a
s1PXaX5XBe5YcnTYwf+VdnWkUWbfO0fuCtykTUKfLr0fCDyjY+xXt1YzP/n1
grff73yTW1tm7rsq8Oh1Du4GFr7lfxOfsMXGJKfJXaX+X4L9N3q8MS81KFqu
c0L/A+9m0q/m+jVzaOIu40XhwxKDzpNlPtl9+snYH+ZJPl78SrNRk2yk/Zx5
2Gf1zPi/UW87Ry8vnd8/QeinEOoSjQN9VpVdlu/RgcYvzl7I/KP871aWr7/+
1kjyDdpeedAl3ShX4J5pFhGdJ1wXuDf4+dAj4+ut1z8u46P3okHme2Ve/cjX
LXLX60SBL3T/0qSJjfx+PZLMt1wbK++nypj4P0F1pt2JEHqgsY513gnP7bLe
1fSRscN3ZrLeNcJ5eugF87Plf5f+9lmD8CRpn9Y96nw02Ez6q9n1wgoyRsh7
cQPIT+oCbgPrjIbPfQpyKiPVu+44XduwuvV9gdfwN22dGnlb4C9V+veC72sJ
fL/PwB6ywH6Ogb15gn1uAHs2AftXRn2oU40fsHXuqPs3BH5cdX5j4bxfAv9g
Af7kCfife+CvjMG/1Qd/SPlDM/C35J9jIM7+CfHCFOJLGMSjZRC/wiDeXYL4
uAXi6SqIv0MhXs+C+E75wLeQP3wI+cZyyE+KIG/8BfKfbpAvtYP8yhryMVvI
3/pDvvca8kN9yCfXQf5J+WpryG8pH4iD/Lkn5NtN4XscBPl8IuT/deG+cBXu
F9fhPpIF95dIuO+Uwf2I7lN94P41Be5rO+B+R3lCANwfb8D9/QrcTz+B+2xd
uP8ugvuyHdyvx8B93Avu7w4Drg9Jb/GtxKEOkAV1gxioM8yAukRHqGPUg/wh
E+pOxlBXuQ11mGKo29Se9PY6zxCoC62FOhLp0w7w21Cncjximbv2Jxl3vt68
L2NdbRl3lHEwxHfKBygPpzwhC/IryscoXw12mxTiY5EocF3zt+/9XOfeW8X3
kVNtGroOmXlKrFOy8+15YCPIn08GDQ4JDZX7ovm0PvFyST+k52iQR+u9oIXq
XqCMHiq9fQL3r+8q0D/pba/qflf+uWAPpDeyW7pv0rkgfdL6iRaJIzvfrJgn
X76+qj7QtYLzuwvqDOq6hAP4B6p7k58hv0R8SHqnUMYk9yZRj49KuyL9jAN+
QjLoOQR4HVuAB9JLxZMpXx94NSRPNOyL7JNGmq8r75re4+h7oXdSeqcmngDx
NIjfQnwhmk/rkzwkP+1X6zsmvbvR+zK97xO/gvgtxAsinhXNp/VJHpKf9qtV
b/QuTO+Y9F5PfAniqxBfiHhWxFuj+bQ+yUPy03616o3e2eldmPgPxD8h/g/x
r4i3RjxAmk/rkzwkP+1Xq96It0Dv7MQnIT4P8akq4rMRH5V4ler4SOuTPCQ/
7Ver3ogHQrwF4ucQP4r4acpI/EDi91J+QvmGen2Sh+Sn/WrVm1ZejVZ+iFZ+
lFbemlY+oTJq5XlSfkj5J83X9XO17kur3rR+L5VtJ8TXIn4R8ehID8QjVUbi
8apxWoc+l+TUul/irRHPiviExOckPq0yqvnMykh8cvV8Wp/kIfm16oF4fcRD
I74l8V2Jb0x8b2VU9yMoo5qHT+vQ55KctC+t+iE+JPH3iKdKPGHiaRNPnvoU
qL+D5tP6JA/JT/vVqjfilxIfkni/xLsm3jv1HVDfB/XL0Hxan+Qh+Wm/WvVG
fF3ilxKPmnjs1EdAfRzUR0P9RzSf1id5SH7ar1a9Ef+Z+OfE/6f+C+p/of4j
6tui+bQ+yUPy035JP1SP9YB3PeKREu+ReHo5wNOoA+90R4HfQryOlcBboHd2
ehemdzfizVrAuz/xEolHtwnei4mvQnwM4g/Qeze9z84AngPxKnsAb4f4n8Rn
oPd3ei+eD3wY4h8SX4Le9+k9mniMxAfQ+n5NfH7ipRfCvYx4v8pIPFV6/6L3
WfW7MPGgiLdDPBPiRWh93yfePvHMlwDvSBmJx6vrOzjxwQKBvzQQ+DYpwA9p
DnwG4s8T31sZ1e+P5fKq3mGJz0b8K+ILtQR+C/ExiJdOPD3iAxMf7CPgLxHf
5gnwQ5oDn5B4yMSPIj6PEfBPiM9M/B/iq7hp5KvQO3JF77+VzSso1sjf0MrT
MAIeBfEWiHehlZ9A51RXPkBFn6uVL62Vz0OfS78/QPwf+j0H4m/T+sR7od/T
UP9exFSN/CKtPAqar4zEnyGceCnEW6js3xUkHgjxOoiHQ7j6908qkpPG/5aP
QSP1j6wEP0x9JdOhb4L6VWdAXFgM/QvUf7ER4g71w86BuEZ9iOuhz+IZ9H1Q
vwPx/Kk/l/pM9SFPaAZ5hTLeVPWPUN4yHvKcV8D3pj5i6oel/k3qN6T+OOLz
E/+c+pqpP9cC8mHqf7wB+Tb1FxAfnvjb1Gddvj9VvKP+6w1QB1BGikfquEZ9
3NSPrIzqPi9lVPc3xcD9l/rEqd+Z+nNL4PxugvOeDPd96pehvnULqD9QvYLq
G9QHR/1fvaB+Qn091IdCffdU/6F+Z+rPbQz1KFuIL9TXVgR1MOpXov4a6geh
+h71cVPfcXOoN1K/Z0PwA9kQx/OgLkr9WWVQd6X+l01Q11VGys+JR0188mGq
+gbxk4lvTOsoo659iFr7HYjPvGFEyUC/o9I/5E+9Ut06eavAz/xoM2Z8sqw7
TW977Pa1hdI+21s79I5pJ/Mc+zEff9HpwwiBUz9sn8LDxl1DpR2+KG0/w3X6
IYEvdZ5msSBL8gH8ZsxzXeop32eL9Waatx8n88yAZ5GRxc2DBT5v7MLc4tZS
ztoHh7a3XXtO4FYjvcP214wTeM6D6ulWU6Q/ob4qC8d848Dgt/yOx/PSpkYN
5Pt+u9yVDT2s5Tka7jTR8UbgNoE/BT3UKDM2NR0i5T+wc3TLiOUyj5oz+qB3
2jWZD6fP3ufRuKaMF7HHmxmFL5T+8DeH4uxDp6WeP4V9bYfvN83z98RVPpkC
r3np2OoH6TkyXrd4tuS0g4zLF0HOBqB/ssMca/PxbnuZVzPnlPfeoF+Olv/d
G773l2D//eC8/H//LqXWfoTK+v1J6sen9815e6qtyPhcntN7SycOTUmX7/Wv
dh6/0W0Y9+MfdknNqOV4TOx31rj+pm/Mbgk8eeCRzP6ZMi7sUtnJp2C3mXDu
8sD/zAP/3P3iJbOf/5Y8hK5OmxcHfynP0fOLtZ/cXCDtvADs3wjO4wLwJ9bg
V80g7mzrfWuOwWdSD+NavPhq/2CZV2eD3zgCfq8++H87iI/bQR5z0OcbsCtD
8M9OEKdiII5/Dd9vAdh5MMTHQsgfFsI58oY8xBbOI+Ut5MfmwudSnhMI+9oC
fob8AOnzLOif8gqKv+SHyf/QOaVzQXkd5TmUD1D8Lf/vKj9P55HOywuoC1H+
SfmYA/gZyhNyK4jjO1X3ixLwh3TeyX7mgH/OBX+eBv7fBOKFMk5RxRdlPA/x
KAfuTXYQ16LVcdD/7XabD+fLEc413SP6Ql7kBfl2KeRXlIcr40aV3vLBTig/
pHw+BvJPyos+g+/XEOw5B87pNsir6X5BeTvlz5S/3QK7nQ/nlOIyxUe699H9
iO4d9eH76gt2Qnkp5WPjwF9RvkFx/xDEtZtQHyD9kD2QPdM9vT+cx0Za83Pw
h5QHUj4WC3GZ8pnNkIeQPikfVkbyq5vhfkTvv+SH1fFIGUPhXnYF5FHfUyiu
KSPx9ukeRPdEuh9p/f8aKHHn39ZFtsg=
    "],
   VertexNormals->CompressedData["
1:eJx9fXVcVdvzNqioiIEdYHdgt+LYQVkoYus1ELu7sRGVUExaUVFEkZCDQ5cF
goSglCJ9VEBRUN+Da825P9b37pd/9sf9WXedWbNnzzzzrGft23H5xlkra6io
qLirqajUVFwNXWYc6Vg5B+k6sovxiMo/cgitfP/21Mi1OGKf6UH9sI14eVyS
2wfF/fa3/Y0eJO/F6IW5NZsfOIruJTdPb1Lcr3Q8lhIw7AS+LzReHDbDFmdu
Pb857ZccVLvu2NH1tRVetNv41u6nEz6f8U5F7acc/GvUbz490wqXHzEf2FXt
Lp641iLzZokcDnacfmzZ46M4XdfN+PEYL7you0OjZpEcVPifTG5+5LD3Q9zz
cJZ5m3zleBDH8/lBnJ/bA6I93H4Q7efrBXG93D8g+of7EUR/0jjyK41/M214
zVt3jyJdu14PPz5Gcb9k89cJutq2aNJpbrvsjva43jmyvEulHOqXznJ5i47Y
bENlaWT72ygznh4S+EUO64Zkb47WuYns6oM/9+6K2pMih/ClvlqzOt1E25PR
toGXg/Di1hM5LR7J4XHfkeFbulzDui4FTedqhaP7nD5X/Cz/9fPghT4Z9VIj
8HHFgdR5+5TjQRzP5wdxfm4PiPZw+0G0n68XxPVyv4DoH+5PEP1Jz4nilJ4X
zUt+pfnT85xz/J3dka4UP62Pa5rtXOeNjreajbc74Y+OJS92FsjkYK1vc7NW
5BN0XdM14+iMCAy8sU4n31gOnqG3R/Q3fYJGbep1ebozFm1Dl73sjMVgteZj
ZuypB/gldHGbSR4JWNFw7KmIocVKP3//ZuHkPSkRs178VP/yp4jGgziezw/i
/NweEO3h9oNoP18niOvl/gHRP9yfIPqT3hN67+l9oedKcUrPl+xQ+pXbY5GY
4PElKwzpujYA3T50kkOfMrUyjScxGFVe02hRXJzSP6oW3tPVbKKRXVPQWFt9
bKVjIay2jLynsweRXdOx7ca67YfaFSj9XOqrXWSQnIHlHTsatR9SQONBHM/n
B3F+bg+I9nC7QbSfrxfE9XL/gOgf7k8Q/Ul5ivIo5St6r+i9p/eL4oDilOKB
7Ca/kv0jujp3WqSRiHTt6tKgxdKvBVAjb+z1mKsJaLEos8Az7z3WbfNYd1HD
fIic6DFMd0I02g0Kzlv/NQvdrhocdFbJU/p5iXFpu+JZH3DCMquwi765NB7E
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
VseZyvEp1XGmcn7Si4v2kL5ZtJ/0uOJ6ST8q4TcQ/UbnWklnSvifzsGSLpLw
P523JP0v9RF0PpD019R30Hk20r9Tn0Lnr+j8AfU1dI6Izn9EC30TnZuh8zJ0
PkQcT+cZxPlJfy/aQ3px0X7SN4vrJT2uhN9A9BudBybdLvWzdH6YdKbUz9L5
VdJTU19M5y1Jz059NJ0PpPME1HfTeTY6z0F9Op3LovM0Ig9A55Do/BGdtxHH
0/kQcX46zyDaQ/p70X7Si4vrJX2zhN9A9BudoyYdNPEwdO6XdOjE29A5VToH
QDwPnaukcxjEC9E5QDoHQzwSnWejc0giT0Xnt4inonNK4ng6VyPOT+dARHvo
3IJoP+nsxfWSLlz0D/GwxMsSv9e0/pzYcDVrbLNvz5GP1+ww+ejXgqp9PUvD
AJMZ/W5gcrG82MT+Jj5YB65V+6q2xzbOa9HZFTeX1gtK0fDGi3A0bl+GYl0d
R08qn+uKtafeNura/yl27vfhiXGQHK5vm56x0PoKeq0/NkdrdiheD6p9bbqD
HEjfw/fp8Avfp+tlYjWnstIFyqdO6vpzKOKSFSta2snk0Ndtw9JLCv/UPBxx
pqDVY/ymaX2nStfR2fN2SBNdBygen11Df5Q7eoyom1ClW1j/0XfH0Po28E9/
14ZV++03chL/7rPPOL7ydtV+sOz0gL/7w259H/7dFyb+mvbfiMeOaz56zfGL
D3Brh7yR9av0sw8Kon9U7Ttf7dW11jAffKgZELpobgjOS/XoMNlSDlEFz+y9
7X1wk9Nio+2Wz3C1QXDspPZyaBN8Ju39lvvY0dBjyVqXOHz+PKTb7UfF8JPr
dQwF/fDp87aGVmk+YDY3bKPXxzAMub1rZN4mOVy5PGe3R8uHELDc7FGNh364
yX/Umyo9Rp3x9Tp2vHMTph78FF+lI2jSaodFlX4gCW3z9ne4BH2t36ZW7Xtf
n1z/735326XDdlTty/a5Yz61ap+2tCvbn003PKXW4mYYjvcx/hw95Bnenxs9
pjCxGK4vGxU6rEc4wh8b9evTE/CK2qHaVzKLoP6l/WqxEYFoOuj11t913mL3
P2u7vf1dCKqlB41qNw+BMMvCsgUbwhFD76urjVA8977ZD8uu+4KNVtKzfiY+
+Gxqzl89g/nuGaOr9t0/GpY5NHvsgvf3Dhpdtf/e/NWRiqp94i2L501qaX8W
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

    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-2, 2}, {-2, 2}, {0., 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6524640686349897`*^9, {3.6524641403720927`*^9, 3.6524641668746085`*^9}, 
   3.6524642208576965`*^9, 3.6524642530915403`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"T", ",", "RY", ",", "YG", ",", "GB", ",", "col", ",", "cgrad"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"T", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{"0.5733", "*", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"21.905", "*", "x"}], "+", "500"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"col", ":=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "i", ",", "0"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}], 
         ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "1", ",", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0.1", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}],
         "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"RY", ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "i", ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"YG", ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{
         RowBox[{"1", "-", "j"}], ",", "1", ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0.1", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"GB", ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "1", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0.1", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"col", ":=", 
     RowBox[{"Join", "[", 
      RowBox[{"RY", ",", "YG", ",", "GB"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cgrad", "[", "x_", "]"}], ":=", 
     RowBox[{"Blend", "[", 
      RowBox[{"col", ",", 
       RowBox[{"Rescale", "[", 
        RowBox[{
         RowBox[{"T", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"T", "[", "0", "]"}], ",", 
           RowBox[{"T", "[", "20", "]"}]}], "}"}]}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot3D", "[", 
     RowBox[{
      RowBox[{"z", "<", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cgrad", "[", "#1", "]"}], "&"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.652464354965367*^9, 3.652464720651283*^9}, {
  3.6524655136956425`*^9, 3.652465530680614*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJztnT+rc1sRxg+Kb3+bXdlsiAEhINmk91SCrR9BsLz6Xe5Hsbj2ae1S2MQi
BAlIEDtb9b7HeefM73kej4KlQfDmx7yzJrP2zJr1Z6+z/vI3v/jV915eXn72
g5eX77/8559vdj//5/9++9P6/ruvr99+ff3bTxNP3xMvPcXTv5vy52DPWf49
5evzndS3X/9e9BSnHspP/ZdgzyXYcxE9n9Vf/yB6ilMP5aed1/C7ruF3XYO/
b6E/b6GfbsE/9+Cfe/DPXfR8xt/8SfQUpx7K1+ft5z6Cnx/Bzw/R81n97s+i
pzj1UL4+b/5/hv56hv56ip7PYt/+RfQUp57E//gd/vtfJR6LUz859Uz5T68+
b3x6pV5yr4d54NOrj+uSZ5x+evVxV3oYR2UP46L08zn/9Oqf22qXz+GnV/9c
lT18Tj69sh+LJ/+Tv7X3lfRLcfYLuddzFj3slyl/Ec5+mXquwc5b0H8Xzn6Z
7T6Es1+mPU/h7Jfiyf++v5YQL4v0C7nXw3hZQrwsIV6WEC9LiJeyh/GyhHhZ
QrwsIV6WEC9LiJclxMsS/U/+o88N/lD6pTj7hdzrOYse9suUvwhnv0w912Dn
Lei/C2e/zHYfwtkv056ncPZL8eR/H0dryGOr9Au518M8toY8toY8toY8toY8
VvYwj60hj60hj60hj60hj60hj60hj63R/74e2Em/FGe/kHs9rOd30i9TnvX2
Tvpl6mE9XPawvt1JvxT39edO+qW4rw930i/Fff22i/73+W0fxpf96/xeebK5
18PxZR/Gl30YX/ZhfNmH8aXs4fiyD+PLPowv+zC+7MP4sg/jyz6ML/vof/Jf
f/73P5Z+Kc5+Ifd6zqKH/TLlL8LZL1PPNdh5C/rvwtkvs92HcPbLtOcpnP1S
PPnfjzuHMO4fpF/IvR6O+4cw7h/CuH8I4/4hjPtlD8f9Qxj3D2HcP4Rx/xDG
/UMY9w9h3D9E/5N//v71T6RfirNfyL2es+hhv0z5i3D2y9RzDXbegv67cPbL
bPchnP0y7XkKZ78UT/739cAx1GNH6Rdyr4f12DHUY8dQjx1DPXYM9VjZw3rs
GOqxY6jHjqEeO4Z67BjqsWOox47R/z6OtpDHNukXcq+HeWwLeWwLeWwLeWwL
eazsYR7bQh7bQh7bQh7bQh7bQh7bQh7bov99nXYKdfJJ+oXy5C/2c/rSX14P
6+rTl36kPPt36uG69ynU4acv/U55Pg+zXa5jn0LdXn7genVzbz/XpU+hzj99
ea4o7+v/05fnzf9ezgtOX55Dyvv5wunL8+n9w3nEKcwjMk/P7Vw3zuu29X0+
t59e/f4R5c+ifz6flL8In88b9VyD/beg/y58Pg9s9yF89i/teQqf/dKc/uf6
/ORcb29O+Tf7uA7c3Ovn+mRzyvt1s+beHq7nNPfPIdcZmnv7Of9tTnk/L2vu
fy/nC80p7+vY5t4/rK+ae3s47jf3/uS409z7meNOcx+/HEea+/jluEB7GL/M
8819/DJvN/fxyzzc3Mdv50/GW33Iy//FmT+9/Fn0l/+9/EV4+d/ruQb7b0H/
XXj537f7EF7+9/Y8hZf/yel/5s/Jmb+/kvxZ3Nv7leTPqWcJ+heRZ/4k9/as
wZ41PIc7kS/u7d+LPPNnceZPcv97DyLP/Dn8+y5/knv/HEWe+XO2uwV7tuDP
zp/k3s+dP8l9/Hb+JPfx2/nT28P47fxJ7uO38ye5j9/On+Q+fll/5n3Q+j7H
ryXUn5Q/i/45flH+InyOX9RzDfbfgv678Dl+sd2H8PK/t+cpfI5fzel/X38u
of5cQv25hPpzCfXnEurPJdSfS6g/l1B/LqH+XEL9WXaw/mzu7Wf9uYT6cwn1
5xLqzyXUn0uoP5dQfy6h/lxC/bmE+nMJ9ecS6s/yG+vP5t7PrD+b+/hl/dnc
xy/rT9rD+GX92dzHL+vP5j5+WX829/Hb+fOj8wr1vfxfnPnTy59Ff/nfy1+E
l/+9nmuw/xb034WX/327D+Hlf2/PU3j5n5z+Z/6cvPMnOeWZP8m9/iXoX0Se
v4Pc27MGe9bwHO5Evri3fy/yzJ/FmT/J/e89iDzz5/j97/InuffPUeSZP2e7
W7BnC/7s/Enu/dz5k9zHb+dPch+/nT+9PYzfzp/kPn47f5L7+O38Se7jl/P3
fK6ovpf/i/v5O+XPon/W/5S/CC//ez3XYP8t6L8LL//7dh/Cy//enqfw8j85
/e/n76vkT3LKM3+Se/2sr1fJn8X9eLJK/pzt0n+r5M8px/l7c28/5++r5M/i
fv6+hvn7KvmTnPJ+/r5K/px+4Px9lfw52+X8fZX8Of3G+Xtz72fO35v7+OX8
vbmPX87faQ/jl/P35j5+OX9v7uOX8/fmPn65r5TP/9V/lf+LM396+bPoL/97
+Yvw8r/Xcw3234L+u/Dyv2/3Ibz87+15Ci//k9P/zJ+Tc39sJ/mzOPMnudfP
9Y+d5M/ivt7fSf6c7XJ820n+nP5hfzb39vOc5E7yZ3F/fm8n+XP+Lp4r20n+
HPbJeaed5M/pB57D2Un+nO3yfMhO8uf0G885NKeeKc/45TkEyjN+ea6Aehi/
PCdA/Yxf7vuzXcYv9/FpD+O38yf5XCfJ53Tre/m/uF//pPxZ9M/1E8pfhJf/
vZ5rsP8W9N+Fl/99uw/h5X9vz1N4+Z+c/vfrn3vJn+SUZ/4k9/q5/rmX/Fnc
r3/uJX/Odrn+uZf8Of3D9c/m3n6uf+4lf9Z3v/65D+ufe8mf5JT36597yZ/T
D1z/3Ev+nO1y/XMv+XP6heufzb2fuf7Z3Mcv1z+b+/jl+iftYfxy/bO5j1+u
fzb38cv1z+Y+fjt/fnSevr6X/4szf3r5s+gv/3v5i/Dyv9dzDfbfgv678PK/
b/chvPzv7XkKL/+T0//Mn5N3/iSnPPMnude/BP2LyDN/knt71mDPGp7DncgX
9/bvRZ75szj7gdz/3oPIM3+Of/8uf5J7/xxFnvlztrsFe7bgz86f5N7PnT/J
ffx2/iT38dv509vD+O38Se7jt/MnuY/fzp/kPn65f5Tfe6nv5f/ifv+I8mfR
X/738hfh5X+v5xrsvwX9d+Hlf9/uQ3j539vzFF7+J6f//f7RQfInOeWZP8m9
fu4fHSR/Fvf7RwfJn7Nd7h8dJH9O/3D/qLm3n/tHB8mfxf3+0SHsHx0kf5JT
3u8fHSR/Tj9w/+gg+XO2y/2jg+TPaTf3j5p7P3P/qLmPX+4fNffxy/0j2sP4
5f5Rcx+/3D9q7uOX+0fNffx2/vTrNfo+W/m/OPOnlz+L/vK/l78IL/97Pddg
/y3ovwsv//t2H8LL/96ep/DyPzn9z/w5Oc7dv+OUZ/4k9/qXoH8ReeZPcm/P
GuxZw3O4E/ni3v69yDN/FrfzgHfc/96DyDN/jvzIfn7HvX+OIs/8Odvdgj1b
8GfnT3Lv586f5D5+O3+S+/jt/OntYfx2/iT38dv5k9zHb+dPch+/3H/P75HW
9/J/cb//Tvmz6C//e/mL8PK/13MN9t+C/rvw8r9v9yG8/O/teQov/9s4eed/
v/9+lPxJTnnmT3Kvn/vvR8mfxf3++1Hy52yX++9HyZ/TP9yva+7t5/r0UfJn
cb8ecwz770fJn+SU9+PtUfLn9AOfr6Pkz9ku99+Pkj+nXu6/N/d+5v57cx+/
3H9v7uOX+++0h/HL/ffmPn65/97cxy/335v7+OX8Pb/vXd/L/8X9/J3yZ9E/
63/KX4SX/72ea7D/FvTfhZf/fbsP4eV/b89TePnf1g3v/O/n71uYv29h/r5J
/iT3+jl/38L8fQvz903y52yX8/dN8uf0D+fvzb39nL9vYf6+hfn7Fubvm+RP
csr7+fsm+XP6gfP3TfLnbJfz903y55Tj/L259zPn7819/HL+3tzHL+fvtIfx
y/l7cx+/nL839/HL+XtzH788v5TvX/DnlJpXv1AP+ZQ/B/mzyFd/UZ586r8E
/ReRr/6lPPm05xrsuYr82/db8PMt2H8P9t9Fvp4fypPP3/sIv/ch8vW8UZ58
+ucZ/PMU+Xo+KZ84n1t/7usk4w65fz55T29z/7zxnt7m/vnhPb20k88D7+lt
7vuX9/Q29/3Fe3qb0/8cr4tzvCannyc/C6efp/xFOP089VyDnbeg/y6cfp7t
PoTTz9Oep3D6mXXO9D/PGTb3zzPv0W3un2feo9vcP8+8R5d28nnmPbrN/fPM
e3Sb++eZ9+g2988zz2eewvnM5vTz5Gfh9POUvwinn6eea7DzFvTfhdPPs92H
cPp52vMUTj+zri7+ppfnWpv7vMF7bpv7vMF7bpv7vMF7bmkn8wbvuW3u8wbv
uW3u8wbvuW3u8wbPA9e4yfPAzX39xntrm/t6jPfWNvf1Fe+tpZ2sl3hvbXNf
//De2ua+nuG9tc19HcJz1JVPeA60uc/PvIe2uc/PvIe2uc/PvIeWdjI/8x7a
5j4/8x7a5j4/8x7a5j4/8/z5KZw/b04/+3tlm9PP/l7Z5vSzv1eWdt6C/rtw
+tnfK9ucfvb3yjann/25/ZOsG5D7cZD3xDb34yDviW3ux0HeE0s7OQ7yntjm
fhzkPbHN/TjIe2Kb+3GQ7zucwvsOzennyc/C6ecpfxFOP08912DnLei/C6ef
Z7sP4fTztOcpnH7mOlXxN73cp2ru6w3e49rc1xu8x7W5rzd4jyvtZL3Be1yb
+3qD97g29/UG73Ft7usNvl9zep3rTO3n4j5v8F7W5j5v8F7W5j5v8F5W2sm8
wXtZm/u8wXtZm/u8wXtZm/u8wfeSqg7helJzX9fxvaTmvq7je0nNfV3H95Jo
J+s6vpfU3Nd1fC+pua/r+F5Sc1/XpftC9ePXRfUe0Pq82af35Pl5vd5HMvXo
+/pvH30P1delet5/tqvnYf04pecOph7dl3v7fHTfr94nPJ/b5vO5pXy+v9fr
yffxev35fl3fbr4v19uT778l988t37PTe3Hn85rudUz3laV7eNL9Eum96fQ+
YHrPJZ3fTucS03mbtI+c9keUp/ycxsdUn6T6MNXnaX5Ufk3rLWm9K603pvXe
tN7+n67Pv/zrk/bx0/ko3796npw8vb9jz//J86n3dfh29X4kez5S4kvvQ/Zc
/+7hCz7k3v8f/309L5//vpjXk/++ktef/76Mbzf/fQ0vr/fY+zjVz//H+/f2
/O/G+8T//b6z7ut5f+d9k7TO7/2d11HTul9ap0rrKmkdwPs7z7Pm/2eezlFw
fCzO8XTq0fcp0ntqHN+nnXqvAuuH2a7eA8b6ZOrRe2tZ/0z+8d+n8Fz/DvXk
H/995yn/8d9fnno+/vvIU//Hf794tvvx3xee9nz893/rk+oEP5/VcyOzXT03
4uezet5j6tHzHm8fPdfh57N6HmO2q+cx/HxWz1EUT36bfv7/+oC3579fH/gH
hO21xQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtln1IlWcYxs/H89eIETFijIgtQkKciIjIYWxDJEIiRGSISFSISMhZSIw4
RMSMMWJEiIwQEREVkSESQ5yr5pyz5r6dmTlX5pwz59yIEHERuy6e3x8X5z3P
ez/3933d72un3q3OphKJxKQQhDb9GdfDF0Kdns8mE4n3hDeFN4RHOn9dcr/r
d1m4JJkPhGPCUSErmTNCmVDK3XPC2+iYkMyk8JFwWWjQWaNQKBQIp9OJRLNQ
IhQLTT4TioUioUVnk7L7lZDR8/up6INtV+LLh0IVPo0Io8JF4QLPY6l4z2ct
yRijY8vgewvPjsF+XhHeEWocn2yeEcqEUuE8eg8LFcKn2PTZeXxxnNX45Nin
0Gnd3yiOO8KAdPUL19HhuznhX+EJPtv3G8It4nTcPbrTS86cO9fmLWElxBr9
KpRL7gVhUc/3hAOSW9f/eT0f1HOesKn/G8Jt3Z0X/ta7DWFdObip3xvCdWrR
LJRQE/syTpz2aSFEv23Ttv1ughxYxrVuopauuXNxR7hKTnI6+1z3xuw3veOz
cnooR24qsDFGTi5RU+chS23cQ/Y1Sy/aZ9fOPZShhs6Fc+DYnRPX4rYwmI41
uR9iTXLEdkpnDUKBkC9Mh1jDfurQLnwsHBfqhWtCRzreOyE0uqeFIqFQ+DZE
Hb7rWl6mL2romSP09R5ht9AlmW50WNd3Iero4fyhfVSc+cKSnh8IHcl49pCZ
9mzfch+4J1Xrk8Kq/v+BbGcyzqXvTEvmyxA5oY05qBVeFfYLd30uu3XCXIix
XyNW56CNnNQj04DfheTwMDE6thcdn2x20yPulUpm+yVyUIMPtr1P6EzHnDSi
+yhzv5c7ruWU8DU1da85pjZ67iJ9U4kfTcxRMTW6imwdcV/hXi1+OHctwp8h
5vAYc/4yPlRRx1c4q4ArHOuuVKxZDzZtuxyZXczsCXrHvXYoHefAs/GZsMOs
u4aunWfetesid65hNTnbhw/uxU5yZb0XyMER/MrDjnlnEz/s65x0zSbjO/vy
BG5ahzfMWZ6T49T+ELzi3LQKayHmyJyzjux95mYATvXc9shGLxxjrvk+xB7v
ps4/hHjWRRwb+DmCD8+E56nIK+baXng1C0fa1iAcYJvbktmBo8xVRfBaC3NR
Tx/nwRObxD2KzX7JDrA3suw489RjeHQHnyax4bw9hbPMXY61n7vN7CHr8F1z
8aCeP2FHeS/tpY+W9PwA24O8sw8J+ZhKxx53r2fQaV0jQrvQJ6wrh49DnGPz
gHl+LRn7xLO1qucVdqB1jHBvP7NvWcvUMdsH4dJS7vRhy7VIMHdT9KBtWPdy
Ms6oY3Isi8kYm2X8bgnOts52+qiPOP4KMYZiZFqZw93wxIJzKPwYYs90wsN7
4AXbWiC3Q3ynnKV2njHPlmvoWm2l4p5zzVqJy7lbg0PNpTfZlSPUzbvTPpoT
68iNd28+3zmeW+/qAvZgFbM8j91/QtzBzrP1evcOJyNnmju36KM54uxm7n3X
vv+HDu9888iM3v0WYm9MhMjp03CMZ9yzPYMd73rvYO/dGf3+DK+3M/v24Sm9
7Hc/hcj5llkiRsf2CM419/qbzTNnWdekgz0xRFznqMEwPuQ4m6dOPcRYCxcf
oA9L2PXPmTPHMUcuOpmRJebEc2Ze951nzH0RXO/nbfpuhb4Y5O4yz9ZhLnSP
zWPHtTNnnISHt9AzTs904/tpdpq/O/ztOkEtVpm7YfqwkL2zTd+5Zq6L97J3
+azwCzv3Lu9midUy/qbJwAGeuwXmqhc/FslJP2crzPEQMVu3a97O7nYvedeM
hthTznUZup1zfyM00NOu+/+Ai67C
         "]]],
       Lighting->"Neutral"]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
H/OQ/a5/X54JHrKMPhu5B6QX5NycSIceZyxtW+igiywvEzbQ4Q2St8g8y14z
78Rp5xQ95sqvIyn7Rp2hTlL3eIf82TS18Jh5b9lHfMuvI/Sp5Ci5Cg8ZPGTs
RTdhtvdko+fANm+x1N2Npn+yTyftE75RK37xGljLZscAH96yb9Ty4/aRGsKZ
ZN94y2XuHsIc+wDdS3jEvAHCLcKfhUWZeMv9gzAkE3F8QDYeFVqpns7Kxrt3
LY9hLG/Elzl3j2VjH4cLI7zHV5ge6X1jn263Drq82fJ2e7PQz7Z5lx7oOXiX
rum5+tsnfBvmPc4zfbttM5a37VttA5p35EHmQfO2fJt59OX08dzLk0zTt08x
D5qecKp5TVwTqYX0Abzp0+dyT9+djjt0g/eSvxPQB7ey7YnWbWmaMTW8xv6O
AbWWvx3QU1BzX7JNbPFOz13Evc+b90HTL1kGj7qZX5eoqdUdY2LbNxPnnjpH
nejkXCituc7ORU70FvoI84S5pm8S5pt3o3WQ/ck2sb1QWGCadTxq3s1e22Pm
9fdeLjLvJttY4Dlu8b4tdk4O9L49bt6t3rcl5vE9cXQmaiq1lboxyjxk1Ik7
zENGjaJWcS66mKaO9TCPGkjdo8ZSa0s7ZsSqg2WlTbdzLMvbVmfbquS4YrOa
96Cv18oZGGmf8K2qdW5yrBnL3zrYE2xUtk4fx72Keb29F7y584bIOxxvlbw1
LvJ36xX+rs3fPVf5O/cV0mkttBEaCo2Ea4W2wpVCY6Gd0F5oYp021kG3RaKc
F+4WJgg9hDnCw0JP4WqhuXCXMF54Vz5uEQqIziUxR1vPwVzvSfa+UFiyQknQ
HwhnJMGD3iYUSYK3NRNj0C0oNKA2eU2sLU+4RmgpXM7bmXCd0Flo7rl78b3f
PrQz3dtrbip0FDoJzYSrhA7mNXVM2puH7DJi4jmZu671GFvPPrS0j/h6qX3C
l/pGc9vA1hKtaSmx0P4XzMXatwtnJhED6A+FoknwoD8SiiXBe0P0v4STwgnT
m4V0Erx3hLeFhN8vCL9ozk/077NF/yp6FzkuurTwaSYAfY7wmegjwlGhjv5d
Wzgk+rBQU3QN4bVM+MDcvwrNnBPkwrgkxh4X6iVh47BtYgsbmzJh41frvZwJ
3nHPu9G8ox63Q/iPcJbGFk8i18gRcoOcQ7aTc52Ezkcegy4x+1h0ySTWzNrb
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
TuJMzTL9rnWxiW1sYpszy9l9LBs1+f8B6AZCdA==
         "]]],
       Lighting->"Neutral"]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{251, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 
       1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
        1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 
       1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
        1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 251},
       VertexColors->None]}, 
     {GrayLevel[0], 
      Line3DBox[{1, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 
       1318, 1319, 1320, 1321, 47, 44, 297, 353, 409, 465, 521, 577, 633, 689,
        745, 801, 857, 913, 1335, 981, 979, 977, 975, 973, 971, 969, 967, 965,
        963, 961, 959, 957, 954, 898, 842, 786, 730, 674, 618, 562, 506, 450, 
       394, 338, 282, 5, 1},
       VertexColors->None], 
      Line3DBox[{4, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 
       1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
        1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 
       1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 253, 236, 
       219, 202, 185, 168, 151, 134, 117, 100, 83, 66, 49, 4},
       VertexColors->None], 
      Line3DBox[{46, 1322, 41, 38, 35, 32, 29, 26, 23, 20, 17, 14, 11, 8, 2, 
       1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
        1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 
       1202, 1203, 1204, 1205, 1206, 1207, 1262, 234, 217, 200, 183, 166, 149,
        132, 115, 98, 81, 64, 46},
       VertexColors->None], 
      Line3DBox[{252, 1308, 255, 324, 380, 436, 492, 548, 604, 660, 716, 772, 
       828, 884, 940, 1293, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 
       1345, 1346, 1347, 1348, 1349, 1178, 953, 897, 841, 785, 729, 673, 617, 
       561, 505, 449, 393, 337, 280, 281, 278, 276, 274, 272, 270, 268, 266, 
       264, 262, 260, 258, 256, 252},
       VertexColors->None], 
      Line3DBox[{982, 983, 998, 1013, 1028, 1043, 1058, 1073, 1088, 1103, 
       1118, 1133, 1148, 1163, 1350, 1177, 1176, 1175, 1174, 1173, 1172, 1171,
        1170, 1169, 1168, 1167, 1166, 1165, 1164, 1149, 1134, 1119, 1104, 
       1089, 1074, 1059, 1044, 1029, 1014, 999, 984, 955, 1278, 1323, 1324, 
       1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 982},
       VertexColors->None]}}},
   VertexColors->CompressedData["
1:eJzt3D9Lw0AYx/GjpeArUHErOHQQQbEgIpyDiOhWfAFFFKUObu5ujuIi6qKD
kyKCQ4svwFUQqaIgXQQV/3RwE8EpQ9I+JY+m5qLfLKWfO+5Cf8/d0uSys8uF
+ZQxZiJjTNp4V92apld0Ptmdmjo4ubU/9ajmZRzGYZzfX49R3We75026t/t3
I5fvObm46eTippOLm04ubjq5uOnk4qaTi5tOLm46ubjp5OKmx5WLdl760z9M
f+0469db1eHdp4b+OI7jeHM/384vVQ8frdeO4ziOh/Pazs3Ycc8djuM4rvTR
dL53IHOG4ziOK91/1W1pbuZq8bRscRzHcZ0Xht47HyqXOI7juNI/F/bWckc1
HMdxXOkdK8WN0vM9juM4rvTieDk30tX43BOO4zje2l8v9qc3+19wHMdxpVey
fR+rg284juO40v2fOI7jOI7jOI7jOI7jOI7jOI7jON6qPdgPx5Pl0rm4Yc91
1J7DE5xH+9609j0X7XOJ/I+cLJfykvKV6kGqH6nepPr06lmqf2m9SOvL+y6d
v8r59vE6+6ff2T//trPfst/G58F2d9YF/r/9C2bB64U=
    "],
   VertexNormals->CompressedData["
1:eJztmsFNw0AQRVcgCqGS3CiAEpA4U2JaogRuSOwIfzssnj+Tl5vfvll5PZ6v
RMrz28fr+8MY4+VpjMcxfz4v0/U1KJtcefP+is/73Ho/q87FPuzTeR/F5/VV
9xnqxHmOnvfeePBEv+jLOTx49MWCB4++WPDg0RcLHjz6YsGDR18sePDoiwUP
Hn2x4MGjLxY8ePTFggePvljw4F32cbXfvO52bjj8B9/53qv9ju4D31l3tG/4
+FsefC0nP1O5rDOZR/xavl3OdOXkZyqXdSbziF/Lt8uZrpz8TOWyzmQe8Wv5
djnTlZOfqVzWmcwjfi3fLme6cvIzlcs6k3nEr+Xb5UxXTn6mcllnMo/4tXy7
nOnKyc9ULutM5hG/lm+XM105+ZnKZZ3JPOLX8u1ypisnP1O5rDOZR/xavl3O
dOXkZyqXdSbziF/Lt8uZrpz8TOWyzmQe8Wv5djnTlc/PfdH84+P/hw+Hw+Fw
OBwOh8PhcDgcDofv4d/r1+1rOLwCD57ZvMHhcPhZ/M85aZbv1bj63nX2/XTn
6n13uc/qfNX/0O6d8xxv47+tH/2dC9/m8Xl+Aepckb0=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]]},
  PlotRange->{{0, 20}, {0, 20}, {-5, 5}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6524645200498095`*^9, {3.6524645502345357`*^9, 3.6524647213453226`*^9}, 
   3.6524655319126844`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", "i", ",", "0"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}], ",", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", "1", ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.1", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0., 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0., 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0., 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.06666666666666668, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.2, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.13333333333333336`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.2, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.2, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.2, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.30000000000000004`, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.20000000000000004`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.30000000000000004, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.30000000000000004`, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.30000000000000004`, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.4, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.2666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.4, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.4, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.4, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.6000000000000001, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.4000000000000001, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.6000000000000001, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.6000000000000001, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.6000000000000001, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.7000000000000001, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.46666666666666673`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.7000000000000001, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.7000000000000001, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.7000000000000001, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.8, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.5333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.8, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.8, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.9, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6000000000000001, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.9, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.9, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1., 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1., 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1., 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0.1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.6666666666666666, 0.06666666666666668],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 0.1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0.1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.6666666666666666, 0.13333333333333336`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 0.2]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.2]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0.2],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0.30000000000000004`], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.6666666666666666, 0.20000000000000004`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 0.30000000000000004]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 1, 0.30000000000000004`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0.30000000000000004`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.6666666666666666, 0.2666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 0.4]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.4]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0.4],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.6666666666666666, 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.4],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 0.6]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.6]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0.6],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0.7000000000000001], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.6666666666666666, 0.46666666666666673`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 0.7000000000000001]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 1, 0.7000000000000001]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0.7000000000000001],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.6666666666666666, 0.5333333333333334],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 0.8]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.8]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0.8],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.6666666666666666, 0.6000000000000001],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 0.9]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0.9]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 0.9],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1, 1.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.6666666666666666, 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1, 1.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 1.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1, 1.],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.652464744515648*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{
        RowBox[{"1", "-", "i"}], ",", "i", ",", "0"}], "]"}], ",", 
      RowBox[{"Disk", "[", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "1", ",", "0.2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6524649582528725`*^9, 3.652465004745532*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    {RGBColor[1., 0., 0], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {RGBColor[0.8, 0.2, 0], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {RGBColor[0.6, 0.4, 0], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {RGBColor[0.3999999999999999, 0.6000000000000001, 0], DiskBox[{0, 0}]}], 
   ",", 
   GraphicsBox[
    {RGBColor[0.19999999999999996`, 0.8, 0], DiskBox[{0, 0}]}], ",", 
   GraphicsBox[
    {RGBColor[0., 1., 0], DiskBox[{0, 0}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6524650051555557`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"RY", ",", "YG", ",", "GB"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RY", ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "i", ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"YG", ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{
         RowBox[{"1", "-", "j"}], ",", "1", ",", "0"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "0.1", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"GB", ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "1", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0.1", ",", "1", ",", "0.1"}], "}"}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Join", "[", 
     RowBox[{"RY", ",", "YG", ",", "GB"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6524650723774004`*^9, 3.6524652274712715`*^9}, {
  3.652465311631085*^9, 3.6524653632700386`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0., 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0., 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0., 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.06666666666666668, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.2, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.13333333333333336`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.2, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.2, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.2, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.30000000000000004`, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.20000000000000004`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.30000000000000004, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.30000000000000004`, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.30000000000000004`, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.4, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.2666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.4, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.4, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.4, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.6000000000000001, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.4000000000000001, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.6000000000000001, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.6000000000000001, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.6000000000000001, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.7000000000000001, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.46666666666666673`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.7000000000000001, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1, 0.7000000000000001, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.7000000000000001, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.8, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.5333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.8, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.8, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.9, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6000000000000001, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.9, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.9, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 1., 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 1., 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 1., 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.9, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6000000000000001, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.9, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.9, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.9, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.8, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.5333333333333334, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.8, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.8, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.7, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.4666666666666667, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.7, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.7, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.4, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.6, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.6, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.33333333333333337`, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.4, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.2666666666666667, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.4, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.4, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.4, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.29999999999999993`, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.19999999999999996`, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.29999999999999993, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.29999999999999993`, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.29999999999999993`, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.19999999999999996`, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.1333333333333333, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.19999999999999996, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.19999999999999996`, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.19999999999999996`, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.09999999999999998, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.06666666666666665, 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.09999999999999998, 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.09999999999999998, 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.09999999999999998, 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 1, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 1, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 1, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0.1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.06666666666666668],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0.1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0.1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0.1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.13333333333333336`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0.2]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0.2]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0.2],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0.30000000000000004`], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.20000000000000004`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0.30000000000000004]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 1, 0.30000000000000004`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0.30000000000000004`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0.4], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.2666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0.4]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0.4]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0.4],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.33333333333333337`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.4],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0.6]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0.6]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0.6],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0.7000000000000001], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.46666666666666673`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0.7000000000000001]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 1, 0.7000000000000001]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0.7000000000000001],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.5333333333333334],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0.8]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0.8]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0.8],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.6000000000000001],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 0.9]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0.9]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 0.9],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 1, 1.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 1, 1.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 1, 1.],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.652465358261752*^9, 3.6524653639200754`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorData", "[", 
  RowBox[{"\"\<VisibleSpectrum\>\"", ",", "\"\<Image\>\""}], "]"}]], "Input",
 CellChangeTimes->{
  3.6524652986653433`*^9, {3.652465340120714*^9, 3.6524653416027994`*^9}, {
   3.6524653811360607`*^9, 3.6524654014802237`*^9}, {3.6524654557233267`*^9, 
   3.6524654610226297`*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzN1f1P00ccB/AvT0UID6IMqzA2QFkj08lQqthxKCDiREQe5pAqYRQ7EQop
AQTGEBQ7lgGtUB6GMzMbDEl4rkUG5VkU62hZLVAKludCC1SzISDiHNNr0tsf
4Ce55PL64XKXe9/nbMJopyg6GIZpvR6U1+Pfua/XnfKYRi7A3lR9FemoL1MA
TI6nC5ICedBdrKy+dbMTgQhCWfLhxHboLYwXHEdOPxDtNM7p7uqCHvC3RGnr
NQQYlay6jSE90CNCD5S7OsgA/5BAeJvdC705qvQwadM4YMziEm9R+6CbJ2+W
HlieBEHdliMrChH0v6imBA5XDoKNMrPDD/ZDf+VpGGO3QwEC/FSuf2QNQsfs
9BqYrDngyw5eIEqG1L5eKsBeOeF/zliK+PBZd26mG+rbO4iWlXTUazw+9HbI
QNcvXDZJHcMkiKdVvqwtSh1A/Hr7pdYK+WPEG/3MPFwchIjPtfnlMIfuI97T
qrWL3MZD/Kj1VNKxaxxgZjv8fYxZBXjr2c/zmLTi397479BV9+M5hCIGuD04
STX36YT+dkWKdWb+4jM+eHwxtXKHYB4685tcSpvHn4D6gcNS1IY56CoFOU1/
4wBYFfYfuuOmgF7CbqA67pYC+Uc1dH/aDPQVB4sXa09HQFUcFleYNQ29THb3
yJREBlLbfOOGf52EfrJCbvqINAZOmNyMs20bh07/wZQ4xBwHuZ59lh7bxqDn
05zPzkxNAGGKXgeFLoPO8yNffX5wCuCpsSKTomHo9nuc6mZuTQMrn232aQvq
nEmJvEX+phkwEP6KZIwXQy8E3i7V6bPgSsqEf7GbOt9OHSXd16QKwBggbc13
5UO/ktcU4G44B9xyCRFfidTvjU+Rjq4R5wFr3WuhWxNXoxspCxr3jGGNNiN9
2nmoBxq1On/ejvrTxZ+Lr6tQ/69U76yHH7E6U+53D2hTPPVrnqj3r7PuYqDX
k2US1qL2H/cG6oJmGdD/RPDe5ptqL/VkiS2/mwCSgoLj7+PUbniey34QMw1a
9avIkj3qfEcxpEEJp2dBacK96IIz6nxnHjPojC9TgqhindMsihJ6rSNuYLlz
Dkzqhm3X3q3OvQivo0wZmwdUWqsqdnFG47wqIBu0bh7lyRE/WRmZuQU/jXhv
eoOvT+wk4uALva0ZPeOI2wD8M9LDUcRD4mpFSeAJ4gkX9nYly9F+RhBldONv
oH3LKCb4XLyQjzhj3ZsQx/633h0PMxTIq8ToO/EinzflBqP+cfXaPt7IPOJG
OuyQrjDUObp2gsUmJeJkXLU7YYsCcfMNn3G/jNXMDYYV07NzFH2a+cCwnTSv
/bv2T6H94gI2Gn1jAvG1+ZbOfcaaucGwaKdGHwOWZm4wbCShXiy1kCF+OZHc
EkocRtzx5cpSwZJmnjBMdrnw0967mv8jhv2Cc76ISxYj/kDcX/B1pAhxqzql
dyi9D3FajtZqULIAvZepqyp76iPEDdojTz0s6UEc95NfPU3YjfjsJaKFOa4L
8X8Ai+Eh4w==
   "], {{0, 0}, {1, 1}}],
  AspectRatio->NCache[
    Rational[1, 8], 0.125],
  ContentSelectable->False,
  ImageSize->250,
  PlotRange->{{0, 1}, {0, 1}}]], "Output",
 CellChangeTimes->{
  3.652465299160372*^9, 3.652465342784867*^9, {3.6524653873934183`*^9, 
   3.652465402005254*^9}, 3.6524654615496597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"T", ",", "RY", ",", "YG", ",", "GB", ",", "col", ",", "cgrad"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"T", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{"0.5733", "*", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"21.905", "*", "x"}], "+", "500"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"cgrad", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<VisibleSpectrum\>\"", "]"}], "[", 
      RowBox[{"Rescale", "[", 
       RowBox[{
        RowBox[{"T", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"T", "[", "0", "]"}], ",", 
          RowBox[{"T", "[", "20", "]"}]}], "}"}]}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"RegionPlot3D", "[", 
     RowBox[{
      RowBox[{"z", "<", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "20"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"cgrad", "[", "#1", "]"}], "&"}], ")"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6524655571981306`*^9, 3.6524656418339715`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJztnT+rc1sRxg+Kb3+bXdlsiAEhINmk91SCrR9BsLz6Xe5Hsbj2ae1S2MQi
BAlIEDtb9b7HeefM73kej4KlQfDmx7yzJrP2zJr1Z6+z/vI3v/jV915eXn72
g5eX77/8559vdj//5/9++9P6/ruvr99+ff3bTxNP3xMvPcXTv5vy52DPWf49
5evzndS3X/9e9BSnHspP/ZdgzyXYcxE9n9Vf/yB6ilMP5aed1/C7ruF3XYO/
b6E/b6GfbsE/9+Cfe/DPXfR8xt/8SfQUpx7K1+ft5z6Cnx/Bzw/R81n97s+i
pzj1UL4+b/5/hv56hv56ip7PYt/+RfQUp57E//gd/vtfJR6LUz859Uz5T68+
b3x6pV5yr4d54NOrj+uSZ5x+evVxV3oYR2UP46L08zn/9Oqf22qXz+GnV/9c
lT18Tj69sh+LJ/+Tv7X3lfRLcfYLuddzFj3slyl/Ec5+mXquwc5b0H8Xzn6Z
7T6Es1+mPU/h7Jfiyf++v5YQL4v0C7nXw3hZQrwsIV6WEC9LiJeyh/GyhHhZ
QrwsIV6WEC9LiJclxMsS/U/+o88N/lD6pTj7hdzrOYse9suUvwhnv0w912Dn
Lei/C2e/zHYfwtkv056ncPZL8eR/H0dryGOr9Au518M8toY8toY8toY8toY8
VvYwj60hj60hj60hj60hj60hj60hj63R/74e2Em/FGe/kHs9rOd30i9TnvX2
Tvpl6mE9XPawvt1JvxT39edO+qW4rw930i/Fff22i/73+W0fxpf96/xeebK5
18PxZR/Gl30YX/ZhfNmH8aXs4fiyD+PLPowv+zC+7MP4sg/jyz6ML/vof/Jf
f/73P5Z+Kc5+Ifd6zqKH/TLlL8LZL1PPNdh5C/rvwtkvs92HcPbLtOcpnP1S
PPnfjzuHMO4fpF/IvR6O+4cw7h/CuH8I4/4hjPtlD8f9Qxj3D2HcP4Rx/xDG
/UMY9w9h3D9E/5N//v71T6RfirNfyL2es+hhv0z5i3D2y9RzDXbegv67cPbL
bPchnP0y7XkKZ78UT/739cAx1GNH6Rdyr4f12DHUY8dQjx1DPXYM9VjZw3rs
GOqxY6jHjqEeO4Z67BjqsWOox47R/z6OtpDHNukXcq+HeWwLeWwLeWwLeWwL
eazsYR7bQh7bQh7bQh7bQh7bQh7bQh7bov99nXYKdfJJ+oXy5C/2c/rSX14P
6+rTl36kPPt36uG69ynU4acv/U55Pg+zXa5jn0LdXn7genVzbz/XpU+hzj99
ea4o7+v/05fnzf9ezgtOX55Dyvv5wunL8+n9w3nEKcwjMk/P7Vw3zuu29X0+
t59e/f4R5c+ifz6flL8In88b9VyD/beg/y58Pg9s9yF89i/teQqf/dKc/uf6
/ORcb29O+Tf7uA7c3Ovn+mRzyvt1s+beHq7nNPfPIdcZmnv7Of9tTnk/L2vu
fy/nC80p7+vY5t4/rK+ae3s47jf3/uS409z7meNOcx+/HEea+/jluEB7GL/M
8819/DJvN/fxyzzc3Mdv50/GW33Iy//FmT+9/Fn0l/+9/EV4+d/ruQb7b0H/
XXj537f7EF7+9/Y8hZf/yel/5s/Jmb+/kvxZ3Nv7leTPqWcJ+heRZ/4k9/as
wZ41PIc7kS/u7d+LPPNnceZPcv97DyLP/Dn8+y5/knv/HEWe+XO2uwV7tuDP
zp/k3s+dP8l9/Hb+JPfx2/nT28P47fxJ7uO38ye5j9/On+Q+fll/5n3Q+j7H
ryXUn5Q/i/45flH+InyOX9RzDfbfgv678Dl+sd2H8PK/t+cpfI5fzel/X38u
of5cQv25hPpzCfXnEurPJdSfS6g/l1B/LqH+XEL9WXaw/mzu7Wf9uYT6cwn1
5xLqzyXUn0uoP5dQfy6h/lxC/bmE+nMJ9ecS6s/yG+vP5t7PrD+b+/hl/dnc
xy/rT9rD+GX92dzHL+vP5j5+WX829/Hb+fOj8wr1vfxfnPnTy59Ff/nfy1+E
l/+9nmuw/xb034WX/327D+Hlf2/PU3j5n5z+Z/6cvPMnOeWZP8m9/iXoX0Se
v4Pc27MGe9bwHO5Evri3fy/yzJ/FmT/J/e89iDzz5/j97/InuffPUeSZP2e7
W7BnC/7s/Enu/dz5k9zHb+dPch+/nT+9PYzfzp/kPn47f5L7+O38Se7jl/P3
fK6ovpf/i/v5O+XPon/W/5S/CC//ez3XYP8t6L8LL//7dh/Cy//enqfw8j85
/e/n76vkT3LKM3+Se/2sr1fJn8X9eLJK/pzt0n+r5M8px/l7c28/5++r5M/i
fv6+hvn7KvmTnPJ+/r5K/px+4Px9lfw52+X8fZX8Of3G+Xtz72fO35v7+OX8
vbmPX87faQ/jl/P35j5+OX9v7uOX8/fmPn65r5TP/9V/lf+LM396+bPoL/97
+Yvw8r/Xcw3234L+u/Dyv2/3Ibz87+15Ci//k9P/zJ+Tc39sJ/mzOPMnudfP
9Y+d5M/ivt7fSf6c7XJ820n+nP5hfzb39vOc5E7yZ3F/fm8n+XP+Lp4r20n+
HPbJeaed5M/pB57D2Un+nO3yfMhO8uf0G885NKeeKc/45TkEyjN+ea6Aehi/
PCdA/Yxf7vuzXcYv9/FpD+O38yf5XCfJ53Tre/m/uF//pPxZ9M/1E8pfhJf/
vZ5rsP8W9N+Fl/99uw/h5X9vz1N4+Z+c/vfrn3vJn+SUZ/4k9/q5/rmX/Fnc
r3/uJX/Odrn+uZf8Of3D9c/m3n6uf+4lf9Z3v/65D+ufe8mf5JT36597yZ/T
D1z/3Ev+nO1y/XMv+XP6heufzb2fuf7Z3Mcv1z+b+/jl+iftYfxy/bO5j1+u
fzb38cv1z+Y+fjt/fnSevr6X/4szf3r5s+gv/3v5i/Dyv9dzDfbfgv678PK/
b/chvPzv7XkKL/+T0//Mn5N3/iSnPPMnude/BP2LyDN/knt71mDPGp7DncgX
9/bvRZ75szj7gdz/3oPIM3+Of/8uf5J7/xxFnvlztrsFe7bgz86f5N7PnT/J
ffx2/iT38dv509vD+O38Se7jt/MnuY/fzp/kPn65f5Tfe6nv5f/ifv+I8mfR
X/738hfh5X+v5xrsvwX9d+Hlf9/uQ3j539vzFF7+J6f//f7RQfInOeWZP8m9
fu4fHSR/Fvf7RwfJn7Nd7h8dJH9O/3D/qLm3n/tHB8mfxf3+0SHsHx0kf5JT
3u8fHSR/Tj9w/+gg+XO2y/2jg+TPaTf3j5p7P3P/qLmPX+4fNffxy/0j2sP4
5f5Rcx+/3D9q7uOX+0fNffx2/vTrNfo+W/m/OPOnlz+L/vK/l78IL/97Pddg
/y3ovwsv//t2H8LL/96ep/DyPzn9z/w5Oc7dv+OUZ/4k9/qXoH8ReeZPcm/P
GuxZw3O4E/ni3v69yDN/FrfzgHfc/96DyDN/jvzIfn7HvX+OIs/8Odvdgj1b
8GfnT3Lv586f5D5+O3+S+/jt/OntYfx2/iT38dv5k9zHb+dPch+/3H/P75HW
9/J/cb//Tvmz6C//e/mL8PK/13MN9t+C/rvw8r9v9yG8/O/teQov/9s4eed/
v/9+lPxJTnnmT3Kvn/vvR8mfxf3++1Hy52yX++9HyZ/TP9yva+7t5/r0UfJn
cb8ecwz770fJn+SU9+PtUfLn9AOfr6Pkz9ku99+Pkj+nXu6/N/d+5v57cx+/
3H9v7uOX+++0h/HL/ffmPn65/97cxy/335v7+OX8Pb/vXd/L/8X9/J3yZ9E/
63/KX4SX/72ea7D/FvTfhZf/fbsP4eV/b89TePnf1g3v/O/n71uYv29h/r5J
/iT3+jl/38L8fQvz903y52yX8/dN8uf0D+fvzb39nL9vYf6+hfn7Fubvm+RP
csr7+fsm+XP6gfP3TfLnbJfz903y55Tj/L259zPn7819/HL+3tzHL+fvtIfx
y/l7cx+/nL839/HL+XtzH788v5TvX/DnlJpXv1AP+ZQ/B/mzyFd/UZ586r8E
/ReRr/6lPPm05xrsuYr82/db8PMt2H8P9t9Fvp4fypPP3/sIv/ch8vW8UZ58
+ucZ/PMU+Xo+KZ84n1t/7usk4w65fz55T29z/7zxnt7m/vnhPb20k88D7+lt
7vuX9/Q29/3Fe3qb0/8cr4tzvCannyc/C6efp/xFOP089VyDnbeg/y6cfp7t
PoTTz9Oep3D6mXXO9D/PGTb3zzPv0W3un2feo9vcP8+8R5d28nnmPbrN/fPM
e3Sb++eZ9+g2988zz2eewvnM5vTz5Gfh9POUvwinn6eea7DzFvTfhdPPs92H
cPp52vMUTj+zri7+ppfnWpv7vMF7bpv7vMF7bpv7vMF7bmkn8wbvuW3u8wbv
uW3u8wbvuW3u8wbPA9e4yfPAzX39xntrm/t6jPfWNvf1Fe+tpZ2sl3hvbXNf
//De2ua+nuG9tc19HcJz1JVPeA60uc/PvIe2uc/PvIe2uc/PvIeWdjI/8x7a
5j4/8x7a5j4/8x7a5j4/8/z5KZw/b04/+3tlm9PP/l7Z5vSzv1eWdt6C/rtw
+tnfK9ucfvb3yjann/25/ZOsG5D7cZD3xDb34yDviW3ux0HeE0s7OQ7yntjm
fhzkPbHN/TjIe2Kb+3GQ7zucwvsOzennyc/C6ecpfxFOP08912DnLei/C6ef
Z7sP4fTztOcpnH7mOlXxN73cp2ru6w3e49rc1xu8x7W5rzd4jyvtZL3Be1yb
+3qD97g29/UG73Ft7usNvl9zep3rTO3n4j5v8F7W5j5v8F7W5j5v8F5W2sm8
wXtZm/u8wXtZm/u8wXtZm/u8wfeSqg7helJzX9fxvaTmvq7je0nNfV3H95Jo
J+s6vpfU3Nd1fC+pua/r+F5Sc1/XpftC9ePXRfUe0Pq82af35Pl5vd5HMvXo
+/pvH30P1delet5/tqvnYf04pecOph7dl3v7fHTfr94nPJ/b5vO5pXy+v9fr
yffxev35fl3fbr4v19uT778l988t37PTe3Hn85rudUz3laV7eNL9Eum96fQ+
YHrPJZ3fTucS03mbtI+c9keUp/ycxsdUn6T6MNXnaX5Ufk3rLWm9K603pvXe
tN7+n67Pv/zrk/bx0/ko3796npw8vb9jz//J86n3dfh29X4kez5S4kvvQ/Zc
/+7hCz7k3v8f/309L5//vpjXk/++ktef/76Mbzf/fQ0vr/fY+zjVz//H+/f2
/O/G+8T//b6z7ut5f+d9k7TO7/2d11HTul9ap0rrKmkdwPs7z7Pm/2eezlFw
fCzO8XTq0fcp0ntqHN+nnXqvAuuH2a7eA8b6ZOrRe2tZ/0z+8d+n8Fz/DvXk
H/995yn/8d9fnno+/vvIU//Hf794tvvx3xee9nz893/rk+oEP5/VcyOzXT03
4uezet5j6tHzHm8fPdfh57N6HmO2q+cx/HxWz1EUT36bfv7/+oC3579fH/gH
hO21xQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwtln1IlWcYxs/H89eIETFijIgtQkKciIjIYWxDJEIiRGSISFSISMhZSIw4
RMSMMWJEiIwQEREVkSESQ5yr5pyz5r6dmTlX5pwz59yIEHERuy6e3x8X5z3P
ez/3933d72un3q3OphKJxKQQhDb9GdfDF0Kdns8mE4n3hDeFN4RHOn9dcr/r
d1m4JJkPhGPCUSErmTNCmVDK3XPC2+iYkMyk8JFwWWjQWaNQKBQIp9OJRLNQ
IhQLTT4TioUioUVnk7L7lZDR8/up6INtV+LLh0IVPo0Io8JF4QLPY6l4z2ct
yRijY8vgewvPjsF+XhHeEWocn2yeEcqEUuE8eg8LFcKn2PTZeXxxnNX45Nin
0Gnd3yiOO8KAdPUL19HhuznhX+EJPtv3G8It4nTcPbrTS86cO9fmLWElxBr9
KpRL7gVhUc/3hAOSW9f/eT0f1HOesKn/G8Jt3Z0X/ta7DWFdObip3xvCdWrR
LJRQE/syTpz2aSFEv23Ttv1ughxYxrVuopauuXNxR7hKTnI6+1z3xuw3veOz
cnooR24qsDFGTi5RU+chS23cQ/Y1Sy/aZ9fOPZShhs6Fc+DYnRPX4rYwmI41
uR9iTXLEdkpnDUKBkC9Mh1jDfurQLnwsHBfqhWtCRzreOyE0uqeFIqFQ+DZE
Hb7rWl6mL2romSP09R5ht9AlmW50WNd3Iero4fyhfVSc+cKSnh8IHcl49pCZ
9mzfch+4J1Xrk8Kq/v+BbGcyzqXvTEvmyxA5oY05qBVeFfYLd30uu3XCXIix
XyNW56CNnNQj04DfheTwMDE6thcdn2x20yPulUpm+yVyUIMPtr1P6EzHnDSi
+yhzv5c7ruWU8DU1da85pjZ67iJ9U4kfTcxRMTW6imwdcV/hXi1+OHctwp8h
5vAYc/4yPlRRx1c4q4ArHOuuVKxZDzZtuxyZXczsCXrHvXYoHefAs/GZsMOs
u4aunWfetesid65hNTnbhw/uxU5yZb0XyMER/MrDjnlnEz/s65x0zSbjO/vy
BG5ahzfMWZ6T49T+ELzi3LQKayHmyJyzjux95mYATvXc9shGLxxjrvk+xB7v
ps4/hHjWRRwb+DmCD8+E56nIK+baXng1C0fa1iAcYJvbktmBo8xVRfBaC3NR
Tx/nwRObxD2KzX7JDrA3suw489RjeHQHnyax4bw9hbPMXY61n7vN7CHr8F1z
8aCeP2FHeS/tpY+W9PwA24O8sw8J+ZhKxx53r2fQaV0jQrvQJ6wrh49DnGPz
gHl+LRn7xLO1qucVdqB1jHBvP7NvWcvUMdsH4dJS7vRhy7VIMHdT9KBtWPdy
Ms6oY3Isi8kYm2X8bgnOts52+qiPOP4KMYZiZFqZw93wxIJzKPwYYs90wsN7
4AXbWiC3Q3ynnKV2njHPlmvoWm2l4p5zzVqJy7lbg0PNpTfZlSPUzbvTPpoT
68iNd28+3zmeW+/qAvZgFbM8j91/QtzBzrP1evcOJyNnmju36KM54uxm7n3X
vv+HDu9888iM3v0WYm9MhMjp03CMZ9yzPYMd73rvYO/dGf3+DK+3M/v24Sm9
7Hc/hcj5llkiRsf2CM419/qbzTNnWdekgz0xRFznqMEwPuQ4m6dOPcRYCxcf
oA9L2PXPmTPHMUcuOpmRJebEc2Ze951nzH0RXO/nbfpuhb4Y5O4yz9ZhLnSP
zWPHtTNnnISHt9AzTs904/tpdpq/O/ztOkEtVpm7YfqwkL2zTd+5Zq6L97J3
+azwCzv3Lu9midUy/qbJwAGeuwXmqhc/FslJP2crzPEQMVu3a97O7nYvedeM
hthTznUZup1zfyM00NOu+/+Ai67C
         "]]],
       Lighting->"Neutral"]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
H/OQ/a5/X54JHrKMPhu5B6QX5NycSIceZyxtW+igiywvEzbQ4Q2St8g8y14z
78Rp5xQ95sqvIyn7Rp2hTlL3eIf82TS18Jh5b9lHfMuvI/Sp5Ci5Cg8ZPGTs
RTdhtvdko+fANm+x1N2Npn+yTyftE75RK37xGljLZscAH96yb9Ty4/aRGsKZ
ZN94y2XuHsIc+wDdS3jEvAHCLcKfhUWZeMv9gzAkE3F8QDYeFVqpns7Kxrt3
LY9hLG/Elzl3j2VjH4cLI7zHV5ge6X1jn263Drq82fJ2e7PQz7Z5lx7oOXiX
rum5+tsnfBvmPc4zfbttM5a37VttA5p35EHmQfO2fJt59OX08dzLk0zTt08x
D5qecKp5TVwTqYX0Abzp0+dyT9+djjt0g/eSvxPQB7ey7YnWbWmaMTW8xv6O
AbWWvx3QU1BzX7JNbPFOz13Evc+b90HTL1kGj7qZX5eoqdUdY2LbNxPnnjpH
nejkXCituc7ORU70FvoI84S5pm8S5pt3o3WQ/ck2sb1QWGCadTxq3s1e22Pm
9fdeLjLvJttY4Dlu8b4tdk4O9L49bt6t3rcl5vE9cXQmaiq1lboxyjxk1Ik7
zENGjaJWcS66mKaO9TCPGkjdo8ZSa0s7ZsSqg2WlTbdzLMvbVmfbquS4YrOa
96Cv18oZGGmf8K2qdW5yrBnL3zrYE2xUtk4fx72Keb29F7y584bIOxxvlbw1
LvJ36xX+rs3fPVf5O/cV0mkttBEaCo2Ea4W2wpVCY6Gd0F5oYp021kG3RaKc
F+4WJgg9hDnCw0JP4WqhuXCXMF54Vz5uEQqIziUxR1vPwVzvSfa+UFiyQknQ
HwhnJMGD3iYUSYK3NRNj0C0oNKA2eU2sLU+4RmgpXM7bmXCd0Flo7rl78b3f
PrQz3dtrbip0FDoJzYSrhA7mNXVM2puH7DJi4jmZu671GFvPPrS0j/h6qX3C
l/pGc9vA1hKtaSmx0P4XzMXatwtnJhED6A+FoknwoD8SiiXBe0P0v4STwgnT
m4V0Erx3hLeFhN8vCL9ozk/077NF/yp6FzkuurTwaSYAfY7wmegjwlGhjv5d
Wzgk+rBQU3QN4bVM+MDcvwrNnBPkwrgkxh4X6iVh47BtYgsbmzJh41frvZwJ
3nHPu9G8ox63Q/iPcJbGFk8i18gRcoOcQ7aTc52Ezkcegy4x+1h0ySTWzNrb
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
TuJMzTL9rnWxiW1sYpszy9l9LBs1+f8B6AZCdA==
         "]]],
       Lighting->"Neutral"]}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{251, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 
       1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
        1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 
       1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
        1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 251},
       VertexColors->None]}, 
     {GrayLevel[0], 
      Line3DBox[{1, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 
       1318, 1319, 1320, 1321, 47, 44, 297, 353, 409, 465, 521, 577, 633, 689,
        745, 801, 857, 913, 1335, 981, 979, 977, 975, 973, 971, 969, 967, 965,
        963, 961, 959, 957, 954, 898, 842, 786, 730, 674, 618, 562, 506, 450, 
       394, 338, 282, 5, 1},
       VertexColors->None], 
      Line3DBox[{4, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 
       1273, 1274, 1275, 1276, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
        1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 
       1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 253, 236, 
       219, 202, 185, 168, 151, 134, 117, 100, 83, 66, 49, 4},
       VertexColors->None], 
      Line3DBox[{46, 1322, 41, 38, 35, 32, 29, 26, 23, 20, 17, 14, 11, 8, 2, 
       1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
        1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 
       1202, 1203, 1204, 1205, 1206, 1207, 1262, 234, 217, 200, 183, 166, 149,
        132, 115, 98, 81, 64, 46},
       VertexColors->None], 
      Line3DBox[{252, 1308, 255, 324, 380, 436, 492, 548, 604, 660, 716, 772, 
       828, 884, 940, 1293, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 
       1345, 1346, 1347, 1348, 1349, 1178, 953, 897, 841, 785, 729, 673, 617, 
       561, 505, 449, 393, 337, 280, 281, 278, 276, 274, 272, 270, 268, 266, 
       264, 262, 260, 258, 256, 252},
       VertexColors->None], 
      Line3DBox[{982, 983, 998, 1013, 1028, 1043, 1058, 1073, 1088, 1103, 
       1118, 1133, 1148, 1163, 1350, 1177, 1176, 1175, 1174, 1173, 1172, 1171,
        1170, 1169, 1168, 1167, 1166, 1165, 1164, 1149, 1134, 1119, 1104, 
       1089, 1074, 1059, 1044, 1029, 1014, 999, 984, 955, 1278, 1323, 1324, 
       1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 982},
       VertexColors->None]}}},
   VertexColors->CompressedData["
1:eJztyLENQFAUQNEXYhB7SHTofmIEiZpVjKHSCIkpjERhB825zU1OOUz9mEVE
U0Tk71N7rPN11vG1b1WXlrvmnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHP+rz/tpsWj
    "],
   VertexNormals->CompressedData["
1:eJztmsFNw0AQRVcgCqGS3CiAEpA4U2JaogRuSOwIfzssnj+Tl5vfvll5PZ6v
RMrz28fr+8MY4+VpjMcxfz4v0/U1KJtcefP+is/73Ho/q87FPuzTeR/F5/VV
9xnqxHmOnvfeePBEv+jLOTx49MWCB4++WPDg0RcLHjz6YsGDR18sePDoiwUP
Hn2x4MGjLxY8ePTFggePvljw4F32cbXfvO52bjj8B9/53qv9ju4D31l3tG/4
+FsefC0nP1O5rDOZR/xavl3OdOXkZyqXdSbziF/Lt8uZrpz8TOWyzmQe8Wv5
djnTlZOfqVzWmcwjfi3fLme6cvIzlcs6k3nEr+Xb5UxXTn6mcllnMo/4tXy7
nOnKyc9ULutM5hG/lm+XM105+ZnKZZ3JPOLX8u1ypisnP1O5rDOZR/xavl3O
dOXkZyqXdSbziF/Lt8uZrpz8TOWyzmQe8Wv5djnTlc/PfdH84+P/hw+Hw+Fw
OBwOh8PhcDgcDofv4d/r1+1rOLwCD57ZvMHhcPhZ/M85aZbv1bj63nX2/XTn
6n13uc/qfNX/0O6d8xxv47+tH/2dC9/m8Xl+Aepckb0=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Lighting->"Neutral",
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]]},
  PlotRange->{{0, 20}, {0, 20}, {-5, 5}},
  PlotRangePadding->{Automatic, Automatic, Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6524656309593496`*^9, 3.6524656422339945`*^9}}]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 14434, 332, 1550, "Input"],
Cell[15017, 356, 8606, 158, 524, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23660, 519, 2224, 57, 136, "Input"],
Cell[25887, 578, 11483, 204, 301, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37407, 787, 348, 9, 33, "Input"],
Cell[37758, 798, 156, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37951, 805, 1734, 46, 156, "Input"],
Cell[39688, 853, 20420, 346, 429, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60145, 1204, 1686, 47, 138, "Input"],
Cell[61834, 1253, 68900, 1146, 307, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[130771, 2404, 3736, 103, 316, "Input"],
Cell[134510, 2509, 20797, 353, 429, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155344, 2867, 501, 15, 31, "Input"],
Cell[155848, 2884, 31629, 857, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187514, 3746, 443, 12, 31, "Input"],
Cell[187960, 3760, 558, 16, 197, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188555, 3781, 1312, 35, 152, "Input"],
Cell[189870, 3818, 46352, 1251, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236259, 5074, 322, 6, 31, "Input"],
Cell[236584, 5082, 1902, 36, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238523, 5123, 1978, 54, 196, "Input"],
Cell[240504, 5179, 20348, 345, 429, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
