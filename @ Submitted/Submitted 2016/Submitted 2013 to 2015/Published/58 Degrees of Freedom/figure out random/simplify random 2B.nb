(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     40026,        828]
NotebookOptionsPosition[     39203,        795]
NotebookOutlinePosition[     39548,        810]
CellTagsIndexPosition[     39505,        807]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "data", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"data", "=", 
       RowBox[{"Range", "@", "10"}]}], ";", "\[IndentingNewLine]", "set", ";",
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"rand", "\[Equal]", "False"}], ",", 
          RowBox[{"SeedRandom", "[", "n", "]"}]}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"data", ",", "n"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"set", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Setter"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rand", ",", "False", ",", "\"\<random\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "5", ",", "\"\<\>\""}], "}"}], ",", "1", ",", "9", 
      ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6652641629397755`*^9, 3.6652641631717763`*^9}, 
   3.665264248641204*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 5, $CellContext`rand$$ = 
    True, $CellContext`set$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`set$$], 1, ""}, {1, 2, 3}}, {{
       Hold[$CellContext`rand$$], False, "random"}, {True, False}}, {{
       Hold[$CellContext`n$$], 5, ""}, 1, 9, 1}}, Typeset`size$$ = {
    116., {2., 8.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`set$536727$$ = 
    0, $CellContext`rand$536728$$ = False, $CellContext`n$536729$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 5, $CellContext`rand$$ = 
        False, $CellContext`set$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`set$$, $CellContext`set$536727$$, 0], 
        Hold[$CellContext`rand$$, $CellContext`rand$536728$$, False], 
        Hold[$CellContext`n$$, $CellContext`n$536729$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`data$}, $CellContext`data$ = 
         Range[10]; $CellContext`set$$; If[$CellContext`rand$$ == False, 
          SeedRandom[$CellContext`n$$]]; 
        RandomSample[$CellContext`data$, $CellContext`n$$]], 
      "Specifications" :> {{{$CellContext`set$$, 1, ""}, {1, 2, 3}, 
         ControlType -> Setter}, {{$CellContext`rand$$, False, "random"}, {
         True, False}}, {{$CellContext`n$$, 5, ""}, 1, 9, 1, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{338., {71., 78.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6652641874014006`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"randomNormal", ",", "randomCauchy", ",", "newRandomData"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Mean", "@", 
              RowBox[{"Take", "[", 
               RowBox[{"#", ",", "i"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1000"}], "}"}]}], "]"}], "&"}], "[", 
          "randomNormal", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Mean", "@", 
              RowBox[{"Take", "[", 
               RowBox[{"#", ",", "i"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1000"}], "}"}]}], "]"}], "&"}], "[", 
          "randomCauchy", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"DataRange", "\[Rule]", "n"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "50", ",", "1000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<New random data\>\"", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"randomNormal", ",", "randomCauchy"}], "}"}], "=", 
        RowBox[{"newRandomData", "[", "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"newRandomData", "[", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"10", ",", "1"}], "]"}], ",", "1000"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"NormalDistribution", ",", "CauchyDistribution"}], "}"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"randomNormal", ",", "randomCauchy"}], "}"}], "=", 
       RowBox[{"newRandomData", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
     ")"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.665264341144121*^9, 3.665264395047909*^9}, {
  3.665264428519253*^9, 3.6652644793680286`*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`randomNormal$$ = CompressedData["
1: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
  "], $CellContext`randomCauchy$$ = CompressedData["
1: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
  "], $CellContext`newRandomData$$}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 271., Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 50, 1000}, {
       Hold[
        Button[
        "New random data", {$CellContext`randomNormal$$, \
$CellContext`randomCauchy$$} = $CellContext`newRandomData$$[]]], 
       Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     360., {113., 117.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`n$536834$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 50}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$536834$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> ListLinePlot[{
          (Table[
           Mean[
            Take[#, $CellContext`i]], {$CellContext`i, 
            1000}]& )[$CellContext`randomNormal$$], 
          (Table[
           Mean[
            Take[#, $CellContext`i]], {$CellContext`i, 
            1000}]& )[$CellContext`randomCauchy$$]}, PlotRange -> Full, 
         DataRange -> $CellContext`n$$, Frame -> True, Axes -> False], 
       "Specifications" :> {{$CellContext`n$$, 50, 1000}, 
         Button[
         "New random data", {$CellContext`randomNormal$$, \
$CellContext`randomCauchy$$} = $CellContext`newRandomData$$[]]}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{411., {173., 180.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{{
    DownValues[$CellContext`newRandomData$$] = {HoldPattern[
         $CellContext`newRandomData$$[]] :> Map[RandomVariate[
          #[10, 1], 1000]& , {NormalDistribution, CauchyDistribution}]}}},
  Initialization:>($CellContext`newRandomData$$[] := Map[RandomVariate[
       #[10, 1], 1000]& , {
      NormalDistribution, 
       CauchyDistribution}]; {$CellContext`randomNormal$$, \
$CellContext`randomCauchy$$} = $CellContext`newRandomData$$[]; 
   Null)]], "Output",
 CellChangeTimes->{3.6652644009359393`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"list", ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "10"}], "}"}], ",", "1", ",", "20", ",", "1"}], "}"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"list", ",", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"1", ",", "10"}], "]"}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Generate\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ngen", "=", "n"}], ";", 
       RowBox[{"list", "=", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"1", ",", "ngen"}], "]"}]}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6652645164718447`*^9, 3.6652645359589367`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`list$$ = {0.20211989542461128`, 
    0.9658322803338397, 0.8494346863784397, 0.08118937697979689, 
    0.35158789929199696`, 0.8997343346311562, 0.8176469113102995, 
    0.5302259104649232, 0.27998362106179964`, 
    0.5399238567215792}, $CellContext`n$$ = 10, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 10}, 1, 20, 1}, {{
       Hold[$CellContext`list$$], {0.20211989542461128`, 0.9658322803338397, 
       0.8494346863784397, 0.08118937697979689, 0.35158789929199696`, 
       0.8997343346311562, 0.8176469113102995, 0.5302259104649232, 
       0.27998362106179964`, 0.5399238567215792}}}, {
      Hold[
       Button[
       "Generate", {$CellContext`ngen = $CellContext`n$$; $CellContext`list$$ = 
          RandomReal[1, $CellContext`ngen]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    360., {113., 118.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$1657$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`list$$ = {0.20211989542461128`, 
         0.9658322803338397, 0.8494346863784397, 0.08118937697979689, 
         0.35158789929199696`, 0.8997343346311562, 0.8176469113102995, 
         0.5302259104649232, 0.27998362106179964`, 
         0.5399238567215792}, $CellContext`n$$ = 10}, "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$1657$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ListPlot[$CellContext`list$$, 
        PlotRange -> {{0, $CellContext`n$$}, {0, 1}}], 
      "Specifications" :> {{{$CellContext`n$$, 10}, 1, 20, 
         1}, {{$CellContext`list$$, {0.20211989542461128`, 0.9658322803338397,
           0.8494346863784397, 0.08118937697979689, 0.35158789929199696`, 
          0.8997343346311562, 0.8176469113102995, 0.5302259104649232, 
          0.27998362106179964`, 0.5399238567215792}}, ControlType -> None}, 
        Button[
        "Generate", {$CellContext`ngen = $CellContext`n$$; \
$CellContext`list$$ = RandomReal[1, $CellContext`ngen]}]}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {174., 181.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6652645424274645`*^9, 3.6653279756721587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "5"}], "}"}], ",", "1", ",", "9", ",", "1"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"length", ",", "n"}], "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<BOGGLE!\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", "length"}], ";", 
       RowBox[{"data", "=", 
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"Range", "@", "10"}], ",", "data"}], "]"}]}]}], "}"}]}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.665264571928104*^9, 3.6652645729156094`*^9}, {
  3.665264608990289*^9, 3.665264853029699*^9}, {3.665264896210904*^9, 
  3.6652649023394327`*^9}, {3.6652649333690863`*^9, 3.6652649542296953`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`length$$ = $CellContext`n$$, \
$CellContext`n$$ = 7, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 5}, 1, 9, 1}, {{
       Hold[$CellContext`length$$], $CellContext`n$$}}, {
      Hold[
       Button[
       "BOGGLE!", {$CellContext`data = $CellContext`length$$; \
$CellContext`data = RandomSample[
            Range[10], $CellContext`data]}]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {158., {2., 8.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$539599$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`length$$ = $CellContext`n$$, \
$CellContext`n$$ = 5}, "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$539599$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`data, 
      "Specifications" :> {{{$CellContext`n$$, 5}, 1, 9, 
         1}, {{$CellContext`length$$, $CellContext`n$$}, ControlType -> None}, 
        Button[
        "BOGGLE!", {$CellContext`data = $CellContext`length$$; \
$CellContext`data = RandomSample[
             Range[10], $CellContext`data]}]}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{258., {66., 73.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6652648570452185`*^9, 3.6652649043639402`*^9, 
  3.6652649551457033`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"RandomInteger", "[", 
  RowBox[{"1", ",", "9"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"RandomReal", "[", 
  RowBox[{"1", ",", "9"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6652647052287564`*^9, 3.665264709195277*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
   ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.665264709968281*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9878277705609011`", ",", "0.8007800782012042`", ",", 
   "0.9439823981188453`", ",", "0.876746776626629`", ",", 
   "0.4228205423076581`", ",", "0.07422376952340182`", ",", 
   "0.043804441554914586`", ",", "0.46314970974250635`", ",", 
   "0.5228359948235823`"}], "}"}]], "Output",
 CellChangeTimes->{3.665264709968281*^9}]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1661, 45, 232, "Input"],
Cell[2244, 69, 2407, 45, 166, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4688, 119, 2651, 67, 292, "Input"],
Cell[7342, 188, 23306, 396, 370, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30685, 589, 1194, 35, 132, "Input"],
Cell[31882, 626, 3093, 58, 372, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35012, 689, 1116, 28, 132, "Input"],
Cell[36131, 719, 2206, 46, 156, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38374, 770, 246, 5, 52, "Input"],
Cell[38623, 777, 192, 5, 31, "Output"],
Cell[38818, 784, 369, 8, 31, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
