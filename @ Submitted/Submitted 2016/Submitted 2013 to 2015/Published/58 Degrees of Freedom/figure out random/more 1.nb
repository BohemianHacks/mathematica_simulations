(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    105315,       2466]
NotebookOptionsPosition[    102591,       2370]
NotebookOutlinePosition[    102936,       2385]
CellTagsIndexPosition[    102893,       2382]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"reset", ",", "dataNew"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"reset", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"\"\<reset\>\"", ",", 
          RowBox[{"Text", "@", 
           RowBox[{"Framed", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<reset\>\"", ",", "18"}], "]"}], ",", 
             RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}]}]}], "}"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dataNew", "=", 
       RowBox[{"RandomSample", "[", 
        RowBox[{"dataAll", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"FreeQ", "[", 
                 RowBox[{"r", ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Button", "[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"r", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Button", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "Bold", ",", 
                    "Blue"}], "]"}], ",", 
                  RowBox[{"r", "=", 
                   RowBox[{"DeleteCases", "[", 
                    RowBox[{"r", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
               "\[IndentingNewLine]", "]"}], "&"}], "/@", "reset"}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"60", ",", "50"}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", "r"}], "\[IndentingNewLine]", "}"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n", ",", "5", ",", "\"\<number of data\>\""}], "}"}], ",", 
         "1", ",", "10", ",", "1", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"{", "}"}]}], "}"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"dataAll", "=", 
       RowBox[{"Range", "@", "10"}]}], ";"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6653400485338984`*^9, 3.665340160619309*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 5, $CellContext`r$$ = {}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 5, "number of data"}, 1, 10, 1}, {{
       Hold[$CellContext`r$$], {}}}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {60., {29., 36.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`n$5003$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 5, $CellContext`r$$ = {}}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$5003$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`reset$, $CellContext`dataNew$}, \
$CellContext`reset$ = {{"reset", 
            Text[
             Framed[
              Style["reset", 18], RoundingRadius -> 
              5]]}}; $CellContext`dataNew$ = 
         RandomSample[$CellContext`dataAll, $CellContext`n$$]; Column[{
           Graphics[{
             Map[If[
               FreeQ[$CellContext`r$$, 
                Part[#, 1]], 
               Button[
                Part[#, 2], 
                AppendTo[$CellContext`r$$, 
                 Part[#, 1]]], 
               Button[
                Style[
                 Part[#, 2], Bold, Blue], $CellContext`r$$ = 
                DeleteCases[$CellContext`r$$, 
                  Part[#, 1]]]]& , $CellContext`reset$]}, 
            ImageSize -> {60, 50}], $CellContext`r$$}]], 
      "Specifications" :> {{{$CellContext`n$$, 5, "number of data"}, 1, 10, 1,
          Appearance -> "Labeled", ControlPlacement -> 
         1}, {{$CellContext`r$$, {}}, ControlType -> None, ControlPlacement -> 
         2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{384., {76., 83.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`dataAll = Range[10]; Null); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6653400709601808`*^9, 3.665340094000499*^9}, {
  3.6653401337507725`*^9, 3.6653401618843813`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "dataNew", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"select", ";", "\[IndentingNewLine]", 
      RowBox[{"dataNew", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "r"}], ">", "0"}], ",", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"dataAll", ",", "n"}], "]"}], ",", 
         RowBox[{"Evaluate", "@", 
          RowBox[{"BlockRandom", "@", 
           RowBox[{"RandomSample", "[", 
            RowBox[{"dataAll", ",", "n"}], "]"}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"FreeQ", "[", 
                 RowBox[{"r", ",", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Button", "[", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"r", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Button", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "Bold", ",", 
                    "Blue"}], "]"}], ",", 
                  RowBox[{"r", "=", 
                   RowBox[{"DeleteCases", "[", 
                    RowBox[{"r", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
               "\[IndentingNewLine]", "]"}], "&"}], "/@", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\"\<reset\>\"", ",", 
                RowBox[{"Text", "@", 
                 RowBox[{"Framed", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<reset\>\"", ",", "18"}], "]"}], ",", 
                   RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}]}]}], 
               "}"}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"60", ",", "50"}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", "r", ",", 
         RowBox[{"Length", "@", "r"}], ",", "dataNew"}], 
        "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"select", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Setter"}], "}"}], 
         "]"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"n", ",", "5", ",", "\"\<number of data\>\""}], "}"}], 
            ",", "1", ",", "10", ",", "1", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"{", "}"}]}], "}"}], ",", 
            RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], "]"}]}], 
        "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"dataAll", "=", 
       RowBox[{"RandomSample", "[", 
        RowBox[{"Range", "@", "10"}], "]"}]}], ";"}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6653401880228767`*^9, 3.6653402427450066`*^9}, {
  3.665340280305155*^9, 3.66534028563546*^9}, {3.6653403208314724`*^9, 
  3.665340442173413*^9}, {3.6653406621279936`*^9, 3.66534076207471*^9}, {
  3.665340809836442*^9, 3.665340811572541*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 
    5, $CellContext`r$$ = {}, $CellContext`select$$ = 1, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`select$$], 1, ""}, {1, 2, 3}}, {{
       Hold[$CellContext`n$$], 5, "number of data"}, 1, 10, 1}, {{
       Hold[$CellContext`r$$], {}}}, {
      Hold[
       Grid[{{
          Manipulate`Place[1]}, {
          Manipulate`Place[2], 
          Manipulate`Place[3]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    116., {44., 51.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`select$5624$$ = 
    0, $CellContext`n$5625$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 
        5, $CellContext`r$$ = {}, $CellContext`select$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`select$$, $CellContext`select$5624$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$5625$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`dataNew$}, $CellContext`select$$; \
$CellContext`dataNew$ = If[Length[$CellContext`r$$] > 0, 
           RandomSample[$CellContext`dataAll, $CellContext`n$$], 
           Evaluate[
            BlockRandom[
             RandomSample[$CellContext`dataAll, $CellContext`n$$]]]]; Column[{
           Graphics[{
             Map[If[
               FreeQ[$CellContext`r$$, 
                Part[#, 1]], 
               Button[
                Part[#, 2], 
                AppendTo[$CellContext`r$$, 
                 Part[#, 1]]], 
               Button[
                Style[
                 Part[#, 2], Bold, Blue], $CellContext`r$$ = 
                DeleteCases[$CellContext`r$$, 
                  Part[#, 1]]]]& , {{"reset", 
                Text[
                 Framed[
                  Style["reset", 18], RoundingRadius -> 5]]}}]}, 
            ImageSize -> {60, 50}], $CellContext`r$$, 
           Length[$CellContext`r$$], $CellContext`dataNew$}]], 
      "Specifications" :> {{{$CellContext`select$$, 1, ""}, {1, 2, 3}, 
         ControlType -> Setter, ControlPlacement -> 
         1}, {{$CellContext`n$$, 5, "number of data"}, 1, 10, 1, Appearance -> 
         "Labeled", ControlPlacement -> 2}, {{$CellContext`r$$, {}}, 
         ControlType -> None, ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1]}, {
           Manipulate`Place[2], 
           Manipulate`Place[3]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{390., {103., 110.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`dataAll = RandomSample[
         Range[10]]; Null); Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6653402061359124`*^9, 3.665340217401557*^9}, 
   3.6653402575378523`*^9, 3.665340288245609*^9, {3.6653403516052327`*^9, 
   3.665340443779505*^9}, 3.6653405259812064`*^9, 3.6653406669422693`*^9, {
   3.665340791640401*^9, 3.6653408125115952`*^9}, 3.665343220700082*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "dataNew", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"select", ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"dataNew", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "r"}], ">", "0"}], ",", 
           RowBox[{"RandomSample", "[", 
            RowBox[{"dataAll", ",", "n"}], "]"}], ",", 
           RowBox[{"Evaluate", "@", 
            RowBox[{"BlockRandom", "@", 
             RowBox[{"RandomSample", "[", 
              RowBox[{"dataAll", ",", "n"}], "]"}]}]}]}], "]"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Button", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"r", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                  RowBox[{"r", "=", 
                   RowBox[{"DeleteCases", "[", 
                    RowBox[{"r", ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "}"}]}], 
               "]"}], "&"}], "/@", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\"\<reset\>\"", ",", 
                RowBox[{"Text", "@", 
                 RowBox[{"Framed", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<reset\>\"", ",", "18"}], "]"}], ",", 
                   RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}]}]}], 
               "}"}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"60", ",", "50"}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", "r"}], "\[IndentingNewLine]", "}"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"select", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Setter"}], "}"}], 
         "]"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"n", ",", "5", ",", "\"\<number of data\>\""}], "}"}], 
            ",", "1", ",", "10", ",", "1", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"{", "}"}]}], "}"}], ",", 
            RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], "]"}]}], 
        "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"dataAll", "=", 
       RowBox[{"RandomSample", "[", 
        RowBox[{"Range", "@", "10"}], "]"}]}], ";"}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6653409230109153`*^9, 3.6653409326544666`*^9}, {
  3.6653410151421847`*^9, 3.6653410654200606`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 
    5, $CellContext`r$$ = {}, $CellContext`select$$ = 1, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`select$$], 1, ""}, {1, 2, 3}}, {{
       Hold[$CellContext`n$$], 5, "number of data"}, 1, 10, 1}, {{
       Hold[$CellContext`r$$], {}}}, {
      Hold[
       Grid[{{
          Manipulate`Place[1]}, {
          Manipulate`Place[2], 
          Manipulate`Place[3]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {60., {29., 36.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`select$6892$$ = 0, $CellContext`n$6893$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 
        5, $CellContext`r$$ = {}, $CellContext`select$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`select$$, $CellContext`select$6892$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$6893$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`dataNew$}, $CellContext`select$$; Column[{
           Graphics[{
             Map[Button[
               Part[#, 2], {
                AppendTo[$CellContext`r$$, 
                 Part[#, 1]], $CellContext`r$$ = DeleteCases[$CellContext`r$$, 
                  Part[#, 1]]}]& , {{"reset", 
                Text[
                 Framed[
                  Style["reset", 18], RoundingRadius -> 5]]}}]}, 
            ImageSize -> {60, 50}], $CellContext`r$$}]], 
      "Specifications" :> {{{$CellContext`select$$, 1, ""}, {1, 2, 3}, 
         ControlType -> Setter, ControlPlacement -> 
         1}, {{$CellContext`n$$, 5, "number of data"}, 1, 10, 1, Appearance -> 
         "Labeled", ControlPlacement -> 2}, {{$CellContext`r$$, {}}, 
         ControlType -> None, ControlPlacement -> 3}, 
        Grid[{{
           Manipulate`Place[1]}, {
           Manipulate`Place[2], 
           Manipulate`Place[3]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{390., {88., 95.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`dataAll = RandomSample[
         Range[10]]; Null); Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6653410617218494`*^9, 3.6653410710553827`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Button", "[", 
    RowBox[{"\"\<reset\>\"", ",", 
     RowBox[{"x", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Dynamic", "[", "x", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6653411415742865`*^9, 3.6653412005050945`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   ButtonBox["\<\"reset\"\>",
    Appearance->Automatic,
    ButtonFunction:>($CellContext`x = RandomInteger[{1, 5}]),
    Evaluator->Automatic,
    Method->"Preemptive"], ",", 
   DynamicBox[ToBoxes[$CellContext`x, StandardForm],
    ImageSizeCache->{8., {0., 8.}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.665341189231032*^9, 3.665341201068097*^9}, 
   3.6653412369403057`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Button", "[", 
    RowBox[{"\"\<reset\>\"", ",", 
     RowBox[{"y", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Dynamic", "[", "y", "]"}], ",", 
   RowBox[{"NumberQ", "[", "y", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6653412177661905`*^9, 3.665341219470699*^9}, {
  3.66534131128024*^9, 3.665341316752773*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   ButtonBox["\<\"reset\"\>",
    Appearance->Automatic,
    ButtonFunction:>($CellContext`y = RandomInteger[{1, 5}]),
    Evaluator->Automatic,
    Method->"Preemptive"], ",", 
   DynamicBox[ToBoxes[$CellContext`y, StandardForm],
    ImageSizeCache->{8., {0., 8.}}], ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{
  3.665341220927205*^9, {3.6653413190352807`*^9, 3.6653413379273877`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Button", "[", 
    RowBox[{"\"\<reset\>\"", ",", 
     RowBox[{"z", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Dynamic", "[", "z", "]"}], ",", 
   RowBox[{"NumberQ", "[", "z", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"StringFreeQ", "[", 
     RowBox[{"z", ",", "\"\<z\>\""}], "]"}]}], "*)"}], "}"}]], "Input",
 CellChangeTimes->{{3.6653415419522047`*^9, 3.6653415950304933`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"StringFreeQ", "::", "strse"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"String or list of strings expected at position \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"StringFreeQ\\\", \\\"[\\\", RowBox[{\\\"z\\\", \
\\\",\\\", \\\"\\\\\\\"z\\\\\\\"\\\"}], \\\"]\\\"}]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/strse\\\", \
ButtonNote -> \\\"StringFreeQ::strse\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.665341571067854*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   ButtonBox["\<\"reset\"\>",
    Appearance->Automatic,
    ButtonFunction:>($CellContext`z = RandomInteger[{1, 5}]),
    Evaluator->Automatic,
    Method->"Preemptive"], ",", 
   DynamicBox[ToBoxes[$CellContext`z, StandardForm],
    ImageSizeCache->{8., {0., 6.}}], ",", "False", ",", 
   RowBox[{"StringFreeQ", "[", 
    RowBox[{"z", ",", "\<\"z\"\>"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.665341571067854*^9}]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.6653418625616446`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"set", ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Button", "[", 
           RowBox[{"\"\<reset\>\"", ",", 
            RowBox[{"list", "=", 
             RowBox[{"RandomSample", "[", 
              RowBox[{
               RowBox[{"Range", "@", "10"}], ",", "n"}], "]"}]}]}], "]"}], 
          ",", 
          RowBox[{"Dynamic", "@", "list"}]}], "}"}], "]"}], "*)"}], 
      "\[IndentingNewLine]", "list"}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"set", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Setter"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "5"}], "}"}], ",", "1", ",", "10", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<reset\>\"", ",", 
     RowBox[{"list", "=", 
      RowBox[{"Evaluate", "@", 
       RowBox[{"RandomSample", "[", 
        RowBox[{
         RowBox[{"Range", "@", "10"}], ",", "n"}], "]"}]}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"list", 
      RowBox[{"(*", 
       RowBox[{"@", "_"}], "*)"}], ":=", 
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "@", "10"}], ",", "n"}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.665341342284917*^9, 3.6653414593142595`*^9}, {
  3.6653416654403677`*^9, 3.665341740118472*^9}, {3.6653417715486383`*^9, 
  3.6653417980602856`*^9}, {3.665341842055519*^9, 3.665341949881113*^9}, {
  3.6653432573834057`*^9, 3.6653433128717775`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 5, $CellContext`set$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`set$$], 1}, {1, 2, 3}}, {{
       Hold[$CellContext`n$$], 5}, 1, 10, 1}, {
      Hold[
       Button["reset", $CellContext`list = Evaluate[
          RandomSample[
           Range[10], $CellContext`n$$]]]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {354., {2., 8.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`set$874$$ = 0, $CellContext`n$875$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 5, $CellContext`set$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`set$$, $CellContext`set$874$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$875$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{}, $CellContext`set$$; $CellContext`list], 
      "Specifications" :> {{{$CellContext`set$$, 1}, {1, 2, 3}, ControlType -> 
         Setter}, {{$CellContext`n$$, 5}, 1, 10, 1, Appearance -> "Labeled"}, 
        Button["reset", $CellContext`list = Evaluate[
           RandomSample[
            Range[10], $CellContext`n$$]]]}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {77., 84.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({Null}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6653417356589394`*^9, 3.665341741100478*^9}, {
   3.6653417787816725`*^9, 3.665341804682822*^9}, 3.6653418485175576`*^9, {
   3.6653419067478757`*^9, 3.6653419509441175`*^9}, {3.665343258465913*^9, 
   3.6653433144767833`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberQ", "[", 
  RowBox[{"Range", "@", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.665341467613816*^9, 3.6653414803743715`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.665341480871873*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetAttributes", "[", 
  RowBox[{"redoButton", ",", "HoldRest"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"redoButton", "[", 
    RowBox[{"str_", ",", "fun_"}], "]"}], ":=", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"result", "=", "Null"}], "}"}], ",", 
     RowBox[{"Column", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Button", "[", 
         RowBox[{"str", ",", 
          RowBox[{"result", "=", "fun"}]}], "]"}], ",", 
        RowBox[{"Dynamic", "[", "result", "]"}]}], "}"}], "]"}]}], "]"}]}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"redoButton", "[", 
  RowBox[{"\"\<press\>\"", ",", 
   RowBox[{"RandomInteger", "[", "20", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.665341989299962*^9, 3.6653420211576347`*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`result$$ = 8}, 
  TagBox[GridBox[{
     {
      ButtonBox["\<\"press\"\>",
       Appearance->Automatic,
       ButtonFunction:>($CellContext`result$$ = RandomInteger[20]),
       Evaluator->Automatic,
       Method->"Preemptive"]},
     {
      DynamicBox[ToBoxes[$CellContext`result$$, StandardForm],
       ImageSizeCache->{8., {0., 8.}}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.665342010015074*^9, 3.6653420216151466`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "redo", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"set", ";", "\[IndentingNewLine]", 
      RowBox[{"SetAttributes", "[", 
       RowBox[{"redo", ",", "HoldRest"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"redo", "[", 
        RowBox[{"str_", ",", "fun_"}], "]"}], ":=", 
       RowBox[{"DynamicModule", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"result", "=", "Null"}], "}"}], ",", 
         RowBox[{"Column", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Button", "[", 
             RowBox[{"str", ",", 
              RowBox[{"result", "=", "fun"}]}], "]"}], ",", 
            RowBox[{"Dynamic", "[", "result", "]"}]}], "}"}], "]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"redo", "[", 
       RowBox[{"\"\<press\>\"", ",", 
        RowBox[{"RandomSample", "[", 
         RowBox[{
          RowBox[{"Range", "@", "10"}], ",", "n"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"set", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Setter"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "5"}], "}"}], ",", "1", ",", "10", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6653420696346025`*^9, 3.6653423048219423`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 5, $CellContext`set$$ = 3, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`set$$], 1}, {1, 2, 3}}, {{
       Hold[$CellContext`n$$], 5}, 1, 10, 1}}, Typeset`size$$ = {
    116., {16.5, 23.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`set$747$$ = 
    0, $CellContext`n$748$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 5, $CellContext`set$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`set$$, $CellContext`set$747$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$748$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`redo$}, $CellContext`set$$; $CellContext`redo$[
           Pattern[$CellContext`str, 
            Blank[]], 
           Pattern[$CellContext`fun, 
            Blank[]]] := DynamicModule[{$CellContext`result = Null}, 
           Column[{
             Button[$CellContext`str, $CellContext`result = $CellContext`fun], 
             Dynamic[$CellContext`result]}]]; $CellContext`redo$["press", 
          RandomSample[
           Range[10], $CellContext`n$$]]], 
      "Specifications" :> {{{$CellContext`set$$, 1}, {1, 2, 3}, ControlType -> 
         Setter}, {{$CellContext`n$$, 5}, 1, 10, 1, Appearance -> "Labeled"}},
       "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{313., {76., 83.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6653421992338495`*^9, 3.665342211583419*^9}, {
  3.6653422500716295`*^9, 3.6653422955103846`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"set", ";", "\[IndentingNewLine]", 
      RowBox[{"Dynamic", "[", "list", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Button", "[", 
          RowBox[{"\"\<reset\>\"", ",", 
           RowBox[{"list", "=", 
            RowBox[{"RandomSample", "[", 
             RowBox[{
              RowBox[{"Range", "@", "10"}], ",", "n"}], "]"}]}]}], "]"}], ",",
          "list"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"set", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Setter"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "5"}], "}"}], ",", "1", ",", "10", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.665342604861106*^9, 3.665342643572416*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 2, $CellContext`set$$ = 3, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`set$$], 1}, {1, 2, 3}}, {{
       Hold[$CellContext`n$$], 5}, 1, 10, 1}}, Typeset`size$$ = {
    354., {16.5, 23.5}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`set$883$$ = 
    0, $CellContext`n$884$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 5, $CellContext`set$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`set$$, $CellContext`set$883$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$884$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{}, $CellContext`set$$; Dynamic[$CellContext`list]; Column[{
           Button["reset", $CellContext`list = RandomSample[
              Range[10], $CellContext`n$$]], $CellContext`list}]], 
      "Specifications" :> {{{$CellContext`set$$, 1}, {1, 2, 3}, ControlType -> 
         Setter}, {{$CellContext`n$$, 5}, 1, 10, 1, Appearance -> "Labeled"}},
       "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {76., 83.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.665342649877965*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RandomSample", "::", "intnm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Non-negative machine-sized integer expected at position \
\[NoBreak]\\!\\(\\*RowBox[{\\\"2\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"RandomSample\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"2\\\", \
\\\",\\\", \\\"3\\\", \\\",\\\", \\\"4\\\", \\\",\\\", \\\"5\\\", \\\",\\\", \
\\\"6\\\", \\\",\\\", \\\"7\\\", \\\",\\\", \\\"8\\\", \\\",\\\", \\\"9\\\", \
\\\",\\\", \\\"10\\\"}], \\\"}\\\"}], \\\",\\\", \\\"n\\\"}], \\\"]\\\"}]\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/intnm\\\", ButtonNote -> \
\\\"RandomSample::intnm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66534331599179*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "list", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"set", ";", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Button", "[", 
          RowBox[{"\"\<reset\>\"", ",", 
           RowBox[{"list", "=", 
            RowBox[{"RandomSample", "[", 
             RowBox[{
              RowBox[{"Range", "@", "10"}], ",", "n"}], "]"}]}]}], "]"}], ",", 
         RowBox[{"Dynamic", "@", "list"}]}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"set", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Setter"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "5"}], "}"}], ",", "1", ",", "10", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.665342757896378*^9, 3.6653427705314302`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 5, $CellContext`set$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`set$$], 1}, {1, 2, 3}}, {{
       Hold[$CellContext`n$$], 5}, 1, 10, 1}}, Typeset`size$$ = {
    72., {17., 24.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`set$1417$$ = 
    0, $CellContext`n$1418$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 5, $CellContext`set$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`set$$, $CellContext`set$1417$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$1418$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`list$}, $CellContext`set$$; Column[{
           Button["reset", $CellContext`list$ = RandomSample[
              Range[10], $CellContext`n$$]], 
           Dynamic[$CellContext`list$]}]], 
      "Specifications" :> {{{$CellContext`set$$, 1}, {1, 2, 3}, ControlType -> 
         Setter}, {{$CellContext`n$$, 5}, 1, 10, 1, Appearance -> "Labeled"}},
       "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{313., {76., 83.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6653427652314034`*^9, 3.6653427708949327`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"c", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"controls", "=", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"c", "[", "i", "]"}], ",", 
               RowBox[{"s", "[", "i", "]"}]}], "}"}], ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
      RowBox[{
      "f", ",", "\[IndentingNewLine]", "controls", ",", "\[IndentingNewLine]", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<Random\>\"", ",", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"s", "[", "i", "]"}], "=", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "@", "_"}], ":=", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.665342838474814*^9, 3.665342875132141*^9}, 
   3.665342912258436*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], {3, 4, 5}}}, Typeset`size$$ = {
    268., {93., 100.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`n$1812$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$1812$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> With[{$CellContext`f$ = Table[
           $CellContext`c[$CellContext`i], {$CellContext`i, \
$CellContext`n$$}], $CellContext`controls$ = Apply[Sequence, 
           Table[{{
              $CellContext`c[$CellContext`i], 
              $CellContext`s[$CellContext`i]}, -1, 
             1}, {$CellContext`i, $CellContext`n$$}]]}, 
        Manipulate[$CellContext`f$, $CellContext`controls$, 
         Button["Random", 
          
          Do[$CellContext`s[$CellContext`i] = 
           RandomReal[{-1, 1}], {$CellContext`i, $CellContext`n$$}]]]], 
      "Specifications" :> {{$CellContext`n$$, {3, 4, 5}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{319., {138., 145.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({Null}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6653428815831947`*^9, 3.66534290210935*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"With", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"c", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"controls", "=", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"c", "[", "i", "]"}], ",", 
               RowBox[{"s", "[", "i", "]"}]}], "}"}], ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
      RowBox[{
      "f", ",", "\[IndentingNewLine]", "controls", ",", "\[IndentingNewLine]", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<Random\>\"", ",", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"s", "[", "i", "]"}], "=", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "@", "_"}], ":=", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.66534293016659*^9, 3.6653429568868217`*^9}, {
  3.66534299827556*^9, 3.6653430277317324`*^9}, {3.665343110892488*^9, 
  3.6653431312861204`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 3, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], {3, 4, 5}}}, Typeset`size$$ = {
    268., {93., 100.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`n$5461$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 3}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$5461$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> With[{$CellContext`f$ = Table[
           $CellContext`c[$CellContext`i], {$CellContext`i, \
$CellContext`n$$}], $CellContext`controls$ = Apply[Sequence, 
           Table[{{
              $CellContext`c[$CellContext`i], 
              $CellContext`s[$CellContext`i]}, -1, 
             1}, {$CellContext`i, $CellContext`n$$}]]}, 
        Manipulate[$CellContext`f$, $CellContext`controls$, 
         Button["Random", 
          
          Do[$CellContext`s[$CellContext`i] = 
           RandomReal[{-1, 1}], {$CellContext`i, $CellContext`n$$}]]]], 
      "Specifications" :> {{$CellContext`n$$, {3, 4, 5}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{319., {138., 145.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({Null}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.665342946550719*^9, 3.6653429588188295`*^9}, {
  3.665343004464083*^9, 3.6653430283017344`*^9}, {3.6653431202560277`*^9, 
  3.66534313203863*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"randomNormal", ",", "randomCauchy", ",", "newRandomData"}], 
    "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Mean", "@", 
              RowBox[{"Take", "[", 
               RowBox[{"#", ",", "i"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1000"}], "}"}]}], "]"}], "&"}], "[", 
          "randomNormal", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Mean", "@", 
              RowBox[{"Take", "[", 
               RowBox[{"#", ",", "i"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1000"}], "}"}]}], "]"}], "&"}], "[", 
          "randomCauchy", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"DataRange", "\[Rule]", "n"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"n", ",", "50", ",", "1000"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Button", "[", 
      RowBox[{"\"\<New random data\>\"", ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"randomNormal", ",", "randomCauchy"}], "}"}], "=", 
        RowBox[{"newRandomData", "[", "]"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"newRandomData", "[", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"10", ",", "1"}], "]"}], ",", "1000"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"NormalDistribution", ",", "CauchyDistribution"}], "}"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"randomNormal", ",", "randomCauchy"}], "}"}], "=", 
       RowBox[{"newRandomData", "[", "]"}]}], ";"}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.665343470614175*^9, 3.665343515352177*^9}, 
   3.66534357753732*^9}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`randomNormal$$ = CompressedData["
1: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
  "], $CellContext`randomCauchy$$ = CompressedData["
1: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
  "], $CellContext`newRandomData$$}, 
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`n$$ = 180., Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`n$$], 50, 1000}, {
       Hold[
        Button[
        "New random data", {$CellContext`randomNormal$$, \
$CellContext`randomCauchy$$} = $CellContext`newRandomData$$[]]], 
       Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
     360., {113., 117.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`n$2125$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, "Variables" :> {$CellContext`n$$ = 50}, 
       "ControllerVariables" :> {
         Hold[$CellContext`n$$, $CellContext`n$2125$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> ListLinePlot[{
          (Table[
           Mean[
            Take[#, $CellContext`i]], {$CellContext`i, 
            1000}]& )[$CellContext`randomNormal$$], 
          (Table[
           Mean[
            Take[#, $CellContext`i]], {$CellContext`i, 
            1000}]& )[$CellContext`randomCauchy$$]}, PlotRange -> Full, 
         DataRange -> $CellContext`n$$, Frame -> True, Axes -> False], 
       "Specifications" :> {{$CellContext`n$$, 50, 1000}, 
         Button[
         "New random data", {$CellContext`randomNormal$$, \
$CellContext`randomCauchy$$} = $CellContext`newRandomData$$[]]}, 
       "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{411., {173., 180.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]],
  DynamicModuleValues:>{{
    DownValues[$CellContext`newRandomData$$] = {HoldPattern[
         $CellContext`newRandomData$$[]] :> Map[RandomVariate[
          #[10, 1], 1000]& , {NormalDistribution, CauchyDistribution}]}}},
  Initialization:>($CellContext`newRandomData$$[] := Map[RandomVariate[
       #[10, 1], 1000]& , {
      NormalDistribution, 
       CauchyDistribution}]; {$CellContext`randomNormal$$, \
$CellContext`randomCauchy$$} = $CellContext`newRandomData$$[]; 
   Null)]], "Output",
 CellChangeTimes->{3.665343528815277*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Mean", "@", 
            RowBox[{"Take", "[", 
             RowBox[{"#", ",", "i"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1000"}], "}"}]}], "]"}], "&"}], "[", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"10", ",", "1"}], "]"}], ",", "1000"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Mean", "@", 
            RowBox[{"Take", "[", 
             RowBox[{"#", ",", "i"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1000"}], "}"}]}], "]"}], "&"}], "[", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{
          RowBox[{"CauchyDistribution", "[", 
           RowBox[{"10", ",", "1"}], "]"}], ",", "1000"}], "]"}], "]"}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
     RowBox[{"DataRange", "\[Rule]", "n"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "50", ",", "1000"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.665343537755441*^9, 3.6653435500305395`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 437., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 50, 1000}}, Typeset`size$$ = {
    360., {111., 114.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n$2319$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 50}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$2319$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ListLinePlot[{
         (Table[
          Mean[
           Take[#, $CellContext`i]], {$CellContext`i, 1000}]& )[
          RandomVariate[
           NormalDistribution[10, 1], 1000]], 
         (Table[
          Mean[
           Take[#, $CellContext`i]], {$CellContext`i, 1000}]& )[
          RandomVariate[
           CauchyDistribution[10, 1], 1000]]}, PlotRange -> Full, 
        DataRange -> $CellContext`n$$, Frame -> True, Axes -> False], 
      "Specifications" :> {{$CellContext`n$$, 50, 1000}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {156., 163.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.66534355133356*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"randomNormal", ",", "randomCauchy", ",", "newRandomData"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Mean", "@", 
              RowBox[{"Take", "[", 
               RowBox[{"#", ",", "i"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1000"}], "}"}]}], "]"}], "&"}], "[", 
          "randomNormal", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Mean", "@", 
              RowBox[{"Take", "[", 
               RowBox[{"#", ",", "i"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1000"}], "}"}]}], "]"}], "&"}], "[", 
          "randomCauchy", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
       RowBox[{"DataRange", "\[Rule]", "n"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], "\[IndentingNewLine]",
     "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"n", ",", "50", ",", "1000"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<New random data\>\"", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"randomNormal", ",", "randomCauchy"}], "}"}], "=", 
      RowBox[{"newRandomData", "[", "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"newRandomData", "[", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"10", ",", "1"}], "]"}], ",", "1000"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"NormalDistribution", ",", "CauchyDistribution"}], "}"}]}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"randomNormal", ",", "randomCauchy"}], "}"}], "=", 
       RowBox[{"newRandomData", "[", "]"}]}], ";"}], ")"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6653436920430393`*^9, 3.6653437059340925`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"set", ";", "\[IndentingNewLine]", 
    RowBox[{"SeedRandom", "[", "seed", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ArrayPlot", "[", 
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{"110", ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "600"}], "]"}], ",", "700"}], "]"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"set", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Setter"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"seed", ",", "1", ",", "1000", ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Randomize initial condition\>\"", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"seed", "<", "1000"}], ",", 
       RowBox[{"seed", "=", 
        RowBox[{"seed", "+", "1"}]}], ",", 
       RowBox[{"seed", "=", 
        RowBox[{"seed", "-", "1"}]}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.665343836447221*^9, 3.665343846661275*^9}, {
  3.665343887161492*^9, 3.665343922312707*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`seed$$ = 5, $CellContext`set$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`set$$], 1}, {1, 2, 3}}, {
      Hold[$CellContext`seed$$], 1, 1000, 1}, {
      Hold[
       Button["Randomize initial condition", 
        If[$CellContext`seed$$ < 
         1000, $CellContext`seed$$ = $CellContext`seed$$ + 
          1, $CellContext`seed$$ = $CellContext`seed$$ - 1]]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    360., {207., 210.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`set$5096$$ = 
    0, $CellContext`seed$5097$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`seed$$ = 1, $CellContext`set$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`set$$, $CellContext`set$5096$$, 0], 
        Hold[$CellContext`seed$$, $CellContext`seed$5097$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`set$$; SeedRandom[$CellContext`seed$$]; 
       ArrayPlot[
         CellularAutomaton[110, 
          RandomInteger[1, 600], 700]]), 
      "Specifications" :> {{{$CellContext`set$$, 1}, {1, 2, 3}, ControlType -> 
         Setter}, {$CellContext`seed$$, 1, 1000, 1, ControlType -> None}, 
        Button["Randomize initial condition", 
         If[$CellContext`seed$$ < 
          1000, $CellContext`seed$$ = $CellContext`seed$$ + 
           1, $CellContext`seed$$ = $CellContext`seed$$ - 1]]}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {265., 272.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6653438500462947`*^9, 3.665343851145299*^9}, 
   3.66534392302271*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"set", ";", "\[IndentingNewLine]", 
    RowBox[{"SeedRandom", "[", "seed", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"ArrayPlot", "[", 
       RowBox[{
        RowBox[{"CellularAutomaton", "[", 
         RowBox[{"110", ",", 
          RowBox[{"RandomInteger", "[", 
           RowBox[{"1", ",", "600"}], "]"}], ",", "700"}], "]"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "seed"}]}], "]"}], ","}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"CellularAutomaton", "[", 
       RowBox[{"10", ",", 
        RowBox[{"RandomInteger", "[", 
         RowBox[{"1", ",", "50"}], "]"}], ",", "20"}], "]"}], ","}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"1", ",", "50"}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"set", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Setter"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{"seed", ",", "1", ",", "1000", ",", "1", ",", 
      RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Randomize initial condition\>\"", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"seed", "<", "1000"}], ",", 
       RowBox[{"seed", "=", 
        RowBox[{"seed", "+", "1"}]}], ",", 
       RowBox[{"seed", "=", 
        RowBox[{"seed", "-", "1"}]}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.665343946956341*^9, 3.6653439890491147`*^9}, {
  3.665344241116697*^9, 3.665344302392548*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`seed$$ = 6, $CellContext`set$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`set$$], 1}, {1, 2, 3}}, {
      Hold[$CellContext`seed$$], 1, 1000, 1}, {
      Hold[
       Button["Randomize initial condition", 
        If[$CellContext`seed$$ < 
         1000, $CellContext`seed$$ = $CellContext`seed$$ + 
          1, $CellContext`seed$$ = $CellContext`seed$$ - 1]]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {1053., {2., 8.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`set$8091$$ = 0, $CellContext`seed$8092$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`seed$$ = 1, $CellContext`set$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`set$$, $CellContext`set$8091$$, 0], 
        Hold[$CellContext`seed$$, $CellContext`seed$8092$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`set$$; SeedRandom[$CellContext`seed$$]; 
       RandomInteger[1, 50]), 
      "Specifications" :> {{{$CellContext`set$$, 1}, {1, 2, 3}, ControlType -> 
         Setter}, {$CellContext`seed$$, 1, 1000, 1, ControlType -> None}, 
        Button["Randomize initial condition", 
         If[$CellContext`seed$$ < 
          1000, $CellContext`seed$$ = $CellContext`seed$$ + 
           1, $CellContext`seed$$ = $CellContext`seed$$ - 1]]}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{1104., {64., 71.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6653439600014334`*^9, 3.665343989761617*^9}, 
   3.6653442435192146`*^9, {3.6653442838629436`*^9, 3.665344303659554*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"set", ";", "\[IndentingNewLine]", 
    RowBox[{"SeedRandom", "[", "seed", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", "10"}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"set", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Setter"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{"seed", ",", "1", ",", "1000", ",", "1", ",", 
      RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<randomize initial condition\>\"", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"seed", "<", "1000"}], ",", 
       RowBox[{"seed", "=", 
        RowBox[{"seed", "+", "1"}]}], ",", 
       RowBox[{"seed", "=", 
        RowBox[{"seed", "-", "1"}]}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6653440112377396`*^9, 3.6653440814596205`*^9}, {
  3.6653441136349373`*^9, 3.665344125363*^9}, {3.665344173259838*^9, 
  3.665344199553478*^9}, {3.665344327649678*^9, 3.6653443603428755`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`seed$$ = 3, $CellContext`set$$ = 2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`set$$], 1}, {1, 2, 3}}, {
      Hold[$CellContext`seed$$], 1, 1000, 1}, {
      Hold[
       Button["randomize initial condition", 
        If[$CellContext`seed$$ < 
         1000, $CellContext`seed$$ = $CellContext`seed$$ + 
          1, $CellContext`seed$$ = $CellContext`seed$$ - 1]]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    360., {112., 116.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`set$8740$$ = 
    0, $CellContext`seed$8741$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`seed$$ = 1, $CellContext`set$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`set$$, $CellContext`set$8740$$, 0], 
        Hold[$CellContext`seed$$, $CellContext`seed$8741$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`set$$; SeedRandom[$CellContext`seed$$]; ListPlot[
         RandomReal[1, 10], PlotStyle -> Directive[Red, 
           PointSize[Large]], Frame -> True]), 
      "Specifications" :> {{{$CellContext`set$$, 1}, {1, 2, 3}, ControlType -> 
         Setter}, {$CellContext`seed$$, 1, 1000, 1, ControlType -> None}, 
        Button["randomize initial condition", 
         If[$CellContext`seed$$ < 
          1000, $CellContext`seed$$ = $CellContext`seed$$ + 
           1, $CellContext`seed$$ = $CellContext`seed$$ - 1]]}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {170., 177.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.665344202801491*^9, {3.665344329603195*^9, 3.6653443611498785`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"set", ";", "\[IndentingNewLine]", 
    RowBox[{"SeedRandom", "[", "seed", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"RandomSample", "[", 
       RowBox[{
        RowBox[{"Range", "@", "10"}], ",", "n"}], "]"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}]}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"set", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "Setter"}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "5"}], "}"}], ",", "1", ",", "10", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{"seed", ",", "1", ",", "1000", ",", "1", ",", 
      RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<randomize initial condition\>\"", ",", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"seed", "<", "1000"}], ",", 
       RowBox[{"seed", "=", 
        RowBox[{"seed", "+", "1"}]}], ",", 
       RowBox[{"seed", "=", 
        RowBox[{"seed", "-", "1"}]}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.6653443915226088`*^9, 3.665344434267372*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 10, $CellContext`seed$$ = 
    10, $CellContext`set$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`set$$], 1}, {1, 2, 3}}, {{
       Hold[$CellContext`n$$], 5}, 1, 10, 1}, {
      Hold[$CellContext`seed$$], 1, 1000, 1}, {
      Hold[
       Button["randomize initial condition", 
        If[$CellContext`seed$$ < 
         1000, $CellContext`seed$$ = $CellContext`seed$$ + 
          1, $CellContext`seed$$ = $CellContext`seed$$ - 1]]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    360., {113., 117.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`set$9083$$ = 
    0, $CellContext`n$9084$$ = 0, $CellContext`seed$9085$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n$$ = 5, $CellContext`seed$$ = 
        1, $CellContext`set$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`set$$, $CellContext`set$9083$$, 0], 
        Hold[$CellContext`n$$, $CellContext`n$9084$$, 0], 
        Hold[$CellContext`seed$$, $CellContext`seed$9085$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`set$$; SeedRandom[$CellContext`seed$$]; ListPlot[
         RandomSample[
          Range[10], $CellContext`n$$], PlotStyle -> Directive[Red, 
           PointSize[Large]], Frame -> True]), 
      "Specifications" :> {{{$CellContext`set$$, 1}, {1, 2, 3}, ControlType -> 
         Setter}, {{$CellContext`n$$, 5}, 1, 10, 1, Appearance -> 
         "Labeled"}, {$CellContext`seed$$, 1, 1000, 1, ControlType -> None}, 
        Button["randomize initial condition", 
         If[$CellContext`seed$$ < 
          1000, $CellContext`seed$$ = $CellContext`seed$$ + 
           1, $CellContext`seed$$ = $CellContext`seed$$ - 1]]}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {184., 191.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.665344405572197*^9, 3.6653444449025555`*^9}]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 3582, 90, 372, "Input"],
Cell[4165, 114, 3014, 68, 176, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7216, 187, 4755, 116, 432, "Input"],
Cell[11974, 305, 3835, 82, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15846, 392, 4029, 101, 372, "Input"],
Cell[19878, 495, 3106, 65, 200, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23021, 565, 375, 10, 31, "Input"],
Cell[23399, 577, 421, 11, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23857, 593, 466, 12, 31, "Input"],
Cell[24326, 607, 435, 11, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24798, 623, 543, 15, 31, "Input"],
Cell[25344, 640, 642, 12, 21, "Message"],
Cell[25989, 654, 465, 12, 42, "Output"]
}, Open  ]],
Cell[26469, 669, 89, 1, 52, "Input"],
Cell[CellGroupData[{
Cell[26583, 674, 2114, 56, 212, "Input"],
Cell[28700, 732, 2453, 49, 178, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31190, 786, 156, 3, 31, "Input"],
Cell[31349, 791, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31460, 797, 813, 22, 92, "Input"],
Cell[32276, 821, 672, 18, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32985, 844, 1765, 45, 212, "Input"],
Cell[34753, 891, 2402, 48, 176, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37192, 944, 1316, 34, 192, "Input"],
Cell[38511, 980, 2039, 40, 176, "Output"],
Cell[40553, 1022, 886, 16, 21, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41476, 1043, 1279, 33, 172, "Input"],
Cell[42758, 1078, 2081, 41, 176, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44876, 1124, 2041, 56, 292, "Input"],
Cell[46920, 1182, 2164, 44, 300, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49121, 1231, 2093, 57, 272, "Input"],
Cell[51217, 1290, 2266, 46, 300, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53520, 1341, 2530, 67, 212, "Input"],
Cell[56053, 1410, 23292, 396, 370, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79382, 1811, 1572, 42, 132, "Input"],
Cell[80957, 1855, 1979, 43, 336, "Output"]
}, Open  ]],
Cell[82951, 1901, 2491, 65, 212, "Input"],
Cell[CellGroupData[{
Cell[85467, 1970, 1311, 33, 172, "Input"],
Cell[86781, 2005, 2524, 52, 554, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89342, 2062, 1873, 48, 212, "Input"],
Cell[91218, 2112, 2504, 49, 152, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93759, 2166, 1632, 40, 172, "Input"],
Cell[95394, 2208, 2545, 51, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97976, 2264, 1785, 46, 192, "Input"],
Cell[99764, 2312, 2811, 55, 392, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
