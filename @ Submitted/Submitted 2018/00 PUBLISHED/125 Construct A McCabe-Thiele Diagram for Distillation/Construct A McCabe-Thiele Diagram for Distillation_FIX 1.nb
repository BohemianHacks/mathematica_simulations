(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    920760,      20150]
NotebookOptionsPosition[    909180,      19939]
NotebookOutlinePosition[    911250,      19989]
CellTagsIndexPosition[    910906,      19977]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Construct a McCabe-Thiele Diagram for Distillation", "DemoTitle",
 CellChangeTimes->{{3.733505021043878*^9, 3.733505039472125*^9}, {
  3.733566702892234*^9, 
  3.733566745831065*^9}},ExpressionUUID->"1d81d3bf-6076-4855-8077-\
1358a6578556"],

Cell[CellGroupData[{

Cell["", "InitializationSection",ExpressionUUID->"8ce6550c-828f-4d6e-839a-e1e433f8fd3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"colF", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{".6", ",", ".4", ",", ".2"}], "]"}]}], ";", 
  RowBox[{"colR", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", ".6", ",", "0"}], "]"}]}], ";", 
  RowBox[{"colS", "=", 
   RowBox[{"Hue", "@", "0.9"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7294379390928392`*^9, 3.7294379812392817`*^9}, 
   3.7336017198278894`*^9, 3.733601784780313*^9, {3.733607897538088*^9, 
   3.733607897663126*^9}, {3.7337712688661923`*^9, 3.7337712712268114`*^9}, {
   3.7337713117207737`*^9, 3.7337713744929967`*^9}},
 CellLabel->"In[1]:=",
 CellID->45851877,ExpressionUUID->"8ca5c09f-98ab-402f-9e14-32b98d5b0636"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pt1", "[", 
    RowBox[{"pt_", ",", "col_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"col", ",", 
     RowBox[{"PointSize", "@", "0.022"}], ",", 
     RowBox[{"Point", "@", "pt"}], ",", "White", ",", 
     RowBox[{"PointSize", "@", "0.018"}], ",", 
     RowBox[{"Point", "@", "pt"}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.729438116226997*^9, 3.7294381432991357`*^9}, {
  3.7294386267884626`*^9, 3.729438636122612*^9}, {3.730927519620417*^9, 
  3.73092752491675*^9}, {3.732300142322874*^9, 3.732300142637467*^9}, {
  3.7323013352131844`*^9, 3.732301350185425*^9}},
 CellLabel->"In[2]:=",
 CellID->5357600,ExpressionUUID->"012da6ae-7b68-480e-abc5-95e74aec2128"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pt2", "[", 
    RowBox[{"pt_", ",", "col_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"col", ",", 
     RowBox[{"PointSize", "@", "0.022"}], ",", 
     RowBox[{"Point", "@", "pt"}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7294386216590376`*^9, 3.729438621846238*^9}, {
   3.730927521689152*^9, 3.730927523333776*^9}, {3.732300140703124*^9, 
   3.732300141007861*^9}, 3.73230133758661*^9},
 CellLabel->"In[3]:=",
 CellID->424262759,ExpressionUUID->"3837b801-6793-4d89-bdcf-44db8b88cd08"]
}, Closed]],

Cell[CellGroupData[{

Cell["", "ManipulateSection",ExpressionUUID->"76b1817c-99e6-4ca4-adf5-b90083842c77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Gamma]1", ",", "\[Gamma]2", ",", "A12", ",", "A21", ",", "ArrowPt1", 
       ",", "ArrowPt2", ",", "BOLintercept", ",", "BOLslope", ",", "botflow", 
       ",", "CoordA", ",", "CoordB", ",", "CoordC", ",", "CoordD", ",", 
       "CoordE", ",", "CoordF", ",", "CoordG", ",", "CoordH", ",", "CoordI", 
       ",", "CoordJ", ",", "CoordK", ",", "CoordL", ",", "distcolumn", ",", 
       "distflow", ",", "Dotnumbers", ",", "equilb", ",", "F", ",", "feed", 
       ",", "Feedstate", ",", "GuessA", ",", "GuessB", ",", "GuessC", ",", 
       "GuessD", ",", "GuessE", ",", "GuessF", ",", "GuessG", ",", "GuessH", 
       ",", "GuessI", ",", "GuessJ", ",", "GuessK", ",", "GuessL", ",", "i", 
       ",", "L", ",", "Lbar", ",", "LeftLimit", ",", "MissingA", ",", 
       "MissingB", ",", "MissingC", ",", "MissingD", ",", "MissingE", ",", 
       "MissingF", ",", "MissingG", ",", "MissingH", ",", "MissingI", ",", 
       "MissingJ", ",", "MissingK", ",", "MissingL", ",", "nR", ",", "nS", 
       ",", "nT", ",", "opertRect", ",", "opertStrp", ",", "P", ",", "Pane1", 
       ",", "Pane2", ",", "Part9Answer", ",", "plotlabel", ",", "q", ",", "R",
        ",", "RandomizeValuesShown", ",", "rect", ",", "rectnumbers", ",", 
       "RightLimit", ",", "Rmin", ",", "Rx", ",", "Ry", ",", "size1", ",", 
       "size2", ",", "size3", ",", "size4", ",", "Sr", ",", "stagelabels", 
       ",", "stagelines", ",", "strip", ",", "Sx", ",", "Sy", ",", "T", ",", 
       "tb", ",", "V", ",", "Value1", ",", "Value2", ",", "Vbar", ",", "VPa", 
       ",", "VPb", ",", "x1", ",", "x2", ",", "xb", ",", "xd", ",", "xeq", 
       ",", "xi", ",", "xR", ",", "xS", ",", "y1", ",", "y2", ",", "yeq", ",",
        "yi", ",", "yR", ",", "yS", ",", "zf"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Randomized", " ", "eq", " ", "curve", " ", "values"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SeedRandom", "[", "reset", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"A12", "=", 
       RowBox[{"RandomReal", "[", "]"}]}], ";", 
      RowBox[{"A21", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".5"}], ",", "1"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"P", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"100", ",", "300"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"*", "Feed", " ", "q", " ", "is", " ", "randomized"}], "**)"}],
       "\[IndentingNewLine]", 
      RowBox[{"q", "=", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", ".2"}], ",", "0.05", ",", ".22", ",", ".49", ",", 
          ".75", ",", ".95", ",", "1.13"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "*", "Feed", " ", "composition", " ", "and", " ", "flowrate", " ", 
        "are", " ", "randomized"}], "**)"}], "\[IndentingNewLine]", 
      RowBox[{"zf", "=", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"30", ",", "70"}], "}"}], "]"}], "/", "100."}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"F", "=", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"100", ",", "1000"}], "}"}], "]"}], "/", "100."}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "*", "Distillate", " ", "and", " ", "bottoms", " ", "specifications", 
        " ", "are", " ", "randomized"}], "**)"}], "\[IndentingNewLine]", 
      RowBox[{"xd", "=", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"85", ",", "92"}], "}"}], "]"}], "/", "100."}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xb", "=", 
       RowBox[{
        RowBox[{"RandomInteger", "[", 
         RowBox[{"{", 
          RowBox[{"5", ",", "12"}], "}"}], "]"}], "/", "100."}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "*", "Vapor", " ", "pressure", " ", "of", " ", "two", " ", 
        "components", " ", "as", " ", "a", " ", "function", " ", "of", " ", 
        "temperature", " ", 
        RowBox[{"(", 
         RowBox[{"deg", ".", " ", "C"}], ")"}]}], "**)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"VPa", "=", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"8.08097", "-", 
          FractionBox["1582.271", 
           RowBox[{"T", "+", "239.726"}]]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"VPb", "=", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"8.07131", "-", 
          FractionBox["1730.63", 
           RowBox[{"T", "+", "233.426"}]]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"*", "Defines", " ", "activity", " ", "coefficient"}], "**)"}],
       "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", 
       RowBox[{"T", ",", "i"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Gamma]1", "[", "i_", "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"x2", "[", "i", "]"}], "2"], "*", 
         RowBox[{"(", 
          RowBox[{"A12", "+", 
           RowBox[{"2", "*", 
            RowBox[{"(", 
             RowBox[{"A21", "-", "A12"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"x2", "[", "i", "]"}]}], ")"}]}]}], ")"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Gamma]2", "[", "i_", "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"x2", "[", "i", "]"}]}], ")"}], "2"], "*", 
         RowBox[{"(", 
          RowBox[{"A21", "+", 
           RowBox[{"2", "*", 
            RowBox[{"(", 
             RowBox[{"A12", "-", "A21"}], ")"}], "*", 
            RowBox[{"x2", "[", "i", "]"}]}]}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "*", "Creates", " ", "table", " ", "of", " ", "values", " ", 
        "defining", " ", "random", " ", "equilibrium", " ", "curve", " ", 
        "using", " ", "modified", " ", 
        RowBox[{"Raoult", "'"}], "s", " ", "Law"}], "**)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"i", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"i", "<", "101"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"x2", "[", "i", "]"}], "=", 
           RowBox[{"i", "*", "0.01"}]}], ",", 
          RowBox[{
           RowBox[{"T", "[", "i", "]"}], "=", 
           RowBox[{
            RowBox[{"FindRoot", "[", 
             RowBox[{
              RowBox[{"P", "==", 
               RowBox[{
                RowBox[{"VPb", "*", 
                 RowBox[{"\[Gamma]1", "[", "i", "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"x2", "[", "i", "]"}]}], ")"}]}], "+", 
                RowBox[{"VPa", "*", 
                 RowBox[{"\[Gamma]2", "[", "i", "]"}], "*", 
                 RowBox[{"x2", "[", "i", "]"}]}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{"T", ",", "60"}], "}"}], ",", 
              RowBox[{"AccuracyGoal", "\[Rule]", "3"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"y2", "[", "i", "]"}], "=", 
           RowBox[{
            RowBox[{
             RowBox[{"x2", "[", "i", "]"}], "+", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"VPa", "*", 
                 RowBox[{"\[Gamma]2", "[", "i", "]"}], "*", 
                 RowBox[{
                  RowBox[{"x2", "[", "i", "]"}], "/", "P"}]}], ")"}], "-", 
               RowBox[{"x2", "[", "i", "]"}]}], ")"}]}], "/.", 
            RowBox[{"T", "->", 
             RowBox[{"T", "[", "i", "]"}]}]}]}], ",", 
          RowBox[{"i", "++"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"tb", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x2", "[", "i", "]"}], ",", 
           RowBox[{"y2", "[", "i", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "*", "The", " ", "consolidated", " ", "\"\<function\>\"", " ", "of", 
        " ", "the", " ", "equilibrium", " ", "curve", " ", "generated", " ", 
        "from", " ", "the", " ", "table", " ", "of", " ", "values"}], "**)"}],
       "\[IndentingNewLine]", 
      RowBox[{"equilb", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"Interpolation", "[", "tb", "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"*", "q"}], "-", 
        RowBox[{"line", " ", "function"}]}], "**)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"feed", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"q", " ", 
         RowBox[{"x", "/", 
          RowBox[{"(", 
           RowBox[{"q", "-", "1"}], ")"}]}]}], "-", 
        RowBox[{"zf", "/", 
         RowBox[{"(", 
          RowBox[{"q", "-", "1"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"*", "Intersection", " ", "of", " ", "q"}], "-", 
        RowBox[{"line", " ", "with", " ", "equilibrium", " ", "line"}]}], 
       "**)"}], "\[IndentingNewLine]", 
      RowBox[{"xeq", "=", 
       RowBox[{"x", "/.", 
        RowBox[{"Quiet", "@", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"feed", "[", "x", "]"}], "\[Equal]", 
            RowBox[{"equilb", "[", "x", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "zf"}], "}"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"yeq", "=", 
       RowBox[{"feed", "[", "xeq", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "these", " ", "are", " ", "the", " ", "maximum", " ", "and", " ", 
           "minimum", " ", "slopes", " ", "of", " ", "the", " ", "bottom"}], 
          "&"}], "top", " ", "operating", " ", "lines", " ", "and", " ", 
         "the", " ", "minimum", " ", "reflux", " ", "ratio"}], ",", " ", 
        RowBox[{"respectively", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"opertRect", "[", "x_", "]"}], ":=", 
       RowBox[{"yeq", "+", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "xeq"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"xd", "-", "xeq"}], ")"}]}], " ", 
         RowBox[{"(", 
          RowBox[{"xd", "-", "yeq"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"opertStrp", "[", "x_", "]"}], ":=", 
       RowBox[{"yeq", "+", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "xeq"}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"xb", "-", "xeq"}], ")"}]}], " ", 
         RowBox[{"(", 
          RowBox[{"xb", "-", "yeq"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Rmin", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xd", "-", "yeq"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"xd", "-", "xeq"}], ")"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"xd", "-", "yeq"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"xd", "-", "xeq"}], ")"}]}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"*", "Random", " ", "Reflux", " ", "Ratio", " ", "Generator"}],
        "**)"}], "\[IndentingNewLine]", 
      RowBox[{"R", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Rmin", "<", "1"}], ",", 
         RowBox[{"Rmin", "=", 
          RowBox[{
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"13", ",", "18"}], "}"}], "]"}], "/", "10."}]}], ",", 
         RowBox[{"Rmin", "*", 
          RowBox[{
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"15", ",", "20"}], "}"}], "]"}], "/", "10."}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"*", "Top", " ", "operating", " ", "line"}], "**)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rect", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         FractionBox["R", 
          RowBox[{"R", "+", "1"}]], "*", "x"}], "+", 
        FractionBox["xd", 
         RowBox[{"R", "+", "1"}]]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"*", "x"}], "-", 
        RowBox[{
        "value", " ", "of", " ", "intersection", " ", "of", " ", "q"}], "-", 
        RowBox[{
        "line", " ", "and", " ", "top", " ", "operating", " ", "line"}]}], 
       "**)"}], "\[IndentingNewLine]", 
      RowBox[{"xi", "=", 
       RowBox[{"x", "/.", 
        RowBox[{"Quiet", "@", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"feed", "[", "x", "]"}], "\[Equal]", 
            RowBox[{"rect", "[", "x", "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0.7"}], "}"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"*", "y"}], "-", 
        RowBox[{
        "value", " ", "of", " ", "intersection", " ", "of", " ", "q"}], "-", 
        RowBox[{
        "line", " ", "and", " ", "top", " ", "operating", " ", "line"}]}], 
       "**)"}], "\[IndentingNewLine]", 
      RowBox[{"yi", "=", 
       RowBox[{"rect", "[", "xi", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "*", "solve", " ", "for", " ", "bottom", " ", "operating", " ", 
        "line"}], "**)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"strip", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         FractionBox["Lbar", "Vbar"], "x"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           FractionBox["Lbar", "Vbar"], "-", "1"}], ")"}], "*", "xb"}]}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Solves", " ", "for", " ", "distillate", " ", "and", " ", "bottoms", 
         " ", "flow", " ", "rates"}], ",", " ", "respectively"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"distflow", "=", 
       RowBox[{"Dflow", "/.", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"zf", "*", "F"}], "\[Equal]", 
              RowBox[{
               RowBox[{"xd", "*", "Dflow"}], "+", 
               RowBox[{"xb", "*", "Bflow"}]}]}], ",", 
             RowBox[{"F", "\[Equal]", 
              RowBox[{"Dflow", "+", "Bflow"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Dflow", ",", "Bflow"}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"botflow", "=", 
       RowBox[{"F", "-", "distflow"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"*", "Flow", " ", "Rates", " ", "inside", " ", "column"}], 
       "**)"}], "\[IndentingNewLine]", 
      RowBox[{"L", "=", 
       RowBox[{"distflow", "*", "R"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"V", "=", 
       RowBox[{"distflow", "+", "L"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Lbar", "=", 
       RowBox[{"L", "+", 
        RowBox[{"q", "*", "F"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Vbar", "=", 
       RowBox[{"V", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "q"}], ")"}], "*", "F"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Creating", " ", "table", " ", "that", " ", "will", " ", "draw", " ", 
        "lines", " ", "in", " ", "RECTIFYING", " ", "section"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"i", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yR", "[", "0", "]"}], "=", "xd"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xR", "[", "0", "]"}], "=", "xd"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"xR", "[", "i", "]"}], ">", "xi"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "=", 
           RowBox[{"x", "/.", 
            RowBox[{"Quiet", "@", 
             RowBox[{"FindRoot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"yR", "[", "i", "]"}], "\[Equal]", 
                RowBox[{"equilb", "[", "x", "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{
                  RowBox[{"xR", "[", "i", "]"}], "-", ".1"}]}], "}"}]}], 
              "]"}]}]}]}], ",", 
          RowBox[{"y1", "=", 
           RowBox[{"rect", "[", "x1", "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x1", ">", "xi"}], "||", 
             RowBox[{
              RowBox[{"x1", "<", "xi"}], "&&", 
              RowBox[{"i", "<", "1"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xR", "[", 
                RowBox[{"i", "+", "1"}], "]"}], "=", "x1"}], ",", 
              RowBox[{
               RowBox[{"yR", "[", 
                RowBox[{"i", "+", "1"}], "]"}], "=", "y1"}]}], "}"}]}], "]"}],
           ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"nR", "=", 
           RowBox[{"i", "-", "1"}]}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Creating", " ", "table", " ", "that", " ", "will", " ", "draw", " ", 
        "lines", " ", "in", " ", "STRIPPING", " ", "section"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"i", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"yS", "[", "0", "]"}], "=", 
       RowBox[{"yR", "[", "nR", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xS", "[", "0", "]"}], "=", 
       RowBox[{"xR", "[", "nR", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"xS", "[", "i", "]"}], "\[GreaterEqual]", "xb"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "=", 
           RowBox[{"x", "/.", 
            RowBox[{"Quiet", "@", 
             RowBox[{"FindRoot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"yS", "[", "i", "]"}], "\[Equal]", 
                RowBox[{"equilb", "[", "x", "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", 
                 RowBox[{
                  RowBox[{"xS", "[", "i", "]"}], "-", ".1"}]}], "}"}]}], 
              "]"}]}]}]}], ",", 
          RowBox[{"y1", "=", 
           RowBox[{"strip", "[", "x1", "]"}]}], ",", 
          RowBox[{
           RowBox[{"xS", "[", 
            RowBox[{"i", "+", "1"}], "]"}], "=", "x1"}], ",", 
          RowBox[{
           RowBox[{"yS", "[", 
            RowBox[{"i", "+", "1"}], "]"}], "=", "y1"}], ",", 
          RowBox[{"i", "++"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nS", "=", 
       RowBox[{"i", "-", "1"}]}], ";", 
      RowBox[{"(*", "imax", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"nT", "=", 
       RowBox[{"nR", "+", "nS", "+", "1"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Line", " ", "graphics", " ", "for", " ", "RECTIFYING", " ", 
        "section"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Ry", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"solution", "&&", 
          RowBox[{"MB", "\[Equal]", "5"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", ".5", "]"}], ",", 
           RowBox[{"Thickness", "[", ".01", "]"}], ",", 
           RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", "Blue", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"xR", "[", "#", "]"}], ",", 
                  RowBox[{"yR", "[", 
                   RowBox[{"#", "-", "1"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"xR", "[", "#", "]"}], ",", 
                  RowBox[{"yR", "[", "#", "]"}]}], "}"}]}], "}"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Range", "@", "nR"}]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xR", "[", "#", "]"}], ",", 
                RowBox[{"yR", "[", 
                 RowBox[{"#", "-", "1"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xR", "[", "#", "]"}], ",", 
                RowBox[{"yR", "[", "#", "]"}]}], "}"}]}], "}"}], "]"}], "&"}],
           "/@", 
          RowBox[{"Range", "@", "nR"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Rx", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"solution", "&&", 
          RowBox[{"MB", "\[Equal]", "5"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", ".5", "]"}], ",", 
           RowBox[{"Thickness", "[", ".01", "]"}], ",", 
           RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", "Blue", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"xR", "[", "#", "]"}], ",", 
                  RowBox[{"yR", "[", "#", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"xR", "[", 
                   RowBox[{"#", "+", "1"}], "]"}], ",", 
                  RowBox[{"yR", "[", "#", "]"}]}], "}"}]}], "}"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nR", "\[GreaterEqual]", "1"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"0", ",", 
                RowBox[{"nR", "-", "1"}]}], "]"}], ",", 
              RowBox[{"{", "0", "}"}]}], "]"}]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xR", "[", "#", "]"}], ",", 
                RowBox[{"yR", "[", "#", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xR", "[", 
                 RowBox[{"#", "+", "1"}], "]"}], ",", 
                RowBox[{"yR", "[", "#", "]"}]}], "}"}]}], "}"}], "]"}], "&"}],
           "/@", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"nR", "\[GreaterEqual]", "1"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"nR", "-", "1"}]}], "]"}], ",", 
            RowBox[{"{", "0", "}"}]}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Line", " ", "graphics", " ", "for", " ", "STRIPPING", " ", 
        "section"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Sy", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"solution", "&&", 
          RowBox[{"MB", "\[Equal]", "5"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", ".5", "]"}], ",", 
           RowBox[{"Thickness", "[", ".01", "]"}], ",", 
           RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", "Blue", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"xS", "[", 
                   RowBox[{"#", "+", "1"}], "]"}], ",", 
                  RowBox[{"yS", "[", "#", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"xS", "[", 
                   RowBox[{"#", "+", "1"}], "]"}], ",", 
                  RowBox[{"yS", "[", 
                   RowBox[{"#", "+", "1"}], "]"}]}], "}"}]}], "}"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", 
              RowBox[{"nS", "-", "1"}]}], "]"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xS", "[", 
                 RowBox[{"#", "+", "1"}], "]"}], ",", 
                RowBox[{"yS", "[", "#", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xS", "[", 
                 RowBox[{"#", "+", "1"}], "]"}], ",", 
                RowBox[{"yS", "[", 
                 RowBox[{"#", "+", "1"}], "]"}]}], "}"}]}], "}"}], "]"}], 
           "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"nS", "-", "1"}]}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Sx", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"solution", "&&", 
          RowBox[{"MB", "\[Equal]", "5"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", ".5", "]"}], ",", 
           RowBox[{"Thickness", "[", ".01", "]"}], ",", 
           RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", "Blue", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"xS", "[", 
                   RowBox[{"#", "-", "1"}], "]"}], ",", 
                  RowBox[{"yS", "[", 
                   RowBox[{"#", "-", "1"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"xS", "[", "#", "]"}], ",", 
                  RowBox[{"yS", "[", 
                   RowBox[{"#", "-", "1"}], "]"}]}], "}"}]}], "}"}], "]"}], 
             "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"nS", "+", "1"}], "]"}]}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xS", "[", 
                 RowBox[{"#", "-", "1"}], "]"}], ",", 
                RowBox[{"yS", "[", 
                 RowBox[{"#", "-", "1"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xS", "[", "#", "]"}], ",", 
                RowBox[{"yS", "[", 
                 RowBox[{"#", "-", "1"}], "]"}]}], "}"}]}], "}"}], "]"}], 
           "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"nS", "+", "1"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Sr", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"solution", "&&", 
          RowBox[{"MB", "\[Equal]", "5"}]}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", ".5", "]"}], ",", 
           RowBox[{"Thickness", "[", ".01", "]"}], ",", 
           RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", "Blue", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xS", "[", 
                 RowBox[{"nS", "+", "1"}], "]"}], ",", 
                RowBox[{"yS", "[", "nS", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xS", "[", 
                 RowBox[{"nS", "+", "1"}], "]"}], ",", "0"}], "}"}]}], "}"}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"xS", "[", 
               RowBox[{"nS", "+", "1"}], "]"}], ",", 
              RowBox[{"yS", "[", "nS", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"xS", "[", 
               RowBox[{"nS", "+", "1"}], "]"}], ",", "0"}], "}"}]}], "}"}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Dotnumbers", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Framed", "[", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"a", "<", 
                  RowBox[{"nT", "-", "1"}]}], ",", 
                 RowBox[{"a", "+", "1"}], ",", "\"\<R\>\""}], "]"}], ",", 
               "17"}], "]"}], ",", 
             RowBox[{"Background", "\[Rule]", "White"}], ",", 
             RowBox[{"FrameMargins", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"6", ",", "4"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
             RowBox[{"RoundingRadius", "\[Rule]", "25"}], ",", 
             RowBox[{"FrameStyle", "\[Rule]", "Thin"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Which", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"a", "\[Equal]", "0"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"nR", ">", "0"}], ",", 
                 RowBox[{"xR", "[", "1", "]"}], ",", 
                 RowBox[{"xS", "[", "1", "]"}]}], "]"}], ",", 
               RowBox[{"yR", "[", "0", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"a", "\[Equal]", "1"}], "&&", 
              RowBox[{"nR", "\[Equal]", "0"}]}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"xS", "[", "2", "]"}], ",", 
               RowBox[{"yS", "[", "1", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"a", "<", "nR"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"xR", "[", 
                RowBox[{"a", "+", "1"}], "]"}], ",", 
               RowBox[{"yR", "[", "a", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"a", "\[Equal]", "nR"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"xS", "[", "1", "]"}], ",", 
               RowBox[{"yS", "[", "0", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"nR", "<", "a", "\[LessEqual]", 
              RowBox[{"nT", "-", "1"}]}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"xS", "[", 
                RowBox[{"a", "-", "nR", "+", "1"}], "]"}], ",", 
               RowBox[{"yS", "[", 
                RowBox[{"a", "-", "nR"}], "]"}]}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"1.2", ",", 
             RowBox[{"-", ".8"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "0", ",", 
           RowBox[{"nT", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Hints", " ", "for", " ", "each", " ", "part"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"plotlabel", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"MB", ",", "\[IndentingNewLine]", "1", ",", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"solution", "\[Equal]", "True"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              RowBox[{"Row", "@", 
               RowBox[{"{", 
                RowBox[{"\"\<equations: \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<F\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\< = \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\< + \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<D\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\< and \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<F\>\"", ",", "Italic"}], "]"}], ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
                   "\"\<feed\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                   "\"\<B\>\""}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\< + \>\"", ",", 
                 RowBox[{"Subscript", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                   "\"\<D\>\""}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<D\>\"", ",", "Italic"}], "]"}]}], "}"}]}]}], 
             "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"solution", "\[Equal]", "False"}], "&&", 
            RowBox[{"hint", "\[Equal]", "False"}]}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{
            RowBox[{"solution", "\[Equal]", "False"}], "&&", 
            RowBox[{"hint", "\[Equal]", "True"}]}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              "\"\<Do an overall balance and a component balance.\>\""}], 
             "}"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", "2", ",", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"solution", "\[Equal]", "True"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              RowBox[{"Row", "@", 
               RowBox[{"{", 
                RowBox[{"\"\<Equations: \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<V \>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<= \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\< + \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<D\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\< and \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\< / \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<D\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\< = reflux ratio.\>\""}], "}"}]}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"solution", "\[Equal]", "False"}], "&&", 
            RowBox[{"hint", "\[Equal]", "False"}]}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"solution", "\[Equal]", "False"}], "&&", 
            RowBox[{"hint", "\[Equal]", "True"}]}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              "\"\<Do a mass balance around the condenser.\>\""}], "}"}], 
            "]"}]}], "]"}], ",", "\[IndentingNewLine]", "3", ",", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{"solution", "\[Equal]", "True"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              RowBox[{"Row", "@", 
               RowBox[{"{", 
                RowBox[{"\"\<Equations: \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<V - \>\"", ",", "Italic"}], "]"}], ",", 
                 RowBox[{"OverBar", "[", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
                 RowBox[{"\"\< + \>\"", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<L \>\"", ",", "Italic"}], "]"}]}], ",", 
                 "\"\<= \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<V \>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<+ \>\"", ",", 
                 RowBox[{"OverBar", "[", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
                 "\"\<      and      q = (\>\"", ",", 
                 RowBox[{"OverBar", "[", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\< - L)/F.\>\"", ",", "Italic"}], "]"}]}], 
                "}"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"solution", "\[Equal]", "False"}], "&&", 
            RowBox[{"hint", "\[Equal]", "False"}]}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"solution", "\[Equal]", "False"}], "&&", 
            RowBox[{"hint", "\[Equal]", "True"}]}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              "\"\<Do a mass balance around the feed stage.\>\""}], "}"}], 
            "]"}]}], "]"}], ",", "\[IndentingNewLine]", "4", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"hint", "\[Equal]", "False"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              RowBox[{"Row", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\< and \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\< coordinates should equal their respective \
compositions.\>\""}], "}"}]}]}], "}"}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "5", ",", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"solution", "\[Equal]", "True"}], "&&", 
            RowBox[{"showcolumn", "\[Equal]", "False"}]}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<-line equation: \>\"", ",", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\<F\>\""}], "]"}], ",", "\"\< - ((\>\"", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", "\"\</\>\"", 
              ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<-1)x -(\>\"", ",", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\<feed\>\""}], "]"}], ",", "\"\</(\>\"", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<-1)).\>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"solution", "\[Equal]", "False"}], "&&", 
            RowBox[{"hint", "\[Equal]", "False"}]}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"solution", "\[Equal]", "False"}], "&&", 
            RowBox[{"hint", "\[Equal]", "True"}], "&&", 
            RowBox[{"showcolumn", "\[Equal]", "False"}]}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<-line slope: \>\"", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", "\"\</(\>\"",
               ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<-1)\>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"showcolumn", "\[Equal]", "True"}], ",", "\"\<\>\""}], 
          "]"}], ",", "\[IndentingNewLine]", "6", ",", 
         RowBox[{"Which", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"solution", "\[Equal]", "True"}], "&&", 
            RowBox[{"showcolumn", "\[Equal]", "False"}]}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\<top\>\""}], "]"}], ",", "\"\< = (\>\"", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], ",", "\"\</\>\"", 
              ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<)x + (1-(\>\"", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], ",", "\"\</\>\"", 
              ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], ",", "\"\<)\>\"", 
              ",", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\<D\>\""}], "]"}], ",", "\"\< and \>\"", ",", 
              RowBox[{"Subscript", "[", 
               RowBox[{"\"\<y\>\"", ",", "\"\<bot\>\""}], "]"}], ",", 
              "\"\< = (\>\"", ",", 
              RowBox[{"OverBar", "[", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
              "\"\</\>\"", ",", 
              RowBox[{"OverBar", "[", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
              "\"\<)\>\"", ",", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\< + (1-(\>\"", ",", 
              RowBox[{"OverBar", "[", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
              "\"\</\>\"", ",", 
              RowBox[{"OverBar", "[", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
              "\"\<)\>\"", ",", 
              RowBox[{"Subscript", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\<B\>\""}], "]"}], ",", "\"\<).\>\""}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"solution", "\[Equal]", "False"}], "&&", 
            RowBox[{"hint", "\[Equal]", "False"}], "&&", 
            RowBox[{"showcolumn", "\[Equal]", "False"}]}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}]}], "}"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"solution", "\[Equal]", "False"}], "&&", 
            RowBox[{"hint", "\[Equal]", "True"}], "&&", 
            RowBox[{"showcolumn", "\[Equal]", "False"}]}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              RowBox[{"Row", "@", 
               RowBox[{"{", 
                RowBox[{"\"\<Slope of the top operating line = (\>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\</\>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<) and bottom operating line = (\>\"", ",", 
                 RowBox[{"OverBar", "[", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
                 "\"\</\>\"", ",", 
                 RowBox[{"OverBar", "[", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
                 "\"\<).\>\""}], "}"}]}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"showcolumn", "\[Equal]", "True"}], ",", "\"\<\>\""}], 
          "]"}], ",", "\[IndentingNewLine]", "7", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"hint", "\[Equal]", "False"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              "\"\<Start at the condenser.\>\""}], "}"}], "]"}]}], "]"}], ",",
          "\[IndentingNewLine]", "8", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"hint", "\[Equal]", "False"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              "\"\<The second stair from the top.\>\""}], "}"}], "]"}]}], 
          "]"}], ",", "\[IndentingNewLine]", "9", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"hint", "\[Equal]", "False"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              "\"\<Continue the \\\"stair stepping\\\" method.\>\""}], "}"}], 
            "]"}]}], "]"}], ",", "\[IndentingNewLine]", "10", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"hint", "\[Equal]", "False"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", 
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}]}], "}"}], 
            "]"}], ",", 
           RowBox[{"Row", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Spacer", "[", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
              "\"\< \>\""}], "}"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"HintTextColumnTrue", "=", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"MB", "\[Equal]", "5"}], "&&", 
          RowBox[{"hint", "\[Equal]", "True"}], "&&", 
          RowBox[{"solution", "\[Equal]", "False"}], "&&", 
          RowBox[{"showcolumn", "\[Equal]", "True"}]}], ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", 
            "\"\<-line slope: \>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", "\"\</(\>\"", 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", 
            "\"\<-1)\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MB", "\[Equal]", "5"}], "&&", 
          RowBox[{"solution", "\[Equal]", "True"}], "&&", 
          RowBox[{"showcolumn", "\[Equal]", "True"}]}], ",", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Spacer", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", 
            "\"\<-line equation: \>\"", ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<F\>\""}], "]"}], ",", "\"\< = (\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", "\"\</(\>\"", 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", "\"\<-1))\>\"",
             ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", "\"\<-(\>\"", 
            ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<feed\>\""}], "]"}], ",", "\"\</(\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", 
            "\"\<-1))\>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MB", "\[Equal]", "5"}], "&&", 
          RowBox[{"hint", "\[Equal]", "False"}], "&&", 
          RowBox[{"solution", "\[Equal]", "False"}], "&&", 
          RowBox[{"showcolumn", "\[Equal]", "True"}]}], ",", "\"\< \>\"", ",",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MB", "\[Equal]", "6"}], "&&", 
          RowBox[{"hint", "\[Equal]", "True"}], "&&", 
          RowBox[{"solution", "\[Equal]", "False"}], "&&", 
          RowBox[{"showcolumn", "\[Equal]", "True"}]}], ",", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Slope of the top operating line = (\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], ",", "\"\</\>\"", 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], ",", 
            "\"\<) and bottom operating line = (\>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
            "\"\</\>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
            "\"\<)\>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MB", "\[Equal]", "6"}], "&&", 
          RowBox[{"solution", "\[Equal]", "True"}], "&&", 
          RowBox[{"showcolumn", "\[Equal]", "True"}]}], ",", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Spacer", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "10"}], "}"}], "]"}], ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<y\>\"", ",", "\"\<top\>\""}], "]"}], ",", 
            "\"\< = (\>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], ",", "\"\</\>\"", 
            ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], ",", 
            RowBox[{"\"\<) x + (1-(,\>\"", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}]}], ",", "\"\</\>\"",
             ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], ",", "\"\<))\>\"", 
            ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<x\>\"", ",", "\"\<D\>\""}], "]"}], ",", 
            "\"\< and \>\"", ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<y\>\"", ",", "\"\<bot\>\""}], "]"}], ",", 
            "\"\< = (\>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
            "\"\</\>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
            "\"\<x + (1-(\>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
            "\"\</\>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
            "\"\<)\>\"", ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{"\"\<x\>\"", ",", "\"\<B\>\""}], "]"}], ",", 
            "\"\<)\>\""}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MB", "\[Equal]", "6"}], "&&", 
          RowBox[{"hint", "\[Equal]", "False"}], "&&", 
          RowBox[{"solution", "\[Equal]", "False"}], "&&", 
          RowBox[{"showcolumn", "\[Equal]", "True"}]}], ",", "\"\< \>\"", ",",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AnyTrue", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"5", ",", "6"}], "}"}], ",", 
            RowBox[{
             RowBox[{"#", "\[Equal]", "MB"}], "&"}]}], "]"}], "&&", 
          RowBox[{"showcolumn", "\[Equal]", "False"}]}], ",", "\"\< \>\"", 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MB", "\[Equal]", "10"}], "&&", 
          RowBox[{"hint", "\[Equal]", "True"}]}], ",", 
         "\"\<Has to do with where the two operating lines intersect.\>\"", 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"MB", "\[Equal]", "10"}], "&&", 
          RowBox[{"hint", "\[Equal]", "False"}]}], ",", "\"\< \>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Draws", " ", "and", " ", "labels", " ", "stage", " ", "lines", " ", 
        "on", " ", "column", " ", "graphic"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"stagelines", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", ".005", "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"28", ",", 
                RowBox[{"20", "+", 
                 RowBox[{
                  FractionBox["70", "nT"], "i"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"65", ",", 
                RowBox[{"20", "+", 
                 RowBox[{
                  FractionBox["70", "nT"], "i"}]}]}], "}"}]}], "}"}], "]"}]}],
           "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"nT", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"stagelabels", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"\"\<stage \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"nT", "-", "i"}], "]"}], "<>", "\"\<\>\""}], ",", 
             RowBox[{"{", 
              RowBox[{"47", ",", 
               RowBox[{"22", "+", 
                RowBox[{
                 FractionBox["70", "nT"], "i"}]}]}], "}"}]}], "]"}], ",", 
           "15"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"nT", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "These", " ", "are", " ", "the", " ", "2", " ", "coordinates", " ", 
         "for", " ", "the", " ", "feed", " ", "arrow"}], ",", " ", 
        RowBox[{
        "which", " ", "is", " ", "controlled", " ", "in", " ", "the", " ", 
         "\"\<choose the feed stage\>\"", " ", 
         RowBox[{"step", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ArrowPt1", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "15"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MB", "\[Equal]", "1"}], ",", "49", ",", "ArrowHeight"}], 
          "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ArrowPt2", "=", 
       RowBox[{"{", 
        RowBox[{"28", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MB", "\[Equal]", "1"}], ",", "49", ",", "ArrowHeight"}], 
          "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Part9Answer", "=", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"28", ",", 
           RowBox[{"20", "+", 
            RowBox[{
             FractionBox["70", "nT"], "*", "nS"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"65", ",", 
           RowBox[{"20", "+", 
            RowBox[{
             FractionBox["70", "nT"], "*", 
             RowBox[{"(", 
              RowBox[{"nS", "+", "1"}], ")"}]}]}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LeftLimit", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MB", "\[Equal]", "6"}], ",", "10", ",", 
         RowBox[{"-", "5"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"RightLimit", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MB", "\[GreaterEqual]", "4"}], ",", "100", ",", "120"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"stage1guessA", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"stage1guessA", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"equilb", "[", 
          RowBox[{"stage1guessA", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ptdist", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ptdist", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ptdist", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ptfeed", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ptfeed", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ptfeed", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ptbott", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ptbott", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"ptbott", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "These", " ", "are", " ", "a", " ", "few", " ", "variables", " ", 
        "that", " ", "were", " ", "defined", " ", "for", " ", "the", " ", 
        "\"\<draw the stair-steps\>\"", " ", "portion", " ", "of", " ", "the",
         " ", "quiz"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"horizontalpt1", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"stage1guessA", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[GreaterEqual]", "yi"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Quiet", "@", "x"}], "/.", 
            RowBox[{"FindRoot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"stage1guessA", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               RowBox[{"rect", "[", "x", "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ",", 
           RowBox[{"stage1guessA", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Quiet", "@", "x"}], "/.", 
            RowBox[{"FindRoot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"stage1guessA", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
               RowBox[{"strip", "[", "x", "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ",", 
           RowBox[{"stage1guessA", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"horizontalpt2", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Quiet", "@", "x"}], "/.", 
          RowBox[{"FindRoot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"stage1guessA", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", 
             RowBox[{"equilb", "[", "x", "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"stage1guessA", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"verticalpt1", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"horizontalpt2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[GreaterEqual]", "xi"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"horizontalpt2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"rect", "[", 
            RowBox[{"horizontalpt2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"xb", "<=", 
          RowBox[{"horizontalpt2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "xi"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"horizontalpt2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"strip", "[", 
            RowBox[{"horizontalpt2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"horizontalpt2", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "xb"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"horizontalpt2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "A", " ", "random", " ", "generator", " ", "to", " ", "determine", 
          " ", "which", " ", "variables", " ", "the", " ", "student", " ", 
          "is", " ", "solving", " ", "for"}], " ", "-", " ", 
         RowBox[{"Step", " ", "1"}]}], ",", " ", "2", ",", " ", 
        RowBox[{"and", " ", "3"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"RandomizeValuesShown", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GuessA", "=", "0"}], ",", 
          RowBox[{"GuessB", "=", "0"}], ",", 
          RowBox[{"GuessC", "=", "Ans1"}], ",", 
          RowBox[{"GuessD", "=", "0"}], ",", 
          RowBox[{"GuessE", "=", "0"}], ",", 
          RowBox[{"GuessF", "=", "Ans2"}], ",", 
          RowBox[{"GuessG", "=", "0"}], ",", 
          RowBox[{"GuessH", "=", "Ans3"}], ",", 
          RowBox[{"GuessI", "=", "Ans4"}], ",", 
          RowBox[{"GuessJ", "=", "0"}], ",", 
          RowBox[{"GuessK", "=", "Ans5"}], ",", 
          RowBox[{"GuessL", "=", "Ans6"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GuessA", "=", "0"}], ",", 
          RowBox[{"GuessB", "=", "0"}], ",", 
          RowBox[{"GuessC", "=", "0"}], ",", 
          RowBox[{"GuessD", "=", "Ans1"}], ",", 
          RowBox[{"GuessE", "=", "0"}], ",", 
          RowBox[{"GuessF", "=", "Ans2"}], ",", 
          RowBox[{"GuessG", "=", "0"}], ",", 
          RowBox[{"GuessH", "=", "Ans3"}], ",", 
          RowBox[{"GuessI", "=", "Ans4"}], ",", 
          RowBox[{"GuessJ", "=", "Ans5"}], ",", 
          RowBox[{"GuessK", "=", "0"}], ",", 
          RowBox[{"GuessL", "=", "Ans6"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "3", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GuessA", "=", "0"}], ",", 
          RowBox[{"GuessB", "=", "0"}], ",", 
          RowBox[{"GuessC", "=", "0"}], ",", 
          RowBox[{"GuessD", "=", "Ans1"}], ",", 
          RowBox[{"GuessE", "=", "Ans2"}], ",", 
          RowBox[{"GuessF", "=", "0"}], ",", 
          RowBox[{"GuessG", "=", "Ans3"}], ",", 
          RowBox[{"GuessH", "=", "0"}], ",", 
          RowBox[{"GuessI", "=", "Ans4"}], ",", 
          RowBox[{"GuessJ", "=", "0"}], ",", 
          RowBox[{"GuessK", "=", "Ans5"}], ",", 
          RowBox[{"GuessL", "=", "Ans6"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "4", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GuessA", "=", "Ans1"}], ",", 
          RowBox[{"GuessB", "=", "0"}], ",", 
          RowBox[{"GuessC", "=", "0"}], ",", 
          RowBox[{"GuessD", "=", "0"}], ",", 
          RowBox[{"GuessE", "=", "Ans2"}], ",", 
          RowBox[{"GuessF", "=", "0"}], ",", 
          RowBox[{"GuessG", "=", "Ans3"}], ",", 
          RowBox[{"GuessH", "=", "0"}], ",", 
          RowBox[{"GuessI", "=", "Ans4"}], ",", 
          RowBox[{"GuessJ", "=", "Ans5"}], ",", 
          RowBox[{"GuessK", "=", "Ans6"}], ",", 
          RowBox[{"GuessL", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
        "5", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GuessA", "=", "Ans1"}], ",", 
          RowBox[{"GuessB", "=", "Ans2"}], ",", 
          RowBox[{"GuessC", "=", "0"}], ",", 
          RowBox[{"GuessD", "=", "0"}], ",", 
          RowBox[{"GuessE", "=", "0"}], ",", 
          RowBox[{"GuessF", "=", "0"}], ",", 
          RowBox[{"GuessG", "=", "Ans3"}], ",", 
          RowBox[{"GuessH", "=", "Ans4"}], ",", 
          RowBox[{"GuessI", "=", "0"}], ",", 
          RowBox[{"GuessJ", "=", "Ans5"}], ",", 
          RowBox[{"GuessK", "=", "Ans6"}], ",", 
          RowBox[{"GuessL", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
        "6", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"GuessA", "=", "0"}], ",", 
          RowBox[{"GuessB", "=", "Ans2"}], ",", 
          RowBox[{"GuessC", "=", "Ans1"}], ",", 
          RowBox[{"GuessD", "=", "0"}], ",", 
          RowBox[{"GuessE", "=", "0"}], ",", 
          RowBox[{"GuessF", "=", "0"}], ",", 
          RowBox[{"GuessG", "=", "Ans3"}], ",", 
          RowBox[{"GuessH", "=", "Ans4"}], ",", 
          RowBox[{"GuessI", "=", "0"}], ",", 
          RowBox[{"GuessJ", "=", "0"}], ",", 
          RowBox[{"GuessK", "=", "Ans5"}], ",", 
          RowBox[{"GuessL", "=", "Ans6"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "These", " ", "are", " ", "labels", " ", "for", " ", "the", " ", 
        RowBox[{"sliders", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Box1", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
         "\"\<distillate flow rate\>\"", ",", "\[IndentingNewLine]", "2", 
         ",", "\"\<bottoms flow rate\>\"", ",", "\[IndentingNewLine]", "3", 
         ",", "\"\<bottoms flow rate\>\"", ",", "\[IndentingNewLine]", "4", 
         ",", "\"\<feed rate \>\"", ",", "\[IndentingNewLine]", "5", ",", 
         "\"\<feed rate \>\"", ",", "\[IndentingNewLine]", "6", ",", 
         "\"\<distillate flow rate\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Box2", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<bottoms composition \>\"", ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<B\>\""}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         "2", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<bottoms composition \>\"", ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<B\>\""}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         "3", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<distillate composition \>\"", ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<D\>\""}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         "4", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<distillate composition \>\"", ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<D\>\""}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         "5", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<feed composition \>\"", ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<feed\>\""}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         "6", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<feed composition \>\"", ",", 
            RowBox[{"Subscript", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
              "\"\<feed\>\""}], "]"}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Box3", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<liquid flow rate \>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<L \>\"", ",", "Italic"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "2", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<liquid flow rate \>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<L \>\"", ",", "Italic"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "3", ",", "\"\<reflux ratio\>\"", ",", 
         "\[IndentingNewLine]", "4", ",", "\"\<reflux ratio\>\"", ",", 
         "\[IndentingNewLine]", "5", ",", "\"\<reflux ratio\>\"", ",", 
         "\[IndentingNewLine]", "6", ",", "\"\<reflux ratio\>\""}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Box4", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<vapor flow rate \>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<V \>\"", ",", "Italic"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "2", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<vapor flow rate \>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<V \>\"", ",", "Italic"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "3", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<vapor flow rate \>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<V \>\"", ",", "Italic"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "4", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<vapor flow rate \>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<V \>\"", ",", "Italic"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "5", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<liquid flow rate \>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<L \>\"", ",", "Italic"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", "6", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<liquid flow rate \>\"", ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<L \>\"", ",", "Italic"}], "]"}]}], "}"}]}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Box5", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<vapor flow rate \>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}]}], "}"}]}], 
         ",", "\[IndentingNewLine]", "2", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<liquid flow rate \>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}]}], "}"}]}], 
         ",", "\[IndentingNewLine]", "3", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<vapor flow rate \>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}]}], "}"}]}], 
         ",", "\[IndentingNewLine]", "4", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<liquid flow rate \>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}]}], "}"}]}], 
         ",", "\[IndentingNewLine]", "5", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<liquid flow rate \>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}]}], "}"}]}], 
         ",", "\[IndentingNewLine]", "6", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<vapor flow rate \>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}]}], "}"}]}]}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Box6", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
         "\"\<quality \>\"", ",", "\[IndentingNewLine]", "2", ",", 
         "\"\<quality \>\"", ",", "\[IndentingNewLine]", "3", ",", 
         "\"\<quality \>\"", ",", "\[IndentingNewLine]", "4", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<vapor flow rate \>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}]}], "}"}]}], 
         ",", "\[IndentingNewLine]", "5", ",", 
         RowBox[{"Row", "@", 
          RowBox[{"{", 
           RowBox[{"\"\<vapor flow rate \>\"", ",", 
            RowBox[{"OverBar", "[", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}]}], "}"}]}], 
         ",", "\[IndentingNewLine]", "6", ",", "\"\<quality \>\""}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"This", " ", "is", " ", "the", " ", "maximum", " ", 
         RowBox[{"and", "/", "or"}], " ", "minimum", " ", "value", " ", "for",
          " ", "the", " ", "sliders", " ", "in", " ", "parts", " ", "1"}], 
        ",", " ", "2", ",", " ", 
        RowBox[{"and", " ", "3"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Ans1Range", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "F"}], ",", 
         "\[IndentingNewLine]", "2", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "F"}], ",", 
         "\[IndentingNewLine]", "3", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "F"}], ",", 
         "\[IndentingNewLine]", "4", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "F"}], ",", 
         "\[IndentingNewLine]", "5", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "F"}], ",", 
         "\[IndentingNewLine]", "6", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "F"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Ans2Range", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{
        "RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", "1", 
         ",", "\[IndentingNewLine]", "2", ",", "1", ",", 
         "\[IndentingNewLine]", "3", ",", "1", ",", "\[IndentingNewLine]", 
         "4", ",", "1", ",", "\[IndentingNewLine]", "5", ",", "1", ",", 
         "\[IndentingNewLine]", "6", ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ans3Range", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "L"}], ",", 
         "\[IndentingNewLine]", "2", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "L"}], ",", 
         "\[IndentingNewLine]", "3", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "R"}], ",", 
         "\[IndentingNewLine]", "4", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "R"}], ",", 
         "\[IndentingNewLine]", "5", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "R"}], ",", 
         "\[IndentingNewLine]", "6", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "R"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Ans4Range", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "V"}], ",", 
         "\[IndentingNewLine]", "2", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "V"}], ",", 
         "\[IndentingNewLine]", "3", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "V"}], ",", 
         "\[IndentingNewLine]", "4", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "V"}], ",", 
         "\[IndentingNewLine]", "5", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "L"}], ",", 
         "\[IndentingNewLine]", "6", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "L"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"Ans5Range", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "Vbar"}], ",", 
         "\[IndentingNewLine]", "2", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "Lbar"}], ",", 
         "\[IndentingNewLine]", "3", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "Vbar"}], ",", 
         "\[IndentingNewLine]", "4", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "Lbar"}], ",", 
         "\[IndentingNewLine]", "5", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "Lbar"}], ",", 
         "\[IndentingNewLine]", "6", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "Vbar"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Ans6Range", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2.3", "*", "q"}], ",", 
            RowBox[{"2.1", "*", "q"}], ",", 
            RowBox[{"1.2", "*", "q"}], ",", 
            RowBox[{"1.4", "*", "q"}], ",", 
            RowBox[{"1.48", "*", "q"}], ",", 
            RowBox[{"1.87", "*", "q"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", "2", ",", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2.3", "*", "q"}], ",", 
            RowBox[{"2.1", "*", "q"}], ",", 
            RowBox[{"1.2", "*", "q"}], ",", 
            RowBox[{"1.4", "*", "q"}], ",", 
            RowBox[{"1.48", "*", "q"}], ",", 
            RowBox[{"1.87", "*", "q"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", "3", ",", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2.3", "*", "q"}], ",", 
            RowBox[{"2.1", "*", "q"}], ",", 
            RowBox[{"1.2", "*", "q"}], ",", 
            RowBox[{"1.4", "*", "q"}], ",", 
            RowBox[{"1.48", "*", "q"}], ",", 
            RowBox[{"1.87", "*", "q"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", "4", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "Vbar"}], ",", 
         "\[IndentingNewLine]", "5", ",", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}], "]"}], "*", "Vbar"}], ",", 
         "\[IndentingNewLine]", "6", ",", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2.3"}], "*", "q"}], ",", 
            RowBox[{"2.1", "*", "q"}], ",", 
            RowBox[{"1.2", "*", "q"}], ",", 
            RowBox[{
             RowBox[{"-", "1.4"}], "*", "q"}], ",", 
            RowBox[{
             RowBox[{"-", "1.48"}], "*", "q"}], ",", 
            RowBox[{"1.87", "*", "q"}]}], "}"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Ans6RangeL", "=", 
       RowBox[{"Switch", "[", 
        RowBox[{"RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
         RowBox[{
          RowBox[{"-", "1"}], "*", "Ans6Range"}], ",", "\[IndentingNewLine]", 
         "2", ",", 
         RowBox[{
          RowBox[{"-", "1"}], "*", "Ans6Range"}], ",", "\[IndentingNewLine]", 
         "3", ",", 
         RowBox[{
          RowBox[{"-", "1"}], "*", "Ans6Range"}], ",", "\[IndentingNewLine]", 
         "4", ",", "0", ",", "\[IndentingNewLine]", "5", ",", "0", ",", 
         "\[IndentingNewLine]", "6", ",", 
         RowBox[{
          RowBox[{"-", "1"}], "*", "Ans6Range"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "This", " ", "is", " ", "the", " ", "graphic", " ", "for", " ", "the", 
        " ", "distillation", " ", "column"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"distcolumn", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", ".005", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"28", ",", "25"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"28", ",", "85"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"65", ",", "25"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"65", ",", "85"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"46.5", ",", "85"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"18.5", ",", "8"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\[Pi]"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"46.5", ",", "25"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"18.5", ",", "8"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Pi]", ",", 
             RowBox[{"2", "*", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "Black", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"49", ",", "93"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"49", ",", "100"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"49", ",", "100"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"80", ",", "100"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"80", ",", "100"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"80", ",", "90"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"80", ",", "85"}], "}"}], ",", "5"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"60", ",", "19"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"60", ",", "10"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"55", ",", "5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"45", ",", "5"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"45", ",", "5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"45", ",", "17"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"60", ",", "5"}], "}"}], ",", "5"}], "]"}], ",", 
         "\[IndentingNewLine]", "Black", ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"75", ",", "85"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"65", ",", "85"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"85", ",", "85"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"RightLimit", ",", "85"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"65", ",", "5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"RightLimit", ",", "5"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<C\>\"", ",", "15"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"80", ",", "85"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<R\>\"", ",", "15"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"60", ",", "5"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"showcolumn", "\[Equal]", "True"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Switch", "[", 
            RowBox[{"MB", ",", "\[IndentingNewLine]", "4", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<feed\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"zf", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                   "17"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "56"}], "}"}], ",", "Left"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<D\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"xd", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                   "17"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"75", ",", "75"}], "}"}], ",", "Left"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<B\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"xb", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                   "17"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"75", ",", "12"}], "}"}], ",", "Left"}], "]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", "5", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<feed\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"zf", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                   "17"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "56"}], "}"}], ",", "Left"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"q", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                   "17"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "64"}], "}"}], ",", "Left"}], "]"}]}], 
              "}"}], ",", "\[IndentingNewLine]", "6", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"L", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< kmol/h\>\""}], "}"}]}], ",", "17"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"30", ",", "78"}], "}"}], ",", "Left"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"V", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< kmol/h\>\""}], "}"}]}], ",", "17"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"30", ",", "65"}], "}"}], ",", "Left"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"OverBar", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
                    "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"Lbar", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< kmol/h\>\""}], "}"}]}], ",", "17"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"30", ",", "26"}], "}"}], ",", "Left"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"OverBar", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
                    "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"Vbar", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< kmol/h\>\""}], "}"}]}], ",", "17"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"30", ",", "40"}], "}"}], ",", "Left"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<D\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"xd", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                   "17"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"75", ",", "75"}], "}"}], ",", "Left"}], "]"}], ",",
                "\[IndentingNewLine]", 
               RowBox[{"Text", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<B\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"xb", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                   "17"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"75", ",", "12"}], "}"}], ",", "Left"}], "]"}]}], 
              "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Text", "[", 
            RowBox[{"\"\<\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "5"}], "}"}]}], "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Various", " ", "sizes", " ", "and", " ", "specifications", " ", "for",
         " ", "images", " ", "and", " ", "plots"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"size1", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<liquid mole fraction, \>\"", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]}], "}"}]}], ",", 
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<vapor mole fraction, \>\"", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]}], "}"}]}]}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"17", ",", "Black"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"600", ",", "360"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "1", ",", "0.05"}], "]"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "1", ",", "0.05"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"GridLinesStyle", "\[Rule]", 
          RowBox[{"GrayLevel", "@", "0.8"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{"plotlabel", ",", "17", ",", "Black"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageMargins", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}]}], 
        "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"size2", "=", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<liquid mole fraction, \>\"", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}]}], "}"}]}], ",", 
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<vapor mole fraction, \>\"", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}]}], "}"}]}]}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"17", ",", "Black"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"290", ",", "360"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"GridLines", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "1", ",", "0.05"}], "]"}], ",", 
            RowBox[{"Range", "[", 
             RowBox[{"0", ",", "1", ",", "0.05"}], "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"GridLinesStyle", "\[Rule]", 
          RowBox[{"GrayLevel", "@", "0.8"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{"plotlabel", ",", "17", ",", "Black"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageMargins", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"size3", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"600", ",", "360"}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         RowBox[{"ImageMargins", "\[Rule]", "None"}], ",", 
         RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "28.7"}], ",", "141"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "15"}], ",", "102"}], "}"}]}], "}"}]}], ",", 
         RowBox[{"ImagePadding", "\[Rule]", "None"}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{"plotlabel", ",", "17", ",", "Black"}], "]"}]}]}], "}"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"size4", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"310", ",", "360"}], "}"}]}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
         RowBox[{"PlotRangeClipping", "\[Rule]", "False"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"LeftLimit", ",", "101"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "15"}], ",", "102"}], "}"}]}], "}"}]}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Pane1", " ", "is", " ", "the", " ", "distillation", " ", "column", 
        " ", "graphic", " ", "that", " ", "shows", " ", "if", " ", "the", 
        " ", "\"\<show column\>\"", " ", "box", " ", "is", " ", 
        RowBox[{"selected", ".", " ", "Pane2"}], " ", "is", " ", "every", " ",
         "other", " ", 
        RowBox[{"graphic", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Pane1", "=", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{"distcolumn", ",", 
            RowBox[{"Thickness", "[", ".005", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{"ArrowPt1", ",", "ArrowPt2"}], "}"}], "]"}]}], "}"}], 
          "]"}], ",", "size4"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Pane2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Switch", "[", 
          RowBox[{"MB", ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Step", " ", "1"}], ",", " ", "2", ",", " ", 
             RowBox[{
              RowBox[{"and", " ", "3"}], " ", "-", " ", 
              RowBox[{
              "shows", " ", "column", " ", "and", " ", "certain", " ", "text",
                " ", "elements", " ", "depending", " ", "on", " ", 
               "RandomizeValuesShown", " ", "and", " ", "whether", " ", 
               "\"\<solution\>\"", " ", "box", " ", "is", " ", 
               "selected"}]}]}], "*)"}], "\[IndentingNewLine]", "1", ",", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
              RowBox[{"Switch", "[", 
               RowBox[{
               "solution", ",", "\[IndentingNewLine]", "True", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Switch", "[", 
                 RowBox[{
                 "RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#8", ",", "#9", ",", "#10", ",", 
                    "#11", ",", "#12", ",", "#21", ",", "#24", ",", "#32"}], 
                   "}"}], ",", "\[IndentingNewLine]", "2", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#8", ",", "#9", ",", "#10", ",", 
                    "#11", ",", "#12", ",", "#22", ",", "#24", ",", "#32"}], 
                   "}"}], ",", "\[IndentingNewLine]", "3", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#8", ",", "#9", ",", "#10", ",", 
                    "#11", ",", "#12", ",", "#23", ",", "#22", ",", "#32"}], 
                   "}"}], ",", "\[IndentingNewLine]", "4", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#8", ",", "#9", ",", "#10", ",", 
                    "#11", ",", "#12", ",", "#19", ",", "#23", ",", "#32"}], 
                   "}"}], ",", "\[IndentingNewLine]", "5", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#8", ",", "#9", ",", "#10", ",", 
                    "#11", ",", "#12", ",", "#19", ",", "#20", ",", "#32"}], 
                   "}"}], ",", "\[IndentingNewLine]", "6", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#8", ",", "#9", ",", "#10", ",", 
                    "#11", ",", "#12", ",", "#20", ",", "#21", ",", "#32"}], 
                   "}"}]}], "]"}], ",", "\[IndentingNewLine]", "False", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Switch", "[", 
                 RowBox[{
                 "RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#8", ",", "#10", ",", "#11", ",", 
                    "#21", ",", "#24", ",", "#32"}], "}"}], ",", 
                  "\[IndentingNewLine]", "2", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#8", ",", "#9", ",", "#11", ",", 
                    "#22", ",", "#24", ",", "#32"}], "}"}], ",", 
                  "\[IndentingNewLine]", "3", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#8", ",", "#9", ",", "#12", ",", 
                    "#23", ",", "#22", ",", "#32"}], "}"}], ",", 
                  "\[IndentingNewLine]", "4", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#8", ",", "#9", ",", "#10", ",", "#12", ",", 
                    "#19", ",", "#23", ",", "#32"}], "}"}], ",", 
                  "\[IndentingNewLine]", "5", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#9", ",", "#10", ",", "#11", ",", "#12", ",", 
                    "#19", ",", "#20", ",", "#32"}], "}"}], ",", 
                  "\[IndentingNewLine]", "6", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#10", ",", "#11", ",", "#12", ",", 
                    "#20", ",", "#21", ",", "#32"}], "}"}]}], "]"}]}], "]"}], 
              "]"}], ",", "#5"}], "]"}], ",", "\[IndentingNewLine]", "2", ",", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
              RowBox[{"Switch", "[", 
               RowBox[{
               "solution", ",", "\[IndentingNewLine]", "True", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Switch", "[", 
                 RowBox[{
                 "RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#9", ",", "#13", ",", "#14", ",", "#15", ",", 
                    "#26", ",", "#27", ",", "#32", ",", "#35"}], "}"}], ",", 
                  "\[IndentingNewLine]", "2", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#9", ",", "#13", ",", "#14", ",", "#15", ",", 
                    "#26", ",", "#27", ",", "#32", ",", "#35"}], "}"}], ",", 
                  "\[IndentingNewLine]", "3", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#9", ",", "#13", ",", "#14", ",", "#15", ",", 
                    "#25", ",", "#27", ",", "#32", ",", "#35"}], "}"}], ",", 
                  "\[IndentingNewLine]", "4", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#9", ",", "#13", ",", "#14", ",", "#15", ",", 
                    "#25", ",", "#27", ",", "#32", ",", "#35"}], "}"}], ",", 
                  "\[IndentingNewLine]", "5", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#9", ",", "#13", ",", "#14", ",", "#15", ",", 
                    "#25", ",", "#26", ",", "#32", ",", "#35"}], "}"}], ",", 
                  "\[IndentingNewLine]", "6", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#9", ",", "#13", ",", "#14", ",", "#15", ",", 
                    "#25", ",", "#26", ",", "#32", ",", "#35"}], "}"}]}], 
                 "]"}], ",", "\[IndentingNewLine]", "False", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Switch", "[", 
                 RowBox[{
                 "RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#9", ",", "#13", ",", "#26", ",", "#27", ",", 
                    "#32", ",", "#35"}], "}"}], ",", "\[IndentingNewLine]", 
                  "2", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#9", ",", "#13", ",", "#26", ",", "#27", ",", 
                    "#32", ",", "#35"}], "}"}], ",", "\[IndentingNewLine]", 
                  "3", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#9", ",", "#14", ",", "#25", ",", "#27", ",", 
                    "#32", ",", "#35"}], "}"}], ",", "\[IndentingNewLine]", 
                  "4", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#9", ",", "#14", ",", "#25", ",", "#27", ",", 
                    "#32", ",", "#35"}], "}"}], ",", "\[IndentingNewLine]", 
                  "5", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#9", ",", "#15", ",", "#25", ",", "#26", ",", 
                    "#32", ",", "#35"}], "}"}], ",", "\[IndentingNewLine]", 
                  "6", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#9", ",", "#15", ",", "#25", ",", "#26", ",", 
                    "#32", ",", "#35"}], "}"}]}], "]"}]}], "]"}], "]"}], ",", 
             "#5"}], "]"}], ",", "\[IndentingNewLine]", "3", ",", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
              RowBox[{"Switch", "[", 
               RowBox[{
               "solution", ",", "\[IndentingNewLine]", "True", ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Switch", "[", 
                 RowBox[{
                 "RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#14", ",", "#15", ",", "#16", ",", 
                    "#17", ",", "#18", ",", "#29", ",", "#30", ",", "#32", 
                    ",", "#34"}], "}"}], ",", "\[IndentingNewLine]", "2", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#14", ",", "#15", ",", "#16", ",", 
                    "#17", ",", "#18", ",", "#28", ",", "#30", ",", "#32", 
                    ",", "#34"}], "}"}], ",", "\[IndentingNewLine]", "3", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#14", ",", "#15", ",", "#16", ",", 
                    "#17", ",", "#18", ",", "#29", ",", "#30", ",", "#32", 
                    ",", "#34"}], "}"}], ",", "\[IndentingNewLine]", "4", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#14", ",", "#15", ",", "#16", ",", 
                    "#17", ",", "#18", ",", "#28", ",", "#29", ",", "#32", 
                    ",", "#34"}], "}"}], ",", "\[IndentingNewLine]", "5", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#14", ",", "#15", ",", "#16", ",", 
                    "#17", ",", "#18", ",", "#28", ",", "#29", ",", "#32", 
                    ",", "#34"}], "}"}], ",", "\[IndentingNewLine]", "6", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#14", ",", "#15", ",", "#16", ",", 
                    "#17", ",", "#18", ",", "#29", ",", "#30", ",", "#32", 
                    ",", "#34"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
                "False", ",", "\[IndentingNewLine]", 
                RowBox[{"Switch", "[", 
                 RowBox[{
                 "RandomizeValuesShown", ",", "\[IndentingNewLine]", "1", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#14", ",", "#15", ",", "#16", ",", 
                    "#29", ",", "#30", ",", "#32", ",", "#34"}], "}"}], ",", 
                  "\[IndentingNewLine]", "2", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#14", ",", "#15", ",", "#17", ",", 
                    "#28", ",", "#30", ",", "#32", ",", "#34"}], "}"}], ",", 
                  "\[IndentingNewLine]", "3", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#14", ",", "#15", ",", "#16", ",", 
                    "#29", ",", "#30", ",", "#32", ",", "#34"}], "}"}], ",", 
                  "\[IndentingNewLine]", "4", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#14", ",", "#15", ",", "#18", ",", 
                    "#28", ",", "#29", ",", "#32", ",", "#34"}], "}"}], ",", 
                  "\[IndentingNewLine]", "5", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#14", ",", "#15", ",", "#18", ",", 
                    "#28", ",", "#29", ",", "#32", ",", "#34"}], "}"}], ",", 
                  "\[IndentingNewLine]", "6", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "#1", ",", "#7", ",", "#14", ",", "#15", ",", "#16", ",", 
                    "#29", ",", "#30", ",", "#32", ",", "#34"}], "}"}]}], 
                 "]"}]}], "]"}], "]"}], ",", "#5"}], "]"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
              RowBox[{"Steps", " ", "4"}], "-", "8"}], ":", " ", 
             RowBox[{
             "shows", " ", "plot", " ", "and", " ", "other", " ", "elements", 
              " ", "depending", " ", "on", " ", "MB", " ", 
              RowBox[{"(", "step", ")"}], " ", "value"}]}], "*)"}], 
           "\[IndentingNewLine]", "4", ",", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#31", ",", "#2"}], "}"}], ",", "#3"}], "]"}], ",", 
           "\[IndentingNewLine]", "5", ",", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#31", ",", "#2"}], "}"}], ",", "#3"}], "]"}], ",", 
           "\[IndentingNewLine]", "6", ",", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#31", ",", "#2"}], "}"}], ",", "#3"}], "]"}], ",", 
           "\[IndentingNewLine]", "7", ",", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#31", ",", "#2"}], "}"}], ",", "#3"}], "]"}], ",", 
           "\[IndentingNewLine]", "8", ",", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#31", ",", "#2"}], "}"}], ",", "#3"}], "]"}], ",", 
           "\[IndentingNewLine]", "9", ",", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#31", ",", "#2"}], "}"}], ",", "#3"}], "]"}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Step", " ", "9"}], ":", " ", 
             RowBox[{
             "shows", " ", "column", " ", "and", " ", "plot", " ", "for", " ",
               "student", " ", "to", " ", "select", " ", "appropriate", " ", 
              "feed", " ", "state"}]}], "*)"}], "\[IndentingNewLine]", "10", 
           ",", 
           RowBox[{"Row", "@", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Show", "[", 
               RowBox[{"Graphics", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "#1", ",", "stagelines", ",", "stagelabels", ",", "#32", 
                   ",", "#33", ",", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MB", "\[Equal]", "10"}], "&&", "solution"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Yellow", ",", 
                    RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                    "Part9Answer"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0", "]"}], ",", "Part9Answer"}], 
                    "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                 "#6"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Show", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#31", ",", "#2"}], "}"}], ",", "#4"}], "]"}]}], 
             "}"}]}]}], "]"}], "\[IndentingNewLine]", "&"}], "[", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "This", " ", "is", " ", "a", " ", "list", " ", "of", " ", "all", " ",
           "elements", " ", "cited", " ", "in", " ", "the", " ", "functions", 
          " ", "above"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "#1", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"distcolumn", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#2", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"solution", "&&", 
               RowBox[{"MB", "\[Equal]", "4"}]}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Arrow", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"zf", ",", 
                    RowBox[{"zf", "-", "0.15"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"zf", ",", "zf"}], "}"}]}], "}"}], "]"}], "}"}], 
                ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<correct \>\"", ",", "17", ",", "colF", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<feed\>\""}], "]"}], ",", "17", ",", "colF", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], 
                    "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"zf", ",", 
                    RowBox[{"zf", "-", ".19"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Arrow", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xd", ",", 
                    RowBox[{"xd", "-", "0.15"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"xd", ",", "xd"}], "}"}]}], "}"}], "]"}], "}"}], 
                ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<correct \>\"", ",", "17", ",", "colR", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<D\>\""}], "]"}], ",", "17", ",", "colR", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], 
                    "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"xd", ",", 
                    RowBox[{"xd", "-", ".19"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Arrow", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xb", "+", ".16"}], ",", 
                    RowBox[{"xb", "-", ".05"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"xb", ",", "xb"}], "}"}]}], "}"}], "]"}], "}"}], 
                ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<correct \>\"", ",", "17", ",", "colS", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<B\>\""}], "]"}], ",", "17", ",", "colS", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], 
                    "}"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"xb", "+", ".19"}], ",", 
                    RowBox[{"xb", "-", ".06"}]}], "}"}], ",", "Left"}], 
                 "]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MB", "\[Equal]", "4"}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
                  RowBox[{"pt1", "[", 
                   RowBox[{"ptdist", ",", "colR"}], "]"}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<D\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"ptdist", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                    "17", ",", "colR", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                  "ptdist", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"-", "2.5"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
                  RowBox[{"pt1", "[", 
                   RowBox[{"ptbott", ",", "colS"}], "]"}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<B\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"ptbott", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                    "17", ",", "colS", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                  "ptbott", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "2.5"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
                  RowBox[{"pt1", "[", 
                   RowBox[{"ptfeed", ",", "colF"}], "]"}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<feed\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"ptfeed", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                    "17", ",", "colF", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                  "ptfeed", ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", 
                    RowBox[{"-", "2.5"}]}], "}"}]}], "]"}]}], 
               "\[IndentingNewLine]", "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"solution", "&&", 
                RowBox[{"MB", "\[Equal]", "4"}]}], "||", 
               RowBox[{"7", ">", "MB", "\[GreaterEqual]", "5"}]}], ",", 
              RowBox[{"pt2", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"zf", ",", "zf"}], "}"}], ",", "colF"}], "]"}]}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"solution", "&&", 
                RowBox[{"MB", "\[Equal]", "4"}]}], "||", 
               RowBox[{"7", ">", "MB", "\[GreaterEqual]", "5"}]}], ",", 
              RowBox[{"pt2", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"xd", ",", "xd"}], "}"}], ",", "colR"}], "]"}]}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"solution", "&&", 
                RowBox[{"MB", "\[Equal]", "4"}]}], "||", 
               RowBox[{"7", ">", "MB", "\[GreaterEqual]", "5"}]}], ",", 
              RowBox[{"pt2", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"xb", ",", "xb"}], "}"}], ",", "colS"}], "]"}]}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MB", "\[Equal]", "5"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
                   RowBox[{"pt1", "[", 
                    RowBox[{"qdot1", ",", "colF"}], "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Dynamic", "@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
                    RowBox[{"pt1", "[", 
                    RowBox[{"qdot2", ",", "colF"}], "]"}]}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Dynamic", "@", 
                  RowBox[{"{", 
                   RowBox[{"Dashed", ",", "Thick", ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{"qdot1", ",", "qdot2"}], "}"}], "]"}]}], 
                   "}"}]}]}], "\[IndentingNewLine]", "}"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MB", "\[Equal]", "5"}], "&&", 
               RowBox[{"solution", "\[Equal]", "False"}]}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"\"\<(\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"qdot1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\<, \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"qdot1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\<)\>\""}], ",", "17", ",", "colF", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                  "qdot1", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"\"\<(\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"qdot2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\<, \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"qdot2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\<)\>\""}], ",", "17", ",", "colF", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                  "qdot2", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"solution", "&&", 
               RowBox[{"MB", "\[Equal]", "5"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", ".5", "]"}], ",", 
                RowBox[{"Thickness", "[", ".01", "]"}], ",", 
                RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", "Blue", 
                ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"xeq", ",", "yeq"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"zf", ",", "zf"}], "}"}]}], "}"}], "]"}]}], 
               "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MB", ">", "6"}], ",", 
              RowBox[{"{", 
               RowBox[{"colF", ",", 
                RowBox[{"Thickness", "[", ".006", "]"}], ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"xi", ",", "yi"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"zf", ",", "zf"}], "}"}]}], "}"}], "]"}]}], 
               "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MB", "\[Equal]", "6"}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"Thick", ",", "colF", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"xeq", ",", "yeq"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"zf", ",", "zf"}], "}"}]}], "}"}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Dynamic", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
                   RowBox[{"pt1", "[", 
                    RowBox[{"TOLdot1", ",", "colR"}], "]"}]}], "}"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Dynamic", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
                   RowBox[{"pt1", "[", 
                    RowBox[{"TOLdot2", ",", "colR"}], "]"}]}], "}"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Dynamic", "@", 
                 RowBox[{"{", 
                  RowBox[{"Dashed", ",", "Thick", ",", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{"TOLdot1", ",", "TOLdot2"}], "}"}], "]"}]}], 
                  "}"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"Dynamic", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
                   RowBox[{"pt1", "[", 
                    RowBox[{"BOLdot1", ",", "colS"}], "]"}]}], "}"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Dynamic", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Opacity", "[", "0.6", "]"}], ",", 
                   RowBox[{"pt1", "[", 
                    RowBox[{"BOLdot2", ",", "colS"}], "]"}]}], "}"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Dynamic", "@", 
                 RowBox[{"{", 
                  RowBox[{"Dashed", ",", "Thick", ",", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{"BOLdot1", ",", "BOLdot2"}], "}"}], "]"}]}], 
                  "}"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"solution", "&&", 
               RowBox[{"MB", "\[Equal]", "6"}]}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"pt2", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"xi", ",", "yi"}], "}"}], ",", "Purple"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Opacity", "[", ".5", "]"}], ",", 
                  RowBox[{"Thickness", "[", ".01", "]"}], ",", 
                  RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", "Blue",
                   ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xb", ",", "xb"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"xi", ",", "yi"}], "}"}]}], "}"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"xd", ",", "xd"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"xi", ",", "yi"}], "}"}]}], "}"}], "]"}]}], 
                   "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MB", "\[Equal]", "6"}], "&&", 
               RowBox[{"solution", "\[Equal]", "False"}]}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"\"\<(\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"TOLdot1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\<, \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"TOLdot1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\<)\>\""}], ",", "17", ",", "colR", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                  "TOLdot1", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"\"\<(\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"TOLdot2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\<, \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"TOLdot2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\<)\>\""}], ",", "17", ",", "colR", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                  "TOLdot2", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"\"\<(\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"BOLdot1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\<, \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"BOLdot1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\<)\>\""}], ",", "17", ",", "colS", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                  "BOLdot1", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"\"\<(\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"BOLdot2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\<, \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"BOLdot2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\<)\>\""}], ",", "17", ",", "colS", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                  "BOLdot2", ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], "}"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MB", ">", "6"}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Thickness", "[", ".006", "]"}], ",", "colS", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"xb", ",", "xb"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"xi", ",", "yi"}], "}"}]}], "}"}], "]"}], ",", 
                "\[IndentingNewLine]", "colR", ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"xd", ",", "xd"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"xi", ",", "yi"}], "}"}]}], "}"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MB", "\[Equal]", "7"}], "||", 
               RowBox[{"MB", "==", "8"}], "||", 
               RowBox[{"MB", "\[Equal]", "9"}]}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Dynamic", "@", 
                 RowBox[{"{", 
                  RowBox[{"Dashed", ",", 
                   RowBox[{"Thickness", "[", ".008", "]"}], ",", 
                   RowBox[{"RGBColor", "[", 
                    RowBox[{".9", ",", ".3", ",", "0"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{"horizontalpt1", ",", "horizontalpt2"}], "}"}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{"verticalpt1", ",", "horizontalpt2"}], "}"}], 
                    "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"pt1", "[", 
                 RowBox[{"stage1guessA", ",", "Blue"}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Black", ",", 
                  RowBox[{"PointSize", "@", "0.045"}], ",", 
                  RowBox[{"Point", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"horizontalpt2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", ".03"}], ",", 
                    RowBox[{
                    RowBox[{"horizontalpt2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", ".04"}]}], "}"}]}], 
                  ",", "\[IndentingNewLine]", "White", ",", 
                  RowBox[{"PointSize", "@", "0.042"}], ",", 
                  RowBox[{"Point", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"horizontalpt2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", ".03"}], ",", 
                    RowBox[{
                    RowBox[{"horizontalpt2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", ".04"}]}], "}"}]}]}],
                  "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"MB", "\[Equal]", "7"}], "||", 
                    RowBox[{"MB", "\[Equal]", "8"}]}], ",", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"MB", "-", "6"}], "]"}], ",", 
                    RowBox[{"ToString", "[", "\"\<R\>\"", "]"}]}], "]"}], ",",
                     "17"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"horizontalpt2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", ".025"}], ",", 
                    RowBox[{
                    RowBox[{"horizontalpt2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", ".034"}]}], "}"}]}], 
                 "]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MB", "\[Equal]", "8"}], "||", 
               RowBox[{"MB", "\[Equal]", "9"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"Dotnumbers", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"solution", "&&", 
               RowBox[{"MB", "\[Equal]", "7"}]}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", ".5", "]"}], ",", 
                RowBox[{"Thickness", "[", ".01", "]"}], ",", 
                RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", "Blue", 
                ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"nR", ">", "0"}], ",", 
                  RowBox[{"Ry", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"Sy", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"Rx", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"solution", "&&", 
               RowBox[{"MB", "\[Equal]", "8"}]}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", ".5", "]"}], ",", 
                RowBox[{"Thickness", "[", ".01", "]"}], ",", 
                RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", "Blue", 
                ",", 
                RowBox[{"Which", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"nR", "\[Equal]", "0"}], "&&", 
                   RowBox[{"nS", ">", "1"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sy", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"Sx", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"nR", "\[Equal]", "0"}], "&&", 
                   RowBox[{"nS", "\[Equal]", "1"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Sr", ",", 
                    RowBox[{"Sx", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"nR", "\[Equal]", "1"}], "&&", 
                   RowBox[{"nS", ">", "0"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Sy", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"Sx", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"nR", "\[Equal]", "1"}], "&&", 
                   RowBox[{"nS", "\[Equal]", "1"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Sr", ",", 
                    RowBox[{"Rx", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"nR", ">", "1"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Ry", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"Rx", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], 
                 "\[IndentingNewLine]", "]"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MB", "\[Equal]", "8"}], ",", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"nR", ">", "0"}], ",", 
                  RowBox[{"Ry", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"Sy", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"Rx", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MB", "\[Equal]", "9"}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"Thick", ",", "Ry", ",", "Sy", ",", "Rx", ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Sx", "[", 
                   RowBox[{"[", "a", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "1", ",", "nS"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Dotnumbers", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ";;", 
                   RowBox[{"nT", "-", "1"}]}], "]"}], "]"}]}], "}"}]}], "]"}],
             ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"solution", "&&", 
               RowBox[{"MB", "\[Equal]", "9"}]}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", ".5", "]"}], ",", 
                RowBox[{"Thickness", "[", ".01", "]"}], ",", 
                RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}], ",", "Blue", 
                ",", "Sr", ",", 
                RowBox[{"Sx", "[", 
                 RowBox[{"[", 
                  RowBox[{"nS", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MB", "\[Equal]", "4"}], "&&", 
               RowBox[{"showcolumn", "\[Equal]", "False"}]}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"White", ",", 
                  RowBox[{"Rectangle", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{".7", ",", ".05"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.15", ",", ".35"}], "}"}]}], "]"}]}], "}"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<feed\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"zf", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                    "17", ",", "colF"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".7", ",", ".3"}], "}"}], ",", "Left"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<D\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"xd", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                    "17", ",", "colR"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".7", ",", ".2"}], "}"}], ",", "Left"}], "]"}], 
                ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<B\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"xb", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                    "17", ",", "colS"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".7", ",", ".1"}], "}"}], ",", "Left"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MB", "\[Equal]", "5"}], "&&", 
               RowBox[{"showcolumn", "\[Equal]", "False"}]}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"White", ",", 
                  RowBox[{"Rectangle", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{".7", ",", ".4"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.15", ",", ".6"}], "}"}]}], "]"}]}], "}"}], ",",
                 "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<feed\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"zf", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                    "17"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".7", ",", ".55"}], "}"}], ",", "Left"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"\"\<quality = \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"q", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
                    "\"\<\>\""}], ",", "17"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".7", ",", ".45"}], "}"}], ",", "Left"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MB", "\[Equal]", "6"}], "&&", 
               RowBox[{"showcolumn", "\[Equal]", "False"}]}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"White", ",", 
                  RowBox[{"Rectangle", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{".7", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.15", ",", ".6"}], "}"}]}], "]"}]}], "}"}], ",",
                 "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"L", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< kmol/h\>\""}], "}"}]}], ",", "17"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".7", ",", ".55"}], "}"}], ",", "Left"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"V", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< kmol/h\>\""}], "}"}]}], ",", "17"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".7", ",", ".45"}], "}"}], ",", "Left"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"OverBar", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
                    "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"Lbar", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< kmol/h\>\""}], "}"}]}], ",", "17"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".7", ",", ".35"}], "}"}], ",", "Left"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"OverBar", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
                    "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"Vbar", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                    "\"\< kmol/h\>\""}], "}"}]}], ",", "17"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".7", ",", ".25"}], "}"}], ",", "Left"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<D\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"xd", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                    "17"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".7", ",", ".15"}], "}"}], ",", "Left"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<B\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"xb", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
                    "17"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".7", ",", ".05"}], "}"}], ",", "Left"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MB", "\[Equal]", "10"}], ",", 
              RowBox[{"{", 
               RowBox[{"Dotnumbers", ",", "Thick", ",", 
                RowBox[{"GrayLevel", "[", ".4", "]"}], ",", 
                "\[IndentingNewLine]", "Ry", ",", "Sy", ",", "Rx", ",", "Sr", 
                ",", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"Sx", "[", 
                   RowBox[{"[", 
                    RowBox[{"a", "+", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"a", ",", "0", ",", "nS"}], "}"}]}], "]"}]}], 
               "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#3", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"showcolumn", "\[Equal]", "True"}], ",", "size2", ",", 
           "size1"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#4", "*)"}], "\[IndentingNewLine]", "size2", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#5", "*)"}], "\[IndentingNewLine]", "size3", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#6", "*)"}], "\[IndentingNewLine]", "size4", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#7", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                   RowBox[{"MB", "\[NotEqual]", "3"}], "&&", 
                   RowBox[{"AnyTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "5"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], 
                    "&"}]}], "]"}]}], ",", 
                  "\"\<correct feed rate = \\n\\t\\t\>\"", ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\<feed rate (\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<F\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<) = \>\""}], "}"}]}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"F", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                RowBox[{"MB", "\[NotEqual]", "3"}], "&&", 
                RowBox[{"AnyTrue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"4", ",", "5"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}],
                  "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"17", ",", "Blue"}], "}"}], ",", "17"}], "]"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "\[Equal]", "True"}], "&&", 
              RowBox[{"MB", "\[NotEqual]", "3"}], "&&", 
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"4", ",", "5"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "30"}], ",", "26"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "28.5"}], ",", "40"}], "}"}]}], "]"}], ",", 
           "Left"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#8", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                   RowBox[{"AnyTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5", ",", "6"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], 
                    "&"}]}], "]"}]}], ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\<correct \>\"", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<feed\>\""}], "]"}], ",", "\"\< = \>\""}], "}"}]}], 
                  ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<feed\>\""}], "]"}], ",", "\"\< = \>\""}], "}"}]}]}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"zf", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                RowBox[{"AnyTrue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"5", ",", "6"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}],
                  "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"17", ",", "Blue"}], "}"}], ",", "17"}], "]"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "\[Equal]", "True"}], "&&", 
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"5", ",", "6"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "23"}], ",", "68"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "15"}], ",", "58"}], "}"}]}], "]"}], ",", 
           "Left"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#9", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                   RowBox[{"MB", "\[Equal]", "1"}], "&&", 
                   RowBox[{"AnyTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "6"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], 
                    "&"}]}], "]"}]}], ",", 
                  "\"\<correct distillate flow = \>\"", ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\<distillate flow (\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<D\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<) = \>\""}], "}"}]}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"ToString", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"distflow", ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                RowBox[{"MB", "\[Equal]", "1"}], "&&", 
                RowBox[{"AnyTrue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "6"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}],
                  "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"17", ",", "Blue"}], "}"}], ",", "17"}], "]"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "\[Equal]", "True"}], "&&", 
              RowBox[{"MB", "\[Equal]", "1"}], "&&", 
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "6"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"70", ",", "60"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"70", ",", "72"}], "}"}]}], "]"}], ",", "Left"}], "]"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#10", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                   RowBox[{"AnyTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], 
                    "&"}]}], "]"}]}], ",", "\"\<correct bottoms flow = \>\"", 
                  ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\<bottoms flow (\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<) = \>\""}], "}"}]}]}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"ToString", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"botflow", ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                RowBox[{"AnyTrue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", "3"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}],
                  "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"17", ",", "Blue"}], "}"}], ",", "17"}], "]"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "\[Equal]", "True"}], "&&", 
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"2", ",", "3"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"70", ",", "23"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"70", ",", "14"}], "}"}]}], "]"}], ",", "Left"}], "]"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#11", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                   RowBox[{"AnyTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "4"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], 
                    "&"}]}], "]"}]}], ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\<correct \>\"", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<D\>\""}], "]"}]}], "}"}]}], ",", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<D\>\""}], "]"}]}], "]"}], ",", "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"xd", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                RowBox[{"AnyTrue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"3", ",", "4"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}],
                  "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"17", ",", "Blue"}], "}"}], ",", "17"}], "]"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "\[Equal]", "True"}], "&&", 
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"3", ",", "4"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"88", ",", "102"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"88", ",", "94"}], "}"}]}], "]"}], ",", "Left"}], "]"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#12", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                   RowBox[{"AnyTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], 
                    "&"}]}], "]"}]}], ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\<correct \>\"", ",", 
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<B\>\""}], "]"}]}], "}"}]}], ",", 
                  RowBox[{"Subscript", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<B\>\""}], "]"}]}], "]"}], ",", "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"xb", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                RowBox[{"AnyTrue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}],
                  "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"17", ",", "Blue"}], "}"}], ",", "17"}], "]"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "\[Equal]", "True"}], "&&", 
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "2"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"70", ",", 
               RowBox[{"-", "12"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"70", ",", 
               RowBox[{"-", "3"}]}], "}"}]}], "]"}], ",", "Left"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#13", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                   RowBox[{"AnyTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], 
                    "&"}]}], "]"}]}], ",", "\"\<correct reflux ratio \>\"", 
                  ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\<reflux ratio (\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\</\>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<D\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<)\>\""}], "}"}]}]}], "]"}], ",", "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"R", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                RowBox[{"AnyTrue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}],
                  "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"17", ",", "Blue"}], "}"}], ",", "17"}], "]"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "\[Equal]", "True"}], "&&", 
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"88", ",", "100"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"88", ",", "92"}], "}"}]}], "]"}], ",", "Left"}], "]"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#14", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                   RowBox[{"MB", "\[NotEqual]", "3"}], "&&", 
                   RowBox[{"AnyTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "5", ",", "6"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], 
                    "&"}]}], "]"}]}], ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\<correct \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}]}], "}"}]}], 
                  ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}]}], "]"}], ",", 
                "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"L", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                RowBox[{"MB", "\[NotEqual]", "3"}], "&&", 
                RowBox[{"AnyTrue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "5", ",", "6"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}],
                  "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"17", ",", "Blue"}], "}"}], ",", "17"}], "]"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "\[Equal]", "True"}], "&&", 
              RowBox[{"MB", "\[NotEqual]", "3"}], "&&", 
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "2", ",", "5", ",", "6"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"70", ",", "53"}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"MB", "\[NotEqual]", "3"}], ",", 
             RowBox[{"{", 
              RowBox[{"29.3", ",", "53"}], "}"}], ",", 
             RowBox[{"MB", "\[Equal]", "3"}], ",", 
             RowBox[{"{", 
              RowBox[{"29.3", ",", "63"}], "}"}]}], "]"}], ",", "Left"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#15", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                   RowBox[{"MB", "\[NotEqual]", "3"}], "&&", 
                   RowBox[{"AnyTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], 
                    "&"}]}], "]"}]}], ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\<correct \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}]}], "}"}]}], 
                  ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}]}], "]"}], ",", 
                "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"V", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                RowBox[{"MB", "\[NotEqual]", "3"}], "&&", 
                RowBox[{"AnyTrue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}],
                  "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"17", ",", "Blue"}], "}"}], ",", "17"}], "]"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Which", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "\[Equal]", "True"}], "&&", 
              RowBox[{"MB", "\[NotEqual]", "3"}], "&&", 
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"70", ",", "63"}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"MB", "\[NotEqual]", "3"}], ",", 
             RowBox[{"{", 
              RowBox[{"29.3", ",", "63"}], "}"}], ",", 
             RowBox[{"MB", "\[Equal]", "3"}], ",", 
             RowBox[{"{", 
              RowBox[{"29.3", ",", "73"}], "}"}]}], "]"}], ",", "Left"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#16", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                   RowBox[{"AnyTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], 
                    "&"}]}], "]"}]}], ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\<correct \>\"", ",", 
                    RowBox[{"OverBar", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}]}], 
                    "}"}]}], ",", 
                  RowBox[{"OverBar", "[", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}]}], 
                 "]"}], ",", "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"Lbar", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                RowBox[{"AnyTrue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}],
                  "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"17", ",", "Blue"}], "}"}], ",", "17"}], "]"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "\[Equal]", "True"}], "&&", 
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"2", ",", "4", ",", "5"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"70", ",", "32"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"29.3", ",", "32"}], "}"}]}], "]"}], ",", "Left"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#17", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                   RowBox[{"AnyTrue", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], 
                    "&"}]}], "]"}]}], ",", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{"\"\<correct \>\"", ",", 
                    RowBox[{"OverBar", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}]}], 
                    "}"}]}], ",", 
                  RowBox[{"OverBar", "[", 
                   RowBox[{"Style", "[", 
                    RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}]}], 
                 "]"}], ",", "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"Vbar", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                RowBox[{"AnyTrue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6"}], 
                   "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}],
                  "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"17", ",", "Blue"}], "}"}], ",", "17"}], "]"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "\[Equal]", "True"}], "&&", 
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}],
                 ",", 
                RowBox[{
                 RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"70", ",", "40"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"29.3", ",", "40"}], "}"}]}], "]"}], ",", "Left"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#18", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                 RowBox[{"AnyTrue", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3", ",", "6"}], "}"}], ",", 
                   RowBox[{
                    RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], 
                    "&"}]}], "]"}]}], ",", "\"\<correct quality = \>\"", ",", 
                "\"\<quality = \>\""}], "]"}], "\[IndentingNewLine]", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"q", ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
              "\"\<\>\""}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"solution", "\[Equal]", "True"}], "&&", 
                RowBox[{"AnyTrue", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "3", ",", "6"}], "}"}], ",", 
                  RowBox[{
                   RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}],
                  "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"17", ",", "Blue"}], "}"}], ",", "17"}], "]"}]}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"solution", "\[Equal]", "True"}], "&&", 
              RowBox[{"AnyTrue", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1", ",", "2", ",", "3", ",", "6"}], "}"}], ",", 
                RowBox[{
                 RowBox[{"#", "\[Equal]", "RandomizeValuesShown"}], "&"}]}], 
               "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "18"}], ",", "68"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "18"}], ",", "58"}], "}"}]}], "]"}], ",", 
           "Left"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#19", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{"\"\<feed rate (\>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<F\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\<) = \>\"", ",", 
                RowBox[{"ToString", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"GuessA", ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", "17", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", ".6", ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "28.5"}], ",", "40"}], "}"}], ",", "Left"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#20", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<z\>\"", ",", "Italic"}], "]"}], ",", 
                  "\"\<feed\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"GuessB", ",", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
             "17", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", ".6", ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "15"}], ",", "58"}], "}"}], ",", "Left"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#21", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{"\"\<distillate flow (\>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<D\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\<) = \>\"", ",", 
                RowBox[{"ToString", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"GuessC", ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", "17", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", ".6", ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"70", ",", "72"}], "}"}], ",", "Left"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#22", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{"\"\<bottoms flow (\>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<B\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\<) = \>\"", ",", 
                RowBox[{"ToString", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{"GuessD", ",", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", "17", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", ".6", ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"70", ",", "14"}], "}"}], ",", "Left"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#23", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                  "\"\<D\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"GuessE", ",", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
             "17", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", ".6", ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"88", ",", "94"}], "}"}], ",", "Left"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#24", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Subscript", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                  "\"\<B\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"GuessF", ",", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
             "17", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", ".6", ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"70", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", "Left"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#25", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{"\"\<reflux ratio (\>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\</\>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<D\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\<) = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"GuessG", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ",", 
             "17", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", ".6", ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"88", ",", "92"}], "}"}], ",", "Left"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#26", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"GuessH", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", "17", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", ".6", ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.3", ",", "53"}], "}"}], ",", "Left"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#27", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"GuessI", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", "17", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", ".6", ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.3", ",", "63"}], "}"}], ",", "Left"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#28", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"OverBar", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
                "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"GuessJ", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", "17", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", ".6", ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.3", ",", "32"}], "}"}], ",", "Left"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#29", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"OverBar", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
                "\"\< = \>\"", ",", 
                RowBox[{"NumberForm", "[", 
                 RowBox[{"GuessK", ",", 
                  RowBox[{"{", 
                   RowBox[{"3", ",", "2"}], "}"}]}], "]"}], ",", 
                "\"\< kmol/h\>\""}], "}"}]}], ",", "17", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", ".6", ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"29.3", ",", "40"}], "}"}], ",", "Left"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#30", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"\"\<quality = \>\"", "<>", 
              RowBox[{"ToString", "[", 
               RowBox[{"NumberForm", "[", 
                RowBox[{"GuessL", ",", 
                 RowBox[{"{", 
                  RowBox[{"3", ",", "2"}], "}"}]}], "]"}], "]"}], "<>", 
              "\"\<\>\""}], ",", "17", ",", 
             RowBox[{"RGBColor", "[", 
              RowBox[{"0", ",", ".6", ",", "0"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "18"}], ",", "58"}], "}"}], ",", "Left"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#31", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"equilb", "[", "x", "]"}], ",", "x"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Black"}], "}"}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#32", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", ".005", "]"}], ",", 
           RowBox[{"Arrow", "[", 
            RowBox[{"{", 
             RowBox[{"ArrowPt1", ",", "ArrowPt2"}], "}"}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#33", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<feed stream\>\"", ",", "17"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"13", ",", 
             RowBox[{"ArrowHeight", "+", "5"}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "#34", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"OverBar", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
                "\"\< and \>\"", ",", 
                RowBox[{"OverBar", "[", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], "]"}], ",", 
                "\"\< = liquid and vapor flow\\nrates in the stripping \
(bottom) section\>\""}], "}"}]}], ",", "17", ",", 
             RowBox[{"TextAlignment", "\[Rule]", "Left"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "24"}], ",", "0"}], "}"}], ",", "Left"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "#35", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<L\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\< and \>\"", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<V\>\"", ",", "Italic"}], "]"}], ",", 
                "\"\< = liquid and vapor flow\\nrates in the rectifying (top) \
section\>\""}], "}"}]}], ",", "17", ",", 
             RowBox[{"TextAlignment", "\[Rule]", "Left"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "24"}], ",", "0"}], "}"}], ",", "Left"}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "This", " ", "is", " ", "to", " ", "determine", " ", "the", " ", 
         "initial", " ", "location", " ", "of", " ", "the", " ", "lines", " ",
          "in", " ", "parts", " ", "7"}], "+", "8"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Value1", "=", 
       RowBox[{
        RowBox[{"equilb", "[", "0.6", "]"}], "-", "0.05"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Value2", "=", 
       RowBox[{
        RowBox[{"equilb", "[", "0.4", "]"}], "-", "0.05"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Shows", " ", "either", " ", "Pane2", " ", "or", " ", "Pane1", " ", 
        "and", " ", "Pane2", " ", "depending", " ", "on", " ", "whether", " ",
         "Show", " ", "Column", " ", "button", " ", "is", " ", "selected"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"showcolumn", ",", 
        RowBox[{"Row", "@", 
         RowBox[{"{", 
          RowBox[{"Pane2", ",", "Pane1"}], "}"}]}], ",", "Pane2"}], "]"}]}]}],
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "These", " ", "are", " ", "all", " ", "of", " ", "the", " ", "control", 
     " ", "elements", " ", "needed", " ", "to", " ", "perform", " ", "the", 
     " ", "demonstration"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"solution", ",", "False", ",", "\"\<solution\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"MB", ",", "1"}], "}"}], ",", "1", ",", "10", ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"showcolumn", ",", "False", ",", "\"\<column\>\""}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"True", ",", "False"}], "}"}], ",", " ", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"hint", ",", "False", ",", "\"\<hint\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Ans1", ",", "0"}], "}"}], ",", "0", ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Ans2", ",", "0"}], "}"}], ",", "0", ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Ans3", ",", "0"}], "}"}], ",", "0", ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Ans4", ",", "0"}], "}"}], ",", "0", ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Ans5", ",", "0"}], "}"}], ",", "0", ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Ans6", ",", "0"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ptdist", ",", 
         RowBox[{"{", 
          RowBox[{"0.6", ",", "0.7"}], "}"}]}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ptbott", ",", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", "0.3"}], "}"}]}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ptfeed", ",", 
         RowBox[{"{", 
          RowBox[{"0.2", ",", "0.7"}], "}"}]}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"qdot1", ",", 
         RowBox[{"{", 
          RowBox[{"0.3", ",", "0.9"}], "}"}]}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"qdot2", ",", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", "0.9"}], "}"}]}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"BOLdot1", ",", 
         RowBox[{"{", 
          RowBox[{"0.3", ",", ".9"}], "}"}]}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"BOLdot2", ",", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", ".9"}], "}"}]}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"TOLdot1", ",", 
         RowBox[{"{", 
          RowBox[{"0.3", ",", "0.7"}], "}"}]}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"TOLdot2", ",", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", "0.7"}], "}"}]}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ArrowHeight", ",", "50"}], "}"}], ",", 
       RowBox[{"ControlType", "\[Rule]", " ", "None"}]}], "}"}], ","}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Button", "[", 
          RowBox[{"\"\< new problem \>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"reset", "++"}], ",", 
             RowBox[{"MB", "=", "1"}], ",", 
             RowBox[{"solution", "=", "False"}], ",", 
             RowBox[{"hint", "=", "False"}], ",", 
             RowBox[{"Clear", "[", "lineguess1", "]"}], ",", 
             RowBox[{"Ans1", "=", "0"}], ",", 
             RowBox[{"Ans2", "=", "0"}], ",", 
             RowBox[{"Ans3", "=", "0"}], ",", 
             RowBox[{"Ans4", "=", "0"}], ",", 
             RowBox[{"Ans5", "=", "0"}], ",", 
             RowBox[{"Ans6", "=", "0"}], ",", 
             RowBox[{"showcolumn", "=", "False"}], ",", 
             RowBox[{"stage1guessA", "=", 
              RowBox[{"{", 
               RowBox[{"0.5", ",", ".8"}], "}"}]}], ",", 
             RowBox[{"ArrowHeight", "=", "50"}], ",", 
             RowBox[{"qdot1", "=", 
              RowBox[{"{", 
               RowBox[{"0.3", ",", "0.9"}], "}"}]}], ",", 
             RowBox[{"qdot2", "=", 
              RowBox[{"{", 
               RowBox[{"0.1", ",", "0.9"}], "}"}]}], ",", 
             RowBox[{"ptdist", "=", 
              RowBox[{"{", 
               RowBox[{"0.6", ",", "0.7"}], "}"}]}], ",", 
             RowBox[{"ptbott", "=", 
              RowBox[{"{", 
               RowBox[{"0.4", ",", "0.3"}], "}"}]}], ",", 
             RowBox[{"ptfeed", "=", 
              RowBox[{"{", 
               RowBox[{"0.2", ",", "0.7"}], "}"}]}], ",", 
             RowBox[{"BOLdot1", "=", 
              RowBox[{"{", 
               RowBox[{"0.3", ",", ".9"}], "}"}]}], ",", 
             RowBox[{"BOLdot2", "=", 
              RowBox[{"{", 
               RowBox[{"0.1", ",", ".9"}], "}"}]}], ",", 
             RowBox[{"TOLdot1", "=", 
              RowBox[{"{", 
               RowBox[{"0.3", ",", "0.7"}], "}"}]}], ",", 
             RowBox[{"TOLdot2", "=", 
              RowBox[{"{", 
               RowBox[{"0.1", ",", "0.7"}], "}"}]}]}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"reset", ",", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1000"}], "}"}], "]"}]}], "}"}], ",", "1", 
            ",", "10000", ",", "1", ",", "None"}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"MB", ",", "1"}], "}"}], ",", "1", ",", "10", ",", "1", 
            ",", "None"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"stage1guessA", ",", 
              RowBox[{"{", 
               RowBox[{"0.6", ",", ".8"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{".01", ",", ".99"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{".01", ",", ".99"}], "}"}]}], "}"}], ",", "Locator", 
            ",", 
            RowBox[{"Appearance", "\[Rule]", "None"}], ",", 
            RowBox[{"Enabled", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{"solution", ",", "False", ",", "True"}], "]"}]}]}], 
           "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PaneSelector", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"##", "&"}], "@@", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
                 "7", ",", "8", ",", "9"}], "}"}], "\[Rule]", 
               RowBox[{"Button", "[", 
                RowBox[{"\"\< next \>\"", ",", 
                 RowBox[{"{", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"1", "\[LessEqual]", "MB", "<", "10"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"MB", "++"}], ",", 
                    RowBox[{"solution", "=", "False"}], ",", 
                    RowBox[{"hint", "=", "False"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MB", "\[Equal]", "7"}], ",", 
                    RowBox[{"stage1guessA", "=", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", ".7"}], "}"}]}], ",", 
                    RowBox[{"stage1guessA", "=", 
                    RowBox[{"{", 
                    RowBox[{".2", ",", ".4"}], "}"}]}]}], "]"}], ",", 
                    RowBox[{"showcolumn", "=", "False"}]}], "}"}], ",", 
                    "Null"}], "]"}], "}"}]}], "]"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"Dynamic", "@", "MB"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PaneSelector", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
             "1", "\[Rule]", 
              "\"\<1. Solve for the missing green variables.\>\""}], ",", 
             RowBox[{
             "2", "\[Rule]", 
              "\"\<2. Solve for the missing green variables.\>\""}], ",", 
             RowBox[{
             "3", "\[Rule]", 
              "\"\<3. Solve for the missing green variables.\>\""}], ",", 
             RowBox[{"4", "\[Rule]", 
              RowBox[{"Column", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<4. Place the points at their correct\>\"", ",", 
                 RowBox[{"Row", "@", 
                  RowBox[{"{", 
                   RowBox[{"\"\<locations on the \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<y\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< = \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<x\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< line.\>\""}], "}"}]}]}], "}"}], "]"}]}], ",", 
             RowBox[{"5", "\[Rule]", 
              RowBox[{"Row", "@", 
               RowBox[{"{", 
                RowBox[{"\"\<5. Draw the \>\"", ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<q\>\"", ",", "Italic"}], "]"}], ",", 
                 "\"\<-line (feed line).\>\""}], "}"}]}]}], ",", 
             RowBox[{
             "6", "\[Rule]", 
              "\"\<6. Move the points to draw the top \\n and bottom \
operating lines.\>\""}], ",", 
             RowBox[{
             "7", "\[Rule]", 
              "\"\<7. Drag the point to locate the first stage.\>\""}], ",", 
             RowBox[{
             "8", "\[Rule]", 
              "\"\<8. Drag the point to locate the second stage.\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
             "9", "\[Rule]", 
              "\"\<9. Drag the point to locate the final stage.\>\""}], ",", 
             RowBox[{
             "10", "\[Rule]", 
              "\"\<10. Determine the feed stream location.\>\""}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"Dynamic", "@", "MB"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"solution", ",", "False", ",", "\"\<solution\>\""}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"True", ",", "False"}], "}"}], ",", 
            RowBox[{"Enabled", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{"solution", ",", "False", ",", "True"}], "]"}]}]}], 
           "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PaneSelector", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"##", "&"}], "@@", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "1", ",", "2", ",", "3", ",", "5", ",", "6", ",", "7", ",", 
                 "8", ",", "9", ",", "10"}], "}"}], "\[Rule]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"hint", ",", "False", ",", "\"\<hint\>\""}], "}"}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"Dynamic", "@", "MB"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PaneSelector", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"##", "&"}], "@@", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"5", ",", "6"}], "}"}], "\[Rule]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "showcolumn", ",", "False", ",", "\"\<column\>\""}], "}"}],
                   ",", 
                  RowBox[{"{", 
                   RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
              "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"Dynamic", "@", "MB"}]}], "]"}]}], "\[IndentingNewLine]", 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PaneSelector", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"1", "\[Rule]", 
              RowBox[{"Grid", "@", 
               RowBox[{"{", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Control", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Ans1", ",", "0", ",", 
                    RowBox[{"Dynamic", "@", "Box1"}]}], "}"}], ",", "0", ",", 
                    RowBox[{"Dynamic", "@", "Ans1Range"}], ",", "0.01", ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], "]"}]}], 
                    ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Control", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Ans2", ",", "0", ",", 
                    RowBox[{"Dynamic", "@", "Box2"}]}], "}"}], ",", "0", ",", 
                    RowBox[{"Dynamic", "@", "Ans2Range"}], ",", "0.01", ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], "]"}]}], 
                    ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}]}], "}"}], "}"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"2", "\[Rule]", 
              RowBox[{"Grid", "@", 
               RowBox[{"{", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Control", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Ans3", ",", "0", ",", 
                    RowBox[{"Dynamic", "@", "Box3"}]}], "}"}], ",", "0", ",", 
                    RowBox[{"Dynamic", "@", "Ans3Range"}], ",", "0.01", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Control", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Ans4", ",", "0", ",", 
                    RowBox[{"Dynamic", "@", "Box4"}]}], "}"}], ",", "0", ",", 
                    RowBox[{"Dynamic", "@", "Ans4Range"}], ",", "0.01", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}]}], "}"}], "}"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"3", "\[Rule]", 
              RowBox[{"Grid", "@", 
               RowBox[{"{", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Control", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Ans5", ",", "0", ",", 
                    RowBox[{"Dynamic", "@", "Box5"}]}], "}"}], ",", "0", ",", 
                    RowBox[{"Dynamic", "@", "Ans5Range"}], ",", "0.01", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Control", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Ans6", ",", "0", ",", 
                    RowBox[{"Dynamic", "@", "Box6"}]}], "}"}], ",", 
                    RowBox[{"Dynamic", "@", "Ans6RangeL"}], ",", 
                    RowBox[{"Dynamic", "@", "Ans6Range"}], ",", "0.01", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}]}], "}"}], "}"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"4", "\[Rule]", 
              RowBox[{"Row", "@", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ptdist", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6", ",", "0.7"}], "}"}]}], "}"}], ",", 
                    "Locator", ",", 
                    RowBox[{"Appearance", "\[Rule]", "None"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ptbott", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.4", ",", "0.3"}], "}"}]}], "}"}], ",", 
                    "Locator", ",", 
                    RowBox[{"Appearance", "\[Rule]", "None"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ptfeed", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.2", ",", "0.7"}], "}"}]}], "}"}], ",", 
                    "Locator", ",", 
                    RowBox[{"Appearance", "\[Rule]", "None"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}]}], "}"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"5", "\[Rule]", 
              RowBox[{"Row", "@", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"qdot1", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3", ",", "0.9"}], "}"}]}], "}"}], ",", 
                    "Locator", ",", 
                    RowBox[{"Appearance", "\[Rule]", "None"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"qdot2", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", "0.9"}], "}"}]}], "}"}], ",", 
                    "Locator", ",", 
                    RowBox[{"Appearance", "\[Rule]", "None"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Spacer", "[", 
                  RowBox[{"{", 
                   RowBox[{"200", ",", "1", ",", "1"}], "}"}], "]"}], ",", 
                 RowBox[{"Dynamic", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Text", "[", "HintTextColumnTrue", "]"}], ",", 
                    "12"}], "]"}]}]}], "}"}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"6", "\[Rule]", 
              RowBox[{"Row", "@", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"BOLdot1", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3", ",", ".9"}], "}"}]}], "}"}], ",", 
                    "Locator", ",", 
                    RowBox[{"Appearance", "\[Rule]", "None"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"BOLdot2", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", ".9"}], "}"}]}], "}"}], ",", 
                    "Locator", ",", 
                    RowBox[{"Appearance", "\[Rule]", "None"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"TOLdot1", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.3", ",", "0.7"}], "}"}]}], "}"}], ",", 
                    "Locator", ",", 
                    RowBox[{"Appearance", "\[Rule]", "None"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"TOLdot2", ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", "0.7"}], "}"}]}], "}"}], ",", 
                    "Locator", ",", 
                    RowBox[{"Appearance", "\[Rule]", "None"}], ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Spacer", "[", 
                  RowBox[{"{", 
                   RowBox[{"200", ",", "1", ",", "1"}], "}"}], "]"}], ",", 
                 RowBox[{"Dynamic", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Text", "[", "HintTextColumnTrue", "]"}], ",", 
                    "12"}], "]"}]}]}], "}"}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"10", "\[Rule]", 
              RowBox[{"Row", "@", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "ArrowHeight", ",", "50", ",", "\"\<feed height\>\""}], 
                    "}"}], ",", "20", ",", "90", ",", "1", ",", 
                    RowBox[{"Enabled", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{"solution", ",", "False", ",", "True"}], 
                    "]"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Spacer", "[", 
                  RowBox[{"{", 
                   RowBox[{"40", ",", "1", ",", "1"}], "}"}], "]"}], ",", 
                 RowBox[{"Dynamic", "@", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Text", "[", "HintTextColumnTrue", "]"}], ",", 
                    "12"}], "]"}]}]}], "}"}]}]}]}], "\[IndentingNewLine]", 
            "}"}], ",", 
           RowBox[{"Dynamic", "@", "MB"}]}], "]"}], ",", "SpanFromLeft"}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Box1", ",", "1"}], "}"}], ",", "None"}], "}"}], "]"}], 
         ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Box2", ",", "1"}], "}"}], ",", "None"}], "}"}], "]"}], 
         ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Box3", ",", "1"}], "}"}], ",", "None"}], "}"}], "]"}], 
         ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Box4", ",", "1"}], "}"}], ",", "None"}], "}"}], "]"}], 
         ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Box5", ",", "1"}], "}"}], ",", "None"}], "}"}], "]"}], 
         ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Box6", ",", "1"}], "}"}], ",", "None"}], "}"}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Ans1Range", ",", "1"}], "}"}], ",", "None"}], "}"}], 
          "]"}], ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Ans2Range", ",", "1"}], "}"}], ",", "None"}], "}"}], 
          "]"}], ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Ans3Range", ",", "1"}], "}"}], ",", "None"}], "}"}], 
          "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Ans4Range", ",", "1"}], "}"}], ",", "None"}], "}"}], 
          "]"}], ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Ans5Range", ",", "1"}], "}"}], ",", "None"}], "}"}], 
          "]"}], ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Ans6Range", ",", "1"}], "}"}], ",", "None"}], "}"}], 
          "]"}], ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Ans6RangeL", ",", "1"}], "}"}], ",", "None"}], "}"}], 
          "]"}], ",", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"HintTextColumnTrue", ",", "1"}], "}"}], ",", "None"}], 
           "}"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.732026537246455*^9, {3.7320266374041843`*^9, 3.732026688275288*^9}, {
   3.732026721772204*^9, 3.7320270059424577`*^9}, {3.7320270383083086`*^9, 
   3.7320270389353447`*^9}, {3.732027083717906*^9, 3.732027084334942*^9}, {
   3.732044674964785*^9, 3.732044797372854*^9}, 3.732044835483292*^9, {
   3.732045995265486*^9, 3.7320461749695997`*^9}, {3.732046232103483*^9, 
   3.732046336827508*^9}, {3.732048754513135*^9, 3.732048857624362*^9}, {
   3.7320488938873863`*^9, 3.732049688400085*^9}, {3.73205016975646*^9, 
   3.73205022559448*^9}, {3.7320502951158752`*^9, 3.7320503057225723`*^9}, {
   3.732050368393219*^9, 3.73205039679805*^9}, {3.7320508948087807`*^9, 
   3.732050905224374*^9}, {3.732050948882391*^9, 3.732050978291951*^9}, 
   3.7320510490858994`*^9, {3.732051106719734*^9, 3.732051215573412*^9}, {
   3.7320513051806726`*^9, 3.7320513150296*^9}, {3.732051345037438*^9, 
   3.732051364005597*^9}, {3.732051452856526*^9, 3.732051464417735*^9}, {
   3.7320515146988773`*^9, 3.732051590549596*^9}, {3.7320516665942297`*^9, 
   3.732051714798421*^9}, {3.732051786880477*^9, 3.732051839258353*^9}, {
   3.732051904679501*^9, 3.732052020221491*^9}, {3.732052114906273*^9, 
   3.732052160882921*^9}, {3.732052442295052*^9, 3.732052443954186*^9}, {
   3.732052529842963*^9, 3.732052558184186*^9}, {3.732052598833919*^9, 
   3.7320526006982927`*^9}, {3.7320526381194677`*^9, 3.732052679752735*^9}, {
   3.732052741554467*^9, 3.7320527632827387`*^9}, {3.7320528099187183`*^9, 
   3.732052822222295*^9}, 3.732052882078199*^9, {3.732053397395941*^9, 
   3.7320534541205397`*^9}, {3.732053491236714*^9, 3.732053514552194*^9}, {
   3.732053546161927*^9, 3.732053558559627*^9}, {3.732053648962986*^9, 
   3.7320537190382977`*^9}, {3.732053753475737*^9, 3.732053815689645*^9}, {
   3.73205387808879*^9, 3.732053904639327*^9}, {3.7320539832145033`*^9, 
   3.732054079945031*^9}, {3.732054144214283*^9, 3.7320541501135902`*^9}, {
   3.732219809450851*^9, 3.732219818930008*^9}, {3.73221986524641*^9, 
   3.732219903264213*^9}, {3.732219994230753*^9, 3.732220042018113*^9}, {
   3.732220093284727*^9, 3.7322201426374807`*^9}, {3.732220193902245*^9, 
   3.732220200561471*^9}, {3.73222023138838*^9, 3.7322202438004227`*^9}, {
   3.732220324928721*^9, 3.732220374182514*^9}, {3.7322204143172293`*^9, 
   3.7322204504942636`*^9}, {3.732220484175166*^9, 3.732220513845645*^9}, {
   3.732220585128634*^9, 3.732220587020447*^9}, {3.732220661622917*^9, 
   3.732220666166176*^9}, {3.732220723318096*^9, 3.732220909897002*^9}, {
   3.732220947034093*^9, 3.732220947339549*^9}, {3.732220984913431*^9, 
   3.732221107753006*^9}, {3.732221408979007*^9, 3.732221413287551*^9}, {
   3.732221475681007*^9, 3.732221519128586*^9}, {3.732221580049281*^9, 
   3.7322215914545393`*^9}, {3.7322216587745333`*^9, 3.732221669630978*^9}, {
   3.732221726177868*^9, 3.732221753882188*^9}, {3.7322263117960577`*^9, 
   3.732226390632389*^9}, {3.732226422988632*^9, 3.732226488692898*^9}, {
   3.7322265233258247`*^9, 3.732226528609248*^9}, {3.732226568524829*^9, 
   3.732226577365774*^9}, {3.732226661013116*^9, 3.732226760346005*^9}, {
   3.7322268317293453`*^9, 3.732226923973188*^9}, {3.7322269698268013`*^9, 
   3.7322269700298*^9}, {3.732227010089374*^9, 3.732227017562799*^9}, {
   3.7322270929466257`*^9, 3.732227124517749*^9}, {3.732227375273031*^9, 
   3.732227550162486*^9}, {3.732227590176621*^9, 3.732227671757779*^9}, {
   3.7322277074704313`*^9, 3.732227760578261*^9}, {3.732227819685274*^9, 
   3.732227837937069*^9}, {3.732227923267515*^9, 3.7322279404641314`*^9}, {
   3.732228019657164*^9, 3.732228034385208*^9}, {3.732228099150243*^9, 
   3.73222817430068*^9}, {3.732228229351173*^9, 3.732228255768198*^9}, {
   3.732228301027852*^9, 3.732228305799914*^9}, {3.732228338113678*^9, 
   3.732228350716115*^9}, {3.732228394878586*^9, 3.7322286896291103`*^9}, {
   3.732228732383651*^9, 3.732228739335462*^9}, {3.73222879341474*^9, 
   3.732228858005208*^9}, {3.732228900965526*^9, 3.7322290496011953`*^9}, {
   3.732229089199129*^9, 3.732229089375929*^9}, {3.7322291199732523`*^9, 
   3.73222918025695*^9}, {3.732229224474943*^9, 3.7322292332731543`*^9}, {
   3.732229384651167*^9, 3.732229390334557*^9}, {3.732229432404784*^9, 
   3.732229475572801*^9}, {3.7322297109211483`*^9, 3.732229734292973*^9}, {
   3.732229771498184*^9, 3.7322298013527813`*^9}, {3.7322298962909327`*^9, 
   3.732229899119563*^9}, {3.73222994390413*^9, 3.732230010025528*^9}, {
   3.732230081307757*^9, 3.732230085133729*^9}, {3.7322301289318533`*^9, 
   3.732230230922352*^9}, {3.7322302670227737`*^9, 3.732230306856326*^9}, {
   3.732230380441701*^9, 3.732230381093466*^9}, {3.7322306160435133`*^9, 
   3.73223087672441*^9}, {3.732230920331327*^9, 3.732230924426415*^9}, {
   3.73223103137982*^9, 3.732231287792297*^9}, {3.732231325784458*^9, 
   3.732231391130472*^9}, {3.732231430714264*^9, 3.732231443048774*^9}, {
   3.732231476163783*^9, 3.732231492764072*^9}, {3.732231533281172*^9, 
   3.732231576944187*^9}, 3.732231639005362*^9, {3.7322316763104963`*^9, 
   3.732231692781187*^9}, {3.732231749080883*^9, 3.7322318494585543`*^9}, 
   3.732231895599758*^9, {3.7322739390573387`*^9, 3.7322739814477625`*^9}, {
   3.73227402843445*^9, 3.732274075315132*^9}, {3.732286754270257*^9, 
   3.732286801842978*^9}, {3.732286913362357*^9, 3.7322869403529005`*^9}, {
   3.7322869756409187`*^9, 3.7322871809976645`*^9}, {3.7322972620891867`*^9, 
   3.732297267201532*^9}, {3.732297502113965*^9, 3.732297528943186*^9}, {
   3.732297609706285*^9, 3.7322976108282433`*^9}, {3.732297668318989*^9, 
   3.732297668554776*^9}, {3.732297705132612*^9, 3.732297823631165*^9}, {
   3.732297869625149*^9, 3.732297872108824*^9}, {3.732297924069722*^9, 
   3.732297926359406*^9}, {3.7322979632211647`*^9, 3.732297973292913*^9}, {
   3.7322980416667852`*^9, 3.732298200051696*^9}, {3.7322982537784777`*^9, 
   3.73229826447279*^9}, {3.732298328789793*^9, 3.732298334048327*^9}, {
   3.732298477000661*^9, 3.732298485583745*^9}, {3.732298592078459*^9, 
   3.73229866322509*^9}, {3.732298702801222*^9, 3.7322989733556356`*^9}, {
   3.732299013739561*^9, 3.732299013946463*^9}, {3.732299045072796*^9, 
   3.732299092368816*^9}, {3.732299134088809*^9, 3.732299147441882*^9}, {
   3.732299179793952*^9, 3.732299180018301*^9}, {3.732299240238905*^9, 
   3.732299240443844*^9}, {3.7322992770273867`*^9, 3.732299277143927*^9}, {
   3.732299311016193*^9, 3.7322993111275253`*^9}, {3.732299354025064*^9, 
   3.732299355434271*^9}, {3.732299418440312*^9, 3.732299426200857*^9}, {
   3.7322995340363626`*^9, 3.7322996131551228`*^9}, {3.732299690454711*^9, 
   3.73229972976096*^9}, {3.73229981481175*^9, 3.732299856732896*^9}, {
   3.73229993380105*^9, 3.7323000930684967`*^9}, {3.732300255064353*^9, 
   3.732300276325493*^9}, {3.732300319004497*^9, 3.732300377609107*^9}, {
   3.732300415664432*^9, 3.732300440534597*^9}, {3.7323005051182137`*^9, 
   3.732300579082898*^9}, {3.732300631875846*^9, 3.732300649497796*^9}, {
   3.732300771546138*^9, 3.7323007720584583`*^9}, {3.7323008473707523`*^9, 
   3.7323010448825693`*^9}, {3.732301085570981*^9, 3.732301115952615*^9}, {
   3.732301167200994*^9, 3.732301226514976*^9}, {3.73230142592448*^9, 
   3.7323014279447813`*^9}, {3.732301568960532*^9, 3.732301602887835*^9}, 
   3.732301647345872*^9, {3.732301743312262*^9, 3.73230182219387*^9}, {
   3.732301861619453*^9, 3.7323019681451607`*^9}, {3.732302028317726*^9, 
   3.7323021492865343`*^9}, {3.7323021982073917`*^9, 3.732302198712015*^9}, {
   3.732302251554822*^9, 3.732302255936715*^9}, {3.732302287207513*^9, 
   3.732302349475823*^9}, {3.73230243452814*^9, 3.7323024798254213`*^9}, {
   3.732302514594036*^9, 3.732302526518072*^9}, {3.7323025699434023`*^9, 
   3.732302571530298*^9}, {3.732302660604165*^9, 3.732302662682979*^9}, {
   3.7323027139233513`*^9, 3.732302770952538*^9}, {3.7323028339631243`*^9, 
   3.732302950843704*^9}, {3.73230299021563*^9, 3.732303036372223*^9}, 
   3.73230306833208*^9, {3.732303107174378*^9, 3.732303137350883*^9}, {
   3.7323031734615593`*^9, 3.732303225748096*^9}, {3.732303292231546*^9, 
   3.732303293437152*^9}, {3.73230342223079*^9, 3.732303466703369*^9}, {
   3.73230353202249*^9, 3.73230355468466*^9}, {3.732303593546081*^9, 
   3.732303736691308*^9}, {3.732303822467846*^9, 3.7323038458058662`*^9}, {
   3.732303881818618*^9, 3.7323038905917673`*^9}, {3.732303936191266*^9, 
   3.7323039634556103`*^9}, 3.7323057095214043`*^9, {3.732305747711506*^9, 
   3.732305750187092*^9}, {3.732305800678691*^9, 3.732305903801217*^9}, {
   3.7323059507071733`*^9, 3.73230597218688*^9}, {3.732306151767456*^9, 
   3.732306161122061*^9}, {3.732306220090073*^9, 3.732306273551729*^9}, {
   3.732306323322031*^9, 3.732306323556954*^9}, {3.73230638893505*^9, 
   3.732306389529513*^9}, {3.7323064414743023`*^9, 3.732306482965399*^9}, {
   3.73230654715974*^9, 3.732306547686026*^9}, {3.732306609732291*^9, 
   3.732306619194628*^9}, {3.732306683222546*^9, 3.732306686472663*^9}, {
   3.732306753880251*^9, 3.7323067555905247`*^9}, {3.732306942115695*^9, 
   3.7323069558659277`*^9}, {3.732379175915846*^9, 3.732379192891295*^9}, {
   3.732379308419877*^9, 3.732379329599975*^9}, {3.732379412032507*^9, 
   3.732379417770583*^9}, {3.732379480422902*^9, 3.732379485029009*^9}, {
   3.732379648152186*^9, 3.732379690767646*^9}, {3.732379742091799*^9, 
   3.732379752652739*^9}, {3.732379858305925*^9, 3.732379873400609*^9}, {
   3.73237995641794*^9, 3.732380019677615*^9}, {3.7323803459076242`*^9, 
   3.732380346360499*^9}, {3.732380390477997*^9, 3.732380401388177*^9}, {
   3.7323804868074503`*^9, 3.73238055265875*^9}, {3.732380592487174*^9, 
   3.732380596751649*^9}, 3.732380652582728*^9, {3.7323806992049217`*^9, 
   3.7323807410090113`*^9}, {3.7323832455166063`*^9, 3.732383359045103*^9}, 
   3.73238344809298*^9, {3.7323834946146183`*^9, 3.732383497236514*^9}, {
   3.732383531653689*^9, 3.732383544151918*^9}, {3.732383594010591*^9, 
   3.7323836805534983`*^9}, {3.732383713668145*^9, 3.732383755537139*^9}, {
   3.732383812397396*^9, 3.7323838506723137`*^9}, 3.732385671201921*^9, {
   3.7323857677934647`*^9, 3.732385770267953*^9}, 3.732385804104826*^9, {
   3.732385836046417*^9, 3.73238583733139*^9}, {3.732387831238325*^9, 
   3.7323878382993402`*^9}, {3.732387891932929*^9, 3.7323879037102413`*^9}, {
   3.7323880213382483`*^9, 3.732388120000373*^9}, {3.732388151491003*^9, 
   3.732388177706707*^9}, {3.732388208638815*^9, 3.732388248454769*^9}, {
   3.732388283619382*^9, 3.73238836114985*^9}, {3.73238840105472*^9, 
   3.732388432966469*^9}, {3.732388477333734*^9, 3.7323885879987803`*^9}, {
   3.732388630080138*^9, 3.7323886323100443`*^9}, {3.732388738516025*^9, 
   3.7323887584475183`*^9}, {3.7323888068418922`*^9, 3.732388849675503*^9}, {
   3.732388904105949*^9, 3.7323890264339*^9}, {3.732389113936287*^9, 
   3.732389116845408*^9}, {3.7323891518224297`*^9, 3.732389152991789*^9}, {
   3.732389187128422*^9, 3.73238918785928*^9}, {3.732389230518847*^9, 
   3.732389293338315*^9}, {3.732389346575861*^9, 3.732389389375845*^9}, {
   3.732389433903758*^9, 3.7323894345476522`*^9}, {3.732389496174165*^9, 
   3.732389529777101*^9}, {3.732389588589426*^9, 3.732389606738308*^9}, {
   3.732389919571393*^9, 3.732389972989265*^9}, {3.7323901066862717`*^9, 
   3.732390113519855*^9}, {3.732390159392829*^9, 3.732390185816115*^9}, {
   3.732390231033461*^9, 3.732390257497898*^9}, {3.732390376724004*^9, 
   3.7323903898218393`*^9}, {3.73239061697819*^9, 3.732390667852296*^9}, {
   3.7323907037823*^9, 3.732390707838613*^9}, {3.732390757065818*^9, 
   3.7323909072580013`*^9}, {3.732390946157055*^9, 3.732390986394436*^9}, {
   3.732391033322033*^9, 3.7323910633106318`*^9}, {3.7323911090697517`*^9, 
   3.732391112753087*^9}, {3.7323911586296062`*^9, 3.732391206115755*^9}, {
   3.7323912391110563`*^9, 3.7323912665598087`*^9}, {3.73239131012757*^9, 
   3.732391310292533*^9}, {3.732391371753099*^9, 3.732391418137534*^9}, {
   3.732391487412616*^9, 3.7323914885048532`*^9}, {3.732391526791937*^9, 
   3.73239153081129*^9}, {3.732391629158627*^9, 3.7323916405440607`*^9}, {
   3.7323916808125553`*^9, 3.732391708120159*^9}, {3.732391751125996*^9, 
   3.73239175823948*^9}, {3.732391792276545*^9, 3.7323918214311934`*^9}, {
   3.732391870832035*^9, 3.732392100603888*^9}, {3.732392161068686*^9, 
   3.732392187002523*^9}, {3.732392296697172*^9, 3.732392310434265*^9}, {
   3.732392580559772*^9, 3.7323926506657143`*^9}, {3.732392691451601*^9, 
   3.732392751446394*^9}, {3.732393033510113*^9, 3.732393101617868*^9}, {
   3.7323932770901814`*^9, 3.7323933334470243`*^9}, {3.732393407760467*^9, 
   3.7323934495162*^9}, 3.73239349890619*^9, {3.7323935444771214`*^9, 
   3.732393548911436*^9}, 3.732393598032202*^9, {3.732393717825697*^9, 
   3.732393718023595*^9}, {3.732393755221778*^9, 3.7323937554283543`*^9}, {
   3.7323939709329653`*^9, 3.732393983581174*^9}, {3.732394044344078*^9, 
   3.732394107893752*^9}, {3.7323942351322613`*^9, 3.7323942353363533`*^9}, 
   3.7323943080616903`*^9, {3.732394376038145*^9, 3.7323943762136097`*^9}, {
   3.732394423644576*^9, 3.732394462751549*^9}, {3.7323946028418694`*^9, 
   3.7323946725782137`*^9}, {3.732394726373486*^9, 3.732394876660777*^9}, {
   3.7323949487961082`*^9, 3.732394957011217*^9}, {3.732395130410021*^9, 
   3.7323951411010523`*^9}, {3.732395206370228*^9, 3.732395212957835*^9}, {
   3.732395422452647*^9, 3.732395458625174*^9}, {3.732395503204816*^9, 
   3.732395518740823*^9}, {3.732395651858059*^9, 3.732395758183667*^9}, {
   3.732395861024974*^9, 3.7323959280824842`*^9}, {3.732395966481166*^9, 
   3.732395979140367*^9}, {3.732396025599244*^9, 3.732396034762507*^9}, {
   3.732396070627397*^9, 3.732396133764353*^9}, {3.732396169916703*^9, 
   3.7323962013084583`*^9}, {3.732396248597218*^9, 3.732396281434029*^9}, {
   3.732396342329877*^9, 3.7323963793096647`*^9}, {3.732396432540495*^9, 
   3.732396661466605*^9}, {3.732396697719594*^9, 3.732396712597068*^9}, {
   3.732396759882963*^9, 3.732396796104123*^9}, {3.732396835942542*^9, 
   3.732396842208013*^9}, {3.732396881379356*^9, 3.732396957319232*^9}, {
   3.732463211902021*^9, 3.7324632420591927`*^9}, {3.732463344920883*^9, 
   3.73246334691534*^9}, {3.732463414363449*^9, 3.732463415282998*^9}, {
   3.7324670753454523`*^9, 3.7324670958287163`*^9}, {3.732467199582553*^9, 
   3.732467278613006*^9}, {3.732467374738614*^9, 3.732467380945448*^9}, {
   3.7324674164266376`*^9, 3.732467450519429*^9}, {3.7324675042997847`*^9, 
   3.732467520786529*^9}, {3.732467712610347*^9, 3.732467788883297*^9}, {
   3.7324678836125107`*^9, 3.732467888078217*^9}, {3.732467924759062*^9, 
   3.732467971197411*^9}, {3.732468017796513*^9, 3.732468021411305*^9}, {
   3.732468072887969*^9, 3.732468073239884*^9}, {3.732468126111719*^9, 
   3.732468172556843*^9}, {3.732546968079544*^9, 3.7325470232256985`*^9}, {
   3.732888329463738*^9, 3.732888331486891*^9}, {3.7329777607080517`*^9, 
   3.732977901243722*^9}, {3.7329779335420723`*^9, 3.732978098484447*^9}, {
   3.732978142581056*^9, 3.732978142922209*^9}, {3.7329782519683332`*^9, 
   3.7329783222160673`*^9}, {3.73297838781423*^9, 3.732978854620181*^9}, {
   3.732978906988999*^9, 3.732978918088655*^9}, {3.732978952141157*^9, 
   3.732979009113347*^9}, {3.732979118370797*^9, 3.732979140493232*^9}, {
   3.7329793989365683`*^9, 3.7329794238324347`*^9}, {3.732979473148361*^9, 
   3.732979490872253*^9}, {3.7329795347868643`*^9, 3.732979664046945*^9}, {
   3.732979880598387*^9, 3.73297991495955*^9}, {3.732979949584813*^9, 
   3.732979950342342*^9}, {3.732979984386248*^9, 3.7329800018702583`*^9}, {
   3.7329800781248703`*^9, 3.732980079030302*^9}, {3.7329801090564337`*^9, 
   3.7329801444239483`*^9}, {3.7329802258562117`*^9, 3.732980226851742*^9}, {
   3.732980300594067*^9, 3.732980333796616*^9}, {3.7329803834759893`*^9, 
   3.7329803882442503`*^9}, {3.732980435627923*^9, 3.732980435839649*^9}, {
   3.732980539622301*^9, 3.732980546335578*^9}, {3.7329806383730516`*^9, 
   3.7329807622201033`*^9}, {3.732980823250989*^9, 3.732980825530299*^9}, {
   3.732980856667886*^9, 3.732980864880018*^9}, {3.732980897898424*^9, 
   3.7329809240642014`*^9}, {3.732980992870247*^9, 3.732981063710451*^9}, {
   3.732981096842184*^9, 3.7329810971938334`*^9}, {3.732981127313121*^9, 
   3.732981297452758*^9}, {3.7329813323458023`*^9, 3.73298137118889*^9}, {
   3.732981406999422*^9, 3.7329814112039948`*^9}, {3.732981454870323*^9, 
   3.732981551064143*^9}, {3.732981611152356*^9, 3.73298162882286*^9}, {
   3.73298168232229*^9, 3.732981713274642*^9}, {3.7329818388681393`*^9, 
   3.7329818554172077`*^9}, {3.732981926975586*^9, 3.73298193288344*^9}, {
   3.73298203483711*^9, 3.732982117469818*^9}, {3.732982180076685*^9, 
   3.7329821803152637`*^9}, {3.732982314304698*^9, 3.7329823145843573`*^9}, {
   3.732982418404285*^9, 3.7329824205393257`*^9}, {3.732982453704588*^9, 
   3.732982483520344*^9}, {3.732982529894668*^9, 3.732982543914275*^9}, {
   3.732982578191777*^9, 3.732982601387494*^9}, {3.732982634558865*^9, 
   3.732982634787437*^9}, {3.732982666134886*^9, 3.73298266676891*^9}, {
   3.7329827393390703`*^9, 3.7329827708018627`*^9}, {3.732982807489477*^9, 
   3.732982819411376*^9}, {3.732982914929319*^9, 3.732982927968066*^9}, {
   3.732983046116042*^9, 3.732983046312709*^9}, {3.732983235719226*^9, 
   3.7329832665829773`*^9}, {3.7329833886559896`*^9, 3.732983392911271*^9}, {
   3.732983491845155*^9, 3.7329835202151203`*^9}, {3.732983551060267*^9, 
   3.7329836643615294`*^9}, {3.732983726868614*^9, 3.732983812622558*^9}, {
   3.732983871861627*^9, 3.732984022210431*^9}, {3.732984067007022*^9, 
   3.732984102226536*^9}, {3.732984232343869*^9, 3.7329842364857693`*^9}, {
   3.732984290192761*^9, 3.732984299776442*^9}, {3.732984342288493*^9, 
   3.732984342494878*^9}, {3.732984527666451*^9, 3.73298455833488*^9}, {
   3.732984602452725*^9, 3.73298460268967*^9}, {3.7329846570785227`*^9, 
   3.732984659573806*^9}, {3.7329847491886387`*^9, 3.7329847695593863`*^9}, {
   3.732984827984722*^9, 3.732984833544669*^9}, {3.732984944499462*^9, 
   3.7329849486905117`*^9}, {3.732985010389456*^9, 3.732985015397944*^9}, {
   3.732985051460207*^9, 3.732985074234332*^9}, {3.732985179321392*^9, 
   3.7329852003910646`*^9}, {3.732985284409314*^9, 3.732985463125873*^9}, {
   3.732985517835902*^9, 3.7329855647781467`*^9}, {3.732985673227132*^9, 
   3.732985685969495*^9}, {3.7329857392403803`*^9, 3.73298578736874*^9}, {
   3.732985858783354*^9, 3.732986289496401*^9}, {3.732986319744927*^9, 
   3.732986427981827*^9}, {3.732986500265336*^9, 3.732986507573443*^9}, {
   3.732986547479759*^9, 3.732986553346034*^9}, {3.732986614487081*^9, 
   3.732986619764909*^9}, {3.732986656711858*^9, 3.732986658154933*^9}, {
   3.732986694009375*^9, 3.7329867273147097`*^9}, {3.732986760554842*^9, 
   3.732986761716857*^9}, {3.732986796080065*^9, 3.732986810834619*^9}, {
   3.732986844261682*^9, 3.732986876326736*^9}, {3.7329869314740133`*^9, 
   3.732986952525682*^9}, {3.7329870056024027`*^9, 3.732987016320498*^9}, {
   3.7329870805619593`*^9, 3.7329870830606937`*^9}, {3.73298711445464*^9, 
   3.732987114683497*^9}, {3.732987171725934*^9, 3.732987173113771*^9}, {
   3.732987259341628*^9, 3.732987271699411*^9}, {3.7329873148857937`*^9, 
   3.732987315105216*^9}, {3.7329873552747*^9, 3.732987475674513*^9}, {
   3.732987515547673*^9, 3.7329875287155857`*^9}, {3.732987571602688*^9, 
   3.732987588945653*^9}, {3.732987632193308*^9, 3.732987635629777*^9}, {
   3.7329876723335238`*^9, 3.732987674561015*^9}, {3.732987710055974*^9, 
   3.732987713713912*^9}, {3.732987749444379*^9, 3.732987781192729*^9}, {
   3.732987824837249*^9, 3.732987837591508*^9}, {3.732987892229815*^9, 
   3.732987895515594*^9}, {3.732987939483398*^9, 3.7329880907579803`*^9}, {
   3.732988193034906*^9, 3.732988223158844*^9}, {3.732988290697918*^9, 
   3.732988315993462*^9}, {3.732988445187718*^9, 3.732988457306375*^9}, {
   3.732988492099639*^9, 3.732988495784646*^9}, {3.732988529884223*^9, 
   3.7329885301190434`*^9}, {3.732988576045081*^9, 3.732988611369369*^9}, {
   3.732988762749422*^9, 3.732988795484371*^9}, {3.73298883886729*^9, 
   3.732988854393004*^9}, {3.732988907200542*^9, 3.7329889290844727`*^9}, {
   3.732988986326611*^9, 3.7329890182230062`*^9}, {3.7329890610547323`*^9, 
   3.732989061293406*^9}, {3.732989164015188*^9, 3.732989231091116*^9}, {
   3.732989281215708*^9, 3.732989320390338*^9}, {3.73298936459195*^9, 
   3.732989386340599*^9}, {3.732989416475587*^9, 3.732989422521975*^9}, {
   3.732989482293837*^9, 3.732989519800757*^9}, {3.732989566599959*^9, 
   3.732989581802722*^9}, {3.7329896226298122`*^9, 3.7329896350040007`*^9}, {
   3.732989774079172*^9, 3.7329898383687687`*^9}, {3.732989881776053*^9, 
   3.732989882013167*^9}, {3.7329899738936996`*^9, 3.732989974196657*^9}, {
   3.7329900092801447`*^9, 3.73299000951471*^9}, {3.732990067257804*^9, 
   3.7329901294930277`*^9}, {3.732990171704945*^9, 3.732990196293223*^9}, {
   3.732990418711232*^9, 3.732990420373022*^9}, {3.732990452841477*^9, 
   3.732990495205204*^9}, {3.7329905865881433`*^9, 3.732990620813435*^9}, {
   3.733147774380115*^9, 3.7331478041223373`*^9}, {3.733147912017034*^9, 
   3.7331480180806932`*^9}, {3.733148099363871*^9, 3.733148158617216*^9}, {
   3.733148199541959*^9, 3.733148202121152*^9}, {3.733148235276183*^9, 
   3.733148281331311*^9}, {3.733148367324333*^9, 3.733148503941716*^9}, {
   3.733148591466215*^9, 3.733148637751319*^9}, {3.733148682176092*^9, 
   3.733148705435917*^9}, {3.7331487728443413`*^9, 3.733148800158045*^9}, {
   3.733148845935676*^9, 3.733148858757712*^9}, {3.73314894320105*^9, 
   3.733149086041773*^9}, {3.7331491430814743`*^9, 3.733149229464473*^9}, {
   3.733149261427351*^9, 3.733149289402225*^9}, {3.7331494457736187`*^9, 
   3.733149490108864*^9}, {3.733149577184548*^9, 3.73314958456588*^9}, 
   3.733149638743191*^9, {3.733149791098611*^9, 3.733149794361084*^9}, {
   3.733150063697698*^9, 3.7331500640376253`*^9}, {3.733150105101263*^9, 
   3.733150112008719*^9}, {3.733150190535043*^9, 3.7331502266094303`*^9}, {
   3.733150305901147*^9, 3.733150333064683*^9}, {3.7331504372676067`*^9, 
   3.733150440854679*^9}, {3.7331505453695097`*^9, 3.733150549996706*^9}, {
   3.733150582278924*^9, 3.733150582768433*^9}, {3.733150757853466*^9, 
   3.733150797229517*^9}, {3.733150851942965*^9, 3.73315085395262*^9}, {
   3.7331508999196177`*^9, 3.733150900794155*^9}, {3.733150947191018*^9, 
   3.733150985319388*^9}, {3.733151029439949*^9, 3.733151052087709*^9}, {
   3.733151183297182*^9, 3.733151194508944*^9}, {3.733151286319807*^9, 
   3.733151402459447*^9}, {3.733151525556444*^9, 3.733151618676976*^9}, {
   3.733151690578062*^9, 3.733151846846849*^9}, {3.7331518883634987`*^9, 
   3.733151960229143*^9}, {3.733151994747697*^9, 3.7331519949652767`*^9}, 
   3.733152044026504*^9, {3.733152096651576*^9, 3.733152096842042*^9}, {
   3.7331537219054317`*^9, 3.733153806473387*^9}, {3.733153860231958*^9, 
   3.733153869037984*^9}, 3.733153917571415*^9, {3.7336015598887453`*^9, 
   3.7336015845574894`*^9}, {3.733601677817032*^9, 3.733601712326764*^9}, {
   3.733601785503805*^9, 3.7336018299178376`*^9}, {3.7336019125178933`*^9, 
   3.7336019161434283`*^9}, {3.7336019914526434`*^9, 3.733602004892127*^9}, {
   3.733602060587861*^9, 3.7336020629788375`*^9}, {3.7336021156729765`*^9, 
   3.733602123674157*^9}, {3.7336021813548355`*^9, 3.733602278039257*^9}, {
   3.733602332983865*^9, 3.733602351174051*^9}, {3.7336023937623186`*^9, 
   3.733602475686163*^9}, {3.7336025140043387`*^9, 3.7336025815513325`*^9}, {
   3.7336026294491653`*^9, 3.733602673876605*^9}, {3.733602718871097*^9, 
   3.73360275511092*^9}, {3.733602786412422*^9, 3.7336028440144157`*^9}, {
   3.733602896053383*^9, 3.733602896459693*^9}, {3.7336029541869535`*^9, 
   3.733602981089493*^9}, {3.7336030461610413`*^9, 3.733603046969302*^9}, {
   3.73360311971023*^9, 3.733603120554104*^9}, {3.7336034676355796`*^9, 
   3.7336034678231077`*^9}, {3.733603527008688*^9, 3.7336036814795523`*^9}, {
   3.7336038374719086`*^9, 3.733603839737871*^9}, {3.733603922742875*^9, 
   3.733603937119991*^9}, {3.733603969843585*^9, 3.733604005911419*^9}, {
   3.733604077097571*^9, 3.733604140872188*^9}, {3.7336042339326105`*^9, 
   3.733604306600876*^9}, {3.733604351076564*^9, 3.7336043522642374`*^9}, {
   3.7336044091615286`*^9, 3.733604495363204*^9}, {3.7336045451204095`*^9, 
   3.733604573283407*^9}, {3.7336046605515976`*^9, 3.7336046717442203`*^9}, {
   3.7336047278396974`*^9, 3.7336047303713074`*^9}, {3.733604817064671*^9, 
   3.73360496277322*^9}, {3.733604995856042*^9, 3.733604998481429*^9}, {
   3.733605056131523*^9, 3.7336050631635017`*^9}, {3.733605099527978*^9, 
   3.733605219544405*^9}, {3.7336052555032*^9, 3.7336053180591087`*^9}, {
   3.7336053660120792`*^9, 3.7336053947818255`*^9}, {3.7336054296517553`*^9, 
   3.733605573884246*^9}, {3.73360560393417*^9, 3.733605624140276*^9}, {
   3.7336056848597746`*^9, 3.7336057053189373`*^9}, {3.7336057589039145`*^9, 
   3.7336058031213913`*^9}, {3.7336058855719085`*^9, 3.733605901995371*^9}, {
   3.733605964472397*^9, 3.733605997493126*^9}, {3.733606068394226*^9, 
   3.733606145935871*^9}, {3.7336061814880204`*^9, 3.7336063547492695`*^9}, {
   3.733606485651491*^9, 3.7336065344241934`*^9}, {3.733606586387536*^9, 
   3.733606615220002*^9}, {3.733606666602592*^9, 3.7336066998887606`*^9}, {
   3.7336067366352725`*^9, 3.7336067535595565`*^9}, {3.7336067850445595`*^9, 
   3.733606807235339*^9}, {3.7336068662435627`*^9, 3.733606934195567*^9}, {
   3.733606978248892*^9, 3.733606994847937*^9}, {3.7336070740476747`*^9, 
   3.7336071517805243`*^9}, {3.7336071900161047`*^9, 3.733607209253538*^9}, {
   3.7336079324642444`*^9, 3.733608018056157*^9}, {3.733608065000434*^9, 
   3.7336081128446617`*^9}, {3.73360815876231*^9, 3.7336082151506424`*^9}, {
   3.7336082498900537`*^9, 3.7336083429403305`*^9}, {3.733608551121145*^9, 
   3.733608567373742*^9}, {3.73360871276607*^9, 3.733608721776978*^9}, {
   3.733608950733366*^9, 3.73360897945024*^9}, {3.7336090283702955`*^9, 
   3.733609051512933*^9}, {3.7336090841774764`*^9, 3.7336092527458754`*^9}, {
   3.7336092870006933`*^9, 3.733609353675336*^9}, {3.7336094013616705`*^9, 
   3.733609531362254*^9}, {3.733609581306997*^9, 3.733609585354581*^9}, {
   3.733609692561266*^9, 3.7336096927644186`*^9}, {3.733609793152501*^9, 
   3.733609801513111*^9}, {3.7336098323985877`*^9, 3.733609853573573*^9}, {
   3.7336098895788536`*^9, 3.733609927818879*^9}, {3.733610052671033*^9, 
   3.7336102301614256`*^9}, {3.7336102704511347`*^9, 3.733610303221598*^9}, {
   3.7336104992039576`*^9, 3.733610517378463*^9}, {3.7336105556871023`*^9, 
   3.7336105591720066`*^9}, {3.7336106111516623`*^9, 3.733610743407202*^9}, {
   3.733611106203874*^9, 3.733611118817434*^9}, 3.733611171590145*^9, {
   3.7336112298892016`*^9, 3.733611262131774*^9}, {3.7336114508944373`*^9, 
   3.7336114528791027`*^9}, {3.7336114888858466`*^9, 
   3.7336115233108687`*^9}, {3.7336115627854652`*^9, 
   3.7336117291015525`*^9}, {3.7336118348434687`*^9, 
   3.7336118501894817`*^9}, {3.733611888304501*^9, 3.733611922293667*^9}, {
   3.7336119526098347`*^9, 3.733611953094282*^9}, {3.733612384561058*^9, 
   3.7336123871239357`*^9}, 3.733612475557964*^9, {3.7336125187911863`*^9, 
   3.7336125440237255`*^9}, {3.7336127337337103`*^9, 3.733612737536642*^9}, {
   3.733672723361802*^9, 3.733672738605844*^9}, {3.733673031032695*^9, 
   3.7336730385553017`*^9}, {3.733673496190239*^9, 3.733673503997967*^9}, {
   3.7336738658511257`*^9, 3.733673880671967*^9}, {3.7336744715961227`*^9, 
   3.733674476996048*^9}, {3.7337707242628355`*^9, 3.7337707705774183`*^9}, {
   3.733770878271289*^9, 3.73377091024284*^9}, {3.7337710014896364`*^9, 
   3.7337710155384617`*^9}, {3.733771140285716*^9, 3.733771141897603*^9}, {
   3.7337712095847178`*^9, 3.733771215328639*^9}, {3.7337715505809803`*^9, 
   3.7337715753422065`*^9}, {3.733771623518467*^9, 3.733771641556143*^9}, {
   3.7337716839045377`*^9, 3.7337716850900183`*^9}, {3.7337717308661547`*^9, 
   3.7337717442522936`*^9}, {3.7337718505968294`*^9, 
   3.7337718509406643`*^9}, {3.7337718999469957`*^9, 
   3.7337719009213386`*^9}, {3.7337719494152627`*^9, 3.733771984942833*^9}, {
   3.7337720273318644`*^9, 3.7337720289628496`*^9}, {3.733772129833808*^9, 
   3.733772137153615*^9}, {3.733772177256815*^9, 3.733772223676772*^9}, {
   3.7337723255490475`*^9, 3.733772326229366*^9}, {3.733772358197062*^9, 
   3.733772358338544*^9}, {3.733772396632843*^9, 3.733772409755006*^9}, {
   3.733837678162304*^9, 3.733837711244721*^9}, {3.733837753318651*^9, 
   3.7338377637402225`*^9}, {3.7338378211425285`*^9, 
   3.7338379148899403`*^9}, {3.7338379585775785`*^9, 3.733838046686587*^9}, {
   3.733838124943473*^9, 3.7338385004244175`*^9}, {3.7338385498317237`*^9, 
   3.7338385516181245`*^9}, {3.7338385841148653`*^9, 3.733838661731153*^9}, {
   3.733838703422076*^9, 3.7338389858587723`*^9}, 3.7338390730682993`*^9, {
   3.733839132463643*^9, 3.733839722054123*^9}, {3.7338397913252053`*^9, 
   3.7338400010669813`*^9}, {3.733840051437828*^9, 3.733840078286526*^9}, {
   3.733840130774337*^9, 3.7338401644286723`*^9}, {3.7338403350839376`*^9, 
   3.733840519881836*^9}, {3.733840563134349*^9, 3.7338406284425344`*^9}, {
   3.734271864722969*^9, 3.7342720003206263`*^9}, 3.734272042232319*^9, {
   3.7347945067555118`*^9, 3.7347945160025444`*^9}, {3.734794564635042*^9, 
   3.734794568275408*^9}, {3.734794670605752*^9, 3.734794676107911*^9}, {
   3.7347947062360544`*^9, 3.7347947142635746`*^9}, {3.7347947925889826`*^9, 
   3.734794792804963*^9}, {3.7347948233166723`*^9, 3.7347948234857635`*^9}, {
   3.734794868040821*^9, 3.7347949130218062`*^9}, {3.7347949679084387`*^9, 
   3.7347949833717833`*^9}, 3.7347951207556973`*^9, {3.734795181240446*^9, 
   3.7347951880807877`*^9}, {3.7347954148822775`*^9, 3.734795416969223*^9}, {
   3.7347955462184367`*^9, 3.734795599597185*^9}, {3.7347956405726175`*^9, 
   3.7347956448547544`*^9}, {3.7347957849553843`*^9, 
   3.7347958180407276`*^9}, {3.7347959160845366`*^9, 
   3.7347959583462877`*^9}, {3.7347959935664425`*^9, 3.734796240055622*^9}, {
   3.7347964466619015`*^9, 3.7347964501335297`*^9}, 3.734796619695491*^9, {
   3.734797941749671*^9, 3.73479799515143*^9}, {3.734798037637613*^9, 
   3.734798147278994*^9}, {3.734798438520178*^9, 3.7347984901216993`*^9}, {
   3.734798533417037*^9, 3.734798585693902*^9}, {3.7347986299377675`*^9, 
   3.7347987177141705`*^9}, {3.7347987621984386`*^9, 3.734798822351104*^9}, {
   3.734798858705799*^9, 3.7347989029021454`*^9}, {3.734798971964341*^9, 
   3.734798972866619*^9}, {3.734799003359234*^9, 3.7347991384002857`*^9}, {
   3.7347991711573334`*^9, 3.7347993464312987`*^9}, {3.7347993968057127`*^9, 
   3.7347994668170004`*^9}, {3.7347995192011924`*^9, 
   3.7347996568819203`*^9}, {3.734799723693906*^9, 3.7347997668110185`*^9}, {
   3.734799815534198*^9, 3.7347998205929556`*^9}, {3.734799853269972*^9, 
   3.7347998622153783`*^9}, {3.7347999069314747`*^9, 3.734799960967459*^9}, {
   3.7348000182929525`*^9, 3.734800024603053*^9}, {3.734800070737079*^9, 
   3.734800113727828*^9}, {3.7348001539400043`*^9, 3.734800190493105*^9}, {
   3.7348002274341702`*^9, 3.7348003245596037`*^9}, {3.7348003789521494`*^9, 
   3.7348004468983974`*^9}, {3.734800537987087*^9, 3.7348005381564407`*^9}, {
   3.7348005964760847`*^9, 3.734800639424086*^9}, {3.734800868779497*^9, 
   3.734800886714881*^9}, {3.734801049691368*^9, 3.734801106623952*^9}, {
   3.734801198406104*^9, 3.7348012634871454`*^9}, {3.7348012993973904`*^9, 
   3.7348013501315126`*^9}, {3.7348013820238543`*^9, 3.734801431151101*^9}, {
   3.7348014625377517`*^9, 3.734801509919567*^9}, {3.7348015770889273`*^9, 
   3.734801611504531*^9}, {3.73480165113183*^9, 3.7348017118132668`*^9}, {
   3.7348017930679564`*^9, 3.7348018005428934`*^9}, {3.734801846641258*^9, 
   3.7348018564713964`*^9}, {3.734801902935114*^9, 3.734801903119675*^9}, {
   3.7348021874220743`*^9, 3.73480219107862*^9}, {3.7348022245579777`*^9, 
   3.734802234530836*^9}, {3.7348028445357122`*^9, 3.7348028454061203`*^9}, {
   3.7348029208766775`*^9, 3.734802924957381*^9}, {3.734802964487183*^9, 
   3.734802964956559*^9}, {3.7348088026767964`*^9, 3.734808804843294*^9}, {
   3.7348088555250673`*^9, 3.734808944519656*^9}, 3.7348092471436763`*^9, 
   3.7348093995739555`*^9, {3.734809466978114*^9, 3.7348095085656347`*^9}, {
   3.7348095454442267`*^9, 3.73480957158418*^9}, {3.734809700944168*^9, 
   3.7348097152215786`*^9}, {3.7348097532391944`*^9, 3.734809772474246*^9}, {
   3.7348098054447765`*^9, 3.7348100344931297`*^9}, {3.7348100687924223`*^9, 
   3.734810085124902*^9}, {3.7348101176939983`*^9, 3.7348101355821915`*^9}, {
   3.734810184787286*^9, 3.7348102090749006`*^9}, {3.7348102500202513`*^9, 
   3.7348102767299695`*^9}, 3.734810308487609*^9, {3.7348103520585394`*^9, 
   3.7348109852717175`*^9}, 3.7348110276021037`*^9, {3.734811060084653*^9, 
   3.7348110807022295`*^9}, {3.7348111207831717`*^9, 3.734811132093119*^9}, {
   3.734811246993389*^9, 3.7348112643433385`*^9}, {3.734811298508839*^9, 
   3.7348113228514123`*^9}, {3.7348113816852283`*^9, 
   3.7348114488223214`*^9}, {3.7348115259266977`*^9, 
   3.7348115484816327`*^9}, {3.734811581078787*^9, 3.7348115837805605`*^9}, {
   3.7348116552904396`*^9, 3.7348117888185825`*^9}, {3.734811867530572*^9, 
   3.734811870918615*^9}, {3.734811908207426*^9, 3.7348120323687115`*^9}, {
   3.7348120931287966`*^9, 3.7348120965167074`*^9}, {3.7348121394180737`*^9, 
   3.734812140556841*^9}, {3.734812184535054*^9, 3.7348122064563065`*^9}, {
   3.734812323785722*^9, 3.734812401108239*^9}, {3.7348124426509075`*^9, 
   3.73481260220479*^9}, {3.734812646399626*^9, 3.734812664467574*^9}, {
   3.7348128351988935`*^9, 3.7348128634456177`*^9}, {3.7348128938624687`*^9, 
   3.7348130448277793`*^9}, {3.7348131436288404`*^9, 3.7348131539169106`*^9}, 
   3.7354883372233734`*^9, {3.7360869742687902`*^9, 3.73608697563013*^9}, {
   3.736087082160317*^9, 3.7360871008495493`*^9}, {3.7360871558964033`*^9, 
   3.736087322488912*^9}, {3.736087514885273*^9, 3.736087602844554*^9}, {
   3.736087685614851*^9, 3.736087791223867*^9}, 3.736087841054419*^9, 
   3.736087893163631*^9, {3.736087960721467*^9, 3.736087970282077*^9}, {
   3.736088062895382*^9, 3.736088083669511*^9}, {3.7360881433152323`*^9, 
   3.7360881699042053`*^9}, {3.736088213290142*^9, 3.736088243680252*^9}, {
   3.736088327454735*^9, 3.736088350517771*^9}, {3.7360887761005783`*^9, 
   3.736088827744281*^9}, {3.7360888817505007`*^9, 3.736088898400107*^9}, {
   3.736088939099708*^9, 3.736088960335814*^9}, {3.7360931629306717`*^9, 
   3.736093285401223*^9}, {3.736093328522811*^9, 3.736093350179426*^9}, {
   3.736093396014036*^9, 3.7360934275777197`*^9}, {3.736093516550407*^9, 
   3.736093688366445*^9}, 3.73609371921542*^9, {3.736093761660513*^9, 
   3.7360938004789658`*^9}, {3.736093840455366*^9, 3.736093982834559*^9}, {
   3.736094020577897*^9, 3.736094025538031*^9}, {3.736094064049307*^9, 
   3.736094121950265*^9}, {3.7360942011797533`*^9, 3.736094236953074*^9}, {
   3.7360943504807873`*^9, 3.736094371417577*^9}, {3.7360944150400877`*^9, 
   3.7360945970249977`*^9}, {3.736094683950191*^9, 3.7360947741536713`*^9}, {
   3.7360948861016397`*^9, 3.736094926185638*^9}, {3.736094993767474*^9, 
   3.7360950569146137`*^9}, {3.7360951272254143`*^9, 3.736095198534617*^9}, {
   3.736095316504525*^9, 3.736095318972904*^9}, {3.736095395916801*^9, 
   3.73609544423746*^9}, {3.736095555077777*^9, 3.736095563824033*^9}, {
   3.736095624165977*^9, 3.7360956364994917`*^9}, {3.7361703588951817`*^9, 
   3.736170448358045*^9}, {3.7361705192614512`*^9, 3.7361707930084667`*^9}, 
   3.7361708731764126`*^9, {3.7361709631240435`*^9, 3.7361709650232983`*^9}, {
   3.7366031357033453`*^9, 3.736603173667211*^9}, {3.7366033065257845`*^9, 
   3.736603335546382*^9}, {3.7366046016261415`*^9, 3.7366046074538264`*^9}, {
   3.736605135714801*^9, 3.7366051389388733`*^9}, 3.7366054313573017`*^9, {
   3.736605462350521*^9, 3.7366054807479887`*^9}, {3.7366058639671707`*^9, 
   3.7366058645296774`*^9}, {3.7366910707753468`*^9, 3.736691071096486*^9}, {
   3.736691191103718*^9, 3.736691207558737*^9}, {3.7366915755521517`*^9, 
   3.736691682136262*^9}, {3.7366918549982166`*^9, 3.736692052699746*^9}, {
   3.736692273752923*^9, 3.7366922796670847`*^9}, {3.736692322360997*^9, 
   3.7366923370756655`*^9}, {3.7366923683769693`*^9, 
   3.7366924488738422`*^9}, {3.7366925561042223`*^9, 3.736692629099081*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"40bcde4e-e41d-4dca-977c-cfca7664b371"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Ans1$$ = 0, $CellContext`Ans1Range$$ = 
    11.18284719626985, $CellContext`Ans2$$ = 0, $CellContext`Ans2Range$$ = 
    1, $CellContext`Ans3$$ = 0, $CellContext`Ans3Range$$ = 
    4.326726916414608, $CellContext`Ans4$$ = 0, $CellContext`Ans4Range$$ = 
    6.356745283742073, $CellContext`Ans5$$ = 0, $CellContext`Ans5Range$$ = 
    1.6870284625549337`, $CellContext`Ans6$$ = 
    0, $CellContext`Ans6Range$$ = -1.127, $CellContext`Ans6RangeL$$ = 
    1.127, $CellContext`ArrowHeight$$ = 50, $CellContext`BOLdot1$$ = {0.3, 
    0.9}, $CellContext`BOLdot2$$ = {0.1, 0.9}, $CellContext`Box1$$ = 
    "distillate flow rate", $CellContext`Box2$$ = Row[{"feed composition ", 
      Subscript[
       Style["z", Italic], "feed"]}], $CellContext`Box3$$ = 
    "reflux ratio", $CellContext`Box4$$ = Row[{"liquid flow rate ", 
      Style["L ", Italic]}], $CellContext`Box5$$ = Row[{"vapor flow rate ", 
      OverBar[
       Style["V", Italic]]}], $CellContext`Box6$$ = 
    "quality ", $CellContext`hint$$ = 
    False, $CellContext`HintTextColumnTrue$$ = Null, $CellContext`MB$$ = 
    1, $CellContext`ptbott$$ = {0.4, 0.4}, $CellContext`ptdist$$ = {0.6, 
    0.6}, $CellContext`ptfeed$$ = {0.2, 0.2}, $CellContext`qdot1$$ = {0.3, 
    0.9}, $CellContext`qdot2$$ = {0.1, 0.9}, $CellContext`reset$$ = 
    824, $CellContext`showcolumn$$ = False, $CellContext`solution$$ = 
    False, $CellContext`stage1guessA$$ = {0.5, 
    0.8261797099333564}, $CellContext`TOLdot1$$ = {0.3, 
    0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {{
       Hold[$CellContext`MB$$], 1}, 1, 10, 1}, {{
       Hold[$CellContext`reset$$], 824}, 1, 10000, 1}, {{
       Hold[$CellContext`MB$$], 1}, 1, 10, 1}, {{
       Hold[$CellContext`stage1guessA$$], {0.5, 0.8261797099333564}}, {{0.01, 
      0.99}, {0.01, 0.99}}}, {{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {{
       Hold[$CellContext`hint$$], False, "hint"}, {False, True}}, {{
       Hold[$CellContext`showcolumn$$], False, "column"}, {True, False}}, {{
       Hold[$CellContext`Ans1$$], 0, 
       Dynamic[$CellContext`Box1$$]}, 0, 
      Dynamic[$CellContext`Ans1Range$$], 0.01}, {{
       Hold[$CellContext`Ans2$$], 0, 
       Dynamic[$CellContext`Box2$$]}, 0, 
      Dynamic[$CellContext`Ans2Range$$], 0.01}, {{
       Hold[$CellContext`Ans3$$], 0, 
       Dynamic[$CellContext`Box3$$]}, 0, 
      Dynamic[$CellContext`Ans3Range$$], 0.01}, {{
       Hold[$CellContext`Ans4$$], 0, 
       Dynamic[$CellContext`Box4$$]}, 0, 
      Dynamic[$CellContext`Ans4Range$$], 0.01}, {{
       Hold[$CellContext`Ans5$$], 0, 
       Dynamic[$CellContext`Box5$$]}, 0, 
      Dynamic[$CellContext`Ans5Range$$], 0.01}, {{
       Hold[$CellContext`Ans6$$], 0, 
       Dynamic[$CellContext`Box6$$]}, 
      Dynamic[$CellContext`Ans6RangeL$$], 
      Dynamic[$CellContext`Ans6Range$$], 0.01}, {{
       Hold[$CellContext`ptdist$$], {0.6, 0.6}}, Automatic}, {{
       Hold[$CellContext`ptbott$$], {0.4, 0.4}}, Automatic}, {{
       Hold[$CellContext`ptfeed$$], {0.2, 0.2}}, Automatic}, {{
       Hold[$CellContext`qdot1$$], {0.3, 0.9}}, Automatic}, {{
       Hold[$CellContext`qdot2$$], {0.1, 0.9}}, Automatic}, {{
       Hold[$CellContext`BOLdot1$$], {0.3, 0.9}}, Automatic}, {{
       Hold[$CellContext`BOLdot2$$], {0.1, 0.9}}, Automatic}, {{
       Hold[$CellContext`TOLdot1$$], {0.3, 0.7}}, Automatic}, {{
       Hold[$CellContext`TOLdot2$$], {0.1, 0.7}}, Automatic}, {{
       Hold[$CellContext`ArrowHeight$$], 50, "feed height"}, 20, 90, 1}, {{
       Hold[$CellContext`Box1$$], "distillate flow rate"}, 0}, {{
       Hold[$CellContext`Box2$$], 
       Row[{"feed composition ", 
         Subscript[
          Style["z", Italic], "feed"]}]}, 0}, {{
       Hold[$CellContext`Box3$$], "reflux ratio"}, 0}, {{
       Hold[$CellContext`Box4$$], 
       Row[{"liquid flow rate ", 
         Style["L ", Italic]}]}, 0}, {{
       Hold[$CellContext`Box5$$], 
       Row[{"vapor flow rate ", 
         OverBar[
          Style["V", Italic]]}]}, 0}, {{
       Hold[$CellContext`Box6$$], "quality "}, 0}, {{
       Hold[$CellContext`Ans1Range$$], 11.18284719626985}, 0}, {{
       Hold[$CellContext`Ans2Range$$], 1}, 0}, {{
       Hold[$CellContext`Ans3Range$$], 4.326726916414608}, 0}, {{
       Hold[$CellContext`Ans4Range$$], 6.356745283742073}, 0}, {{
       Hold[$CellContext`Ans5Range$$], 1.6870284625549337`}, 0}, {{
       Hold[$CellContext`Ans6Range$$], -1.127}, 0}, {{
       Hold[$CellContext`Ans6RangeL$$], 1.127}, 0}, {{
       Hold[$CellContext`HintTextColumnTrue$$], Null}, 0}, {
      Hold[
       Grid[{{
          Button[" new problem ", {
            Increment[$CellContext`reset$$], $CellContext`MB$$ = 
            1, $CellContext`solution$$ = False, $CellContext`hint$$ = False, 
            Clear[$CellContext`lineguess1], $CellContext`Ans1$$ = 
            0, $CellContext`Ans2$$ = 0, $CellContext`Ans3$$ = 
            0, $CellContext`Ans4$$ = 0, $CellContext`Ans5$$ = 
            0, $CellContext`Ans6$$ = 0, $CellContext`showcolumn$$ = 
            False, $CellContext`stage1guessA$$ = {0.5, 
             0.8}, $CellContext`ArrowHeight$$ = 
            50, $CellContext`qdot1$$ = {0.3, 0.9}, $CellContext`qdot2$$ = {
             0.1, 0.9}, $CellContext`ptdist$$ = {0.6, 
             0.7}, $CellContext`ptbott$$ = {0.4, 
             0.3}, $CellContext`ptfeed$$ = {0.2, 
             0.7}, $CellContext`BOLdot1$$ = {0.3, 
             0.9}, $CellContext`BOLdot2$$ = {0.1, 
             0.9}, $CellContext`TOLdot1$$ = {0.3, 
             0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}], 
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          PaneSelector[{1 -> Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 2 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 3 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 4 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 5 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 6 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 7 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 8 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 9 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}]}, 
           Dynamic[$CellContext`MB$$]], 
          
          PaneSelector[{
           1 -> "1. Solve for the missing green variables.", 2 -> 
            "2. Solve for the missing green variables.", 3 -> 
            "3. Solve for the missing green variables.", 4 -> 
            Column[{"4. Place the points at their correct", 
               Row[{"locations on the ", 
                 Style["y", Italic], " = ", 
                 Style["x", Italic], " line."}]}], 5 -> Row[{"5. Draw the ", 
               Style["q", Italic], "-line (feed line)."}], 6 -> 
            "6. Move the points to draw the top \n and bottom operating \
lines.", 7 -> "7. Drag the point to locate the first stage.", 8 -> 
            "8. Drag the point to locate the second stage.", 9 -> 
            "9. Drag the point to locate the final stage.", 10 -> 
            "10. Determine the feed stream location."}, 
           Dynamic[$CellContext`MB$$]], 
          Manipulate`Place[4], 
          
          PaneSelector[{
           1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
            Manipulate`Place[5], 5 -> Manipulate`Place[5], 6 -> 
            Manipulate`Place[5], 7 -> Manipulate`Place[5], 8 -> 
            Manipulate`Place[5], 9 -> Manipulate`Place[5], 10 -> 
            Manipulate`Place[5]}, 
           Dynamic[$CellContext`MB$$]], 
          PaneSelector[{5 -> Manipulate`Place[6], 6 -> Manipulate`Place[6]}, 
           Dynamic[$CellContext`MB$$]]}, {
          PaneSelector[{1 -> Grid[{{
                Manipulate`Place[7], 
                Manipulate`Place[8]}}], 2 -> Grid[{{
                Manipulate`Place[9], 
                Manipulate`Place[10]}}], 3 -> Grid[{{
                Manipulate`Place[11], 
                Manipulate`Place[12]}}], 4 -> Row[{
               Manipulate`Place[13], 
               Manipulate`Place[14], 
               Manipulate`Place[15]}], 5 -> Row[{
               Manipulate`Place[16], 
               Manipulate`Place[17], 
               Spacer[{200, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}], 6 -> Row[{
               Manipulate`Place[18], 
               Manipulate`Place[19], 
               Manipulate`Place[20], 
               Manipulate`Place[21], 
               Spacer[{200, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}], 10 -> Row[{
               Manipulate`Place[22], 
               Spacer[{40, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}]}, 
           Dynamic[$CellContext`MB$$]], SpanFromLeft}, {
          Manipulate`Place[23], 
          Manipulate`Place[24], 
          Manipulate`Place[25], 
          Manipulate`Place[26], 
          Manipulate`Place[27], 
          Manipulate`Place[28], 
          Manipulate`Place[29], 
          Manipulate`Place[30], 
          Manipulate`Place[31]}, {
          Manipulate`Place[32], 
          Manipulate`Place[33], 
          Manipulate`Place[34], 
          Manipulate`Place[35], 
          Manipulate`Place[36]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`solution$9764$$ = False, $CellContext`MB$9765$$ = 
    0, $CellContext`reset$9766$$ = 0, $CellContext`stage1guessA$9767$$ = 
    False, $CellContext`hint$9768$$ = False, $CellContext`showcolumn$9769$$ = 
    False, $CellContext`Ans1$9770$$ = 0, $CellContext`Ans2$9771$$ = 
    0, $CellContext`Ans3$9772$$ = 0, $CellContext`Ans4$9773$$ = 
    0, $CellContext`Ans5$9774$$ = 0, $CellContext`Ans6$9775$$ = 
    0, $CellContext`ArrowHeight$9776$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`Ans1$$ = 0, $CellContext`Ans1Range$$ = 
        11.18284719626985, $CellContext`Ans2$$ = 0, $CellContext`Ans2Range$$ = 
        1, $CellContext`Ans3$$ = 0, $CellContext`Ans3Range$$ = 
        4.326726916414608, $CellContext`Ans4$$ = 0, $CellContext`Ans4Range$$ = 
        6.356745283742073, $CellContext`Ans5$$ = 0, $CellContext`Ans5Range$$ = 
        1.6870284625549337`, $CellContext`Ans6$$ = 
        0, $CellContext`Ans6Range$$ = -1.127, $CellContext`Ans6RangeL$$ = 
        1.127, $CellContext`ArrowHeight$$ = 
        50, $CellContext`BOLdot1$$ = {0.3, 0.9}, $CellContext`BOLdot2$$ = {
         0.1, 0.9}, $CellContext`Box1$$ = 
        "distillate flow rate", $CellContext`Box2$$ = 
        Row[{"feed composition ", 
           Subscript[
            Style["z", Italic], "feed"]}], $CellContext`Box3$$ = 
        "reflux ratio", $CellContext`Box4$$ = Row[{"liquid flow rate ", 
           Style["L ", Italic]}], $CellContext`Box5$$ = 
        Row[{"vapor flow rate ", 
           OverBar[
            Style["V", Italic]]}], $CellContext`Box6$$ = 
        "quality ", $CellContext`hint$$ = 
        False, $CellContext`HintTextColumnTrue$$ = Null, $CellContext`MB$$ = 
        1, $CellContext`ptbott$$ = {0.4, 0.4}, $CellContext`ptdist$$ = {0.6, 
         0.6}, $CellContext`ptfeed$$ = {0.2, 0.2}, $CellContext`qdot1$$ = {
         0.3, 0.9}, $CellContext`qdot2$$ = {0.1, 0.9}, $CellContext`reset$$ = 
        824, $CellContext`showcolumn$$ = False, $CellContext`solution$$ = 
        False, $CellContext`stage1guessA$$ = {0.5, 
         0.8261797099333564}, $CellContext`TOLdot1$$ = {0.3, 
         0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}, "ControllerVariables" :> {
        Hold[$CellContext`solution$$, $CellContext`solution$9764$$, False], 
        Hold[$CellContext`MB$$, $CellContext`MB$9765$$, 0], 
        Hold[$CellContext`reset$$, $CellContext`reset$9766$$, 0], 
        Hold[$CellContext`stage1guessA$$, $CellContext`stage1guessA$9767$$, 
         False], 
        Hold[$CellContext`hint$$, $CellContext`hint$9768$$, False], 
        Hold[$CellContext`showcolumn$$, $CellContext`showcolumn$9769$$, 
         False], 
        Hold[$CellContext`Ans1$$, $CellContext`Ans1$9770$$, 0], 
        Hold[$CellContext`Ans2$$, $CellContext`Ans2$9771$$, 0], 
        Hold[$CellContext`Ans3$$, $CellContext`Ans3$9772$$, 0], 
        Hold[$CellContext`Ans4$$, $CellContext`Ans4$9773$$, 0], 
        Hold[$CellContext`Ans5$$, $CellContext`Ans5$9774$$, 0], 
        Hold[$CellContext`Ans6$$, $CellContext`Ans6$9775$$, 0], 
        Hold[$CellContext`ArrowHeight$$, $CellContext`ArrowHeight$9776$$, 0]},
       "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`\[Gamma]1$, $CellContext`\[Gamma]2$, \
$CellContext`A12$, $CellContext`A21$, $CellContext`ArrowPt1$, \
$CellContext`ArrowPt2$, $CellContext`BOLintercept$, $CellContext`BOLslope$, \
$CellContext`botflow$, $CellContext`CoordA$, $CellContext`CoordB$, \
$CellContext`CoordC$, $CellContext`CoordD$, $CellContext`CoordE$, \
$CellContext`CoordF$, $CellContext`CoordG$, $CellContext`CoordH$, \
$CellContext`CoordI$, $CellContext`CoordJ$, $CellContext`CoordK$, \
$CellContext`CoordL$, $CellContext`distcolumn$, $CellContext`distflow$, \
$CellContext`Dotnumbers$, $CellContext`equilb$, $CellContext`F$, \
$CellContext`feed$, $CellContext`Feedstate$, $CellContext`GuessA$, \
$CellContext`GuessB$, $CellContext`GuessC$, $CellContext`GuessD$, \
$CellContext`GuessE$, $CellContext`GuessF$, $CellContext`GuessG$, \
$CellContext`GuessH$, $CellContext`GuessI$, $CellContext`GuessJ$, \
$CellContext`GuessK$, $CellContext`GuessL$, $CellContext`i$, $CellContext`L$, \
$CellContext`Lbar$, $CellContext`LeftLimit$, $CellContext`MissingA$, \
$CellContext`MissingB$, $CellContext`MissingC$, $CellContext`MissingD$, \
$CellContext`MissingE$, $CellContext`MissingF$, $CellContext`MissingG$, \
$CellContext`MissingH$, $CellContext`MissingI$, $CellContext`MissingJ$, \
$CellContext`MissingK$, $CellContext`MissingL$, $CellContext`nR$, \
$CellContext`nS$, $CellContext`nT$, $CellContext`opertRect$, \
$CellContext`opertStrp$, $CellContext`P$, $CellContext`Pane1$, \
$CellContext`Pane2$, $CellContext`Part9Answer$, $CellContext`plotlabel$, \
$CellContext`q$, $CellContext`R$, $CellContext`RandomizeValuesShown$, \
$CellContext`rect$, $CellContext`rectnumbers$, $CellContext`RightLimit$, \
$CellContext`Rmin$, $CellContext`Rx$, $CellContext`Ry$, $CellContext`size1$, \
$CellContext`size2$, $CellContext`size3$, $CellContext`size4$, \
$CellContext`Sr$, $CellContext`stagelabels$, $CellContext`stagelines$, \
$CellContext`strip$, $CellContext`Sx$, $CellContext`Sy$, $CellContext`T$, \
$CellContext`tb$, $CellContext`V$, $CellContext`Value1$, \
$CellContext`Value2$, $CellContext`Vbar$, $CellContext`VPa$, \
$CellContext`VPb$, $CellContext`x1$, $CellContext`x2$, $CellContext`xb$, \
$CellContext`xd$, $CellContext`xeq$, $CellContext`xi$, $CellContext`xR$, \
$CellContext`xS$, $CellContext`y1$, $CellContext`y2$, $CellContext`yeq$, \
$CellContext`yi$, $CellContext`yR$, $CellContext`yS$, $CellContext`zf$}, 
        SeedRandom[$CellContext`reset$$]; $CellContext`A12$ = 
         RandomReal[]; $CellContext`A21$ = 
         RandomReal[{-0.5, 1}]; $CellContext`P$ = 
         RandomReal[{100, 300}]; $CellContext`q$ = 
         RandomChoice[{-0.2, 0.05, 0.22, 0.49, 0.75, 0.95, 
           1.13}]; $CellContext`zf$ = 
         RandomInteger[{30, 70}]/100.; $CellContext`F$ = 
         RandomInteger[{100, 1000}]/100.; $CellContext`xd$ = 
         RandomInteger[{85, 92}]/100.; $CellContext`xb$ = 
         RandomInteger[{5, 12}]/100.; $CellContext`VPa$ = 
         10^(8.08097 - 1582.271/($CellContext`T$ + 
           239.726)); $CellContext`VPb$ = 
         10^(8.07131 - 1730.63/($CellContext`T$ + 233.426)); 
        Clear[$CellContext`T$, $CellContext`i$]; $CellContext`\[Gamma]1$[
           Pattern[$CellContext`i$, 
            Blank[]]] = 
         Exp[$CellContext`x2$[$CellContext`i$]^2 ($CellContext`A12$ + 
            2 ($CellContext`A21$ - $CellContext`A12$) (
              1 - $CellContext`x2$[$CellContext`i$]))]; \
$CellContext`\[Gamma]2$[
           Pattern[$CellContext`i$, 
            Blank[]]] = 
         Exp[(1 - $CellContext`x2$[$CellContext`i$])^2 ($CellContext`A21$ + 
            2 ($CellContext`A12$ - $CellContext`A21$) \
$CellContext`x2$[$CellContext`i$])]; $CellContext`i$ = 0; 
        While[$CellContext`i$ < 
          101, {$CellContext`x2$[$CellContext`i$] = $CellContext`i$ 
            0.01, $CellContext`T$[$CellContext`i$] = Part[
             
             FindRoot[$CellContext`P$ == $CellContext`VPb$ $CellContext`\
\[Gamma]1$[$CellContext`i$] (
                 1 - $CellContext`x2$[$CellContext`i$]) + $CellContext`VPa$ \
$CellContext`\[Gamma]2$[$CellContext`i$] $CellContext`x2$[$CellContext`i$], \
{$CellContext`T$, 60}, AccuracyGoal -> 3], 1, 
             2], $CellContext`y2$[$CellContext`i$] = 
           ReplaceAll[$CellContext`x2$[$CellContext`i$] + ($CellContext`VPa$ \
$CellContext`\[Gamma]2$[$CellContext`i$] \
($CellContext`x2$[$CellContext`i$]/$CellContext`P$) - \
$CellContext`x2$[$CellContext`i$]), $CellContext`T$ -> \
$CellContext`T$[$CellContext`i$]], 
           Increment[$CellContext`i$]}]; $CellContext`tb$ = Table[{
            $CellContext`x2$[$CellContext`i$], 
            $CellContext`y2$[$CellContext`i$]}, {$CellContext`i$, 0, 
            100}]; $CellContext`equilb$ = Quiet[
           Interpolation[$CellContext`tb$]]; $CellContext`feed$[
           Pattern[$CellContext`x$, 
            Blank[]]] := $CellContext`q$ ($CellContext`x$/($CellContext`q$ - 
            1)) - $CellContext`zf$/($CellContext`q$ - 1); $CellContext`xeq$ = 
         ReplaceAll[$CellContext`x, 
           Quiet[
            
            FindRoot[$CellContext`feed$[$CellContext`x] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, $CellContext`zf$}]]]; \
$CellContext`yeq$ = $CellContext`feed$[$CellContext`xeq$]; \
$CellContext`opertRect$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := $CellContext`yeq$ + (($CellContext`x$ - \
$CellContext`xeq$)/($CellContext`xd$ - $CellContext`xeq$)) ($CellContext`xd$ - \
$CellContext`yeq$); $CellContext`opertStrp$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := $CellContext`yeq$ + (($CellContext`x$ - \
$CellContext`xeq$)/($CellContext`xb$ - $CellContext`xeq$)) ($CellContext`xb$ - \
$CellContext`yeq$); $CellContext`Rmin$ = (($CellContext`xd$ - \
$CellContext`yeq$)/($CellContext`xd$ - $CellContext`xeq$))/(
          1 - ($CellContext`xd$ - $CellContext`yeq$)/($CellContext`xd$ - \
$CellContext`xeq$)); $CellContext`R$ = 
         If[$CellContext`Rmin$ < 1, $CellContext`Rmin$ = 
           RandomInteger[{13, 18}]/10., $CellContext`Rmin$ (
            RandomInteger[{15, 20}]/10.)]; $CellContext`rect$[
           Pattern[$CellContext`x$, 
            Blank[]]] := ($CellContext`R$/($CellContext`R$ + 
            1)) $CellContext`x$ + $CellContext`xd$/($CellContext`R$ + 
           1); $CellContext`xi$ = ReplaceAll[$CellContext`x, 
           Quiet[
            
            FindRoot[$CellContext`feed$[$CellContext`x] == \
$CellContext`rect$[$CellContext`x], {$CellContext`x, 
              0.7}]]]; $CellContext`yi$ = \
$CellContext`rect$[$CellContext`xi$]; $CellContext`strip$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := ($CellContext`Lbar$/$CellContext`Vbar$) \
$CellContext`x$ - ($CellContext`Lbar$/$CellContext`Vbar$ - 
           1) $CellContext`xb$; $CellContext`distflow$ = 
         ReplaceAll[$CellContext`Dflow, 
           Part[
            
            Solve[{$CellContext`zf$ $CellContext`F$ == $CellContext`xd$ \
$CellContext`Dflow + $CellContext`xb$ $CellContext`Bflow, $CellContext`F$ == \
$CellContext`Dflow + $CellContext`Bflow}, {$CellContext`Dflow, \
$CellContext`Bflow}], 
            1]]; $CellContext`botflow$ = $CellContext`F$ - \
$CellContext`distflow$; $CellContext`L$ = $CellContext`distflow$ \
$CellContext`R$; $CellContext`V$ = $CellContext`distflow$ + $CellContext`L$; \
$CellContext`Lbar$ = $CellContext`L$ + $CellContext`q$ $CellContext`F$; \
$CellContext`Vbar$ = $CellContext`V$ - (
           1 - $CellContext`q$) $CellContext`F$; $CellContext`i$ = 
         0; $CellContext`yR$[0] = $CellContext`xd$; $CellContext`xR$[
          0] = $CellContext`xd$; 
        While[$CellContext`xR$[$CellContext`i$] > $CellContext`xi$, \
{$CellContext`x1$ = ReplaceAll[$CellContext`x, 
             Quiet[
              
              FindRoot[$CellContext`yR$[$CellContext`i$] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, \
$CellContext`xR$[$CellContext`i$] - 
                0.1}]]], $CellContext`y1$ = \
$CellContext`rect$[$CellContext`x1$], 
           If[
            Or[$CellContext`x1$ > $CellContext`xi$, 
             
             And[$CellContext`x1$ < $CellContext`xi$, $CellContext`i$ < 
              1]], {$CellContext`xR$[$CellContext`i$ + 
               1] = $CellContext`x1$, $CellContext`yR$[$CellContext`i$ + 
               1] = $CellContext`y1$}], 
           
           Increment[$CellContext`i$], $CellContext`nR$ = $CellContext`i$ - 
            1}]; $CellContext`i$ = 
         0; $CellContext`yS$[
          0] = $CellContext`yR$[$CellContext`nR$]; $CellContext`xS$[
          0] = $CellContext`xR$[$CellContext`nR$]; 
        While[$CellContext`xS$[$CellContext`i$] >= $CellContext`xb$, \
{$CellContext`x1$ = ReplaceAll[$CellContext`x, 
             Quiet[
              
              FindRoot[$CellContext`yS$[$CellContext`i$] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, \
$CellContext`xS$[$CellContext`i$] - 
                0.1}]]], $CellContext`y1$ = \
$CellContext`strip$[$CellContext`x1$], $CellContext`xS$[$CellContext`i$ + 
             1] = $CellContext`x1$, $CellContext`yS$[$CellContext`i$ + 
             1] = $CellContext`y1$, 
           Increment[$CellContext`i$]}]; $CellContext`nS$ = $CellContext`i$ - 
          1; $CellContext`nT$ = $CellContext`nR$ + $CellContext`nS$ + 
          1; $CellContext`Ry$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xR$[#], 
                $CellContext`yR$[# - 1]}, {
                $CellContext`xR$[#], 
                $CellContext`yR$[#]}}]& , 
             Range[$CellContext`nR$]]}, 
           Map[Line[{{
               $CellContext`xR$[#], 
               $CellContext`yR$[# - 1]}, {
               $CellContext`xR$[#], 
               $CellContext`yR$[#]}}]& , 
            Range[$CellContext`nR$]]]; $CellContext`Rx$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xR$[#], 
                $CellContext`yR$[#]}, {
                $CellContext`xR$[# + 1], 
                $CellContext`yR$[#]}}]& , 
             If[$CellContext`nR$ >= 1, 
              Range[0, $CellContext`nR$ - 1], {0}]]}, 
           Map[Line[{{
               $CellContext`xR$[#], 
               $CellContext`yR$[#]}, {
               $CellContext`xR$[# + 1], 
               $CellContext`yR$[#]}}]& , 
            If[$CellContext`nR$ >= 1, 
             Range[0, $CellContext`nR$ - 1], {0}]]]; $CellContext`Sy$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xS$[# + 1], 
                $CellContext`yS$[#]}, {
                $CellContext`xS$[# + 1], 
                $CellContext`yS$[# + 1]}}]& , 
             Range[0, $CellContext`nS$ - 1]]}, 
           Map[Line[{{
               $CellContext`xS$[# + 1], 
               $CellContext`yS$[#]}, {
               $CellContext`xS$[# + 1], 
               $CellContext`yS$[# + 1]}}]& , 
            Range[0, $CellContext`nS$ - 1]]]; $CellContext`Sx$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xS$[# - 1], 
                $CellContext`yS$[# - 1]}, {
                $CellContext`xS$[#], 
                $CellContext`yS$[# - 1]}}]& , 
             Range[$CellContext`nS$ + 1]]}, 
           Map[Line[{{
               $CellContext`xS$[# - 1], 
               $CellContext`yS$[# - 1]}, {
               $CellContext`xS$[#], 
               $CellContext`yS$[# - 1]}}]& , 
            Range[$CellContext`nS$ + 1]]]; $CellContext`Sr$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Line[{{
               $CellContext`xS$[$CellContext`nS$ + 1], 
               $CellContext`yS$[$CellContext`nS$]}, {
               $CellContext`xS$[$CellContext`nS$ + 1], 0}}]}, 
           Line[{{
              $CellContext`xS$[$CellContext`nS$ + 1], 
              $CellContext`yS$[$CellContext`nS$]}, {
              $CellContext`xS$[$CellContext`nS$ + 1], 
              0}}]]; $CellContext`Dotnumbers$ = Table[
           Text[
            Framed[
             Style[
              
              If[$CellContext`a < $CellContext`nT$ - 1, $CellContext`a + 1, 
               "R"], 17], Background -> White, 
             FrameMargins -> {{6, 4}, {0, 0}}, RoundingRadius -> 25, 
             FrameStyle -> Thin], 
            Which[$CellContext`a == 0, {
              If[$CellContext`nR$ > 0, 
               $CellContext`xR$[1], 
               $CellContext`xS$[1]], 
              $CellContext`yR$[0]}, 
             And[$CellContext`a == 1, $CellContext`nR$ == 0], {
              $CellContext`xS$[2], 
              $CellContext`yS$[1]}, $CellContext`a < $CellContext`nR$, {
              $CellContext`xR$[$CellContext`a + 1], 
              $CellContext`yR$[$CellContext`a]}, $CellContext`a == \
$CellContext`nR$, {
              $CellContext`xS$[1], 
              $CellContext`yS$[0]}, 
             
             Inequality[$CellContext`nR$, Less, $CellContext`a, 
              LessEqual, $CellContext`nT$ - 1], {
              $CellContext`xS$[$CellContext`a - $CellContext`nR$ + 1], 
              $CellContext`yS$[$CellContext`a - $CellContext`nR$]}], {
            1.2, -0.8}], {$CellContext`a, 0, $CellContext`nT$ - 
            1}]; $CellContext`plotlabel$ = Switch[$CellContext`MB$$, 1, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"equations: ", 
                Style["F", Italic], " = ", 
                Style["B", Italic], " + ", 
                Style["D", Italic], " and ", 
                Style["F", Italic], 
                Subscript[
                 Style["z", Italic], "feed"], " = ", 
                Subscript[
                 Style["x", Italic], "B"], 
                Style["B", Italic], " + ", 
                Subscript[
                 Style["x", Italic], "D"], 
                Style["D", Italic]}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do an overall balance and a component balance."}]], 2, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Equations: ", 
                Style["V ", Italic], "= ", 
                Style["L", Italic], " + ", 
                Style["D", Italic], " and ", 
                Style["L", Italic], " / ", 
                Style["D", Italic], " = reflux ratio."}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do a mass balance around the condenser."}]], 3, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Equations: ", 
                Style["V - ", Italic], 
                OverBar[
                 Style["V", Italic]], " + " Style["L ", Italic], "= ", 
                Style["V ", Italic], "+ ", 
                OverBar[
                 Style["L", Italic]], "      and      q = (", 
                OverBar[
                 Style["L", Italic]], 
                Style[" - L)/F.", Italic]}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do a mass balance around the feed stage."}]], 4, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{
                Style["x", Italic], " and ", 
                Style["y", Italic], 
                " coordinates should equal their respective \
compositions."}]}]], 5, 
           Which[
            
            And[$CellContext`solution$$ == True, $CellContext`showcolumn$$ == 
             False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Style["q", Italic], "-line equation: ", 
              Subscript[
               Style["y", Italic], "F"], " - ((", 
              Style["q", Italic], "/", 
              Style["q", Italic], "-1)x -(", 
              Subscript[
               Style["z", Italic], "feed"], "/(", 
              Style["q", Italic], "-1))."}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True, $CellContext`showcolumn$$ == False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Style["q", Italic], "-line slope: ", 
              Style["q", Italic], "/(", 
              Style["q", Italic], "-1)"}], $CellContext`showcolumn$$ == True, 
            ""], 6, 
           Which[
            
            And[$CellContext`solution$$ == True, $CellContext`showcolumn$$ == 
             False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Subscript[
               Style["y", Italic], "top"], " = (", 
              Style["L", Italic], "/", 
              Style["V", Italic], ")x + (1-(", 
              Style["L", Italic], "/", 
              Style["V", Italic], ")", 
              Subscript[
               Style["x", Italic], "D"], " and ", 
              Subscript["y", "bot"], " = (", 
              OverBar[
               Style["L", Italic]], "/", 
              OverBar[
               Style["V", Italic]], ")", 
              Style["x", Italic], " + (1-(", 
              OverBar[
               Style["L", Italic]], "/", 
              OverBar[
               Style["V", Italic]], ")", 
              Subscript[
               Style["x", Italic], "B"], ")."}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False, $CellContext`showcolumn$$ == False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True, $CellContext`showcolumn$$ == False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Slope of the top operating line = (", 
                Style["L", Italic], "/", 
                Style["V", Italic], ") and bottom operating line = (", 
                OverBar[
                 Style["L", Italic]], "/", 
                OverBar[
                 Style["V", Italic]], ")."}]}], $CellContext`showcolumn$$ == 
            True, ""], 7, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], "Start at the condenser."}]], 8, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], "The second stair from the top."}]], 9, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Continue the \"stair stepping\" method."}]], 10, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], " "}]]]; $CellContext`HintTextColumnTrue$$ = 
         Which[
           
           And[$CellContext`MB$$ == 5, $CellContext`hint$$ == 
            True, $CellContext`solution$$ == False, $CellContext`showcolumn$$ == 
            True], 
           Row[{
             Style["q", Italic], "-line slope: ", 
             Style["q", Italic], "/(", 
             Style["q", Italic], "-1)"}], 
           
           And[$CellContext`MB$$ == 5, $CellContext`solution$$ == 
            True, $CellContext`showcolumn$$ == True], 
           Row[{
             Spacer[{0, 1, 10}], 
             Style["q", Italic], "-line equation: ", 
             Subscript[
              Style["y", Italic], "F"], " = (", 
             Style["q", Italic], "/(", 
             Style["q", Italic], "-1))", 
             Style["x", Italic], "-(", 
             Subscript[
              Style["z", Italic], "feed"], "/(", 
             Style["q", Italic], "-1))"}], 
           
           And[$CellContext`MB$$ == 5, $CellContext`hint$$ == 
            False, $CellContext`solution$$ == 
            False, $CellContext`showcolumn$$ == True], " ", 
           
           And[$CellContext`MB$$ == 6, $CellContext`hint$$ == 
            True, $CellContext`solution$$ == False, $CellContext`showcolumn$$ == 
            True], 
           Row[{"Slope of the top operating line = (", 
             Style["L", Italic], "/", 
             Style["V", Italic], ") and bottom operating line = (", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], ")"}], 
           
           And[$CellContext`MB$$ == 6, $CellContext`solution$$ == 
            True, $CellContext`showcolumn$$ == True], 
           Row[{
             Spacer[{0, 1, 10}], 
             Subscript["y", "top"], " = (", 
             Style["L", Italic], "/", 
             Style["V", Italic], ") x + (1-(," Style["L", Italic], "/", 
             Style["V", Italic], "))", 
             Subscript["x", "D"], " and ", 
             Subscript["y", "bot"], " = (", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], "x + (1-(", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], ")", 
             Subscript["x", "B"], ")"}], 
           
           And[$CellContext`MB$$ == 6, $CellContext`hint$$ == 
            False, $CellContext`solution$$ == 
            False, $CellContext`showcolumn$$ == True], " ", 
           And[
            
            AnyTrue[{5, 
             6}, # == $CellContext`MB$$& ], $CellContext`showcolumn$$ == 
            False], " ", 
           And[$CellContext`MB$$ == 10, $CellContext`hint$$ == True], 
           "Has to do with where the two operating lines intersect.", 
           And[$CellContext`MB$$ == 10, $CellContext`hint$$ == False], 
           " "]; $CellContext`stagelines$ = Table[{
            Thickness[0.005], 
            
            Line[{{28, 20 + (70/$CellContext`nT$) $CellContext`i$}, {
              65, 20 + (
                 70/$CellContext`nT$) $CellContext`i$}}]}, {$CellContext`i$, 
            1, $CellContext`nT$ - 1}]; $CellContext`stagelabels$ = Table[
           Style[
            Text[
             StringJoin["stage ", 
              ToString[$CellContext`nT$ - $CellContext`i$], ""], {
             47, 22 + (70/$CellContext`nT$) $CellContext`i$}], 
            15], {$CellContext`i$, 1, $CellContext`nT$ - 
            1}]; $CellContext`ArrowPt1$ = {-15, 
           
           If[$CellContext`MB$$ == 1, 
            49, $CellContext`ArrowHeight$$]}; $CellContext`ArrowPt2$ = {28, 
           
           If[$CellContext`MB$$ == 1, 
            49, $CellContext`ArrowHeight$$]}; $CellContext`Part9Answer$ = 
         Rectangle[{28, 20 + (70/$CellContext`nT$) $CellContext`nS$}, {
           65, 20 + (70/$CellContext`nT$) ($CellContext`nS$ + 
              1)}]; $CellContext`LeftLimit$ = 
         If[$CellContext`MB$$ == 6, 10, -5]; $CellContext`RightLimit$ = 
         If[$CellContext`MB$$ >= 4, 100, 120]; $CellContext`stage1guessA$$ = {
           Part[$CellContext`stage1guessA$$, 1], 
           $CellContext`equilb$[
            Part[$CellContext`stage1guessA$$, 1]]}; $CellContext`ptdist$$ = {
           Part[$CellContext`ptdist$$, 1], 
           Part[$CellContext`ptdist$$, 1]}; $CellContext`ptfeed$$ = {
           Part[$CellContext`ptfeed$$, 1], 
           Part[$CellContext`ptfeed$$, 1]}; $CellContext`ptbott$$ = {
           Part[$CellContext`ptbott$$, 1], 
           Part[$CellContext`ptbott$$, 1]}; $CellContext`horizontalpt1 = 
         If[Part[$CellContext`stage1guessA$$, 2] >= $CellContext`yi$, {
            ReplaceAll[
             Quiet[$CellContext`x], 
             FindRoot[
             Part[$CellContext`stage1guessA$$, 
                2] == $CellContext`rect$[$CellContext`x], {$CellContext`x, 0, 
               1}]], 
            Part[$CellContext`stage1guessA$$, 2]}, {
            ReplaceAll[
             Quiet[$CellContext`x], 
             FindRoot[
             Part[$CellContext`stage1guessA$$, 
                2] == $CellContext`strip$[$CellContext`x], {$CellContext`x, 0,
                1}]], 
            
            Part[$CellContext`stage1guessA$$, 
             2]}]; $CellContext`horizontalpt2 = {
           ReplaceAll[
            Quiet[$CellContext`x], 
            FindRoot[
            Part[$CellContext`stage1guessA$$, 
               2] == $CellContext`equilb$[$CellContext`x], {$CellContext`x, 0,
               1}]], 
           Part[$CellContext`stage1guessA$$, 2]}; $CellContext`verticalpt1 = 
         Which[Part[$CellContext`horizontalpt2, 1] >= $CellContext`xi$, {
            Part[$CellContext`horizontalpt2, 1], 
            $CellContext`rect$[
             Part[$CellContext`horizontalpt2, 1]]}, 
           Inequality[$CellContext`xb$, LessEqual, 
            Part[$CellContext`horizontalpt2, 1], Less, $CellContext`xi$], {
            Part[$CellContext`horizontalpt2, 1], 
            $CellContext`strip$[
             Part[$CellContext`horizontalpt2, 1]]}, 
           Part[$CellContext`horizontalpt2, 1] < $CellContext`xb$, {
            Part[$CellContext`horizontalpt2, 1], 
            0}]; $CellContext`RandomizeValuesShown$ = RandomInteger[{1, 6}]; 
        Switch[$CellContext`RandomizeValuesShown$, 
          1, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = $CellContext`Ans1$$, \
$CellContext`GuessD$ = 0, $CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = $CellContext`Ans2$$, \
$CellContext`GuessG$ = 
           0, $CellContext`GuessH$ = $CellContext`Ans3$$, \
$CellContext`GuessI$ = $CellContext`Ans4$$, $CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}, 
          2, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = $CellContext`Ans1$$, \
$CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = $CellContext`Ans2$$, \
$CellContext`GuessG$ = 
           0, $CellContext`GuessH$ = $CellContext`Ans3$$, \
$CellContext`GuessI$ = $CellContext`Ans4$$, $CellContext`GuessJ$ = \
$CellContext`Ans5$$, $CellContext`GuessK$ = 
           0, $CellContext`GuessL$ = $CellContext`Ans6$$}, 
          3, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = $CellContext`Ans1$$, \
$CellContext`GuessE$ = $CellContext`Ans2$$, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = 
           0, $CellContext`GuessI$ = $CellContext`Ans4$$, \
$CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}, 
          4, {$CellContext`GuessA$ = $CellContext`Ans1$$, \
$CellContext`GuessB$ = 0, $CellContext`GuessC$ = 0, $CellContext`GuessD$ = 
           0, $CellContext`GuessE$ = $CellContext`Ans2$$, \
$CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = 
           0, $CellContext`GuessI$ = $CellContext`Ans4$$, \
$CellContext`GuessJ$ = $CellContext`Ans5$$, $CellContext`GuessK$ = \
$CellContext`Ans6$$, $CellContext`GuessL$ = 0}, 
          5, {$CellContext`GuessA$ = $CellContext`Ans1$$, \
$CellContext`GuessB$ = $CellContext`Ans2$$, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = 0, $CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = $CellContext`Ans4$$, $CellContext`GuessI$ = 
           0, $CellContext`GuessJ$ = $CellContext`Ans5$$, \
$CellContext`GuessK$ = $CellContext`Ans6$$, $CellContext`GuessL$ = 0}, 
          6, {$CellContext`GuessA$ = 
           0, $CellContext`GuessB$ = $CellContext`Ans2$$, \
$CellContext`GuessC$ = $CellContext`Ans1$$, $CellContext`GuessD$ = 
           0, $CellContext`GuessE$ = 0, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = $CellContext`Ans4$$, $CellContext`GuessI$ = 
           0, $CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}]; $CellContext`Box1$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, "distillate flow rate",
            2, "bottoms flow rate", 3, "bottoms flow rate", 4, "feed rate ", 
           5, "feed rate ", 6, "distillate flow rate"]; $CellContext`Box2$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"bottoms composition ", 
             Subscript[
              Style["x", Italic], "B"]}], 2, 
           Row[{"bottoms composition ", 
             Subscript[
              Style["x", Italic], "B"]}], 3, 
           Row[{"distillate composition ", 
             Subscript[
              Style["x", Italic], "D"]}], 4, 
           Row[{"distillate composition ", 
             Subscript[
              Style["x", Italic], "D"]}], 5, 
           Row[{"feed composition ", 
             Subscript[
              Style["z", Italic], "feed"]}], 6, 
           Row[{"feed composition ", 
             Subscript[
              Style["z", Italic], "feed"]}]]; $CellContext`Box3$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 2, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 3, "reflux ratio", 4, "reflux ratio", 5, 
           "reflux ratio", 6, "reflux ratio"]; $CellContext`Box4$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 2, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 3, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 4, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 5, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 6, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}]]; $CellContext`Box5$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 2, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 3, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 4, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 5, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 6, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}]]; $CellContext`Box6$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, "quality ", 2, 
           "quality ", 3, "quality ", 4, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 5, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 6, "quality "]; $CellContext`Ans1Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`F$, 2, 
           RandomReal[{1, 3}] $CellContext`F$, 3, 
           RandomReal[{1, 3}] $CellContext`F$, 4, 
           RandomReal[{1, 3}] $CellContext`F$, 5, 
           RandomReal[{1, 3}] $CellContext`F$, 6, 
           RandomReal[{1, 3}] $CellContext`F$]; $CellContext`Ans2Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 1, 2, 1, 3, 1, 4, 1, 5,
            1, 6, 1]; $CellContext`Ans3Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`L$, 2, 
           RandomReal[{1, 3}] $CellContext`L$, 3, 
           RandomReal[{1, 3}] $CellContext`R$, 4, 
           RandomReal[{1, 3}] $CellContext`R$, 5, 
           RandomReal[{1, 3}] $CellContext`R$, 6, 
           RandomReal[{1, 3}] $CellContext`R$]; $CellContext`Ans4Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`V$, 2, 
           RandomReal[{1, 3}] $CellContext`V$, 3, 
           RandomReal[{1, 3}] $CellContext`V$, 4, 
           RandomReal[{1, 3}] $CellContext`V$, 5, 
           RandomReal[{1, 3}] $CellContext`L$, 6, 
           RandomReal[{1, 3}] $CellContext`L$]; $CellContext`Ans5Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`Vbar$, 2, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 3, 
           RandomReal[{1, 3}] $CellContext`Vbar$, 4, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 5, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 6, 
           RandomReal[{1, 3}] $CellContext`Vbar$]; $CellContext`Ans6Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 2, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 3, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 4, RandomReal[{1, 3}] $CellContext`Vbar$,
            5, RandomReal[{1, 3}] $CellContext`Vbar$, 6, 
           
           RandomChoice[{(-2.3) $CellContext`q$, 2.1 $CellContext`q$, 
             1.2 $CellContext`q$, (-1.4) $CellContext`q$, (-1.48) \
$CellContext`q$, 1.87 $CellContext`q$}]]; $CellContext`Ans6RangeL$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 
           1, -$CellContext`Ans6Range$$, 2, -$CellContext`Ans6Range$$, 
           3, -$CellContext`Ans6Range$$, 4, 0, 5, 0, 
           6, -$CellContext`Ans6Range$$]; $CellContext`distcolumn$ = {
           Thickness[0.005], 
           Line[{{28, 25}, {28, 85}}], 
           Line[{{65, 25}, {65, 85}}], 
           Circle[{46.5, 85}, {18.5, 8}, {0, Pi}], 
           Circle[{46.5, 25}, {18.5, 8}, {Pi, 2 Pi}], Black, 
           Line[{{49, 93}, {49, 100}}], 
           Line[{{49, 100}, {80, 100}}], 
           Arrow[{{80, 100}, {80, 90}}], 
           Circle[{80, 85}, 5], 
           Arrow[{{60, 19}, {60, 10}}], 
           Line[{{55, 5}, {45, 5}}], 
           Arrow[{{45, 5}, {45, 17}}], 
           Circle[{60, 5}, 5], Black, 
           Arrow[{{75, 85}, {65, 85}}], 
           Arrow[{{85, 85}, {$CellContext`RightLimit$, 85}}], 
           Arrow[{{65, 5}, {$CellContext`RightLimit$, 5}}], 
           Text[
            Style["C", 15], {80, 85}], 
           Text[
            Style["R", 15], {60, 5}], 
           If[$CellContext`showcolumn$$ == True, 
            Switch[$CellContext`MB$$, 4, {
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = ", 
                  NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0, 56}, Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "D"], " = ", 
                  NumberForm[$CellContext`xd$, {2, 2}]}], 17], {75, 75}, 
               Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "B"], " = ", 
                  NumberForm[$CellContext`xb$, {2, 2}]}], 17], {75, 12}, 
               Left]}, 5, {
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = ", 
                  NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0, 56}, Left], 
              Text[
               Style[
                Row[{
                  Style["q", Italic], " = ", 
                  NumberForm[$CellContext`q$, {3, 2}]}], 17], {0, 64}, Left]},
              6, {
              Text[
               Style[
                Row[{
                  Style["L", Italic], " = ", 
                  NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 17], {30, 
               78}, Left], 
              Text[
               Style[
                Row[{
                  Style["V", Italic], " = ", 
                  NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 17], {30, 
               65}, Left], 
              Text[
               Style[
                Row[{
                  OverBar[
                   Style["L", Italic]], " = ", 
                  NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 17], {
               30, 26}, Left], 
              Text[
               Style[
                Row[{
                  OverBar[
                   Style["V", Italic]], " = ", 
                  NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 17], {
               30, 40}, Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "D"], " = ", 
                  NumberForm[$CellContext`xd$, {2, 2}]}], 17], {75, 75}, 
               Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "B"], " = ", 
                  NumberForm[$CellContext`xb$, {2, 2}]}], 17], {75, 12}, 
               Left]}], 
            Text["", {5, 5}]]}; $CellContext`size1$ = {
          PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> False, Frame -> 
           True, FrameLabel -> {
             Row[{"liquid mole fraction, ", 
               Style["x", Italic]}], 
             Row[{"vapor mole fraction, ", 
               Style["y", Italic]}]}, LabelStyle -> {17, Black}, 
           ImageSize -> {600, 360}, AspectRatio -> Full, GridLines -> {
             Range[0, 1, 0.05], 
             Range[0, 1, 0.05]}, GridLinesStyle -> GrayLevel[0.8], PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black], 
           ImageMargins -> {{0, 0}, {0, 0}}}; $CellContext`size2$ = {
          PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> False, Frame -> 
           True, FrameLabel -> {
             Row[{"liquid mole fraction, ", 
               Style["x", Italic]}], 
             Row[{"vapor mole fraction, ", 
               Style["y", Italic]}]}, LabelStyle -> {17, Black}, 
           ImageSize -> {290, 360}, AspectRatio -> Full, GridLines -> {
             Range[0, 1, 0.05], 
             Range[0, 1, 0.05]}, GridLinesStyle -> GrayLevel[0.8], PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black], 
           ImageMargins -> {{0, 0}, {0, 0}}}; $CellContext`size3$ = {
          ImageSize -> {600, 360}, AspectRatio -> Full, ImageMargins -> None, 
           PlotRangeClipping -> False, 
           PlotRange -> {{-28.7, 141}, {-15, 102}}, ImagePadding -> None, 
           PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black]}; $CellContext`size4$ = {
          ImageSize -> {310, 360}, AspectRatio -> Full, PlotRangeClipping -> 
           False, PlotRange -> {{$CellContext`LeftLimit$, 101}, {-15, 
             102}}}; $CellContext`Pane1$ = Show[
           Graphics[{$CellContext`distcolumn$, 
             Thickness[0.005], 
             
             Arrow[{$CellContext`ArrowPt1$, $CellContext`ArrowPt2$}]}], \
$CellContext`size4$]; $CellContext`Pane2$ = (Switch[$CellContext`MB$$, 1, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #8, #9, #10, #11, #12, #21, #24, #32}, 
               2, {#, #7, #8, #9, #10, #11, #12, #22, #24, #32}, 
               3, {#, #7, #8, #9, #10, #11, #12, #23, #22, #32}, 
               4, {#, #7, #8, #9, #10, #11, #12, #19, #23, #32}, 
               5, {#, #7, #8, #9, #10, #11, #12, #19, #20, #32}, 
               6, {#, #7, #8, #9, #10, #11, #12, #20, #21, #32}], False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #8, #10, #11, #21, #24, #32}, 
               2, {#, #7, #8, #9, #11, #22, #24, #32}, 
               3, {#, #7, #8, #9, #12, #23, #22, #32}, 
               4, {#, #8, #9, #10, #12, #19, #23, #32}, 
               5, {#, #9, #10, #11, #12, #19, #20, #32}, 
               6, {#, #7, #10, #11, #12, #20, #21, #32}]]], #5], 2, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #9, #13, #14, #15, #26, #27, #32, #35}, 
               2, {#, #9, #13, #14, #15, #26, #27, #32, #35}, 
               3, {#, #9, #13, #14, #15, #25, #27, #32, #35}, 
               4, {#, #9, #13, #14, #15, #25, #27, #32, #35}, 
               5, {#, #9, #13, #14, #15, #25, #26, #32, #35}, 
               6, {#, #9, #13, #14, #15, #25, #26, #32, #35}], False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #9, #13, #26, #27, #32, #35}, 
               2, {#, #9, #13, #26, #27, #32, #35}, 
               3, {#, #9, #14, #25, #27, #32, #35}, 
               4, {#, #9, #14, #25, #27, #32, #35}, 
               5, {#, #9, #15, #25, #26, #32, #35}, 
               6, {#, #9, #15, #25, #26, #32, #35}]]], #5], 3, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}, 
               2, {#, #7, #14, #15, #16, #17, #18, #28, #30, #32, #34}, 
               3, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}, 
               4, {#, #7, #14, #15, #16, #17, #18, #28, #29, #32, #34}, 
               5, {#, #7, #14, #15, #16, #17, #18, #28, #29, #32, #34}, 
               6, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}], 
              False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #14, #15, #16, #29, #30, #32, #34}, 
               2, {#, #7, #14, #15, #17, #28, #30, #32, #34}, 
               3, {#, #7, #14, #15, #16, #29, #30, #32, #34}, 
               4, {#, #7, #14, #15, #18, #28, #29, #32, #34}, 
               5, {#, #7, #14, #15, #18, #28, #29, #32, #34}, 
               6, {#, #7, #14, #15, #16, #29, #30, #32, #34}]]], #5], 4, 
           Show[{#31, #2}, #3], 5, 
           Show[{#31, #2}, #3], 6, 
           Show[{#31, #2}, #3], 7, 
           Show[{#31, #2}, #3], 8, 
           Show[{#31, #2}, #3], 9, 
           Show[{#31, #2}, #3], 10, 
           Row[{
             Show[
              
              Graphics[{#, $CellContext`stagelines$, \
$CellContext`stagelabels$, #32, #33, 
                If[
                 And[$CellContext`MB$$ == 10, $CellContext`solution$$], {
                 Yellow, 
                  Opacity[0.5], $CellContext`Part9Answer$}, {
                  Opacity[0], $CellContext`Part9Answer$}]}, #6]], 
             Show[{#31, #2}, #4]}]]& )[$CellContext`distcolumn$, 
           Graphics[{
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 4], {{
                
                Arrow[{{$CellContext`zf$, $CellContext`zf$ - 
                   0.15}, {$CellContext`zf$, $CellContext`zf$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colF, Background -> White], 
                  Style[
                   Subscript[
                    Style["z", Italic], "feed"], 17, $CellContext`colF, 
                   Background -> 
                   White]}], {$CellContext`zf$, $CellContext`zf$ - 0.19}], {
                
                Arrow[{{$CellContext`xd$, $CellContext`xd$ - 
                   0.15}, {$CellContext`xd$, $CellContext`xd$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colR, Background -> White], 
                  Style[
                   Subscript[
                    Style["x", Italic], "D"], 17, $CellContext`colR, 
                   Background -> 
                   White]}], {$CellContext`xd$, $CellContext`xd$ - 0.19}], {
                
                Arrow[{{$CellContext`xb$ + 0.16, $CellContext`xb$ - 
                   0.05}, {$CellContext`xb$, $CellContext`xb$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colS, Background -> White], 
                  Style[
                   Subscript[
                    Style["x", Italic], "B"], 17, $CellContext`colS, 
                   Background -> White]}], {$CellContext`xb$ + 
                 0.19, $CellContext`xb$ - 0.06}, Left]}], 
             If[$CellContext`MB$$ == 4, {{
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptdist$$, $CellContext`colR]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptdist$$, 1], {2, 2}]}], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`ptdist$$, {1, -2.5}], {
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptbott$$, $CellContext`colS]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptbott$$, 1], {2, 2}]}], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`ptbott$$, {-1, -2.5}], {
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptfeed$$, $CellContext`colF]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptfeed$$, 1], {2, 2}]}], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`ptfeed$$, {1, -2.5}]}], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`zf$, $CellContext`zf$}, \
$CellContext`colF]], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`xd$, $CellContext`xd$}, \
$CellContext`colR]], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`xb$, $CellContext`xb$}, \
$CellContext`colS]], 
             If[$CellContext`MB$$ == 5, 
              Dynamic[{{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`qdot1$$, $CellContext`colF]}, 
                Dynamic[{
                  Opacity[0.6], 
                  $CellContext`pt1[$CellContext`qdot2$$, $CellContext`colF]}], 
                Dynamic[{Dashed, Thick, 
                  Line[{$CellContext`qdot1$$, $CellContext`qdot2$$}]}]}]], 
             If[
              And[$CellContext`MB$$ == 5, $CellContext`solution$$ == False], {
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`qdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`qdot2$$, {0, -2}]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               
               Line[{{$CellContext`xeq$, $CellContext`yeq$}, \
{$CellContext`zf$, $CellContext`zf$}}]}], 
             If[$CellContext`MB$$ > 6, {$CellContext`colF, 
               Thickness[0.006], 
               
               Line[{{$CellContext`xi$, $CellContext`yi$}, {$CellContext`zf$, \
$CellContext`zf$}}]}], 
             If[$CellContext`MB$$ == 6, {Thick, $CellContext`colF, 
               
               Line[{{$CellContext`xeq$, $CellContext`yeq$}, \
{$CellContext`zf$, $CellContext`zf$}}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`TOLdot1$$, \
$CellContext`colR]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`TOLdot2$$, \
$CellContext`colR]}], 
               Dynamic[{Dashed, Thick, 
                 Line[{$CellContext`TOLdot1$$, $CellContext`TOLdot2$$}]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`BOLdot1$$, \
$CellContext`colS]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`BOLdot2$$, \
$CellContext`colS]}], 
               Dynamic[{Dashed, Thick, 
                 Line[{$CellContext`BOLdot1$$, $CellContext`BOLdot2$$}]}]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 6], {
               $CellContext`pt2[{$CellContext`xi$, $CellContext`yi$}, 
                Purple], {
                Opacity[0.5], 
                Thickness[0.01], 
                CapForm["Round"], Blue, {
                 
                 Line[{{$CellContext`xb$, $CellContext`xb$}, \
{$CellContext`xi$, $CellContext`yi$}}], 
                 
                 Line[{{$CellContext`xd$, $CellContext`xd$}, \
{$CellContext`xi$, $CellContext`yi$}}]}}}], 
             If[
              And[$CellContext`MB$$ == 6, $CellContext`solution$$ == False], {
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`TOLdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`TOLdot2$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`BOLdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`BOLdot2$$, {0, -2}]}], 
             If[$CellContext`MB$$ > 6, {
               Thickness[0.006], $CellContext`colS, 
               
               Line[{{$CellContext`xb$, $CellContext`xb$}, {$CellContext`xi$, \
$CellContext`yi$}}], $CellContext`colR, 
               
               Line[{{$CellContext`xd$, $CellContext`xd$}, {$CellContext`xi$, \
$CellContext`yi$}}]}], 
             If[
              
              Or[$CellContext`MB$$ == 7, $CellContext`MB$$ == 
               8, $CellContext`MB$$ == 9], {
               Dynamic[{Dashed, 
                 Thickness[0.008], 
                 RGBColor[0.9, 0.3, 0], 
                 
                 Line[{$CellContext`horizontalpt1, \
$CellContext`horizontalpt2}], 
                 
                 Line[{$CellContext`verticalpt1, \
$CellContext`horizontalpt2}]}], 
               $CellContext`pt1[$CellContext`stage1guessA$$, Blue], {Black, 
                PointSize[0.045], 
                
                Point[{Part[$CellContext`horizontalpt2, 1] - 0.03, 
                  Part[$CellContext`horizontalpt2, 2] + 0.04}], White, 
                PointSize[0.042], 
                
                Point[{Part[$CellContext`horizontalpt2, 1] - 0.03, 
                  Part[$CellContext`horizontalpt2, 2] + 0.04}]}, 
               Text[
                Style[
                 If[
                  Or[$CellContext`MB$$ == 7, $CellContext`MB$$ == 8], 
                  ToString[$CellContext`MB$$ - 6], 
                  ToString["R"]], 17], {
                Part[$CellContext`horizontalpt2, 1] - 0.025, 
                 Part[$CellContext`horizontalpt2, 2] + 0.034}]}], 
             If[
              Or[$CellContext`MB$$ == 8, $CellContext`MB$$ == 9], 
              Part[$CellContext`Dotnumbers$, 1]], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 7], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               If[$CellContext`nR$ > 0, 
                Part[$CellContext`Ry$, 1], 
                Part[$CellContext`Sy$, 1]], 
               Part[$CellContext`Rx$, 1]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 8], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               Which[
                And[$CellContext`nR$ == 0, $CellContext`nS$ > 1], {
                 Part[$CellContext`Sy$, 2], 
                 Part[$CellContext`Sx$, 2]}, 
                
                And[$CellContext`nR$ == 0, $CellContext`nS$ == 
                 1], {$CellContext`Sr$, 
                 Part[$CellContext`Sx$, 2]}, 
                And[$CellContext`nR$ == 1, $CellContext`nS$ > 0], {
                 Part[$CellContext`Sy$, 1], 
                 Part[$CellContext`Sx$, 1]}, 
                
                And[$CellContext`nR$ == 1, $CellContext`nS$ == 
                 1], {$CellContext`Sr$, 
                 Part[$CellContext`Rx$, 2]}, $CellContext`nR$ > 1, {
                 Part[$CellContext`Ry$, 2], 
                 Part[$CellContext`Rx$, 2]}]}], 
             If[$CellContext`MB$$ == 8, {Thick, 
               If[$CellContext`nR$ > 0, 
                Part[$CellContext`Ry$, 1], 
                Part[$CellContext`Sy$, 1]], 
               Part[$CellContext`Rx$, 1]}], 
             
             If[$CellContext`MB$$ == 9, {
              Thick, $CellContext`Ry$, $CellContext`Sy$, $CellContext`Rx$, 
               Table[
                
                Part[$CellContext`Sx$, $CellContext`a], {$CellContext`a, 
                 1, $CellContext`nS$}], 
               Part[$CellContext`Dotnumbers$, 
                Span[2, $CellContext`nT$ - 1]]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 9], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, $CellContext`Sr$, 
               Part[$CellContext`Sx$, $CellContext`nS$ + 1]}], 
             If[
              
              And[$CellContext`MB$$ == 4, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0.05}, {1.15, 0.35}]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[$CellContext`zf$, {2, 2}]}], 
                 17, $CellContext`colF], {0.7, 0.3}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[$CellContext`xd$, {2, 2}]}], 
                 17, $CellContext`colR], {0.7, 0.2}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[$CellContext`xb$, {2, 2}]}], 
                 17, $CellContext`colS], {0.7, 0.1}, Left]}], 
             If[
              
              And[$CellContext`MB$$ == 5, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0.4}, {1.15, 0.6}]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0.7, 0.55}, 
                Left], 
               Text[
                Style[
                 StringJoin["quality = ", 
                  ToString[
                   NumberForm[$CellContext`q$, {3, 2}]], ""], 17], {0.7, 
                0.45}, Left]}], 
             If[
              
              And[$CellContext`MB$$ == 6, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0}, {1.15, 0.6}]}, 
               Text[
                Style[
                 Row[{
                   Style["L", Italic], " = ", 
                   NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.55}, Left], 
               Text[
                Style[
                 Row[{
                   Style["V", Italic], " = ", 
                   NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.45}, Left], 
               Text[
                Style[
                 Row[{
                   OverBar[
                    Style["L", Italic]], " = ", 
                   NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.35}, Left], 
               Text[
                Style[
                 Row[{
                   OverBar[
                    Style["V", Italic]], " = ", 
                   NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.25}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[$CellContext`xd$, {2, 2}]}], 17], {0.7, 0.15}, 
                Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[$CellContext`xb$, {2, 2}]}], 17], {0.7, 0.05}, 
                Left]}], 
             If[$CellContext`MB$$ == 10, {$CellContext`Dotnumbers$, Thick, 
               GrayLevel[
               0.4], $CellContext`Ry$, $CellContext`Sy$, $CellContext`Rx$, \
$CellContext`Sr$, 
               Table[
                
                Part[$CellContext`Sx$, $CellContext`a + 1], {$CellContext`a, 
                 0, $CellContext`nS$}]}]}], 
           
           If[$CellContext`showcolumn$$ == 
            True, $CellContext`size2$, $CellContext`size1$], \
$CellContext`size2$, $CellContext`size3$, $CellContext`size4$, 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 AnyTrue[{4, 5}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct feed rate = \n\t\t", 
                Row[{"feed rate (", 
                  Style["F", Italic], ") = "}]], 
               NumberForm[$CellContext`F$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               AnyTrue[{4, 5}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              
              AnyTrue[{4, 
               5}, # == $CellContext`RandomizeValuesShown$& ]], {-30, 
             26}, {-28.5, 40}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{5, 6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["z", Italic], "feed"], " = "}], 
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = "}]], 
               NumberForm[$CellContext`zf$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{5, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {-23, 
             68}, {-15, 58}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
                 AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct distillate flow = ", 
                Row[{"distillate flow (", 
                  Style["D", Italic], ") = "}]], 
               ToString[
                NumberForm[$CellContext`distflow$, {3, 2}]], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
               AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
              AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, 60}, {70, 72}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct bottoms flow = ", 
                Row[{"bottoms flow (", 
                  Style["B", Italic], ") = "}]], 
               ToString[
                NumberForm[$CellContext`botflow$, {3, 2}]], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, 23}, {70, 14}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["x", Italic], "D"]}], 
                Subscript[
                 Style["x", Italic], "D"]], " = ", 
               NumberForm[$CellContext`xd$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], {
             88, 102}, {88, 94}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["x", Italic], "B"]}], 
                Subscript[
                 Style["x", Italic], "B"]], " = ", 
               NumberForm[$CellContext`xb$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, -12}, {70, -3}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{3, 4, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct reflux ratio ", 
                Row[{"reflux ratio (", 
                  Style["L", Italic], "/", 
                  Style["D", Italic], ")"}]], " = ", 
               NumberForm[$CellContext`R$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{3, 4, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{3, 4, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {88, 100}, {
             88, 92}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 AnyTrue[{1, 2, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Style["L", Italic]}], 
                Style["L", Italic]], " = ", 
               NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               
               AnyTrue[{1, 2, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            Which[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              
              AnyTrue[{1, 2, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {70, 
             53}, $CellContext`MB$$ != 3, {29.3, 53}, $CellContext`MB$$ == 
             3, {29.3, 63}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 
                 AnyTrue[{1, 2, 3, 
                  4}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Style["V", Italic]}], 
                Style["V", Italic]], " = ", 
               NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               
               AnyTrue[{1, 2, 3, 
                4}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            Which[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              
              AnyTrue[{1, 2, 3, 
               4}, # == $CellContext`RandomizeValuesShown$& ]], {70, 
             63}, $CellContext`MB$$ != 3, {29.3, 63}, $CellContext`MB$$ == 
             3, {29.3, 73}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{2, 4, 
                  5}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  OverBar[
                   Style["L", Italic]]}], 
                OverBar[
                 Style["L", Italic]]], " = ", 
               NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{2, 4, 
                5}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{2, 4, 
               5}, # == $CellContext`RandomizeValuesShown$& ]], {70, 32}, {
             29.3, 32}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{1, 3, 4, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  OverBar[
                   Style["V", Italic]]}], 
                OverBar[
                 Style["V", Italic]]], " = ", 
               NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{1, 3, 4, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{1, 3, 4, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {70, 40}, {
             29.3, 40}], Left], 
           Text[
            Style[
             StringJoin[
              If[
               And[$CellContext`solution$$ == True, 
                
                AnyTrue[{1, 2, 3, 
                 6}, # == $CellContext`RandomizeValuesShown$& ]], 
               "correct quality = ", "quality = "], 
              ToString[
               NumberForm[$CellContext`q$, {3, 2}]], ""], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{1, 2, 3, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{1, 2, 3, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {-18, 
             68}, {-18, 58}], Left], 
           Text[
            Style[
             Row[{"feed rate (", 
               Style["F", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessA$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {-28.5, 40}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["z", Italic], "feed"], " = ", 
               NumberForm[$CellContext`GuessB$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {-15, 58}, Left], 
           Text[
            Style[
             Row[{"distillate flow (", 
               Style["D", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessC$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {70, 72}, Left], 
           Text[
            Style[
             Row[{"bottoms flow (", 
               Style["B", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessD$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {70, 14}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["x", Italic], "D"], " = ", 
               NumberForm[$CellContext`GuessE$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {88, 94}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["x", Italic], "B"], " = ", 
               NumberForm[$CellContext`GuessF$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {70, -3}, Left], 
           Text[
            Style[
             Row[{"reflux ratio (", 
               Style["L", Italic], "/", 
               Style["D", Italic], ") = ", 
               NumberForm[$CellContext`GuessG$, {3, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {88, 92}, Left], 
           Text[
            Style[
             Row[{
               Style["L", Italic], " = ", 
               NumberForm[$CellContext`GuessH$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 53}, Left], 
           Text[
            Style[
             Row[{
               Style["V", Italic], " = ", 
               NumberForm[$CellContext`GuessI$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 63}, Left], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["L", Italic]], " = ", 
               NumberForm[$CellContext`GuessJ$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 32}, Left], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["V", Italic]], " = ", 
               NumberForm[$CellContext`GuessK$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 40}, Left], 
           Text[
            Style[
             StringJoin["quality = ", 
              ToString[
               NumberForm[$CellContext`GuessL$, {3, 2}]], ""], 17, 
             RGBColor[0, 0.6, 0]], {-18, 58}, Left], 
           Plot[{
             $CellContext`equilb$[$CellContext`x], $CellContext`x}, \
{$CellContext`x, 0, 1}, PlotStyle -> {{Thick, Black}}], {
            Thickness[0.005], 
            Arrow[{$CellContext`ArrowPt1$, $CellContext`ArrowPt2$}]}, 
           Text[
            Style["feed stream", 17], {13, $CellContext`ArrowHeight$$ + 5}], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["L", Italic]], " and ", 
               OverBar[
                Style["V", Italic]], 
               " = liquid and vapor flow\nrates in the stripping (bottom) \
section"}], 17, TextAlignment -> Left], {-24, 0}, Left], 
           Text[
            Style[
             Row[{
               Style["L", Italic], " and ", 
               Style["V", Italic], 
               " = liquid and vapor flow\nrates in the rectifying (top) \
section"}], 17, TextAlignment -> Left], {-24, 0}, 
            Left]]; $CellContext`Value1$ = $CellContext`equilb$[0.6] - 
          0.05; $CellContext`Value2$ = $CellContext`equilb$[0.4] - 0.05; 
        If[$CellContext`showcolumn$$, 
          
          Row[{$CellContext`Pane2$, $CellContext`Pane1$}], \
$CellContext`Pane2$]], 
      "Specifications" :> {{{$CellContext`solution$$, False, "solution"}, {
         True, False}, ControlType -> None}, {{$CellContext`MB$$, 1}, 1, 10, 
         1, ControlType -> None}, {{$CellContext`reset$$, 824}, 1, 10000, 1, 
         ControlType -> None, ControlPlacement -> 1}, {{$CellContext`MB$$, 1},
          1, 10, 1, ControlType -> None, ControlPlacement -> 
         2}, {{$CellContext`stage1guessA$$, {0.5, 0.8261797099333564}}, {{
         0.01, 0.99}, {0.01, 0.99}}, ControlType -> Locator, Appearance -> 
         None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         3}, {{$CellContext`solution$$, False, "solution"}, {True, False}, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         4}, {{$CellContext`hint$$, False, "hint"}, {False, True}, 
         ControlPlacement -> 
         5}, {{$CellContext`showcolumn$$, False, "column"}, {True, False}, 
         ControlPlacement -> 6}, {{$CellContext`Ans1$$, 0, 
          Dynamic[$CellContext`Box1$$]}, 0, 
         Dynamic[$CellContext`Ans1Range$$], 0.01, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], Appearance -> "Labeled",
          ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         7}, {{$CellContext`Ans2$$, 0, 
          Dynamic[$CellContext`Box2$$]}, 0, 
         Dynamic[$CellContext`Ans2Range$$], 0.01, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], Appearance -> "Labeled",
          ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         8}, {{$CellContext`Ans3$$, 0, 
          Dynamic[$CellContext`Box3$$]}, 0, 
         Dynamic[$CellContext`Ans3Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         9}, {{$CellContext`Ans4$$, 0, 
          Dynamic[$CellContext`Box4$$]}, 0, 
         Dynamic[$CellContext`Ans4Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         10}, {{$CellContext`Ans5$$, 0, 
          Dynamic[$CellContext`Box5$$]}, 0, 
         Dynamic[$CellContext`Ans5Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         11}, {{$CellContext`Ans6$$, 0, 
          Dynamic[$CellContext`Box6$$]}, 
         Dynamic[$CellContext`Ans6RangeL$$], 
         Dynamic[$CellContext`Ans6Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         12}, {{$CellContext`ptdist$$, {0.6, 0.6}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         13}, {{$CellContext`ptbott$$, {0.4, 0.4}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         14}, {{$CellContext`ptfeed$$, {0.2, 0.2}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         15}, {{$CellContext`qdot1$$, {0.3, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         16}, {{$CellContext`qdot2$$, {0.1, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         17}, {{$CellContext`BOLdot1$$, {0.3, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         18}, {{$CellContext`BOLdot2$$, {0.1, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         19}, {{$CellContext`TOLdot1$$, {0.3, 0.7}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         20}, {{$CellContext`TOLdot2$$, {0.1, 0.7}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         21}, {{$CellContext`ArrowHeight$$, 50, "feed height"}, 20, 90, 1, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         22}, {{$CellContext`Box1$$, "distillate flow rate"}, 0, ControlType -> 
         None, ControlPlacement -> 23}, {{$CellContext`Box2$$, 
          Row[{"feed composition ", 
            Subscript[
             Style["z", Italic], "feed"]}]}, 0, ControlType -> None, 
         ControlPlacement -> 24}, {{$CellContext`Box3$$, "reflux ratio"}, 0, 
         ControlType -> None, ControlPlacement -> 25}, {{$CellContext`Box4$$, 
          Row[{"liquid flow rate ", 
            Style["L ", Italic]}]}, 0, ControlType -> None, ControlPlacement -> 
         26}, {{$CellContext`Box5$$, 
          Row[{"vapor flow rate ", 
            OverBar[
             Style["V", Italic]]}]}, 0, ControlType -> None, ControlPlacement -> 
         27}, {{$CellContext`Box6$$, "quality "}, 0, ControlType -> None, 
         ControlPlacement -> 
         28}, {{$CellContext`Ans1Range$$, 11.18284719626985}, 0, ControlType -> 
         None, ControlPlacement -> 29}, {{$CellContext`Ans2Range$$, 1}, 0, 
         ControlType -> None, ControlPlacement -> 
         30}, {{$CellContext`Ans3Range$$, 4.326726916414608}, 0, ControlType -> 
         None, ControlPlacement -> 
         31}, {{$CellContext`Ans4Range$$, 6.356745283742073}, 0, ControlType -> 
         None, ControlPlacement -> 
         32}, {{$CellContext`Ans5Range$$, 1.6870284625549337`}, 0, 
         ControlType -> None, ControlPlacement -> 
         33}, {{$CellContext`Ans6Range$$, -1.127}, 0, ControlType -> None, 
         ControlPlacement -> 34}, {{$CellContext`Ans6RangeL$$, 1.127}, 0, 
         ControlType -> None, ControlPlacement -> 
         35}, {{$CellContext`HintTextColumnTrue$$, Null}, 0, ControlType -> 
         None, ControlPlacement -> 36}, 
        Grid[{{
           Button[" new problem ", {
             Increment[$CellContext`reset$$], $CellContext`MB$$ = 
             1, $CellContext`solution$$ = False, $CellContext`hint$$ = False, 
             Clear[$CellContext`lineguess1], $CellContext`Ans1$$ = 
             0, $CellContext`Ans2$$ = 0, $CellContext`Ans3$$ = 
             0, $CellContext`Ans4$$ = 0, $CellContext`Ans5$$ = 
             0, $CellContext`Ans6$$ = 0, $CellContext`showcolumn$$ = 
             False, $CellContext`stage1guessA$$ = {0.5, 
              0.8}, $CellContext`ArrowHeight$$ = 
             50, $CellContext`qdot1$$ = {0.3, 0.9}, $CellContext`qdot2$$ = {
              0.1, 0.9}, $CellContext`ptdist$$ = {0.6, 
              0.7}, $CellContext`ptbott$$ = {0.4, 
              0.3}, $CellContext`ptfeed$$ = {0.2, 
              0.7}, $CellContext`BOLdot1$$ = {0.3, 
              0.9}, $CellContext`BOLdot2$$ = {0.1, 
              0.9}, $CellContext`TOLdot1$$ = {0.3, 
              0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}], 
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           Manipulate`Place[3], 
           PaneSelector[{1 -> Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 2 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 3 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 4 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 5 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 6 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 7 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 8 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 9 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}]}, 
            Dynamic[$CellContext`MB$$]], 
           
           PaneSelector[{
            1 -> "1. Solve for the missing green variables.", 2 -> 
             "2. Solve for the missing green variables.", 3 -> 
             "3. Solve for the missing green variables.", 4 -> 
             Column[{"4. Place the points at their correct", 
                Row[{"locations on the ", 
                  Style["y", Italic], " = ", 
                  Style["x", Italic], " line."}]}], 5 -> Row[{"5. Draw the ", 
                Style["q", Italic], "-line (feed line)."}], 6 -> 
             "6. Move the points to draw the top \n and bottom operating \
lines.", 7 -> "7. Drag the point to locate the first stage.", 8 -> 
             "8. Drag the point to locate the second stage.", 9 -> 
             "9. Drag the point to locate the final stage.", 10 -> 
             "10. Determine the feed stream location."}, 
            Dynamic[$CellContext`MB$$]], 
           Manipulate`Place[4], 
           
           PaneSelector[{
            1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
             Manipulate`Place[5], 5 -> Manipulate`Place[5], 6 -> 
             Manipulate`Place[5], 7 -> Manipulate`Place[5], 8 -> 
             Manipulate`Place[5], 9 -> Manipulate`Place[5], 10 -> 
             Manipulate`Place[5]}, 
            Dynamic[$CellContext`MB$$]], 
           PaneSelector[{5 -> Manipulate`Place[6], 6 -> Manipulate`Place[6]}, 
            Dynamic[$CellContext`MB$$]]}, {
           PaneSelector[{1 -> Grid[{{
                 Manipulate`Place[7], 
                 Manipulate`Place[8]}}], 2 -> Grid[{{
                 Manipulate`Place[9], 
                 Manipulate`Place[10]}}], 3 -> Grid[{{
                 Manipulate`Place[11], 
                 Manipulate`Place[12]}}], 4 -> Row[{
                Manipulate`Place[13], 
                Manipulate`Place[14], 
                Manipulate`Place[15]}], 5 -> Row[{
                Manipulate`Place[16], 
                Manipulate`Place[17], 
                Spacer[{200, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}], 6 -> Row[{
                Manipulate`Place[18], 
                Manipulate`Place[19], 
                Manipulate`Place[20], 
                Manipulate`Place[21], 
                Spacer[{200, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}], 10 -> Row[{
                Manipulate`Place[22], 
                Spacer[{40, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}]}, 
            Dynamic[$CellContext`MB$$]], SpanFromLeft}, {
           Manipulate`Place[23], 
           Manipulate`Place[24], 
           Manipulate`Place[25], 
           Manipulate`Place[26], 
           Manipulate`Place[27], 
           Manipulate`Place[28], 
           Manipulate`Place[29], 
           Manipulate`Place[30], 
           Manipulate`Place[31]}, {
           Manipulate`Place[32], 
           Manipulate`Place[33], 
           Manipulate`Place[34], 
           Manipulate`Place[35], 
           Manipulate`Place[36]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[Subscript] = {NHoldRest}, $CellContext`horizontalpt1 = {
        0.796279548785221, 0.8261797099333564}, $CellContext`horizontalpt2 = {
        0.5000000000000001, 0.8261797099333564}, $CellContext`verticalpt1 = {
        0.5000000000000001, 0.6357142857142858}, $CellContext`colF = 
       RGBColor[0.6, 0.4, 0.2], $CellContext`colR = 
       RGBColor[0, 0.6, 0], $CellContext`colS = Hue[0.9], $CellContext`pt1[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`col, 
          Blank[]]] := {$CellContext`col, 
         PointSize[0.022], 
         Point[$CellContext`pt], White, 
         PointSize[0.018], 
         Point[$CellContext`pt]}, $CellContext`pt2[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`col, 
          Blank[]]] := {$CellContext`col, 
         PointSize[0.022], 
         Point[$CellContext`pt]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->621665024,ExpressionUUID->"c163bb6a-ae5f-48fe-b737-46521bc6abc9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection",ExpressionUUID->"77f531f1-ff01-4186-8cc6-9d556871f6a4"],

Cell["\<\
This Demonstration uses a step-by-step approach to calculate the number of \
stages in a distillation column using the McCabe-Thiele method. Press the \
\"new problem\" button to change the starting conditions. Check the \"hint\" \
box for a hint on how to proceed. After completing each step, check the \
\"solution\" box to see the correct solution, and then click \"next\" for the \
next step. Once you check \"solution\" you cannot change your answer. Also, \
you cannot return to the previous step once you click \"next\".\
\>", "ManipulateCaption",
 CellChangeTimes->{{3.7336127731518774`*^9, 3.7336127759179187`*^9}, {
  3.7349731966784143`*^9, 3.7349731982178793`*^9}, {3.7361711042141275`*^9, 
  3.7361711288769083`*^9}},
 CellID->679420478,ExpressionUUID->"aa44178b-5408-43cc-948b-fa333c9214dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection",ExpressionUUID->"3314508f-b885-46cf-bd1b-cbd4848bbd04"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Ans1$$ = 0, $CellContext`Ans1Range$$ = 
    18.79018435380583, $CellContext`Ans2$$ = 0, $CellContext`Ans2Range$$ = 
    1, $CellContext`Ans3$$ = 0, $CellContext`Ans3Range$$ = 
    4.765399702910578, $CellContext`Ans4$$ = 0, $CellContext`Ans4Range$$ = 
    26.94719638937734, $CellContext`Ans5$$ = 0, $CellContext`Ans5Range$$ = 
    11.88985422266501, $CellContext`Ans6$$ = 0, $CellContext`Ans6Range$$ = 
    14.877110256846878`, $CellContext`Ans6RangeL$$ = 
    0, $CellContext`ArrowHeight$$ = 50, $CellContext`BOLdot1$$ = {0.3, 
    0.9}, $CellContext`BOLdot2$$ = {0.1, 0.9}, $CellContext`Box1$$ = 
    "feed rate ", $CellContext`Box2$$ = Row[{"distillate composition ", 
      Subscript[
       Style["x", Italic], "D"]}], $CellContext`Box3$$ = 
    "reflux ratio", $CellContext`Box4$$ = Row[{"vapor flow rate ", 
      Style["V ", Italic]}], $CellContext`Box5$$ = Row[{"liquid flow rate ", 
      OverBar[
       Style["L", Italic]]}], $CellContext`Box6$$ = Row[{"vapor flow rate ", 
      OverBar[
       Style["V", Italic]]}], $CellContext`hint$$ = 
    False, $CellContext`HintTextColumnTrue$$ = Null, $CellContext`MB$$ = 
    1, $CellContext`ptbott$$ = {0.4, 0.4}, $CellContext`ptdist$$ = {0.6, 
    0.6}, $CellContext`ptfeed$$ = {0.2, 0.2}, $CellContext`qdot1$$ = {0.3, 
    0.9}, $CellContext`qdot2$$ = {0.1, 0.9}, $CellContext`reset$$ = 
    482, $CellContext`showcolumn$$ = False, $CellContext`solution$$ = 
    False, $CellContext`stage1guessA$$ = {0.5, 
    0.8301777345250619}, $CellContext`TOLdot1$$ = {0.3, 
    0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {{
       Hold[$CellContext`MB$$], 1}, 1, 10, 1}, {{
       Hold[$CellContext`reset$$], 482}, 1, 10000, 1}, {{
       Hold[$CellContext`MB$$], 1}, 1, 10, 1}, {{
       Hold[$CellContext`stage1guessA$$], {0.5, 0.8301777345250619}}, {{0.01, 
      0.99}, {0.01, 0.99}}}, {{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {{
       Hold[$CellContext`hint$$], False, "hint"}, {False, True}}, {{
       Hold[$CellContext`showcolumn$$], False, "column"}, {True, False}}, {{
       Hold[$CellContext`Ans1$$], 0, 
       Dynamic[$CellContext`Box1$$]}, 0, 
      Dynamic[$CellContext`Ans1Range$$], 0.01}, {{
       Hold[$CellContext`Ans2$$], 0, 
       Dynamic[$CellContext`Box2$$]}, 0, 
      Dynamic[$CellContext`Ans2Range$$], 0.01}, {{
       Hold[$CellContext`Ans3$$], 0, 
       Dynamic[$CellContext`Box3$$]}, 0, 
      Dynamic[$CellContext`Ans3Range$$], 0.01}, {{
       Hold[$CellContext`Ans4$$], 0, 
       Dynamic[$CellContext`Box4$$]}, 0, 
      Dynamic[$CellContext`Ans4Range$$], 0.01}, {{
       Hold[$CellContext`Ans5$$], 0, 
       Dynamic[$CellContext`Box5$$]}, 0, 
      Dynamic[$CellContext`Ans5Range$$], 0.01}, {{
       Hold[$CellContext`Ans6$$], 0, 
       Dynamic[$CellContext`Box6$$]}, 
      Dynamic[$CellContext`Ans6RangeL$$], 
      Dynamic[$CellContext`Ans6Range$$], 0.01}, {{
       Hold[$CellContext`ptdist$$], {0.6, 0.6}}, Automatic}, {{
       Hold[$CellContext`ptbott$$], {0.4, 0.4}}, Automatic}, {{
       Hold[$CellContext`ptfeed$$], {0.2, 0.2}}, Automatic}, {{
       Hold[$CellContext`qdot1$$], {0.3, 0.9}}, Automatic}, {{
       Hold[$CellContext`qdot2$$], {0.1, 0.9}}, Automatic}, {{
       Hold[$CellContext`BOLdot1$$], {0.3, 0.9}}, Automatic}, {{
       Hold[$CellContext`BOLdot2$$], {0.1, 0.9}}, Automatic}, {{
       Hold[$CellContext`TOLdot1$$], {0.3, 0.7}}, Automatic}, {{
       Hold[$CellContext`TOLdot2$$], {0.1, 0.7}}, Automatic}, {{
       Hold[$CellContext`ArrowHeight$$], 50, "feed height"}, 20, 90, 1}, {{
       Hold[$CellContext`Box1$$], "feed rate "}, 0}, {{
       Hold[$CellContext`Box2$$], 
       Row[{"distillate composition ", 
         Subscript[
          Style["x", Italic], "D"]}]}, 0}, {{
       Hold[$CellContext`Box3$$], "reflux ratio"}, 0}, {{
       Hold[$CellContext`Box4$$], 
       Row[{"vapor flow rate ", 
         Style["V ", Italic]}]}, 0}, {{
       Hold[$CellContext`Box5$$], 
       Row[{"liquid flow rate ", 
         OverBar[
          Style["L", Italic]]}]}, 0}, {{
       Hold[$CellContext`Box6$$], 
       Row[{"vapor flow rate ", 
         OverBar[
          Style["V", Italic]]}]}, 0}, {{
       Hold[$CellContext`Ans1Range$$], 18.79018435380583}, 0}, {{
       Hold[$CellContext`Ans2Range$$], 1}, 0}, {{
       Hold[$CellContext`Ans3Range$$], 4.765399702910578}, 0}, {{
       Hold[$CellContext`Ans4Range$$], 26.94719638937734}, 0}, {{
       Hold[$CellContext`Ans5Range$$], 11.88985422266501}, 0}, {{
       Hold[$CellContext`Ans6Range$$], 14.877110256846878`}, 0}, {{
       Hold[$CellContext`Ans6RangeL$$], 0}, 0}, {{
       Hold[$CellContext`HintTextColumnTrue$$], Null}, 0}, {
      Hold[
       Grid[{{
          Button[" new problem ", {
            Increment[$CellContext`reset$$], $CellContext`MB$$ = 
            1, $CellContext`solution$$ = False, $CellContext`hint$$ = False, 
            Clear[$CellContext`lineguess1], $CellContext`Ans1$$ = 
            0, $CellContext`Ans2$$ = 0, $CellContext`Ans3$$ = 
            0, $CellContext`Ans4$$ = 0, $CellContext`Ans5$$ = 
            0, $CellContext`Ans6$$ = 0, $CellContext`showcolumn$$ = 
            False, $CellContext`stage1guessA$$ = {0.5, 
             0.8}, $CellContext`ArrowHeight$$ = 
            50, $CellContext`qdot1$$ = {0.3, 0.9}, $CellContext`qdot2$$ = {
             0.1, 0.9}, $CellContext`ptdist$$ = {0.6, 
             0.7}, $CellContext`ptbott$$ = {0.4, 
             0.3}, $CellContext`ptfeed$$ = {0.2, 
             0.7}, $CellContext`BOLdot1$$ = {0.3, 
             0.9}, $CellContext`BOLdot2$$ = {0.1, 
             0.9}, $CellContext`TOLdot1$$ = {0.3, 
             0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}], 
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          PaneSelector[{1 -> Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 2 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 3 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 4 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 5 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 6 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 7 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 8 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 9 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}]}, 
           Dynamic[$CellContext`MB$$]], 
          
          PaneSelector[{
           1 -> "1. Solve for the missing green variables.", 2 -> 
            "2. Solve for the missing green variables.", 3 -> 
            "3. Solve for the missing green variables.", 4 -> 
            Column[{"4. Place the points at their correct", 
               Row[{"locations on the ", 
                 Style["y", Italic], " = ", 
                 Style["x", Italic], " line."}]}], 5 -> Row[{"5. Draw the ", 
               Style["q", Italic], "-line (feed line)."}], 6 -> 
            "6. Move the points to draw the top \n and bottom operating \
lines.", 7 -> "7. Drag the point to locate the first stage.", 8 -> 
            "8. Drag the point to locate the second stage.", 9 -> 
            "9. Drag the point to locate the final stage.", 10 -> 
            "10. Determine the feed stream location."}, 
           Dynamic[$CellContext`MB$$]], 
          Manipulate`Place[4], 
          
          PaneSelector[{
           1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
            Manipulate`Place[5], 5 -> Manipulate`Place[5], 6 -> 
            Manipulate`Place[5], 7 -> Manipulate`Place[5], 8 -> 
            Manipulate`Place[5], 9 -> Manipulate`Place[5], 10 -> 
            Manipulate`Place[5]}, 
           Dynamic[$CellContext`MB$$]], 
          PaneSelector[{5 -> Manipulate`Place[6], 6 -> Manipulate`Place[6]}, 
           Dynamic[$CellContext`MB$$]]}, {
          PaneSelector[{1 -> Grid[{{
                Manipulate`Place[7], 
                Manipulate`Place[8]}}], 2 -> Grid[{{
                Manipulate`Place[9], 
                Manipulate`Place[10]}}], 3 -> Grid[{{
                Manipulate`Place[11], 
                Manipulate`Place[12]}}], 4 -> Row[{
               Manipulate`Place[13], 
               Manipulate`Place[14], 
               Manipulate`Place[15]}], 5 -> Row[{
               Manipulate`Place[16], 
               Manipulate`Place[17], 
               Spacer[{200, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}], 6 -> Row[{
               Manipulate`Place[18], 
               Manipulate`Place[19], 
               Manipulate`Place[20], 
               Manipulate`Place[21], 
               Spacer[{200, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}], 10 -> Row[{
               Manipulate`Place[22], 
               Spacer[{40, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}]}, 
           Dynamic[$CellContext`MB$$]], SpanFromLeft}, {
          Manipulate`Place[23], 
          Manipulate`Place[24], 
          Manipulate`Place[25], 
          Manipulate`Place[26], 
          Manipulate`Place[27], 
          Manipulate`Place[28], 
          Manipulate`Place[29], 
          Manipulate`Place[30], 
          Manipulate`Place[31]}, {
          Manipulate`Place[32], 
          Manipulate`Place[33], 
          Manipulate`Place[34], 
          Manipulate`Place[35], 
          Manipulate`Place[36]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`solution$9966$$ = False, $CellContext`MB$9967$$ = 
    0, $CellContext`reset$9968$$ = 0, $CellContext`stage1guessA$9969$$ = 
    False, $CellContext`hint$9970$$ = False, $CellContext`showcolumn$9971$$ = 
    False, $CellContext`Ans1$9972$$ = 0, $CellContext`Ans2$9973$$ = 
    0, $CellContext`Ans3$9974$$ = 0, $CellContext`Ans4$9975$$ = 
    0, $CellContext`Ans5$9976$$ = 0, $CellContext`Ans6$9977$$ = 
    0, $CellContext`ArrowHeight$9978$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`Ans1$$ = 0, $CellContext`Ans1Range$$ = 
        18.79018435380583, $CellContext`Ans2$$ = 0, $CellContext`Ans2Range$$ = 
        1, $CellContext`Ans3$$ = 0, $CellContext`Ans3Range$$ = 
        4.765399702910578, $CellContext`Ans4$$ = 0, $CellContext`Ans4Range$$ = 
        26.94719638937734, $CellContext`Ans5$$ = 0, $CellContext`Ans5Range$$ = 
        11.88985422266501, $CellContext`Ans6$$ = 0, $CellContext`Ans6Range$$ = 
        14.877110256846878`, $CellContext`Ans6RangeL$$ = 
        0, $CellContext`ArrowHeight$$ = 
        50, $CellContext`BOLdot1$$ = {0.3, 0.9}, $CellContext`BOLdot2$$ = {
         0.1, 0.9}, $CellContext`Box1$$ = "feed rate ", $CellContext`Box2$$ = 
        Row[{"distillate composition ", 
           Subscript[
            Style["x", Italic], "D"]}], $CellContext`Box3$$ = 
        "reflux ratio", $CellContext`Box4$$ = Row[{"vapor flow rate ", 
           Style["V ", Italic]}], $CellContext`Box5$$ = 
        Row[{"liquid flow rate ", 
           OverBar[
            Style["L", Italic]]}], $CellContext`Box6$$ = 
        Row[{"vapor flow rate ", 
           OverBar[
            Style["V", Italic]]}], $CellContext`hint$$ = 
        False, $CellContext`HintTextColumnTrue$$ = Null, $CellContext`MB$$ = 
        1, $CellContext`ptbott$$ = {0.4, 0.4}, $CellContext`ptdist$$ = {0.6, 
         0.6}, $CellContext`ptfeed$$ = {0.2, 0.2}, $CellContext`qdot1$$ = {
         0.3, 0.9}, $CellContext`qdot2$$ = {0.1, 0.9}, $CellContext`reset$$ = 
        482, $CellContext`showcolumn$$ = False, $CellContext`solution$$ = 
        False, $CellContext`stage1guessA$$ = {0.5, 
         0.8301777345250619}, $CellContext`TOLdot1$$ = {0.3, 
         0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}, "ControllerVariables" :> {
        Hold[$CellContext`solution$$, $CellContext`solution$9966$$, False], 
        Hold[$CellContext`MB$$, $CellContext`MB$9967$$, 0], 
        Hold[$CellContext`reset$$, $CellContext`reset$9968$$, 0], 
        Hold[$CellContext`stage1guessA$$, $CellContext`stage1guessA$9969$$, 
         False], 
        Hold[$CellContext`hint$$, $CellContext`hint$9970$$, False], 
        Hold[$CellContext`showcolumn$$, $CellContext`showcolumn$9971$$, 
         False], 
        Hold[$CellContext`Ans1$$, $CellContext`Ans1$9972$$, 0], 
        Hold[$CellContext`Ans2$$, $CellContext`Ans2$9973$$, 0], 
        Hold[$CellContext`Ans3$$, $CellContext`Ans3$9974$$, 0], 
        Hold[$CellContext`Ans4$$, $CellContext`Ans4$9975$$, 0], 
        Hold[$CellContext`Ans5$$, $CellContext`Ans5$9976$$, 0], 
        Hold[$CellContext`Ans6$$, $CellContext`Ans6$9977$$, 0], 
        Hold[$CellContext`ArrowHeight$$, $CellContext`ArrowHeight$9978$$, 0]},
       "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`\[Gamma]1$, $CellContext`\[Gamma]2$, \
$CellContext`A12$, $CellContext`A21$, $CellContext`ArrowPt1$, \
$CellContext`ArrowPt2$, $CellContext`BOLintercept$, $CellContext`BOLslope$, \
$CellContext`botflow$, $CellContext`CoordA$, $CellContext`CoordB$, \
$CellContext`CoordC$, $CellContext`CoordD$, $CellContext`CoordE$, \
$CellContext`CoordF$, $CellContext`CoordG$, $CellContext`CoordH$, \
$CellContext`CoordI$, $CellContext`CoordJ$, $CellContext`CoordK$, \
$CellContext`CoordL$, $CellContext`distcolumn$, $CellContext`distflow$, \
$CellContext`Dotnumbers$, $CellContext`equilb$, $CellContext`F$, \
$CellContext`feed$, $CellContext`Feedstate$, $CellContext`GuessA$, \
$CellContext`GuessB$, $CellContext`GuessC$, $CellContext`GuessD$, \
$CellContext`GuessE$, $CellContext`GuessF$, $CellContext`GuessG$, \
$CellContext`GuessH$, $CellContext`GuessI$, $CellContext`GuessJ$, \
$CellContext`GuessK$, $CellContext`GuessL$, $CellContext`i$, $CellContext`L$, \
$CellContext`Lbar$, $CellContext`LeftLimit$, $CellContext`MissingA$, \
$CellContext`MissingB$, $CellContext`MissingC$, $CellContext`MissingD$, \
$CellContext`MissingE$, $CellContext`MissingF$, $CellContext`MissingG$, \
$CellContext`MissingH$, $CellContext`MissingI$, $CellContext`MissingJ$, \
$CellContext`MissingK$, $CellContext`MissingL$, $CellContext`nR$, \
$CellContext`nS$, $CellContext`nT$, $CellContext`opertRect$, \
$CellContext`opertStrp$, $CellContext`P$, $CellContext`Pane1$, \
$CellContext`Pane2$, $CellContext`Part9Answer$, $CellContext`plotlabel$, \
$CellContext`q$, $CellContext`R$, $CellContext`RandomizeValuesShown$, \
$CellContext`rect$, $CellContext`rectnumbers$, $CellContext`RightLimit$, \
$CellContext`Rmin$, $CellContext`Rx$, $CellContext`Ry$, $CellContext`size1$, \
$CellContext`size2$, $CellContext`size3$, $CellContext`size4$, \
$CellContext`Sr$, $CellContext`stagelabels$, $CellContext`stagelines$, \
$CellContext`strip$, $CellContext`Sx$, $CellContext`Sy$, $CellContext`T$, \
$CellContext`tb$, $CellContext`V$, $CellContext`Value1$, \
$CellContext`Value2$, $CellContext`Vbar$, $CellContext`VPa$, \
$CellContext`VPb$, $CellContext`x1$, $CellContext`x2$, $CellContext`xb$, \
$CellContext`xd$, $CellContext`xeq$, $CellContext`xi$, $CellContext`xR$, \
$CellContext`xS$, $CellContext`y1$, $CellContext`y2$, $CellContext`yeq$, \
$CellContext`yi$, $CellContext`yR$, $CellContext`yS$, $CellContext`zf$}, 
        SeedRandom[$CellContext`reset$$]; $CellContext`A12$ = 
         RandomReal[]; $CellContext`A21$ = 
         RandomReal[{-0.5, 1}]; $CellContext`P$ = 
         RandomReal[{100, 300}]; $CellContext`q$ = 
         RandomChoice[{-0.2, 0.05, 0.22, 0.49, 0.75, 0.95, 
           1.13}]; $CellContext`zf$ = 
         RandomInteger[{30, 70}]/100.; $CellContext`F$ = 
         RandomInteger[{100, 1000}]/100.; $CellContext`xd$ = 
         RandomInteger[{85, 92}]/100.; $CellContext`xb$ = 
         RandomInteger[{5, 12}]/100.; $CellContext`VPa$ = 
         10^(8.08097 - 1582.271/($CellContext`T$ + 
           239.726)); $CellContext`VPb$ = 
         10^(8.07131 - 1730.63/($CellContext`T$ + 233.426)); 
        Clear[$CellContext`T$, $CellContext`i$]; $CellContext`\[Gamma]1$[
           Pattern[$CellContext`i$, 
            Blank[]]] = 
         Exp[$CellContext`x2$[$CellContext`i$]^2 ($CellContext`A12$ + 
            2 ($CellContext`A21$ - $CellContext`A12$) (
              1 - $CellContext`x2$[$CellContext`i$]))]; \
$CellContext`\[Gamma]2$[
           Pattern[$CellContext`i$, 
            Blank[]]] = 
         Exp[(1 - $CellContext`x2$[$CellContext`i$])^2 ($CellContext`A21$ + 
            2 ($CellContext`A12$ - $CellContext`A21$) \
$CellContext`x2$[$CellContext`i$])]; $CellContext`i$ = 0; 
        While[$CellContext`i$ < 
          101, {$CellContext`x2$[$CellContext`i$] = $CellContext`i$ 
            0.01, $CellContext`T$[$CellContext`i$] = Part[
             
             FindRoot[$CellContext`P$ == $CellContext`VPb$ $CellContext`\
\[Gamma]1$[$CellContext`i$] (
                 1 - $CellContext`x2$[$CellContext`i$]) + $CellContext`VPa$ \
$CellContext`\[Gamma]2$[$CellContext`i$] $CellContext`x2$[$CellContext`i$], \
{$CellContext`T$, 60}, AccuracyGoal -> 3], 1, 
             2], $CellContext`y2$[$CellContext`i$] = 
           ReplaceAll[$CellContext`x2$[$CellContext`i$] + ($CellContext`VPa$ \
$CellContext`\[Gamma]2$[$CellContext`i$] \
($CellContext`x2$[$CellContext`i$]/$CellContext`P$) - \
$CellContext`x2$[$CellContext`i$]), $CellContext`T$ -> \
$CellContext`T$[$CellContext`i$]], 
           Increment[$CellContext`i$]}]; $CellContext`tb$ = Table[{
            $CellContext`x2$[$CellContext`i$], 
            $CellContext`y2$[$CellContext`i$]}, {$CellContext`i$, 0, 
            100}]; $CellContext`equilb$ = Quiet[
           Interpolation[$CellContext`tb$]]; $CellContext`feed$[
           Pattern[$CellContext`x$, 
            Blank[]]] := $CellContext`q$ ($CellContext`x$/($CellContext`q$ - 
            1)) - $CellContext`zf$/($CellContext`q$ - 1); $CellContext`xeq$ = 
         ReplaceAll[$CellContext`x, 
           Quiet[
            
            FindRoot[$CellContext`feed$[$CellContext`x] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, $CellContext`zf$}]]]; \
$CellContext`yeq$ = $CellContext`feed$[$CellContext`xeq$]; \
$CellContext`opertRect$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := $CellContext`yeq$ + (($CellContext`x$ - \
$CellContext`xeq$)/($CellContext`xd$ - $CellContext`xeq$)) ($CellContext`xd$ - \
$CellContext`yeq$); $CellContext`opertStrp$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := $CellContext`yeq$ + (($CellContext`x$ - \
$CellContext`xeq$)/($CellContext`xb$ - $CellContext`xeq$)) ($CellContext`xb$ - \
$CellContext`yeq$); $CellContext`Rmin$ = (($CellContext`xd$ - \
$CellContext`yeq$)/($CellContext`xd$ - $CellContext`xeq$))/(
          1 - ($CellContext`xd$ - $CellContext`yeq$)/($CellContext`xd$ - \
$CellContext`xeq$)); $CellContext`R$ = 
         If[$CellContext`Rmin$ < 1, $CellContext`Rmin$ = 
           RandomInteger[{13, 18}]/10., $CellContext`Rmin$ (
            RandomInteger[{15, 20}]/10.)]; $CellContext`rect$[
           Pattern[$CellContext`x$, 
            Blank[]]] := ($CellContext`R$/($CellContext`R$ + 
            1)) $CellContext`x$ + $CellContext`xd$/($CellContext`R$ + 
           1); $CellContext`xi$ = ReplaceAll[$CellContext`x, 
           Quiet[
            
            FindRoot[$CellContext`feed$[$CellContext`x] == \
$CellContext`rect$[$CellContext`x], {$CellContext`x, 
              0.7}]]]; $CellContext`yi$ = \
$CellContext`rect$[$CellContext`xi$]; $CellContext`strip$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := ($CellContext`Lbar$/$CellContext`Vbar$) \
$CellContext`x$ - ($CellContext`Lbar$/$CellContext`Vbar$ - 
           1) $CellContext`xb$; $CellContext`distflow$ = 
         ReplaceAll[$CellContext`Dflow, 
           Part[
            
            Solve[{$CellContext`zf$ $CellContext`F$ == $CellContext`xd$ \
$CellContext`Dflow + $CellContext`xb$ $CellContext`Bflow, $CellContext`F$ == \
$CellContext`Dflow + $CellContext`Bflow}, {$CellContext`Dflow, \
$CellContext`Bflow}], 
            1]]; $CellContext`botflow$ = $CellContext`F$ - \
$CellContext`distflow$; $CellContext`L$ = $CellContext`distflow$ \
$CellContext`R$; $CellContext`V$ = $CellContext`distflow$ + $CellContext`L$; \
$CellContext`Lbar$ = $CellContext`L$ + $CellContext`q$ $CellContext`F$; \
$CellContext`Vbar$ = $CellContext`V$ - (
           1 - $CellContext`q$) $CellContext`F$; $CellContext`i$ = 
         0; $CellContext`yR$[0] = $CellContext`xd$; $CellContext`xR$[
          0] = $CellContext`xd$; 
        While[$CellContext`xR$[$CellContext`i$] > $CellContext`xi$, \
{$CellContext`x1$ = ReplaceAll[$CellContext`x, 
             Quiet[
              
              FindRoot[$CellContext`yR$[$CellContext`i$] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, \
$CellContext`xR$[$CellContext`i$] - 
                0.1}]]], $CellContext`y1$ = \
$CellContext`rect$[$CellContext`x1$], 
           If[
            Or[$CellContext`x1$ > $CellContext`xi$, 
             
             And[$CellContext`x1$ < $CellContext`xi$, $CellContext`i$ < 
              1]], {$CellContext`xR$[$CellContext`i$ + 
               1] = $CellContext`x1$, $CellContext`yR$[$CellContext`i$ + 
               1] = $CellContext`y1$}], 
           
           Increment[$CellContext`i$], $CellContext`nR$ = $CellContext`i$ - 
            1}]; $CellContext`i$ = 
         0; $CellContext`yS$[
          0] = $CellContext`yR$[$CellContext`nR$]; $CellContext`xS$[
          0] = $CellContext`xR$[$CellContext`nR$]; 
        While[$CellContext`xS$[$CellContext`i$] >= $CellContext`xb$, \
{$CellContext`x1$ = ReplaceAll[$CellContext`x, 
             Quiet[
              
              FindRoot[$CellContext`yS$[$CellContext`i$] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, \
$CellContext`xS$[$CellContext`i$] - 
                0.1}]]], $CellContext`y1$ = \
$CellContext`strip$[$CellContext`x1$], $CellContext`xS$[$CellContext`i$ + 
             1] = $CellContext`x1$, $CellContext`yS$[$CellContext`i$ + 
             1] = $CellContext`y1$, 
           Increment[$CellContext`i$]}]; $CellContext`nS$ = $CellContext`i$ - 
          1; $CellContext`nT$ = $CellContext`nR$ + $CellContext`nS$ + 
          1; $CellContext`Ry$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xR$[#], 
                $CellContext`yR$[# - 1]}, {
                $CellContext`xR$[#], 
                $CellContext`yR$[#]}}]& , 
             Range[$CellContext`nR$]]}, 
           Map[Line[{{
               $CellContext`xR$[#], 
               $CellContext`yR$[# - 1]}, {
               $CellContext`xR$[#], 
               $CellContext`yR$[#]}}]& , 
            Range[$CellContext`nR$]]]; $CellContext`Rx$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xR$[#], 
                $CellContext`yR$[#]}, {
                $CellContext`xR$[# + 1], 
                $CellContext`yR$[#]}}]& , 
             If[$CellContext`nR$ >= 1, 
              Range[0, $CellContext`nR$ - 1], {0}]]}, 
           Map[Line[{{
               $CellContext`xR$[#], 
               $CellContext`yR$[#]}, {
               $CellContext`xR$[# + 1], 
               $CellContext`yR$[#]}}]& , 
            If[$CellContext`nR$ >= 1, 
             Range[0, $CellContext`nR$ - 1], {0}]]]; $CellContext`Sy$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xS$[# + 1], 
                $CellContext`yS$[#]}, {
                $CellContext`xS$[# + 1], 
                $CellContext`yS$[# + 1]}}]& , 
             Range[0, $CellContext`nS$ - 1]]}, 
           Map[Line[{{
               $CellContext`xS$[# + 1], 
               $CellContext`yS$[#]}, {
               $CellContext`xS$[# + 1], 
               $CellContext`yS$[# + 1]}}]& , 
            Range[0, $CellContext`nS$ - 1]]]; $CellContext`Sx$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xS$[# - 1], 
                $CellContext`yS$[# - 1]}, {
                $CellContext`xS$[#], 
                $CellContext`yS$[# - 1]}}]& , 
             Range[$CellContext`nS$ + 1]]}, 
           Map[Line[{{
               $CellContext`xS$[# - 1], 
               $CellContext`yS$[# - 1]}, {
               $CellContext`xS$[#], 
               $CellContext`yS$[# - 1]}}]& , 
            Range[$CellContext`nS$ + 1]]]; $CellContext`Sr$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Line[{{
               $CellContext`xS$[$CellContext`nS$ + 1], 
               $CellContext`yS$[$CellContext`nS$]}, {
               $CellContext`xS$[$CellContext`nS$ + 1], 0}}]}, 
           Line[{{
              $CellContext`xS$[$CellContext`nS$ + 1], 
              $CellContext`yS$[$CellContext`nS$]}, {
              $CellContext`xS$[$CellContext`nS$ + 1], 
              0}}]]; $CellContext`Dotnumbers$ = Table[
           Text[
            Framed[
             Style[
              
              If[$CellContext`a < $CellContext`nT$ - 1, $CellContext`a + 1, 
               "R"], 17], Background -> White, 
             FrameMargins -> {{6, 4}, {0, 0}}, RoundingRadius -> 25, 
             FrameStyle -> Thin], 
            Which[$CellContext`a == 0, {
              If[$CellContext`nR$ > 0, 
               $CellContext`xR$[1], 
               $CellContext`xS$[1]], 
              $CellContext`yR$[0]}, 
             And[$CellContext`a == 1, $CellContext`nR$ == 0], {
              $CellContext`xS$[2], 
              $CellContext`yS$[1]}, $CellContext`a < $CellContext`nR$, {
              $CellContext`xR$[$CellContext`a + 1], 
              $CellContext`yR$[$CellContext`a]}, $CellContext`a == \
$CellContext`nR$, {
              $CellContext`xS$[1], 
              $CellContext`yS$[0]}, 
             
             Inequality[$CellContext`nR$, Less, $CellContext`a, 
              LessEqual, $CellContext`nT$ - 1], {
              $CellContext`xS$[$CellContext`a - $CellContext`nR$ + 1], 
              $CellContext`yS$[$CellContext`a - $CellContext`nR$]}], {
            1.2, -0.8}], {$CellContext`a, 0, $CellContext`nT$ - 
            1}]; $CellContext`plotlabel$ = Switch[$CellContext`MB$$, 1, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"equations: ", 
                Style["F", Italic], " = ", 
                Style["B", Italic], " + ", 
                Style["D", Italic], " and ", 
                Style["F", Italic], 
                Subscript[
                 Style["z", Italic], "feed"], " = ", 
                Subscript[
                 Style["x", Italic], "B"], 
                Style["B", Italic], " + ", 
                Subscript[
                 Style["x", Italic], "D"], 
                Style["D", Italic]}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do an overall balance and a component balance."}]], 2, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Equations: ", 
                Style["V ", Italic], "= ", 
                Style["L", Italic], " + ", 
                Style["D", Italic], " and ", 
                Style["L", Italic], " / ", 
                Style["D", Italic], " = reflux ratio."}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do a mass balance around the condenser."}]], 3, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Equations: ", 
                Style["V - ", Italic], 
                OverBar[
                 Style["V", Italic]], " + " Style["L ", Italic], "= ", 
                Style["V ", Italic], "+ ", 
                OverBar[
                 Style["L", Italic]], "      and      q = (", 
                OverBar[
                 Style["L", Italic]], 
                Style[" - L)/F.", Italic]}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do a mass balance around the feed stage."}]], 4, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{
                Style["x", Italic], " and ", 
                Style["y", Italic], 
                " coordinates should equal their respective \
compositions."}]}]], 5, 
           Which[
            
            And[$CellContext`solution$$ == True, $CellContext`showcolumn$$ == 
             False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Style["q", Italic], "-line equation: ", 
              Subscript[
               Style["y", Italic], "F"], " - ((", 
              Style["q", Italic], "/", 
              Style["q", Italic], "-1)x -(", 
              Subscript[
               Style["z", Italic], "feed"], "/(", 
              Style["q", Italic], "-1))."}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True, $CellContext`showcolumn$$ == False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Style["q", Italic], "-line slope: ", 
              Style["q", Italic], "/(", 
              Style["q", Italic], "-1)"}], $CellContext`showcolumn$$ == True, 
            ""], 6, 
           Which[
            
            And[$CellContext`solution$$ == True, $CellContext`showcolumn$$ == 
             False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Subscript[
               Style["y", Italic], "top"], " = (", 
              Style["L", Italic], "/", 
              Style["V", Italic], ")x + (1-(", 
              Style["L", Italic], "/", 
              Style["V", Italic], ")", 
              Subscript[
               Style["x", Italic], "D"], " and ", 
              Subscript["y", "bot"], " = (", 
              OverBar[
               Style["L", Italic]], "/", 
              OverBar[
               Style["V", Italic]], ")", 
              Style["x", Italic], " + (1-(", 
              OverBar[
               Style["L", Italic]], "/", 
              OverBar[
               Style["V", Italic]], ")", 
              Subscript[
               Style["x", Italic], "B"], ")."}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False, $CellContext`showcolumn$$ == False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True, $CellContext`showcolumn$$ == False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Slope of the top operating line = (", 
                Style["L", Italic], "/", 
                Style["V", Italic], ") and bottom operating line = (", 
                OverBar[
                 Style["L", Italic]], "/", 
                OverBar[
                 Style["V", Italic]], ")."}]}], $CellContext`showcolumn$$ == 
            True, ""], 7, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], "Start at the condenser."}]], 8, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], "The second stair from the top."}]], 9, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Continue the \"stair stepping\" method."}]], 10, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], " "}]]]; $CellContext`HintTextColumnTrue$$ = 
         Which[
           
           And[$CellContext`MB$$ == 5, $CellContext`hint$$ == 
            True, $CellContext`solution$$ == False, $CellContext`showcolumn$$ == 
            True], 
           Row[{
             Style["q", Italic], "-line slope: ", 
             Style["q", Italic], "/(", 
             Style["q", Italic], "-1)"}], 
           
           And[$CellContext`MB$$ == 5, $CellContext`solution$$ == 
            True, $CellContext`showcolumn$$ == True], 
           Row[{
             Spacer[{0, 1, 10}], 
             Style["q", Italic], "-line equation: ", 
             Subscript[
              Style["y", Italic], "F"], " = (", 
             Style["q", Italic], "/(", 
             Style["q", Italic], "-1))", 
             Style["x", Italic], "-(", 
             Subscript[
              Style["z", Italic], "feed"], "/(", 
             Style["q", Italic], "-1))"}], 
           
           And[$CellContext`MB$$ == 5, $CellContext`hint$$ == 
            False, $CellContext`solution$$ == 
            False, $CellContext`showcolumn$$ == True], " ", 
           
           And[$CellContext`MB$$ == 6, $CellContext`hint$$ == 
            True, $CellContext`solution$$ == False, $CellContext`showcolumn$$ == 
            True], 
           Row[{"Slope of the top operating line = (", 
             Style["L", Italic], "/", 
             Style["V", Italic], ") and bottom operating line = (", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], ")"}], 
           
           And[$CellContext`MB$$ == 6, $CellContext`solution$$ == 
            True, $CellContext`showcolumn$$ == True], 
           Row[{
             Spacer[{0, 1, 10}], 
             Subscript["y", "top"], " = (", 
             Style["L", Italic], "/", 
             Style["V", Italic], ") x + (1-(," Style["L", Italic], "/", 
             Style["V", Italic], "))", 
             Subscript["x", "D"], " and ", 
             Subscript["y", "bot"], " = (", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], "x + (1-(", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], ")", 
             Subscript["x", "B"], ")"}], 
           
           And[$CellContext`MB$$ == 6, $CellContext`hint$$ == 
            False, $CellContext`solution$$ == 
            False, $CellContext`showcolumn$$ == True], " ", 
           And[
            
            AnyTrue[{5, 
             6}, # == $CellContext`MB$$& ], $CellContext`showcolumn$$ == 
            False], " ", 
           And[$CellContext`MB$$ == 10, $CellContext`hint$$ == True], 
           "Has to do with where the two operating lines intersect.", 
           And[$CellContext`MB$$ == 10, $CellContext`hint$$ == False], 
           " "]; $CellContext`stagelines$ = Table[{
            Thickness[0.005], 
            
            Line[{{28, 20 + (70/$CellContext`nT$) $CellContext`i$}, {
              65, 20 + (
                 70/$CellContext`nT$) $CellContext`i$}}]}, {$CellContext`i$, 
            1, $CellContext`nT$ - 1}]; $CellContext`stagelabels$ = Table[
           Style[
            Text[
             StringJoin["stage ", 
              ToString[$CellContext`nT$ - $CellContext`i$], ""], {
             47, 22 + (70/$CellContext`nT$) $CellContext`i$}], 
            15], {$CellContext`i$, 1, $CellContext`nT$ - 
            1}]; $CellContext`ArrowPt1$ = {-15, 
           
           If[$CellContext`MB$$ == 1, 
            49, $CellContext`ArrowHeight$$]}; $CellContext`ArrowPt2$ = {28, 
           
           If[$CellContext`MB$$ == 1, 
            49, $CellContext`ArrowHeight$$]}; $CellContext`Part9Answer$ = 
         Rectangle[{28, 20 + (70/$CellContext`nT$) $CellContext`nS$}, {
           65, 20 + (70/$CellContext`nT$) ($CellContext`nS$ + 
              1)}]; $CellContext`LeftLimit$ = 
         If[$CellContext`MB$$ == 6, 10, -5]; $CellContext`RightLimit$ = 
         If[$CellContext`MB$$ >= 4, 100, 120]; $CellContext`stage1guessA$$ = {
           Part[$CellContext`stage1guessA$$, 1], 
           $CellContext`equilb$[
            Part[$CellContext`stage1guessA$$, 1]]}; $CellContext`ptdist$$ = {
           Part[$CellContext`ptdist$$, 1], 
           Part[$CellContext`ptdist$$, 1]}; $CellContext`ptfeed$$ = {
           Part[$CellContext`ptfeed$$, 1], 
           Part[$CellContext`ptfeed$$, 1]}; $CellContext`ptbott$$ = {
           Part[$CellContext`ptbott$$, 1], 
           Part[$CellContext`ptbott$$, 1]}; $CellContext`horizontalpt1 = 
         If[Part[$CellContext`stage1guessA$$, 2] >= $CellContext`yi$, {
            ReplaceAll[
             Quiet[$CellContext`x], 
             FindRoot[
             Part[$CellContext`stage1guessA$$, 
                2] == $CellContext`rect$[$CellContext`x], {$CellContext`x, 0, 
               1}]], 
            Part[$CellContext`stage1guessA$$, 2]}, {
            ReplaceAll[
             Quiet[$CellContext`x], 
             FindRoot[
             Part[$CellContext`stage1guessA$$, 
                2] == $CellContext`strip$[$CellContext`x], {$CellContext`x, 0,
                1}]], 
            
            Part[$CellContext`stage1guessA$$, 
             2]}]; $CellContext`horizontalpt2 = {
           ReplaceAll[
            Quiet[$CellContext`x], 
            FindRoot[
            Part[$CellContext`stage1guessA$$, 
               2] == $CellContext`equilb$[$CellContext`x], {$CellContext`x, 0,
               1}]], 
           Part[$CellContext`stage1guessA$$, 2]}; $CellContext`verticalpt1 = 
         Which[Part[$CellContext`horizontalpt2, 1] >= $CellContext`xi$, {
            Part[$CellContext`horizontalpt2, 1], 
            $CellContext`rect$[
             Part[$CellContext`horizontalpt2, 1]]}, 
           Inequality[$CellContext`xb$, LessEqual, 
            Part[$CellContext`horizontalpt2, 1], Less, $CellContext`xi$], {
            Part[$CellContext`horizontalpt2, 1], 
            $CellContext`strip$[
             Part[$CellContext`horizontalpt2, 1]]}, 
           Part[$CellContext`horizontalpt2, 1] < $CellContext`xb$, {
            Part[$CellContext`horizontalpt2, 1], 
            0}]; $CellContext`RandomizeValuesShown$ = RandomInteger[{1, 6}]; 
        Switch[$CellContext`RandomizeValuesShown$, 
          1, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = $CellContext`Ans1$$, \
$CellContext`GuessD$ = 0, $CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = $CellContext`Ans2$$, \
$CellContext`GuessG$ = 
           0, $CellContext`GuessH$ = $CellContext`Ans3$$, \
$CellContext`GuessI$ = $CellContext`Ans4$$, $CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}, 
          2, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = $CellContext`Ans1$$, \
$CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = $CellContext`Ans2$$, \
$CellContext`GuessG$ = 
           0, $CellContext`GuessH$ = $CellContext`Ans3$$, \
$CellContext`GuessI$ = $CellContext`Ans4$$, $CellContext`GuessJ$ = \
$CellContext`Ans5$$, $CellContext`GuessK$ = 
           0, $CellContext`GuessL$ = $CellContext`Ans6$$}, 
          3, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = $CellContext`Ans1$$, \
$CellContext`GuessE$ = $CellContext`Ans2$$, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = 
           0, $CellContext`GuessI$ = $CellContext`Ans4$$, \
$CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}, 
          4, {$CellContext`GuessA$ = $CellContext`Ans1$$, \
$CellContext`GuessB$ = 0, $CellContext`GuessC$ = 0, $CellContext`GuessD$ = 
           0, $CellContext`GuessE$ = $CellContext`Ans2$$, \
$CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = 
           0, $CellContext`GuessI$ = $CellContext`Ans4$$, \
$CellContext`GuessJ$ = $CellContext`Ans5$$, $CellContext`GuessK$ = \
$CellContext`Ans6$$, $CellContext`GuessL$ = 0}, 
          5, {$CellContext`GuessA$ = $CellContext`Ans1$$, \
$CellContext`GuessB$ = $CellContext`Ans2$$, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = 0, $CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = $CellContext`Ans4$$, $CellContext`GuessI$ = 
           
           0, $CellContext`GuessJ$ = $CellContext`Ans5$$, \
$CellContext`GuessK$ = $CellContext`Ans6$$, $CellContext`GuessL$ = 0}, 
          6, {$CellContext`GuessA$ = 
           0, $CellContext`GuessB$ = $CellContext`Ans2$$, \
$CellContext`GuessC$ = $CellContext`Ans1$$, $CellContext`GuessD$ = 
           0, $CellContext`GuessE$ = 0, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = $CellContext`Ans4$$, $CellContext`GuessI$ = 
           0, $CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}]; $CellContext`Box1$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, "distillate flow rate",
            2, "bottoms flow rate", 3, "bottoms flow rate", 4, "feed rate ", 
           5, "feed rate ", 6, "distillate flow rate"]; $CellContext`Box2$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"bottoms composition ", 
             Subscript[
              Style["x", Italic], "B"]}], 2, 
           Row[{"bottoms composition ", 
             Subscript[
              Style["x", Italic], "B"]}], 3, 
           Row[{"distillate composition ", 
             Subscript[
              Style["x", Italic], "D"]}], 4, 
           Row[{"distillate composition ", 
             Subscript[
              Style["x", Italic], "D"]}], 5, 
           Row[{"feed composition ", 
             Subscript[
              Style["z", Italic], "feed"]}], 6, 
           Row[{"feed composition ", 
             Subscript[
              Style["z", Italic], "feed"]}]]; $CellContext`Box3$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 2, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 3, "reflux ratio", 4, "reflux ratio", 5, 
           "reflux ratio", 6, "reflux ratio"]; $CellContext`Box4$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 2, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 3, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 4, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 5, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 6, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}]]; $CellContext`Box5$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 2, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 3, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 4, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 5, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 6, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}]]; $CellContext`Box6$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, "quality ", 2, 
           "quality ", 3, "quality ", 4, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 5, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 6, "quality "]; $CellContext`Ans1Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`F$, 2, 
           RandomReal[{1, 3}] $CellContext`F$, 3, 
           RandomReal[{1, 3}] $CellContext`F$, 4, 
           RandomReal[{1, 3}] $CellContext`F$, 5, 
           RandomReal[{1, 3}] $CellContext`F$, 6, 
           RandomReal[{1, 3}] $CellContext`F$]; $CellContext`Ans2Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 1, 2, 1, 3, 1, 4, 1, 5,
            1, 6, 1]; $CellContext`Ans3Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`L$, 2, 
           RandomReal[{1, 3}] $CellContext`L$, 3, 
           RandomReal[{1, 3}] $CellContext`R$, 4, 
           RandomReal[{1, 3}] $CellContext`R$, 5, 
           RandomReal[{1, 3}] $CellContext`R$, 6, 
           RandomReal[{1, 3}] $CellContext`R$]; $CellContext`Ans4Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`V$, 2, 
           RandomReal[{1, 3}] $CellContext`V$, 3, 
           RandomReal[{1, 3}] $CellContext`V$, 4, 
           RandomReal[{1, 3}] $CellContext`V$, 5, 
           RandomReal[{1, 3}] $CellContext`L$, 6, 
           RandomReal[{1, 3}] $CellContext`L$]; $CellContext`Ans5Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`Vbar$, 2, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 3, 
           RandomReal[{1, 3}] $CellContext`Vbar$, 4, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 5, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 6, 
           RandomReal[{1, 3}] $CellContext`Vbar$]; $CellContext`Ans6Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 2, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 3, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 4, RandomReal[{1, 3}] $CellContext`Vbar$,
            5, RandomReal[{1, 3}] $CellContext`Vbar$, 6, 
           
           RandomChoice[{(-2.3) $CellContext`q$, 2.1 $CellContext`q$, 
             1.2 $CellContext`q$, (-1.4) $CellContext`q$, (-1.48) \
$CellContext`q$, 1.87 $CellContext`q$}]]; $CellContext`Ans6RangeL$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 
           1, -$CellContext`Ans6Range$$, 2, -$CellContext`Ans6Range$$, 
           3, -$CellContext`Ans6Range$$, 4, 0, 5, 0, 
           6, -$CellContext`Ans6Range$$]; $CellContext`distcolumn$ = {
           Thickness[0.005], 
           Line[{{28, 25}, {28, 85}}], 
           Line[{{65, 25}, {65, 85}}], 
           Circle[{46.5, 85}, {18.5, 8}, {0, Pi}], 
           Circle[{46.5, 25}, {18.5, 8}, {Pi, 2 Pi}], Black, 
           Line[{{49, 93}, {49, 100}}], 
           Line[{{49, 100}, {80, 100}}], 
           Arrow[{{80, 100}, {80, 90}}], 
           Circle[{80, 85}, 5], 
           Arrow[{{60, 19}, {60, 10}}], 
           Line[{{55, 5}, {45, 5}}], 
           Arrow[{{45, 5}, {45, 17}}], 
           Circle[{60, 5}, 5], Black, 
           Arrow[{{75, 85}, {65, 85}}], 
           Arrow[{{85, 85}, {$CellContext`RightLimit$, 85}}], 
           Arrow[{{65, 5}, {$CellContext`RightLimit$, 5}}], 
           Text[
            Style["C", 15], {80, 85}], 
           Text[
            Style["R", 15], {60, 5}], 
           If[$CellContext`showcolumn$$ == True, 
            Switch[$CellContext`MB$$, 4, {
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = ", 
                  NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0, 56}, Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "D"], " = ", 
                  NumberForm[$CellContext`xd$, {2, 2}]}], 17], {75, 75}, 
               Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "B"], " = ", 
                  NumberForm[$CellContext`xb$, {2, 2}]}], 17], {75, 12}, 
               Left]}, 5, {
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = ", 
                  NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0, 56}, Left], 
              Text[
               Style[
                Row[{
                  Style["q", Italic], " = ", 
                  NumberForm[$CellContext`q$, {3, 2}]}], 17], {0, 64}, Left]},
              6, {
              Text[
               Style[
                Row[{
                  Style["L", Italic], " = ", 
                  NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 17], {30, 
               78}, Left], 
              Text[
               Style[
                Row[{
                  Style["V", Italic], " = ", 
                  NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 17], {30, 
               65}, Left], 
              Text[
               Style[
                Row[{
                  OverBar[
                   Style["L", Italic]], " = ", 
                  NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 17], {
               30, 26}, Left], 
              Text[
               Style[
                Row[{
                  OverBar[
                   Style["V", Italic]], " = ", 
                  NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 17], {
               30, 40}, Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "D"], " = ", 
                  NumberForm[$CellContext`xd$, {2, 2}]}], 17], {75, 75}, 
               Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "B"], " = ", 
                  NumberForm[$CellContext`xb$, {2, 2}]}], 17], {75, 12}, 
               Left]}], 
            Text["", {5, 5}]]}; $CellContext`size1$ = {
          PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> False, Frame -> 
           True, FrameLabel -> {
             Row[{"liquid mole fraction, ", 
               Style["x", Italic]}], 
             Row[{"vapor mole fraction, ", 
               Style["y", Italic]}]}, LabelStyle -> {17, Black}, 
           ImageSize -> {600, 360}, AspectRatio -> Full, GridLines -> {
             Range[0, 1, 0.05], 
             Range[0, 1, 0.05]}, GridLinesStyle -> GrayLevel[0.8], PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black], 
           ImageMargins -> {{0, 0}, {0, 0}}}; $CellContext`size2$ = {
          PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> False, Frame -> 
           True, FrameLabel -> {
             Row[{"liquid mole fraction, ", 
               Style["x", Italic]}], 
             Row[{"vapor mole fraction, ", 
               Style["y", Italic]}]}, LabelStyle -> {17, Black}, 
           ImageSize -> {290, 360}, AspectRatio -> Full, GridLines -> {
             Range[0, 1, 0.05], 
             Range[0, 1, 0.05]}, GridLinesStyle -> GrayLevel[0.8], PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black], 
           ImageMargins -> {{0, 0}, {0, 0}}}; $CellContext`size3$ = {
          ImageSize -> {600, 360}, AspectRatio -> Full, ImageMargins -> None, 
           PlotRangeClipping -> False, 
           PlotRange -> {{-28.7, 141}, {-15, 102}}, ImagePadding -> None, 
           PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black]}; $CellContext`size4$ = {
          ImageSize -> {310, 360}, AspectRatio -> Full, PlotRangeClipping -> 
           False, PlotRange -> {{$CellContext`LeftLimit$, 101}, {-15, 
             102}}}; $CellContext`Pane1$ = Show[
           Graphics[{$CellContext`distcolumn$, 
             Thickness[0.005], 
             
             Arrow[{$CellContext`ArrowPt1$, $CellContext`ArrowPt2$}]}], \
$CellContext`size4$]; $CellContext`Pane2$ = (Switch[$CellContext`MB$$, 1, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #8, #9, #10, #11, #12, #21, #24, #32}, 
               2, {#, #7, #8, #9, #10, #11, #12, #22, #24, #32}, 
               3, {#, #7, #8, #9, #10, #11, #12, #23, #22, #32}, 
               4, {#, #7, #8, #9, #10, #11, #12, #19, #23, #32}, 
               5, {#, #7, #8, #9, #10, #11, #12, #19, #20, #32}, 
               6, {#, #7, #8, #9, #10, #11, #12, #20, #21, #32}], False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #8, #10, #11, #21, #24, #32}, 
               2, {#, #7, #8, #9, #11, #22, #24, #32}, 
               3, {#, #7, #8, #9, #12, #23, #22, #32}, 
               4, {#, #8, #9, #10, #12, #19, #23, #32}, 
               5, {#, #9, #10, #11, #12, #19, #20, #32}, 
               6, {#, #7, #10, #11, #12, #20, #21, #32}]]], #5], 2, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #9, #13, #14, #15, #26, #27, #32, #35}, 
               2, {#, #9, #13, #14, #15, #26, #27, #32, #35}, 
               3, {#, #9, #13, #14, #15, #25, #27, #32, #35}, 
               4, {#, #9, #13, #14, #15, #25, #27, #32, #35}, 
               5, {#, #9, #13, #14, #15, #25, #26, #32, #35}, 
               6, {#, #9, #13, #14, #15, #25, #26, #32, #35}], False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #9, #13, #26, #27, #32, #35}, 
               2, {#, #9, #13, #26, #27, #32, #35}, 
               3, {#, #9, #14, #25, #27, #32, #35}, 
               4, {#, #9, #14, #25, #27, #32, #35}, 
               5, {#, #9, #15, #25, #26, #32, #35}, 
               6, {#, #9, #15, #25, #26, #32, #35}]]], #5], 3, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}, 
               2, {#, #7, #14, #15, #16, #17, #18, #28, #30, #32, #34}, 
               3, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}, 
               4, {#, #7, #14, #15, #16, #17, #18, #28, #29, #32, #34}, 
               5, {#, #7, #14, #15, #16, #17, #18, #28, #29, #32, #34}, 
               6, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}], 
              False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #14, #15, #16, #29, #30, #32, #34}, 
               2, {#, #7, #14, #15, #17, #28, #30, #32, #34}, 
               3, {#, #7, #14, #15, #16, #29, #30, #32, #34}, 
               4, {#, #7, #14, #15, #18, #28, #29, #32, #34}, 
               5, {#, #7, #14, #15, #18, #28, #29, #32, #34}, 
               6, {#, #7, #14, #15, #16, #29, #30, #32, #34}]]], #5], 4, 
           Show[{#31, #2}, #3], 5, 
           Show[{#31, #2}, #3], 6, 
           Show[{#31, #2}, #3], 7, 
           Show[{#31, #2}, #3], 8, 
           Show[{#31, #2}, #3], 9, 
           Show[{#31, #2}, #3], 10, 
           Row[{
             Show[
              
              Graphics[{#, $CellContext`stagelines$, \
$CellContext`stagelabels$, #32, #33, 
                If[
                 And[$CellContext`MB$$ == 10, $CellContext`solution$$], {
                 Yellow, 
                  Opacity[0.5], $CellContext`Part9Answer$}, {
                  Opacity[0], $CellContext`Part9Answer$}]}, #6]], 
             Show[{#31, #2}, #4]}]]& )[$CellContext`distcolumn$, 
           Graphics[{
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 4], {{
                
                Arrow[{{$CellContext`zf$, $CellContext`zf$ - 
                   0.15}, {$CellContext`zf$, $CellContext`zf$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colF, Background -> White], 
                  Style[
                   Subscript[
                    Style["z", Italic], "feed"], 17, $CellContext`colF, 
                   Background -> 
                   White]}], {$CellContext`zf$, $CellContext`zf$ - 0.19}], {
                
                Arrow[{{$CellContext`xd$, $CellContext`xd$ - 
                   0.15}, {$CellContext`xd$, $CellContext`xd$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colR, Background -> White], 
                  Style[
                   Subscript[
                    Style["x", Italic], "D"], 17, $CellContext`colR, 
                   Background -> 
                   White]}], {$CellContext`xd$, $CellContext`xd$ - 0.19}], {
                Arrow[{{$CellContext`xb$ + 0.16, $CellContext`xb$ - 
                   0.05}, {$CellContext`xb$, $CellContext`xb$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colS, Background -> White], 
                  Style[
                   Subscript[
                    Style["x", Italic], "B"], 17, $CellContext`colS, 
                   Background -> White]}], {$CellContext`xb$ + 
                 0.19, $CellContext`xb$ - 0.06}, Left]}], 
             If[$CellContext`MB$$ == 4, {{
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptdist$$, $CellContext`colR]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptdist$$, 1], {2, 2}]}], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`ptdist$$, {1, -2.5}], {
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptbott$$, $CellContext`colS]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptbott$$, 1], {2, 2}]}], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`ptbott$$, {-1, -2.5}], {
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptfeed$$, $CellContext`colF]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptfeed$$, 1], {2, 2}]}], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`ptfeed$$, {1, -2.5}]}], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`zf$, $CellContext`zf$}, \
$CellContext`colF]], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`xd$, $CellContext`xd$}, \
$CellContext`colR]], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`xb$, $CellContext`xb$}, \
$CellContext`colS]], 
             If[$CellContext`MB$$ == 5, 
              Dynamic[{{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`qdot1$$, $CellContext`colF]}, 
                Dynamic[{
                  Opacity[0.6], 
                  $CellContext`pt1[$CellContext`qdot2$$, $CellContext`colF]}], 
                Dynamic[{Dashed, Thick, 
                  Line[{$CellContext`qdot1$$, $CellContext`qdot2$$}]}]}]], 
             If[
              And[$CellContext`MB$$ == 5, $CellContext`solution$$ == False], {
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`qdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`qdot2$$, {0, -2}]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               
               Line[{{$CellContext`xeq$, $CellContext`yeq$}, \
{$CellContext`zf$, $CellContext`zf$}}]}], 
             If[$CellContext`MB$$ > 6, {$CellContext`colF, 
               Thickness[0.006], 
               
               Line[{{$CellContext`xi$, $CellContext`yi$}, {$CellContext`zf$, \
$CellContext`zf$}}]}], 
             If[$CellContext`MB$$ == 6, {Thick, $CellContext`colF, 
               
               Line[{{$CellContext`xeq$, $CellContext`yeq$}, \
{$CellContext`zf$, $CellContext`zf$}}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`TOLdot1$$, \
$CellContext`colR]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`TOLdot2$$, \
$CellContext`colR]}], 
               Dynamic[{Dashed, Thick, 
                 Line[{$CellContext`TOLdot1$$, $CellContext`TOLdot2$$}]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`BOLdot1$$, \
$CellContext`colS]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`BOLdot2$$, \
$CellContext`colS]}], 
               Dynamic[{Dashed, Thick, 
                 Line[{$CellContext`BOLdot1$$, $CellContext`BOLdot2$$}]}]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 6], {
               $CellContext`pt2[{$CellContext`xi$, $CellContext`yi$}, 
                Purple], {
                Opacity[0.5], 
                Thickness[0.01], 
                CapForm["Round"], Blue, {
                 
                 Line[{{$CellContext`xb$, $CellContext`xb$}, \
{$CellContext`xi$, $CellContext`yi$}}], 
                 
                 Line[{{$CellContext`xd$, $CellContext`xd$}, \
{$CellContext`xi$, $CellContext`yi$}}]}}}], 
             If[
              And[$CellContext`MB$$ == 6, $CellContext`solution$$ == False], {
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`TOLdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`TOLdot2$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`BOLdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`BOLdot2$$, {0, -2}]}], 
             If[$CellContext`MB$$ > 6, {
               Thickness[0.006], $CellContext`colS, 
               
               Line[{{$CellContext`xb$, $CellContext`xb$}, {$CellContext`xi$, \
$CellContext`yi$}}], $CellContext`colR, 
               
               Line[{{$CellContext`xd$, $CellContext`xd$}, {$CellContext`xi$, \
$CellContext`yi$}}]}], 
             If[
              
              Or[$CellContext`MB$$ == 7, $CellContext`MB$$ == 
               8, $CellContext`MB$$ == 9], {
               Dynamic[{Dashed, 
                 Thickness[0.008], 
                 RGBColor[0.9, 0.3, 0], 
                 
                 Line[{$CellContext`horizontalpt1, \
$CellContext`horizontalpt2}], 
                 
                 Line[{$CellContext`verticalpt1, \
$CellContext`horizontalpt2}]}], 
               $CellContext`pt1[$CellContext`stage1guessA$$, Blue], {Black, 
                PointSize[0.045], 
                
                Point[{Part[$CellContext`horizontalpt2, 1] - 0.03, 
                  Part[$CellContext`horizontalpt2, 2] + 0.04}], White, 
                PointSize[0.042], 
                
                Point[{Part[$CellContext`horizontalpt2, 1] - 0.03, 
                  Part[$CellContext`horizontalpt2, 2] + 0.04}]}, 
               Text[
                Style[
                 If[
                  Or[$CellContext`MB$$ == 7, $CellContext`MB$$ == 8], 
                  ToString[$CellContext`MB$$ - 6], 
                  ToString["R"]], 17], {
                Part[$CellContext`horizontalpt2, 1] - 0.025, 
                 Part[$CellContext`horizontalpt2, 2] + 0.034}]}], 
             If[
              Or[$CellContext`MB$$ == 8, $CellContext`MB$$ == 9], 
              Part[$CellContext`Dotnumbers$, 1]], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 7], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               If[$CellContext`nR$ > 0, 
                Part[$CellContext`Ry$, 1], 
                Part[$CellContext`Sy$, 1]], 
               Part[$CellContext`Rx$, 1]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 8], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               Which[
                And[$CellContext`nR$ == 0, $CellContext`nS$ > 1], {
                 Part[$CellContext`Sy$, 2], 
                 Part[$CellContext`Sx$, 2]}, 
                
                And[$CellContext`nR$ == 0, $CellContext`nS$ == 
                 1], {$CellContext`Sr$, 
                 Part[$CellContext`Sx$, 2]}, 
                And[$CellContext`nR$ == 1, $CellContext`nS$ > 0], {
                 Part[$CellContext`Sy$, 1], 
                 Part[$CellContext`Sx$, 1]}, 
                
                And[$CellContext`nR$ == 1, $CellContext`nS$ == 
                 1], {$CellContext`Sr$, 
                 Part[$CellContext`Rx$, 2]}, $CellContext`nR$ > 1, {
                 Part[$CellContext`Ry$, 2], 
                 Part[$CellContext`Rx$, 2]}]}], 
             If[$CellContext`MB$$ == 8, {Thick, 
               If[$CellContext`nR$ > 0, 
                Part[$CellContext`Ry$, 1], 
                Part[$CellContext`Sy$, 1]], 
               Part[$CellContext`Rx$, 1]}], 
             
             If[$CellContext`MB$$ == 9, {
              Thick, $CellContext`Ry$, $CellContext`Sy$, $CellContext`Rx$, 
               Table[
                
                Part[$CellContext`Sx$, $CellContext`a], {$CellContext`a, 
                 1, $CellContext`nS$}], 
               Part[$CellContext`Dotnumbers$, 
                Span[2, $CellContext`nT$ - 1]]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 9], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, $CellContext`Sr$, 
               Part[$CellContext`Sx$, $CellContext`nS$ + 1]}], 
             If[
              
              And[$CellContext`MB$$ == 4, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0.05}, {1.15, 0.35}]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[$CellContext`zf$, {2, 2}]}], 
                 17, $CellContext`colF], {0.7, 0.3}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[$CellContext`xd$, {2, 2}]}], 
                 17, $CellContext`colR], {0.7, 0.2}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[$CellContext`xb$, {2, 2}]}], 
                 17, $CellContext`colS], {0.7, 0.1}, Left]}], 
             If[
              
              And[$CellContext`MB$$ == 5, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0.4}, {1.15, 0.6}]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0.7, 0.55}, 
                Left], 
               Text[
                Style[
                 StringJoin["quality = ", 
                  ToString[
                   NumberForm[$CellContext`q$, {3, 2}]], ""], 17], {0.7, 
                0.45}, Left]}], 
             If[
              And[$CellContext`MB$$ == 6, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0}, {1.15, 0.6}]}, 
               Text[
                Style[
                 Row[{
                   Style["L", Italic], " = ", 
                   NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.55}, Left], 
               Text[
                Style[
                 Row[{
                   Style["V", Italic], " = ", 
                   NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.45}, Left], 
               Text[
                Style[
                 Row[{
                   OverBar[
                    Style["L", Italic]], " = ", 
                   NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.35}, Left], 
               Text[
                Style[
                 Row[{
                   OverBar[
                    Style["V", Italic]], " = ", 
                   NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.25}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[$CellContext`xd$, {2, 2}]}], 17], {0.7, 0.15}, 
                Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[$CellContext`xb$, {2, 2}]}], 17], {0.7, 0.05}, 
                Left]}], 
             If[$CellContext`MB$$ == 10, {$CellContext`Dotnumbers$, Thick, 
               GrayLevel[
               0.4], $CellContext`Ry$, $CellContext`Sy$, $CellContext`Rx$, \
$CellContext`Sr$, 
               Table[
                
                Part[$CellContext`Sx$, $CellContext`a + 1], {$CellContext`a, 
                 0, $CellContext`nS$}]}]}], 
           If[$CellContext`showcolumn$$ == 
            True, $CellContext`size2$, $CellContext`size1$], \
$CellContext`size2$, $CellContext`size3$, $CellContext`size4$, 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 AnyTrue[{4, 5}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct feed rate = \n\t\t", 
                Row[{"feed rate (", 
                  Style["F", Italic], ") = "}]], 
               NumberForm[$CellContext`F$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               AnyTrue[{4, 5}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              
              AnyTrue[{4, 
               5}, # == $CellContext`RandomizeValuesShown$& ]], {-30, 
             26}, {-28.5, 40}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{5, 6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["z", Italic], "feed"], " = "}], 
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = "}]], 
               NumberForm[$CellContext`zf$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{5, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {-23, 
             68}, {-15, 58}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
                 AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct distillate flow = ", 
                Row[{"distillate flow (", 
                  Style["D", Italic], ") = "}]], 
               ToString[
                NumberForm[$CellContext`distflow$, {3, 2}]], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
               AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
              AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, 60}, {70, 72}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct bottoms flow = ", 
                Row[{"bottoms flow (", 
                  Style["B", Italic], ") = "}]], 
               ToString[
                NumberForm[$CellContext`botflow$, {3, 2}]], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, 23}, {70, 14}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["x", Italic], "D"]}], 
                Subscript[
                 Style["x", Italic], "D"]], " = ", 
               NumberForm[$CellContext`xd$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], {
             88, 102}, {88, 94}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["x", Italic], "B"]}], 
                Subscript[
                 Style["x", Italic], "B"]], " = ", 
               NumberForm[$CellContext`xb$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, -12}, {70, -3}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{3, 4, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct reflux ratio ", 
                Row[{"reflux ratio (", 
                  Style["L", Italic], "/", 
                  Style["D", Italic], ")"}]], " = ", 
               NumberForm[$CellContext`R$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{3, 4, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{3, 4, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {88, 100}, {
             88, 92}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 
                 AnyTrue[{1, 2, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Style["L", Italic]}], 
                Style["L", Italic]], " = ", 
               NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               
               AnyTrue[{1, 2, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            Which[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              
              AnyTrue[{1, 2, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {70, 
             53}, $CellContext`MB$$ != 3, {29.3, 53}, $CellContext`MB$$ == 
             3, {29.3, 63}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 
                 AnyTrue[{1, 2, 3, 
                  4}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Style["V", Italic]}], 
                Style["V", Italic]], " = ", 
               NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               
               AnyTrue[{1, 2, 3, 
                4}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            Which[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              AnyTrue[{1, 2, 3, 
               4}, # == $CellContext`RandomizeValuesShown$& ]], {70, 
             63}, $CellContext`MB$$ != 3, {29.3, 63}, $CellContext`MB$$ == 
             3, {29.3, 73}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{2, 4, 
                  5}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  OverBar[
                   Style["L", Italic]]}], 
                OverBar[
                 Style["L", Italic]]], " = ", 
               NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{2, 4, 
                5}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{2, 4, 
               5}, # == $CellContext`RandomizeValuesShown$& ]], {70, 32}, {
             29.3, 32}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{1, 3, 4, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  OverBar[
                   Style["V", Italic]]}], 
                OverBar[
                 Style["V", Italic]]], " = ", 
               NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{1, 3, 4, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{1, 3, 4, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {70, 40}, {
             29.3, 40}], Left], 
           Text[
            Style[
             StringJoin[
              If[
               And[$CellContext`solution$$ == True, 
                
                AnyTrue[{1, 2, 3, 
                 6}, # == $CellContext`RandomizeValuesShown$& ]], 
               "correct quality = ", "quality = "], 
              ToString[
               NumberForm[$CellContext`q$, {3, 2}]], ""], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{1, 2, 3, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{1, 2, 3, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {-18, 
             68}, {-18, 58}], Left], 
           Text[
            Style[
             Row[{"feed rate (", 
               Style["F", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessA$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {-28.5, 40}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["z", Italic], "feed"], " = ", 
               NumberForm[$CellContext`GuessB$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {-15, 58}, Left], 
           Text[
            Style[
             Row[{"distillate flow (", 
               Style["D", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessC$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {70, 72}, Left], 
           Text[
            Style[
             Row[{"bottoms flow (", 
               Style["B", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessD$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {70, 14}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["x", Italic], "D"], " = ", 
               NumberForm[$CellContext`GuessE$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {88, 94}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["x", Italic], "B"], " = ", 
               NumberForm[$CellContext`GuessF$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {70, -3}, Left], 
           Text[
            Style[
             Row[{"reflux ratio (", 
               Style["L", Italic], "/", 
               Style["D", Italic], ") = ", 
               NumberForm[$CellContext`GuessG$, {3, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {88, 92}, Left], 
           Text[
            Style[
             Row[{
               Style["L", Italic], " = ", 
               NumberForm[$CellContext`GuessH$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 53}, Left], 
           Text[
            Style[
             Row[{
               Style["V", Italic], " = ", 
               NumberForm[$CellContext`GuessI$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 63}, Left], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["L", Italic]], " = ", 
               NumberForm[$CellContext`GuessJ$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 32}, Left], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["V", Italic]], " = ", 
               NumberForm[$CellContext`GuessK$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 40}, Left], 
           Text[
            Style[
             StringJoin["quality = ", 
              ToString[
               NumberForm[$CellContext`GuessL$, {3, 2}]], ""], 17, 
             RGBColor[0, 0.6, 0]], {-18, 58}, Left], 
           Plot[{
             $CellContext`equilb$[$CellContext`x], $CellContext`x}, \
{$CellContext`x, 0, 1}, PlotStyle -> {{Thick, Black}}], {
            Thickness[0.005], 
            Arrow[{$CellContext`ArrowPt1$, $CellContext`ArrowPt2$}]}, 
           Text[
            Style["feed stream", 17], {13, $CellContext`ArrowHeight$$ + 5}], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["L", Italic]], " and ", 
               OverBar[
                Style["V", Italic]], 
               " = liquid and vapor flow\nrates in the stripping (bottom) \
section"}], 17, TextAlignment -> Left], {-24, 0}, Left], 
           Text[
            Style[
             Row[{
               Style["L", Italic], " and ", 
               Style["V", Italic], 
               " = liquid and vapor flow\nrates in the rectifying (top) \
section"}], 17, TextAlignment -> Left], {-24, 0}, 
            Left]]; $CellContext`Value1$ = $CellContext`equilb$[0.6] - 
          0.05; $CellContext`Value2$ = $CellContext`equilb$[0.4] - 0.05; 
        If[$CellContext`showcolumn$$, 
          
          Row[{$CellContext`Pane2$, $CellContext`Pane1$}], \
$CellContext`Pane2$]], 
      "Specifications" :> {{{$CellContext`solution$$, False, "solution"}, {
         True, False}, ControlType -> None}, {{$CellContext`MB$$, 1}, 1, 10, 
         1, ControlType -> None}, {{$CellContext`reset$$, 482}, 1, 10000, 1, 
         ControlType -> None, ControlPlacement -> 1}, {{$CellContext`MB$$, 1},
          1, 10, 1, ControlType -> None, ControlPlacement -> 
         2}, {{$CellContext`stage1guessA$$, {0.5, 0.8301777345250619}}, {{
         0.01, 0.99}, {0.01, 0.99}}, ControlType -> Locator, Appearance -> 
         None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         3}, {{$CellContext`solution$$, False, "solution"}, {True, False}, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         4}, {{$CellContext`hint$$, False, "hint"}, {False, True}, 
         ControlPlacement -> 
         5}, {{$CellContext`showcolumn$$, False, "column"}, {True, False}, 
         ControlPlacement -> 6}, {{$CellContext`Ans1$$, 0, 
          Dynamic[$CellContext`Box1$$]}, 0, 
         Dynamic[$CellContext`Ans1Range$$], 0.01, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], Appearance -> "Labeled",
          ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         7}, {{$CellContext`Ans2$$, 0, 
          Dynamic[$CellContext`Box2$$]}, 0, 
         Dynamic[$CellContext`Ans2Range$$], 0.01, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], Appearance -> "Labeled",
          ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         8}, {{$CellContext`Ans3$$, 0, 
          Dynamic[$CellContext`Box3$$]}, 0, 
         Dynamic[$CellContext`Ans3Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         9}, {{$CellContext`Ans4$$, 0, 
          Dynamic[$CellContext`Box4$$]}, 0, 
         Dynamic[$CellContext`Ans4Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         10}, {{$CellContext`Ans5$$, 0, 
          Dynamic[$CellContext`Box5$$]}, 0, 
         Dynamic[$CellContext`Ans5Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         11}, {{$CellContext`Ans6$$, 0, 
          Dynamic[$CellContext`Box6$$]}, 
         Dynamic[$CellContext`Ans6RangeL$$], 
         Dynamic[$CellContext`Ans6Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         12}, {{$CellContext`ptdist$$, {0.6, 0.6}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         13}, {{$CellContext`ptbott$$, {0.4, 0.4}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         14}, {{$CellContext`ptfeed$$, {0.2, 0.2}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         15}, {{$CellContext`qdot1$$, {0.3, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         16}, {{$CellContext`qdot2$$, {0.1, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         17}, {{$CellContext`BOLdot1$$, {0.3, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         18}, {{$CellContext`BOLdot2$$, {0.1, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         19}, {{$CellContext`TOLdot1$$, {0.3, 0.7}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         20}, {{$CellContext`TOLdot2$$, {0.1, 0.7}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         21}, {{$CellContext`ArrowHeight$$, 50, "feed height"}, 20, 90, 1, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         22}, {{$CellContext`Box1$$, "feed rate "}, 0, ControlType -> None, 
         ControlPlacement -> 23}, {{$CellContext`Box2$$, 
          Row[{"distillate composition ", 
            Subscript[
             Style["x", Italic], "D"]}]}, 0, ControlType -> None, 
         ControlPlacement -> 24}, {{$CellContext`Box3$$, "reflux ratio"}, 0, 
         ControlType -> None, ControlPlacement -> 25}, {{$CellContext`Box4$$, 
          Row[{"vapor flow rate ", 
            Style["V ", Italic]}]}, 0, ControlType -> None, ControlPlacement -> 
         26}, {{$CellContext`Box5$$, 
          Row[{"liquid flow rate ", 
            OverBar[
             Style["L", Italic]]}]}, 0, ControlType -> None, ControlPlacement -> 
         27}, {{$CellContext`Box6$$, 
          Row[{"vapor flow rate ", 
            OverBar[
             Style["V", Italic]]}]}, 0, ControlType -> None, ControlPlacement -> 
         28}, {{$CellContext`Ans1Range$$, 18.79018435380583}, 0, ControlType -> 
         None, ControlPlacement -> 29}, {{$CellContext`Ans2Range$$, 1}, 0, 
         ControlType -> None, ControlPlacement -> 
         30}, {{$CellContext`Ans3Range$$, 4.765399702910578}, 0, ControlType -> 
         None, ControlPlacement -> 
         31}, {{$CellContext`Ans4Range$$, 26.94719638937734}, 0, ControlType -> 
         None, ControlPlacement -> 
         32}, {{$CellContext`Ans5Range$$, 11.88985422266501}, 0, ControlType -> 
         None, ControlPlacement -> 
         33}, {{$CellContext`Ans6Range$$, 14.877110256846878`}, 0, 
         ControlType -> None, ControlPlacement -> 
         34}, {{$CellContext`Ans6RangeL$$, 0}, 0, ControlType -> None, 
         ControlPlacement -> 35}, {{$CellContext`HintTextColumnTrue$$, Null}, 
         0, ControlType -> None, ControlPlacement -> 36}, 
        Grid[{{
           Button[" new problem ", {
             Increment[$CellContext`reset$$], $CellContext`MB$$ = 
             1, $CellContext`solution$$ = False, $CellContext`hint$$ = False, 
             Clear[$CellContext`lineguess1], $CellContext`Ans1$$ = 
             0, $CellContext`Ans2$$ = 0, $CellContext`Ans3$$ = 
             0, $CellContext`Ans4$$ = 0, $CellContext`Ans5$$ = 
             0, $CellContext`Ans6$$ = 0, $CellContext`showcolumn$$ = 
             False, $CellContext`stage1guessA$$ = {0.5, 
              0.8}, $CellContext`ArrowHeight$$ = 
             50, $CellContext`qdot1$$ = {0.3, 0.9}, $CellContext`qdot2$$ = {
              0.1, 0.9}, $CellContext`ptdist$$ = {0.6, 
              0.7}, $CellContext`ptbott$$ = {0.4, 
              0.3}, $CellContext`ptfeed$$ = {0.2, 
              0.7}, $CellContext`BOLdot1$$ = {0.3, 
              0.9}, $CellContext`BOLdot2$$ = {0.1, 
              0.9}, $CellContext`TOLdot1$$ = {0.3, 
              0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}], 
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           Manipulate`Place[3], 
           PaneSelector[{1 -> Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 2 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 3 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 4 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 5 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 6 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 7 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 8 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 9 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}]}, 
            Dynamic[$CellContext`MB$$]], 
           
           PaneSelector[{
            1 -> "1. Solve for the missing green variables.", 2 -> 
             "2. Solve for the missing green variables.", 3 -> 
             "3. Solve for the missing green variables.", 4 -> 
             Column[{"4. Place the points at their correct", 
                Row[{"locations on the ", 
                  Style["y", Italic], " = ", 
                  Style["x", Italic], " line."}]}], 5 -> Row[{"5. Draw the ", 
                Style["q", Italic], "-line (feed line)."}], 6 -> 
             "6. Move the points to draw the top \n and bottom operating \
lines.", 7 -> "7. Drag the point to locate the first stage.", 8 -> 
             "8. Drag the point to locate the second stage.", 9 -> 
             "9. Drag the point to locate the final stage.", 10 -> 
             "10. Determine the feed stream location."}, 
            Dynamic[$CellContext`MB$$]], 
           Manipulate`Place[4], 
           
           PaneSelector[{
            1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
             Manipulate`Place[5], 5 -> Manipulate`Place[5], 6 -> 
             Manipulate`Place[5], 7 -> Manipulate`Place[5], 8 -> 
             Manipulate`Place[5], 9 -> Manipulate`Place[5], 10 -> 
             Manipulate`Place[5]}, 
            Dynamic[$CellContext`MB$$]], 
           PaneSelector[{5 -> Manipulate`Place[6], 6 -> Manipulate`Place[6]}, 
            Dynamic[$CellContext`MB$$]]}, {
           PaneSelector[{1 -> Grid[{{
                 Manipulate`Place[7], 
                 Manipulate`Place[8]}}], 2 -> Grid[{{
                 Manipulate`Place[9], 
                 Manipulate`Place[10]}}], 3 -> Grid[{{
                 Manipulate`Place[11], 
                 Manipulate`Place[12]}}], 4 -> Row[{
                Manipulate`Place[13], 
                Manipulate`Place[14], 
                Manipulate`Place[15]}], 5 -> Row[{
                Manipulate`Place[16], 
                Manipulate`Place[17], 
                Spacer[{200, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}], 6 -> Row[{
                Manipulate`Place[18], 
                Manipulate`Place[19], 
                Manipulate`Place[20], 
                Manipulate`Place[21], 
                Spacer[{200, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}], 10 -> Row[{
                Manipulate`Place[22], 
                Spacer[{40, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}]}, 
            Dynamic[$CellContext`MB$$]], SpanFromLeft}, {
           Manipulate`Place[23], 
           Manipulate`Place[24], 
           Manipulate`Place[25], 
           Manipulate`Place[26], 
           Manipulate`Place[27], 
           Manipulate`Place[28], 
           Manipulate`Place[29], 
           Manipulate`Place[30], 
           Manipulate`Place[31]}, {
           Manipulate`Place[32], 
           Manipulate`Place[33], 
           Manipulate`Place[34], 
           Manipulate`Place[35], 
           Manipulate`Place[36]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[Subscript] = {NHoldRest}, $CellContext`horizontalpt1 = {
        0.796279548785221, 0.8261797099333564}, $CellContext`horizontalpt2 = {
        0.5000000000000001, 0.8261797099333564}, $CellContext`verticalpt1 = {
        0.5000000000000001, 0.6357142857142858}, $CellContext`colF = 
       RGBColor[0.6, 0.4, 0.2], $CellContext`colR = 
       RGBColor[0, 0.6, 0], $CellContext`colS = Hue[0.9], $CellContext`pt1[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`col, 
          Blank[]]] := {$CellContext`col, 
         PointSize[0.022], 
         Point[$CellContext`pt], White, 
         PointSize[0.018], 
         Point[$CellContext`pt]}, $CellContext`pt2[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`col, 
          Blank[]]] := {$CellContext`col, 
         PointSize[0.022], 
         Point[$CellContext`pt]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->32784436,ExpressionUUID->"bdd39db6-4bbd-40ad-b8f0-e9ff5c710505"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection",ExpressionUUID->"5dfd097e-9056-4586-ac2a-cd3c15e42dd1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Ans1$$ = 0, $CellContext`Ans1Range$$ = 
    18.79018435380583, $CellContext`Ans2$$ = 0, $CellContext`Ans2Range$$ = 
    1, $CellContext`Ans3$$ = 0, $CellContext`Ans3Range$$ = 
    4.765399702910578, $CellContext`Ans4$$ = 0, $CellContext`Ans4Range$$ = 
    26.94719638937734, $CellContext`Ans5$$ = 0, $CellContext`Ans5Range$$ = 
    11.88985422266501, $CellContext`Ans6$$ = 0, $CellContext`Ans6Range$$ = 
    14.877110256846878`, $CellContext`Ans6RangeL$$ = 
    0, $CellContext`ArrowHeight$$ = 50, $CellContext`BOLdot1$$ = {0.3, 
    0.9}, $CellContext`BOLdot2$$ = {0.1, 0.9}, $CellContext`Box1$$ = 
    "feed rate ", $CellContext`Box2$$ = Row[{"distillate composition ", 
      Subscript[
       Style["x", Italic], "D"]}], $CellContext`Box3$$ = 
    "reflux ratio", $CellContext`Box4$$ = Row[{"vapor flow rate ", 
      Style["V ", Italic]}], $CellContext`Box5$$ = Row[{"liquid flow rate ", 
      OverBar[
       Style["L", Italic]]}], $CellContext`Box6$$ = Row[{"vapor flow rate ", 
      OverBar[
       Style["V", Italic]]}], $CellContext`hint$$ = 
    False, $CellContext`HintTextColumnTrue$$ = Null, $CellContext`MB$$ = 
    4, $CellContext`ptbott$$ = {0.4, 0.4}, $CellContext`ptdist$$ = {0.6, 
    0.6}, $CellContext`ptfeed$$ = {0.2, 0.2}, $CellContext`qdot1$$ = {0.3, 
    0.9}, $CellContext`qdot2$$ = {0.1, 0.9}, $CellContext`reset$$ = 
    482, $CellContext`showcolumn$$ = False, $CellContext`solution$$ = 
    False, $CellContext`stage1guessA$$ = {0.2, 
    0.5352106534516532}, $CellContext`TOLdot1$$ = {0.3, 
    0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {{
       Hold[$CellContext`MB$$], 4}, 1, 10, 1}, {{
       Hold[$CellContext`reset$$], 482}, 1, 10000, 1}, {{
       Hold[$CellContext`MB$$], 4}, 1, 10, 1}, {{
       Hold[$CellContext`stage1guessA$$], {0.2, 0.5352106534516532}}, {{0.01, 
      0.99}, {0.01, 0.99}}}, {{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {{
       Hold[$CellContext`hint$$], False, "hint"}, {False, True}}, {{
       Hold[$CellContext`showcolumn$$], False, "column"}, {True, False}}, {{
       Hold[$CellContext`Ans1$$], 0, 
       Dynamic[$CellContext`Box1$$]}, 0, 
      Dynamic[$CellContext`Ans1Range$$], 0.01}, {{
       Hold[$CellContext`Ans2$$], 0, 
       Dynamic[$CellContext`Box2$$]}, 0, 
      Dynamic[$CellContext`Ans2Range$$], 0.01}, {{
       Hold[$CellContext`Ans3$$], 0, 
       Dynamic[$CellContext`Box3$$]}, 0, 
      Dynamic[$CellContext`Ans3Range$$], 0.01}, {{
       Hold[$CellContext`Ans4$$], 0, 
       Dynamic[$CellContext`Box4$$]}, 0, 
      Dynamic[$CellContext`Ans4Range$$], 0.01}, {{
       Hold[$CellContext`Ans5$$], 0, 
       Dynamic[$CellContext`Box5$$]}, 0, 
      Dynamic[$CellContext`Ans5Range$$], 0.01}, {{
       Hold[$CellContext`Ans6$$], 0, 
       Dynamic[$CellContext`Box6$$]}, 
      Dynamic[$CellContext`Ans6RangeL$$], 
      Dynamic[$CellContext`Ans6Range$$], 0.01}, {{
       Hold[$CellContext`ptdist$$], {0.6, 0.6}}, Automatic}, {{
       Hold[$CellContext`ptbott$$], {0.4, 0.4}}, Automatic}, {{
       Hold[$CellContext`ptfeed$$], {0.2, 0.2}}, Automatic}, {{
       Hold[$CellContext`qdot1$$], {0.3, 0.9}}, Automatic}, {{
       Hold[$CellContext`qdot2$$], {0.1, 0.9}}, Automatic}, {{
       Hold[$CellContext`BOLdot1$$], {0.3, 0.9}}, Automatic}, {{
       Hold[$CellContext`BOLdot2$$], {0.1, 0.9}}, Automatic}, {{
       Hold[$CellContext`TOLdot1$$], {0.3, 0.7}}, Automatic}, {{
       Hold[$CellContext`TOLdot2$$], {0.1, 0.7}}, Automatic}, {{
       Hold[$CellContext`ArrowHeight$$], 50, "feed height"}, 20, 90, 1}, {{
       Hold[$CellContext`Box1$$], "feed rate "}, 0}, {{
       Hold[$CellContext`Box2$$], 
       Row[{"distillate composition ", 
         Subscript[
          Style["x", Italic], "D"]}]}, 0}, {{
       Hold[$CellContext`Box3$$], "reflux ratio"}, 0}, {{
       Hold[$CellContext`Box4$$], 
       Row[{"vapor flow rate ", 
         Style["V ", Italic]}]}, 0}, {{
       Hold[$CellContext`Box5$$], 
       Row[{"liquid flow rate ", 
         OverBar[
          Style["L", Italic]]}]}, 0}, {{
       Hold[$CellContext`Box6$$], 
       Row[{"vapor flow rate ", 
         OverBar[
          Style["V", Italic]]}]}, 0}, {{
       Hold[$CellContext`Ans1Range$$], 18.79018435380583}, 0}, {{
       Hold[$CellContext`Ans2Range$$], 1}, 0}, {{
       Hold[$CellContext`Ans3Range$$], 4.765399702910578}, 0}, {{
       Hold[$CellContext`Ans4Range$$], 26.94719638937734}, 0}, {{
       Hold[$CellContext`Ans5Range$$], 11.88985422266501}, 0}, {{
       Hold[$CellContext`Ans6Range$$], 14.877110256846878`}, 0}, {{
       Hold[$CellContext`Ans6RangeL$$], 0}, 0}, {{
       Hold[$CellContext`HintTextColumnTrue$$], Null}, 0}, {
      Hold[
       Grid[{{
          Button[" new problem ", {
            Increment[$CellContext`reset$$], $CellContext`MB$$ = 
            1, $CellContext`solution$$ = False, $CellContext`hint$$ = False, 
            Clear[$CellContext`lineguess1], $CellContext`Ans1$$ = 
            0, $CellContext`Ans2$$ = 0, $CellContext`Ans3$$ = 
            0, $CellContext`Ans4$$ = 0, $CellContext`Ans5$$ = 
            0, $CellContext`Ans6$$ = 0, $CellContext`showcolumn$$ = 
            False, $CellContext`stage1guessA$$ = {0.5, 
             0.8}, $CellContext`ArrowHeight$$ = 
            50, $CellContext`qdot1$$ = {0.3, 0.9}, $CellContext`qdot2$$ = {
             0.1, 0.9}, $CellContext`ptdist$$ = {0.6, 
             0.7}, $CellContext`ptbott$$ = {0.4, 
             0.3}, $CellContext`ptfeed$$ = {0.2, 
             0.7}, $CellContext`BOLdot1$$ = {0.3, 
             0.9}, $CellContext`BOLdot2$$ = {0.1, 
             0.9}, $CellContext`TOLdot1$$ = {0.3, 
             0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}], 
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          PaneSelector[{1 -> Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 2 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 3 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 4 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 5 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 6 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 7 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 8 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 9 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}]}, 
           Dynamic[$CellContext`MB$$]], 
          
          PaneSelector[{
           1 -> "1. Solve for the missing green variables.", 2 -> 
            "2. Solve for the missing green variables.", 3 -> 
            "3. Solve for the missing green variables.", 4 -> 
            Column[{"4. Place the points at their correct", 
               Row[{"locations on the ", 
                 Style["y", Italic], " = ", 
                 Style["x", Italic], " line."}]}], 5 -> Row[{"5. Draw the ", 
               Style["q", Italic], "-line (feed line)."}], 6 -> 
            "6. Move the points to draw the top \n and bottom operating \
lines.", 7 -> "7. Drag the point to locate the first stage.", 8 -> 
            "8. Drag the point to locate the second stage.", 9 -> 
            "9. Drag the point to locate the final stage.", 10 -> 
            "10. Determine the feed stream location."}, 
           Dynamic[$CellContext`MB$$]], 
          Manipulate`Place[4], 
          
          PaneSelector[{
           1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
            Manipulate`Place[5], 5 -> Manipulate`Place[5], 6 -> 
            Manipulate`Place[5], 7 -> Manipulate`Place[5], 8 -> 
            Manipulate`Place[5], 9 -> Manipulate`Place[5], 10 -> 
            Manipulate`Place[5]}, 
           Dynamic[$CellContext`MB$$]], 
          PaneSelector[{5 -> Manipulate`Place[6], 6 -> Manipulate`Place[6]}, 
           Dynamic[$CellContext`MB$$]]}, {
          PaneSelector[{1 -> Grid[{{
                Manipulate`Place[7], 
                Manipulate`Place[8]}}], 2 -> Grid[{{
                Manipulate`Place[9], 
                Manipulate`Place[10]}}], 3 -> Grid[{{
                Manipulate`Place[11], 
                Manipulate`Place[12]}}], 4 -> Row[{
               Manipulate`Place[13], 
               Manipulate`Place[14], 
               Manipulate`Place[15]}], 5 -> Row[{
               Manipulate`Place[16], 
               Manipulate`Place[17], 
               Spacer[{200, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}], 6 -> Row[{
               Manipulate`Place[18], 
               Manipulate`Place[19], 
               Manipulate`Place[20], 
               Manipulate`Place[21], 
               Spacer[{200, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}], 10 -> Row[{
               Manipulate`Place[22], 
               Spacer[{40, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}]}, 
           Dynamic[$CellContext`MB$$]], SpanFromLeft}, {
          Manipulate`Place[23], 
          Manipulate`Place[24], 
          Manipulate`Place[25], 
          Manipulate`Place[26], 
          Manipulate`Place[27], 
          Manipulate`Place[28], 
          Manipulate`Place[29], 
          Manipulate`Place[30], 
          Manipulate`Place[31]}, {
          Manipulate`Place[32], 
          Manipulate`Place[33], 
          Manipulate`Place[34], 
          Manipulate`Place[35], 
          Manipulate`Place[36]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`solution$10168$$ = False, $CellContext`MB$10169$$ = 
    0, $CellContext`reset$10170$$ = 0, $CellContext`stage1guessA$10171$$ = 
    False, $CellContext`hint$10172$$ = 
    False, $CellContext`showcolumn$10173$$ = 
    False, $CellContext`Ans1$10174$$ = 0, $CellContext`Ans2$10175$$ = 
    0, $CellContext`Ans3$10176$$ = 0, $CellContext`Ans4$10177$$ = 
    0, $CellContext`Ans5$10178$$ = 0, $CellContext`Ans6$10179$$ = 
    0, $CellContext`ArrowHeight$10180$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`Ans1$$ = 0, $CellContext`Ans1Range$$ = 
        18.79018435380583, $CellContext`Ans2$$ = 0, $CellContext`Ans2Range$$ = 
        1, $CellContext`Ans3$$ = 0, $CellContext`Ans3Range$$ = 
        4.765399702910578, $CellContext`Ans4$$ = 0, $CellContext`Ans4Range$$ = 
        26.94719638937734, $CellContext`Ans5$$ = 0, $CellContext`Ans5Range$$ = 
        11.88985422266501, $CellContext`Ans6$$ = 0, $CellContext`Ans6Range$$ = 
        14.877110256846878`, $CellContext`Ans6RangeL$$ = 
        0, $CellContext`ArrowHeight$$ = 
        50, $CellContext`BOLdot1$$ = {0.3, 0.9}, $CellContext`BOLdot2$$ = {
         0.1, 0.9}, $CellContext`Box1$$ = "feed rate ", $CellContext`Box2$$ = 
        Row[{"distillate composition ", 
           Subscript[
            Style["x", Italic], "D"]}], $CellContext`Box3$$ = 
        "reflux ratio", $CellContext`Box4$$ = Row[{"vapor flow rate ", 
           Style["V ", Italic]}], $CellContext`Box5$$ = 
        Row[{"liquid flow rate ", 
           OverBar[
            Style["L", Italic]]}], $CellContext`Box6$$ = 
        Row[{"vapor flow rate ", 
           OverBar[
            Style["V", Italic]]}], $CellContext`hint$$ = 
        False, $CellContext`HintTextColumnTrue$$ = Null, $CellContext`MB$$ = 
        4, $CellContext`ptbott$$ = {0.4, 0.4}, $CellContext`ptdist$$ = {0.6, 
         0.6}, $CellContext`ptfeed$$ = {0.2, 0.2}, $CellContext`qdot1$$ = {
         0.3, 0.9}, $CellContext`qdot2$$ = {0.1, 0.9}, $CellContext`reset$$ = 
        482, $CellContext`showcolumn$$ = False, $CellContext`solution$$ = 
        False, $CellContext`stage1guessA$$ = {0.2, 
         0.5352106534516532}, $CellContext`TOLdot1$$ = {0.3, 
         0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}, "ControllerVariables" :> {
        Hold[$CellContext`solution$$, $CellContext`solution$10168$$, False], 
        Hold[$CellContext`MB$$, $CellContext`MB$10169$$, 0], 
        Hold[$CellContext`reset$$, $CellContext`reset$10170$$, 0], 
        Hold[$CellContext`stage1guessA$$, $CellContext`stage1guessA$10171$$, 
         False], 
        Hold[$CellContext`hint$$, $CellContext`hint$10172$$, False], 
        Hold[$CellContext`showcolumn$$, $CellContext`showcolumn$10173$$, 
         False], 
        Hold[$CellContext`Ans1$$, $CellContext`Ans1$10174$$, 0], 
        Hold[$CellContext`Ans2$$, $CellContext`Ans2$10175$$, 0], 
        Hold[$CellContext`Ans3$$, $CellContext`Ans3$10176$$, 0], 
        Hold[$CellContext`Ans4$$, $CellContext`Ans4$10177$$, 0], 
        Hold[$CellContext`Ans5$$, $CellContext`Ans5$10178$$, 0], 
        Hold[$CellContext`Ans6$$, $CellContext`Ans6$10179$$, 0], 
        Hold[$CellContext`ArrowHeight$$, $CellContext`ArrowHeight$10180$$, 
         0]}, "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`\[Gamma]1$, $CellContext`\[Gamma]2$, \
$CellContext`A12$, $CellContext`A21$, $CellContext`ArrowPt1$, \
$CellContext`ArrowPt2$, $CellContext`BOLintercept$, $CellContext`BOLslope$, \
$CellContext`botflow$, $CellContext`CoordA$, $CellContext`CoordB$, \
$CellContext`CoordC$, $CellContext`CoordD$, $CellContext`CoordE$, \
$CellContext`CoordF$, $CellContext`CoordG$, $CellContext`CoordH$, \
$CellContext`CoordI$, $CellContext`CoordJ$, $CellContext`CoordK$, \
$CellContext`CoordL$, $CellContext`distcolumn$, $CellContext`distflow$, \
$CellContext`Dotnumbers$, $CellContext`equilb$, $CellContext`F$, \
$CellContext`feed$, $CellContext`Feedstate$, $CellContext`GuessA$, \
$CellContext`GuessB$, $CellContext`GuessC$, $CellContext`GuessD$, \
$CellContext`GuessE$, $CellContext`GuessF$, $CellContext`GuessG$, \
$CellContext`GuessH$, $CellContext`GuessI$, $CellContext`GuessJ$, \
$CellContext`GuessK$, $CellContext`GuessL$, $CellContext`i$, $CellContext`L$, \
$CellContext`Lbar$, $CellContext`LeftLimit$, $CellContext`MissingA$, \
$CellContext`MissingB$, $CellContext`MissingC$, $CellContext`MissingD$, \
$CellContext`MissingE$, $CellContext`MissingF$, $CellContext`MissingG$, \
$CellContext`MissingH$, $CellContext`MissingI$, $CellContext`MissingJ$, \
$CellContext`MissingK$, $CellContext`MissingL$, $CellContext`nR$, \
$CellContext`nS$, $CellContext`nT$, $CellContext`opertRect$, \
$CellContext`opertStrp$, $CellContext`P$, $CellContext`Pane1$, \
$CellContext`Pane2$, $CellContext`Part9Answer$, $CellContext`plotlabel$, \
$CellContext`q$, $CellContext`R$, $CellContext`RandomizeValuesShown$, \
$CellContext`rect$, $CellContext`rectnumbers$, $CellContext`RightLimit$, \
$CellContext`Rmin$, $CellContext`Rx$, $CellContext`Ry$, $CellContext`size1$, \
$CellContext`size2$, $CellContext`size3$, $CellContext`size4$, \
$CellContext`Sr$, $CellContext`stagelabels$, $CellContext`stagelines$, \
$CellContext`strip$, $CellContext`Sx$, $CellContext`Sy$, $CellContext`T$, \
$CellContext`tb$, $CellContext`V$, $CellContext`Value1$, \
$CellContext`Value2$, $CellContext`Vbar$, $CellContext`VPa$, \
$CellContext`VPb$, $CellContext`x1$, $CellContext`x2$, $CellContext`xb$, \
$CellContext`xd$, $CellContext`xeq$, $CellContext`xi$, $CellContext`xR$, \
$CellContext`xS$, $CellContext`y1$, $CellContext`y2$, $CellContext`yeq$, \
$CellContext`yi$, $CellContext`yR$, $CellContext`yS$, $CellContext`zf$}, 
        SeedRandom[$CellContext`reset$$]; $CellContext`A12$ = 
         RandomReal[]; $CellContext`A21$ = 
         RandomReal[{-0.5, 1}]; $CellContext`P$ = 
         RandomReal[{100, 300}]; $CellContext`q$ = 
         RandomChoice[{-0.2, 0.05, 0.22, 0.49, 0.75, 0.95, 
           1.13}]; $CellContext`zf$ = 
         RandomInteger[{30, 70}]/100.; $CellContext`F$ = 
         RandomInteger[{100, 1000}]/100.; $CellContext`xd$ = 
         RandomInteger[{85, 92}]/100.; $CellContext`xb$ = 
         RandomInteger[{5, 12}]/100.; $CellContext`VPa$ = 
         10^(8.08097 - 1582.271/($CellContext`T$ + 
           239.726)); $CellContext`VPb$ = 
         10^(8.07131 - 1730.63/($CellContext`T$ + 233.426)); 
        Clear[$CellContext`T$, $CellContext`i$]; $CellContext`\[Gamma]1$[
           Pattern[$CellContext`i$, 
            Blank[]]] = 
         Exp[$CellContext`x2$[$CellContext`i$]^2 ($CellContext`A12$ + 
            2 ($CellContext`A21$ - $CellContext`A12$) (
              1 - $CellContext`x2$[$CellContext`i$]))]; \
$CellContext`\[Gamma]2$[
           Pattern[$CellContext`i$, 
            Blank[]]] = 
         Exp[(1 - $CellContext`x2$[$CellContext`i$])^2 ($CellContext`A21$ + 
            2 ($CellContext`A12$ - $CellContext`A21$) \
$CellContext`x2$[$CellContext`i$])]; $CellContext`i$ = 0; 
        While[$CellContext`i$ < 
          101, {$CellContext`x2$[$CellContext`i$] = $CellContext`i$ 
            0.01, $CellContext`T$[$CellContext`i$] = Part[
             
             FindRoot[$CellContext`P$ == $CellContext`VPb$ $CellContext`\
\[Gamma]1$[$CellContext`i$] (
                 1 - $CellContext`x2$[$CellContext`i$]) + $CellContext`VPa$ \
$CellContext`\[Gamma]2$[$CellContext`i$] $CellContext`x2$[$CellContext`i$], \
{$CellContext`T$, 60}, AccuracyGoal -> 3], 1, 
             2], $CellContext`y2$[$CellContext`i$] = 
           ReplaceAll[$CellContext`x2$[$CellContext`i$] + ($CellContext`VPa$ \
$CellContext`\[Gamma]2$[$CellContext`i$] \
($CellContext`x2$[$CellContext`i$]/$CellContext`P$) - \
$CellContext`x2$[$CellContext`i$]), $CellContext`T$ -> \
$CellContext`T$[$CellContext`i$]], 
           Increment[$CellContext`i$]}]; $CellContext`tb$ = Table[{
            $CellContext`x2$[$CellContext`i$], 
            $CellContext`y2$[$CellContext`i$]}, {$CellContext`i$, 0, 
            100}]; $CellContext`equilb$ = Quiet[
           Interpolation[$CellContext`tb$]]; $CellContext`feed$[
           Pattern[$CellContext`x$, 
            Blank[]]] := $CellContext`q$ ($CellContext`x$/($CellContext`q$ - 
            1)) - $CellContext`zf$/($CellContext`q$ - 1); $CellContext`xeq$ = 
         ReplaceAll[$CellContext`x, 
           Quiet[
            
            FindRoot[$CellContext`feed$[$CellContext`x] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, $CellContext`zf$}]]]; \
$CellContext`yeq$ = $CellContext`feed$[$CellContext`xeq$]; \
$CellContext`opertRect$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := $CellContext`yeq$ + (($CellContext`x$ - \
$CellContext`xeq$)/($CellContext`xd$ - $CellContext`xeq$)) ($CellContext`xd$ - \
$CellContext`yeq$); $CellContext`opertStrp$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := $CellContext`yeq$ + (($CellContext`x$ - \
$CellContext`xeq$)/($CellContext`xb$ - $CellContext`xeq$)) ($CellContext`xb$ - \
$CellContext`yeq$); $CellContext`Rmin$ = (($CellContext`xd$ - \
$CellContext`yeq$)/($CellContext`xd$ - $CellContext`xeq$))/(
          1 - ($CellContext`xd$ - $CellContext`yeq$)/($CellContext`xd$ - \
$CellContext`xeq$)); $CellContext`R$ = 
         If[$CellContext`Rmin$ < 1, $CellContext`Rmin$ = 
           RandomInteger[{13, 18}]/10., $CellContext`Rmin$ (
            RandomInteger[{15, 20}]/10.)]; $CellContext`rect$[
           Pattern[$CellContext`x$, 
            Blank[]]] := ($CellContext`R$/($CellContext`R$ + 
            1)) $CellContext`x$ + $CellContext`xd$/($CellContext`R$ + 
           1); $CellContext`xi$ = ReplaceAll[$CellContext`x, 
           Quiet[
            
            FindRoot[$CellContext`feed$[$CellContext`x] == \
$CellContext`rect$[$CellContext`x], {$CellContext`x, 
              0.7}]]]; $CellContext`yi$ = \
$CellContext`rect$[$CellContext`xi$]; $CellContext`strip$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := ($CellContext`Lbar$/$CellContext`Vbar$) \
$CellContext`x$ - ($CellContext`Lbar$/$CellContext`Vbar$ - 
           1) $CellContext`xb$; $CellContext`distflow$ = 
         ReplaceAll[$CellContext`Dflow, 
           Part[
            
            Solve[{$CellContext`zf$ $CellContext`F$ == $CellContext`xd$ \
$CellContext`Dflow + $CellContext`xb$ $CellContext`Bflow, $CellContext`F$ == \
$CellContext`Dflow + $CellContext`Bflow}, {$CellContext`Dflow, \
$CellContext`Bflow}], 
            1]]; $CellContext`botflow$ = $CellContext`F$ - \
$CellContext`distflow$; $CellContext`L$ = $CellContext`distflow$ \
$CellContext`R$; $CellContext`V$ = $CellContext`distflow$ + $CellContext`L$; \
$CellContext`Lbar$ = $CellContext`L$ + $CellContext`q$ $CellContext`F$; \
$CellContext`Vbar$ = $CellContext`V$ - (
           1 - $CellContext`q$) $CellContext`F$; $CellContext`i$ = 
         0; $CellContext`yR$[0] = $CellContext`xd$; $CellContext`xR$[
          0] = $CellContext`xd$; 
        While[$CellContext`xR$[$CellContext`i$] > $CellContext`xi$, \
{$CellContext`x1$ = ReplaceAll[$CellContext`x, 
             Quiet[
              
              FindRoot[$CellContext`yR$[$CellContext`i$] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, \
$CellContext`xR$[$CellContext`i$] - 
                0.1}]]], $CellContext`y1$ = \
$CellContext`rect$[$CellContext`x1$], 
           If[
            Or[$CellContext`x1$ > $CellContext`xi$, 
             
             And[$CellContext`x1$ < $CellContext`xi$, $CellContext`i$ < 
              1]], {$CellContext`xR$[$CellContext`i$ + 
               1] = $CellContext`x1$, $CellContext`yR$[$CellContext`i$ + 
               1] = $CellContext`y1$}], 
           
           Increment[$CellContext`i$], $CellContext`nR$ = $CellContext`i$ - 
            1}]; $CellContext`i$ = 
         0; $CellContext`yS$[
          0] = $CellContext`yR$[$CellContext`nR$]; $CellContext`xS$[
          0] = $CellContext`xR$[$CellContext`nR$]; 
        While[$CellContext`xS$[$CellContext`i$] >= $CellContext`xb$, \
{$CellContext`x1$ = ReplaceAll[$CellContext`x, 
             Quiet[
              
              FindRoot[$CellContext`yS$[$CellContext`i$] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, \
$CellContext`xS$[$CellContext`i$] - 
                0.1}]]], $CellContext`y1$ = \
$CellContext`strip$[$CellContext`x1$], $CellContext`xS$[$CellContext`i$ + 
             1] = $CellContext`x1$, $CellContext`yS$[$CellContext`i$ + 
             1] = $CellContext`y1$, 
           Increment[$CellContext`i$]}]; $CellContext`nS$ = $CellContext`i$ - 
          1; $CellContext`nT$ = $CellContext`nR$ + $CellContext`nS$ + 
          1; $CellContext`Ry$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xR$[#], 
                $CellContext`yR$[# - 1]}, {
                $CellContext`xR$[#], 
                $CellContext`yR$[#]}}]& , 
             Range[$CellContext`nR$]]}, 
           Map[Line[{{
               $CellContext`xR$[#], 
               $CellContext`yR$[# - 1]}, {
               $CellContext`xR$[#], 
               $CellContext`yR$[#]}}]& , 
            Range[$CellContext`nR$]]]; $CellContext`Rx$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xR$[#], 
                $CellContext`yR$[#]}, {
                $CellContext`xR$[# + 1], 
                $CellContext`yR$[#]}}]& , 
             If[$CellContext`nR$ >= 1, 
              Range[0, $CellContext`nR$ - 1], {0}]]}, 
           Map[Line[{{
               $CellContext`xR$[#], 
               $CellContext`yR$[#]}, {
               $CellContext`xR$[# + 1], 
               $CellContext`yR$[#]}}]& , 
            If[$CellContext`nR$ >= 1, 
             Range[0, $CellContext`nR$ - 1], {0}]]]; $CellContext`Sy$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xS$[# + 1], 
                $CellContext`yS$[#]}, {
                $CellContext`xS$[# + 1], 
                $CellContext`yS$[# + 1]}}]& , 
             Range[0, $CellContext`nS$ - 1]]}, 
           Map[Line[{{
               $CellContext`xS$[# + 1], 
               $CellContext`yS$[#]}, {
               $CellContext`xS$[# + 1], 
               $CellContext`yS$[# + 1]}}]& , 
            Range[0, $CellContext`nS$ - 1]]]; $CellContext`Sx$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xS$[# - 1], 
                $CellContext`yS$[# - 1]}, {
                $CellContext`xS$[#], 
                $CellContext`yS$[# - 1]}}]& , 
             Range[$CellContext`nS$ + 1]]}, 
           Map[Line[{{
               $CellContext`xS$[# - 1], 
               $CellContext`yS$[# - 1]}, {
               $CellContext`xS$[#], 
               $CellContext`yS$[# - 1]}}]& , 
            Range[$CellContext`nS$ + 1]]]; $CellContext`Sr$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Line[{{
               $CellContext`xS$[$CellContext`nS$ + 1], 
               $CellContext`yS$[$CellContext`nS$]}, {
               $CellContext`xS$[$CellContext`nS$ + 1], 0}}]}, 
           Line[{{
              $CellContext`xS$[$CellContext`nS$ + 1], 
              $CellContext`yS$[$CellContext`nS$]}, {
              $CellContext`xS$[$CellContext`nS$ + 1], 
              0}}]]; $CellContext`Dotnumbers$ = Table[
           Text[
            Framed[
             Style[
              
              If[$CellContext`a < $CellContext`nT$ - 1, $CellContext`a + 1, 
               "R"], 17], Background -> White, 
             FrameMargins -> {{6, 4}, {0, 0}}, RoundingRadius -> 25, 
             FrameStyle -> Thin], 
            Which[$CellContext`a == 0, {
              If[$CellContext`nR$ > 0, 
               $CellContext`xR$[1], 
               $CellContext`xS$[1]], 
              $CellContext`yR$[0]}, 
             And[$CellContext`a == 1, $CellContext`nR$ == 0], {
              $CellContext`xS$[2], 
              $CellContext`yS$[1]}, $CellContext`a < $CellContext`nR$, {
              $CellContext`xR$[$CellContext`a + 1], 
              $CellContext`yR$[$CellContext`a]}, $CellContext`a == \
$CellContext`nR$, {
              $CellContext`xS$[1], 
              $CellContext`yS$[0]}, 
             
             Inequality[$CellContext`nR$, Less, $CellContext`a, 
              LessEqual, $CellContext`nT$ - 1], {
              $CellContext`xS$[$CellContext`a - $CellContext`nR$ + 1], 
              $CellContext`yS$[$CellContext`a - $CellContext`nR$]}], {
            1.2, -0.8}], {$CellContext`a, 0, $CellContext`nT$ - 
            1}]; $CellContext`plotlabel$ = Switch[$CellContext`MB$$, 1, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"equations: ", 
                Style["F", Italic], " = ", 
                Style["B", Italic], " + ", 
                Style["D", Italic], " and ", 
                Style["F", Italic], 
                Subscript[
                 Style["z", Italic], "feed"], " = ", 
                Subscript[
                 Style["x", Italic], "B"], 
                Style["B", Italic], " + ", 
                Subscript[
                 Style["x", Italic], "D"], 
                Style["D", Italic]}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do an overall balance and a component balance."}]], 2, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Equations: ", 
                Style["V ", Italic], "= ", 
                Style["L", Italic], " + ", 
                Style["D", Italic], " and ", 
                Style["L", Italic], " / ", 
                Style["D", Italic], " = reflux ratio."}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do a mass balance around the condenser."}]], 3, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Equations: ", 
                Style["V - ", Italic], 
                OverBar[
                 Style["V", Italic]], " + " Style["L ", Italic], "= ", 
                Style["V ", Italic], "+ ", 
                OverBar[
                 Style["L", Italic]], "      and      q = (", 
                OverBar[
                 Style["L", Italic]], 
                Style[" - L)/F.", Italic]}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do a mass balance around the feed stage."}]], 4, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{
                Style["x", Italic], " and ", 
                Style["y", Italic], 
                " coordinates should equal their respective \
compositions."}]}]], 5, 
           Which[
            
            And[$CellContext`solution$$ == True, $CellContext`showcolumn$$ == 
             False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Style["q", Italic], "-line equation: ", 
              Subscript[
               Style["y", Italic], "F"], " - ((", 
              Style["q", Italic], "/", 
              Style["q", Italic], "-1)x -(", 
              Subscript[
               Style["z", Italic], "feed"], "/(", 
              Style["q", Italic], "-1))."}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True, $CellContext`showcolumn$$ == False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Style["q", Italic], "-line slope: ", 
              Style["q", Italic], "/(", 
              Style["q", Italic], "-1)"}], $CellContext`showcolumn$$ == True, 
            ""], 6, 
           Which[
            
            And[$CellContext`solution$$ == True, $CellContext`showcolumn$$ == 
             False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Subscript[
               Style["y", Italic], "top"], " = (", 
              Style["L", Italic], "/", 
              Style["V", Italic], ")x + (1-(", 
              Style["L", Italic], "/", 
              Style["V", Italic], ")", 
              Subscript[
               Style["x", Italic], "D"], " and ", 
              Subscript["y", "bot"], " = (", 
              OverBar[
               Style["L", Italic]], "/", 
              OverBar[
               Style["V", Italic]], ")", 
              Style["x", Italic], " + (1-(", 
              OverBar[
               Style["L", Italic]], "/", 
              OverBar[
               Style["V", Italic]], ")", 
              Subscript[
               Style["x", Italic], "B"], ")."}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False, $CellContext`showcolumn$$ == False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True, $CellContext`showcolumn$$ == False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Slope of the top operating line = (", 
                Style["L", Italic], "/", 
                Style["V", Italic], ") and bottom operating line = (", 
                OverBar[
                 Style["L", Italic]], "/", 
                OverBar[
                 Style["V", Italic]], ")."}]}], $CellContext`showcolumn$$ == 
            True, ""], 7, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], "Start at the condenser."}]], 8, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], "The second stair from the top."}]], 9, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Continue the \"stair stepping\" method."}]], 10, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], " "}]]]; $CellContext`HintTextColumnTrue$$ = 
         Which[
           
           And[$CellContext`MB$$ == 5, $CellContext`hint$$ == 
            True, $CellContext`solution$$ == False, $CellContext`showcolumn$$ == 
            True], 
           Row[{
             Style["q", Italic], "-line slope: ", 
             Style["q", Italic], "/(", 
             Style["q", Italic], "-1)"}], 
           
           And[$CellContext`MB$$ == 5, $CellContext`solution$$ == 
            True, $CellContext`showcolumn$$ == True], 
           Row[{
             Spacer[{0, 1, 10}], 
             Style["q", Italic], "-line equation: ", 
             Subscript[
              Style["y", Italic], "F"], " = (", 
             Style["q", Italic], "/(", 
             Style["q", Italic], "-1))", 
             Style["x", Italic], "-(", 
             Subscript[
              Style["z", Italic], "feed"], "/(", 
             Style["q", Italic], "-1))"}], 
           
           And[$CellContext`MB$$ == 5, $CellContext`hint$$ == 
            False, $CellContext`solution$$ == 
            False, $CellContext`showcolumn$$ == True], " ", 
           
           And[$CellContext`MB$$ == 6, $CellContext`hint$$ == 
            True, $CellContext`solution$$ == False, $CellContext`showcolumn$$ == 
            True], 
           Row[{"Slope of the top operating line = (", 
             Style["L", Italic], "/", 
             Style["V", Italic], ") and bottom operating line = (", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], ")"}], 
           
           And[$CellContext`MB$$ == 6, $CellContext`solution$$ == 
            True, $CellContext`showcolumn$$ == True], 
           Row[{
             Spacer[{0, 1, 10}], 
             Subscript["y", "top"], " = (", 
             Style["L", Italic], "/", 
             Style["V", Italic], ") x + (1-(," Style["L", Italic], "/", 
             Style["V", Italic], "))", 
             Subscript["x", "D"], " and ", 
             Subscript["y", "bot"], " = (", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], "x + (1-(", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], ")", 
             Subscript["x", "B"], ")"}], 
           
           And[$CellContext`MB$$ == 6, $CellContext`hint$$ == 
            False, $CellContext`solution$$ == 
            False, $CellContext`showcolumn$$ == True], " ", 
           And[
            
            AnyTrue[{5, 
             6}, # == $CellContext`MB$$& ], $CellContext`showcolumn$$ == 
            False], " ", 
           And[$CellContext`MB$$ == 10, $CellContext`hint$$ == True], 
           "Has to do with where the two operating lines intersect.", 
           And[$CellContext`MB$$ == 10, $CellContext`hint$$ == False], 
           " "]; $CellContext`stagelines$ = Table[{
            Thickness[0.005], 
            
            Line[{{28, 20 + (70/$CellContext`nT$) $CellContext`i$}, {
              65, 20 + (
                 70/$CellContext`nT$) $CellContext`i$}}]}, {$CellContext`i$, 
            1, $CellContext`nT$ - 1}]; $CellContext`stagelabels$ = Table[
           Style[
            Text[
             StringJoin["stage ", 
              ToString[$CellContext`nT$ - $CellContext`i$], ""], {
             47, 22 + (70/$CellContext`nT$) $CellContext`i$}], 
            15], {$CellContext`i$, 1, $CellContext`nT$ - 
            1}]; $CellContext`ArrowPt1$ = {-15, 
           
           If[$CellContext`MB$$ == 1, 
            49, $CellContext`ArrowHeight$$]}; $CellContext`ArrowPt2$ = {28, 
           
           If[$CellContext`MB$$ == 1, 
            49, $CellContext`ArrowHeight$$]}; $CellContext`Part9Answer$ = 
         Rectangle[{28, 20 + (70/$CellContext`nT$) $CellContext`nS$}, {
           65, 20 + (70/$CellContext`nT$) ($CellContext`nS$ + 
              1)}]; $CellContext`LeftLimit$ = 
         If[$CellContext`MB$$ == 6, 10, -5]; $CellContext`RightLimit$ = 
         If[$CellContext`MB$$ >= 4, 100, 120]; $CellContext`stage1guessA$$ = {
           Part[$CellContext`stage1guessA$$, 1], 
           $CellContext`equilb$[
            Part[$CellContext`stage1guessA$$, 1]]}; $CellContext`ptdist$$ = {
           Part[$CellContext`ptdist$$, 1], 
           Part[$CellContext`ptdist$$, 1]}; $CellContext`ptfeed$$ = {
           Part[$CellContext`ptfeed$$, 1], 
           Part[$CellContext`ptfeed$$, 1]}; $CellContext`ptbott$$ = {
           Part[$CellContext`ptbott$$, 1], 
           Part[$CellContext`ptbott$$, 1]}; $CellContext`horizontalpt1 = 
         If[Part[$CellContext`stage1guessA$$, 2] >= $CellContext`yi$, {
            ReplaceAll[
             Quiet[$CellContext`x], 
             FindRoot[
             Part[$CellContext`stage1guessA$$, 
                2] == $CellContext`rect$[$CellContext`x], {$CellContext`x, 0, 
               1}]], 
            Part[$CellContext`stage1guessA$$, 2]}, {
            ReplaceAll[
             Quiet[$CellContext`x], 
             FindRoot[
             Part[$CellContext`stage1guessA$$, 
                2] == $CellContext`strip$[$CellContext`x], {$CellContext`x, 0,
                1}]], 
            
            Part[$CellContext`stage1guessA$$, 
             2]}]; $CellContext`horizontalpt2 = {
           ReplaceAll[
            Quiet[$CellContext`x], 
            FindRoot[
            Part[$CellContext`stage1guessA$$, 
               2] == $CellContext`equilb$[$CellContext`x], {$CellContext`x, 0,
               1}]], 
           Part[$CellContext`stage1guessA$$, 2]}; $CellContext`verticalpt1 = 
         Which[Part[$CellContext`horizontalpt2, 1] >= $CellContext`xi$, {
            Part[$CellContext`horizontalpt2, 1], 
            $CellContext`rect$[
             Part[$CellContext`horizontalpt2, 1]]}, 
           Inequality[$CellContext`xb$, LessEqual, 
            Part[$CellContext`horizontalpt2, 1], Less, $CellContext`xi$], {
            Part[$CellContext`horizontalpt2, 1], 
            $CellContext`strip$[
             Part[$CellContext`horizontalpt2, 1]]}, 
           Part[$CellContext`horizontalpt2, 1] < $CellContext`xb$, {
            Part[$CellContext`horizontalpt2, 1], 
            0}]; $CellContext`RandomizeValuesShown$ = RandomInteger[{1, 6}]; 
        Switch[$CellContext`RandomizeValuesShown$, 
          1, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = $CellContext`Ans1$$, \
$CellContext`GuessD$ = 0, $CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = $CellContext`Ans2$$, \
$CellContext`GuessG$ = 
           0, $CellContext`GuessH$ = $CellContext`Ans3$$, \
$CellContext`GuessI$ = $CellContext`Ans4$$, $CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}, 
          2, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = $CellContext`Ans1$$, \
$CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = $CellContext`Ans2$$, \
$CellContext`GuessG$ = 
           0, $CellContext`GuessH$ = $CellContext`Ans3$$, \
$CellContext`GuessI$ = $CellContext`Ans4$$, $CellContext`GuessJ$ = \
$CellContext`Ans5$$, $CellContext`GuessK$ = 
           0, $CellContext`GuessL$ = $CellContext`Ans6$$}, 
          3, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = $CellContext`Ans1$$, \
$CellContext`GuessE$ = $CellContext`Ans2$$, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = 
           0, $CellContext`GuessI$ = $CellContext`Ans4$$, \
$CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}, 
          4, {$CellContext`GuessA$ = $CellContext`Ans1$$, \
$CellContext`GuessB$ = 0, $CellContext`GuessC$ = 0, $CellContext`GuessD$ = 
           0, $CellContext`GuessE$ = $CellContext`Ans2$$, \
$CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = 
           0, $CellContext`GuessI$ = $CellContext`Ans4$$, \
$CellContext`GuessJ$ = $CellContext`Ans5$$, $CellContext`GuessK$ = \
$CellContext`Ans6$$, $CellContext`GuessL$ = 0}, 
          5, {$CellContext`GuessA$ = $CellContext`Ans1$$, \
$CellContext`GuessB$ = $CellContext`Ans2$$, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = 0, $CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = $CellContext`Ans4$$, $CellContext`GuessI$ = 
           
           0, $CellContext`GuessJ$ = $CellContext`Ans5$$, \
$CellContext`GuessK$ = $CellContext`Ans6$$, $CellContext`GuessL$ = 0}, 
          6, {$CellContext`GuessA$ = 
           0, $CellContext`GuessB$ = $CellContext`Ans2$$, \
$CellContext`GuessC$ = $CellContext`Ans1$$, $CellContext`GuessD$ = 
           0, $CellContext`GuessE$ = 0, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = $CellContext`Ans4$$, $CellContext`GuessI$ = 
           0, $CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}]; $CellContext`Box1$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, "distillate flow rate",
            2, "bottoms flow rate", 3, "bottoms flow rate", 4, "feed rate ", 
           5, "feed rate ", 6, "distillate flow rate"]; $CellContext`Box2$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"bottoms composition ", 
             Subscript[
              Style["x", Italic], "B"]}], 2, 
           Row[{"bottoms composition ", 
             Subscript[
              Style["x", Italic], "B"]}], 3, 
           Row[{"distillate composition ", 
             Subscript[
              Style["x", Italic], "D"]}], 4, 
           Row[{"distillate composition ", 
             Subscript[
              Style["x", Italic], "D"]}], 5, 
           Row[{"feed composition ", 
             Subscript[
              Style["z", Italic], "feed"]}], 6, 
           Row[{"feed composition ", 
             Subscript[
              Style["z", Italic], "feed"]}]]; $CellContext`Box3$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 2, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 3, "reflux ratio", 4, "reflux ratio", 5, 
           "reflux ratio", 6, "reflux ratio"]; $CellContext`Box4$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 2, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 3, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 4, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 5, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 6, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}]]; $CellContext`Box5$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 2, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 3, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 4, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 5, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 6, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}]]; $CellContext`Box6$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, "quality ", 2, 
           "quality ", 3, "quality ", 4, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 5, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 6, "quality "]; $CellContext`Ans1Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`F$, 2, 
           RandomReal[{1, 3}] $CellContext`F$, 3, 
           RandomReal[{1, 3}] $CellContext`F$, 4, 
           RandomReal[{1, 3}] $CellContext`F$, 5, 
           RandomReal[{1, 3}] $CellContext`F$, 6, 
           RandomReal[{1, 3}] $CellContext`F$]; $CellContext`Ans2Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 1, 2, 1, 3, 1, 4, 1, 5,
            1, 6, 1]; $CellContext`Ans3Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`L$, 2, 
           RandomReal[{1, 3}] $CellContext`L$, 3, 
           RandomReal[{1, 3}] $CellContext`R$, 4, 
           RandomReal[{1, 3}] $CellContext`R$, 5, 
           RandomReal[{1, 3}] $CellContext`R$, 6, 
           RandomReal[{1, 3}] $CellContext`R$]; $CellContext`Ans4Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`V$, 2, 
           RandomReal[{1, 3}] $CellContext`V$, 3, 
           RandomReal[{1, 3}] $CellContext`V$, 4, 
           RandomReal[{1, 3}] $CellContext`V$, 5, 
           RandomReal[{1, 3}] $CellContext`L$, 6, 
           RandomReal[{1, 3}] $CellContext`L$]; $CellContext`Ans5Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`Vbar$, 2, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 3, 
           RandomReal[{1, 3}] $CellContext`Vbar$, 4, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 5, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 6, 
           RandomReal[{1, 3}] $CellContext`Vbar$]; $CellContext`Ans6Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 2, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 3, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 4, RandomReal[{1, 3}] $CellContext`Vbar$,
            5, RandomReal[{1, 3}] $CellContext`Vbar$, 6, 
           
           RandomChoice[{(-2.3) $CellContext`q$, 2.1 $CellContext`q$, 
             1.2 $CellContext`q$, (-1.4) $CellContext`q$, (-1.48) \
$CellContext`q$, 1.87 $CellContext`q$}]]; $CellContext`Ans6RangeL$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 
           1, -$CellContext`Ans6Range$$, 2, -$CellContext`Ans6Range$$, 
           3, -$CellContext`Ans6Range$$, 4, 0, 5, 0, 
           6, -$CellContext`Ans6Range$$]; $CellContext`distcolumn$ = {
           Thickness[0.005], 
           Line[{{28, 25}, {28, 85}}], 
           Line[{{65, 25}, {65, 85}}], 
           Circle[{46.5, 85}, {18.5, 8}, {0, Pi}], 
           Circle[{46.5, 25}, {18.5, 8}, {Pi, 2 Pi}], Black, 
           Line[{{49, 93}, {49, 100}}], 
           Line[{{49, 100}, {80, 100}}], 
           Arrow[{{80, 100}, {80, 90}}], 
           Circle[{80, 85}, 5], 
           Arrow[{{60, 19}, {60, 10}}], 
           Line[{{55, 5}, {45, 5}}], 
           Arrow[{{45, 5}, {45, 17}}], 
           Circle[{60, 5}, 5], Black, 
           Arrow[{{75, 85}, {65, 85}}], 
           Arrow[{{85, 85}, {$CellContext`RightLimit$, 85}}], 
           Arrow[{{65, 5}, {$CellContext`RightLimit$, 5}}], 
           Text[
            Style["C", 15], {80, 85}], 
           Text[
            Style["R", 15], {60, 5}], 
           If[$CellContext`showcolumn$$ == True, 
            Switch[$CellContext`MB$$, 4, {
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = ", 
                  NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0, 56}, Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "D"], " = ", 
                  NumberForm[$CellContext`xd$, {2, 2}]}], 17], {75, 75}, 
               Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "B"], " = ", 
                  NumberForm[$CellContext`xb$, {2, 2}]}], 17], {75, 12}, 
               Left]}, 5, {
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = ", 
                  NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0, 56}, Left], 
              Text[
               Style[
                Row[{
                  Style["q", Italic], " = ", 
                  NumberForm[$CellContext`q$, {3, 2}]}], 17], {0, 64}, Left]},
              6, {
              Text[
               Style[
                Row[{
                  Style["L", Italic], " = ", 
                  NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 17], {30, 
               78}, Left], 
              Text[
               Style[
                Row[{
                  Style["V", Italic], " = ", 
                  NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 17], {30, 
               65}, Left], 
              Text[
               Style[
                Row[{
                  OverBar[
                   Style["L", Italic]], " = ", 
                  NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 17], {
               30, 26}, Left], 
              Text[
               Style[
                Row[{
                  OverBar[
                   Style["V", Italic]], " = ", 
                  NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 17], {
               30, 40}, Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "D"], " = ", 
                  NumberForm[$CellContext`xd$, {2, 2}]}], 17], {75, 75}, 
               Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "B"], " = ", 
                  NumberForm[$CellContext`xb$, {2, 2}]}], 17], {75, 12}, 
               Left]}], 
            Text["", {5, 5}]]}; $CellContext`size1$ = {
          PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> False, Frame -> 
           True, FrameLabel -> {
             Row[{"liquid mole fraction, ", 
               Style["x", Italic]}], 
             Row[{"vapor mole fraction, ", 
               Style["y", Italic]}]}, LabelStyle -> {17, Black}, 
           ImageSize -> {600, 360}, AspectRatio -> Full, GridLines -> {
             Range[0, 1, 0.05], 
             Range[0, 1, 0.05]}, GridLinesStyle -> GrayLevel[0.8], PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black], 
           ImageMargins -> {{0, 0}, {0, 0}}}; $CellContext`size2$ = {
          PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> False, Frame -> 
           True, FrameLabel -> {
             Row[{"liquid mole fraction, ", 
               Style["x", Italic]}], 
             Row[{"vapor mole fraction, ", 
               Style["y", Italic]}]}, LabelStyle -> {17, Black}, 
           ImageSize -> {290, 360}, AspectRatio -> Full, GridLines -> {
             Range[0, 1, 0.05], 
             Range[0, 1, 0.05]}, GridLinesStyle -> GrayLevel[0.8], PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black], 
           ImageMargins -> {{0, 0}, {0, 0}}}; $CellContext`size3$ = {
          ImageSize -> {600, 360}, AspectRatio -> Full, ImageMargins -> None, 
           PlotRangeClipping -> False, 
           PlotRange -> {{-28.7, 141}, {-15, 102}}, ImagePadding -> None, 
           PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black]}; $CellContext`size4$ = {
          ImageSize -> {310, 360}, AspectRatio -> Full, PlotRangeClipping -> 
           False, PlotRange -> {{$CellContext`LeftLimit$, 101}, {-15, 
             102}}}; $CellContext`Pane1$ = Show[
           Graphics[{$CellContext`distcolumn$, 
             Thickness[0.005], 
             
             Arrow[{$CellContext`ArrowPt1$, $CellContext`ArrowPt2$}]}], \
$CellContext`size4$]; $CellContext`Pane2$ = (Switch[$CellContext`MB$$, 1, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #8, #9, #10, #11, #12, #21, #24, #32}, 
               2, {#, #7, #8, #9, #10, #11, #12, #22, #24, #32}, 
               3, {#, #7, #8, #9, #10, #11, #12, #23, #22, #32}, 
               4, {#, #7, #8, #9, #10, #11, #12, #19, #23, #32}, 
               5, {#, #7, #8, #9, #10, #11, #12, #19, #20, #32}, 
               6, {#, #7, #8, #9, #10, #11, #12, #20, #21, #32}], False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #8, #10, #11, #21, #24, #32}, 
               2, {#, #7, #8, #9, #11, #22, #24, #32}, 
               3, {#, #7, #8, #9, #12, #23, #22, #32}, 
               4, {#, #8, #9, #10, #12, #19, #23, #32}, 
               5, {#, #9, #10, #11, #12, #19, #20, #32}, 
               6, {#, #7, #10, #11, #12, #20, #21, #32}]]], #5], 2, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #9, #13, #14, #15, #26, #27, #32, #35}, 
               2, {#, #9, #13, #14, #15, #26, #27, #32, #35}, 
               3, {#, #9, #13, #14, #15, #25, #27, #32, #35}, 
               4, {#, #9, #13, #14, #15, #25, #27, #32, #35}, 
               5, {#, #9, #13, #14, #15, #25, #26, #32, #35}, 
               6, {#, #9, #13, #14, #15, #25, #26, #32, #35}], False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #9, #13, #26, #27, #32, #35}, 
               2, {#, #9, #13, #26, #27, #32, #35}, 
               3, {#, #9, #14, #25, #27, #32, #35}, 
               4, {#, #9, #14, #25, #27, #32, #35}, 
               5, {#, #9, #15, #25, #26, #32, #35}, 
               6, {#, #9, #15, #25, #26, #32, #35}]]], #5], 3, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}, 
               2, {#, #7, #14, #15, #16, #17, #18, #28, #30, #32, #34}, 
               3, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}, 
               4, {#, #7, #14, #15, #16, #17, #18, #28, #29, #32, #34}, 
               5, {#, #7, #14, #15, #16, #17, #18, #28, #29, #32, #34}, 
               6, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}], 
              False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #14, #15, #16, #29, #30, #32, #34}, 
               2, {#, #7, #14, #15, #17, #28, #30, #32, #34}, 
               3, {#, #7, #14, #15, #16, #29, #30, #32, #34}, 
               4, {#, #7, #14, #15, #18, #28, #29, #32, #34}, 
               5, {#, #7, #14, #15, #18, #28, #29, #32, #34}, 
               6, {#, #7, #14, #15, #16, #29, #30, #32, #34}]]], #5], 4, 
           Show[{#31, #2}, #3], 5, 
           Show[{#31, #2}, #3], 6, 
           Show[{#31, #2}, #3], 7, 
           Show[{#31, #2}, #3], 8, 
           Show[{#31, #2}, #3], 9, 
           Show[{#31, #2}, #3], 10, 
           Row[{
             Show[
              
              Graphics[{#, $CellContext`stagelines$, \
$CellContext`stagelabels$, #32, #33, 
                If[
                 And[$CellContext`MB$$ == 10, $CellContext`solution$$], {
                 Yellow, 
                  Opacity[0.5], $CellContext`Part9Answer$}, {
                  Opacity[0], $CellContext`Part9Answer$}]}, #6]], 
             Show[{#31, #2}, #4]}]]& )[$CellContext`distcolumn$, 
           Graphics[{
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 4], {{
                
                Arrow[{{$CellContext`zf$, $CellContext`zf$ - 
                   0.15}, {$CellContext`zf$, $CellContext`zf$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colF, Background -> White], 
                  Style[
                   Subscript[
                    Style["z", Italic], "feed"], 17, $CellContext`colF, 
                   Background -> 
                   White]}], {$CellContext`zf$, $CellContext`zf$ - 0.19}], {
                
                Arrow[{{$CellContext`xd$, $CellContext`xd$ - 
                   0.15}, {$CellContext`xd$, $CellContext`xd$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colR, Background -> White], 
                  Style[
                   Subscript[
                    Style["x", Italic], "D"], 17, $CellContext`colR, 
                   Background -> 
                   White]}], {$CellContext`xd$, $CellContext`xd$ - 0.19}], {
                Arrow[{{$CellContext`xb$ + 0.16, $CellContext`xb$ - 
                   0.05}, {$CellContext`xb$, $CellContext`xb$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colS, Background -> White], 
                  Style[
                   Subscript[
                    Style["x", Italic], "B"], 17, $CellContext`colS, 
                   Background -> White]}], {$CellContext`xb$ + 
                 0.19, $CellContext`xb$ - 0.06}, Left]}], 
             If[$CellContext`MB$$ == 4, {{
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptdist$$, $CellContext`colR]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptdist$$, 1], {2, 2}]}], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`ptdist$$, {1, -2.5}], {
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptbott$$, $CellContext`colS]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptbott$$, 1], {2, 2}]}], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`ptbott$$, {-1, -2.5}], {
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptfeed$$, $CellContext`colF]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptfeed$$, 1], {2, 2}]}], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`ptfeed$$, {1, -2.5}]}], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`zf$, $CellContext`zf$}, \
$CellContext`colF]], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`xd$, $CellContext`xd$}, \
$CellContext`colR]], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`xb$, $CellContext`xb$}, \
$CellContext`colS]], 
             If[$CellContext`MB$$ == 5, 
              Dynamic[{{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`qdot1$$, $CellContext`colF]}, 
                Dynamic[{
                  Opacity[0.6], 
                  $CellContext`pt1[$CellContext`qdot2$$, $CellContext`colF]}], 
                Dynamic[{Dashed, Thick, 
                  Line[{$CellContext`qdot1$$, $CellContext`qdot2$$}]}]}]], 
             If[
              And[$CellContext`MB$$ == 5, $CellContext`solution$$ == False], {
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`qdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`qdot2$$, {0, -2}]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               
               Line[{{$CellContext`xeq$, $CellContext`yeq$}, \
{$CellContext`zf$, $CellContext`zf$}}]}], 
             If[$CellContext`MB$$ > 6, {$CellContext`colF, 
               Thickness[0.006], 
               
               Line[{{$CellContext`xi$, $CellContext`yi$}, {$CellContext`zf$, \
$CellContext`zf$}}]}], 
             If[$CellContext`MB$$ == 6, {Thick, $CellContext`colF, 
               
               Line[{{$CellContext`xeq$, $CellContext`yeq$}, \
{$CellContext`zf$, $CellContext`zf$}}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`TOLdot1$$, \
$CellContext`colR]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`TOLdot2$$, \
$CellContext`colR]}], 
               Dynamic[{Dashed, Thick, 
                 Line[{$CellContext`TOLdot1$$, $CellContext`TOLdot2$$}]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`BOLdot1$$, \
$CellContext`colS]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`BOLdot2$$, \
$CellContext`colS]}], 
               Dynamic[{Dashed, Thick, 
                 Line[{$CellContext`BOLdot1$$, $CellContext`BOLdot2$$}]}]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 6], {
               $CellContext`pt2[{$CellContext`xi$, $CellContext`yi$}, 
                Purple], {
                Opacity[0.5], 
                Thickness[0.01], 
                CapForm["Round"], Blue, {
                 
                 Line[{{$CellContext`xb$, $CellContext`xb$}, \
{$CellContext`xi$, $CellContext`yi$}}], 
                 
                 Line[{{$CellContext`xd$, $CellContext`xd$}, \
{$CellContext`xi$, $CellContext`yi$}}]}}}], 
             If[
              And[$CellContext`MB$$ == 6, $CellContext`solution$$ == False], {
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`TOLdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`TOLdot2$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`BOLdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`BOLdot2$$, {0, -2}]}], 
             If[$CellContext`MB$$ > 6, {
               Thickness[0.006], $CellContext`colS, 
               
               Line[{{$CellContext`xb$, $CellContext`xb$}, {$CellContext`xi$, \
$CellContext`yi$}}], $CellContext`colR, 
               
               Line[{{$CellContext`xd$, $CellContext`xd$}, {$CellContext`xi$, \
$CellContext`yi$}}]}], 
             If[
              
              Or[$CellContext`MB$$ == 7, $CellContext`MB$$ == 
               8, $CellContext`MB$$ == 9], {
               Dynamic[{Dashed, 
                 Thickness[0.008], 
                 RGBColor[0.9, 0.3, 0], 
                 
                 Line[{$CellContext`horizontalpt1, \
$CellContext`horizontalpt2}], 
                 
                 Line[{$CellContext`verticalpt1, \
$CellContext`horizontalpt2}]}], 
               $CellContext`pt1[$CellContext`stage1guessA$$, Blue], {Black, 
                PointSize[0.045], 
                
                Point[{Part[$CellContext`horizontalpt2, 1] - 0.03, 
                  Part[$CellContext`horizontalpt2, 2] + 0.04}], White, 
                PointSize[0.042], 
                
                Point[{Part[$CellContext`horizontalpt2, 1] - 0.03, 
                  Part[$CellContext`horizontalpt2, 2] + 0.04}]}, 
               Text[
                Style[
                 If[
                  Or[$CellContext`MB$$ == 7, $CellContext`MB$$ == 8], 
                  ToString[$CellContext`MB$$ - 6], 
                  ToString["R"]], 17], {
                Part[$CellContext`horizontalpt2, 1] - 0.025, 
                 Part[$CellContext`horizontalpt2, 2] + 0.034}]}], 
             If[
              Or[$CellContext`MB$$ == 8, $CellContext`MB$$ == 9], 
              Part[$CellContext`Dotnumbers$, 1]], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 7], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               If[$CellContext`nR$ > 0, 
                Part[$CellContext`Ry$, 1], 
                Part[$CellContext`Sy$, 1]], 
               Part[$CellContext`Rx$, 1]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 8], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               Which[
                And[$CellContext`nR$ == 0, $CellContext`nS$ > 1], {
                 Part[$CellContext`Sy$, 2], 
                 Part[$CellContext`Sx$, 2]}, 
                
                And[$CellContext`nR$ == 0, $CellContext`nS$ == 
                 1], {$CellContext`Sr$, 
                 Part[$CellContext`Sx$, 2]}, 
                And[$CellContext`nR$ == 1, $CellContext`nS$ > 0], {
                 Part[$CellContext`Sy$, 1], 
                 Part[$CellContext`Sx$, 1]}, 
                
                And[$CellContext`nR$ == 1, $CellContext`nS$ == 
                 1], {$CellContext`Sr$, 
                 Part[$CellContext`Rx$, 2]}, $CellContext`nR$ > 1, {
                 Part[$CellContext`Ry$, 2], 
                 Part[$CellContext`Rx$, 2]}]}], 
             If[$CellContext`MB$$ == 8, {Thick, 
               If[$CellContext`nR$ > 0, 
                Part[$CellContext`Ry$, 1], 
                Part[$CellContext`Sy$, 1]], 
               Part[$CellContext`Rx$, 1]}], 
             
             If[$CellContext`MB$$ == 9, {
              Thick, $CellContext`Ry$, $CellContext`Sy$, $CellContext`Rx$, 
               Table[
                
                Part[$CellContext`Sx$, $CellContext`a], {$CellContext`a, 
                 1, $CellContext`nS$}], 
               Part[$CellContext`Dotnumbers$, 
                Span[2, $CellContext`nT$ - 1]]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 9], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, $CellContext`Sr$, 
               Part[$CellContext`Sx$, $CellContext`nS$ + 1]}], 
             If[
              
              And[$CellContext`MB$$ == 4, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0.05}, {1.15, 0.35}]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[$CellContext`zf$, {2, 2}]}], 
                 17, $CellContext`colF], {0.7, 0.3}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[$CellContext`xd$, {2, 2}]}], 
                 17, $CellContext`colR], {0.7, 0.2}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[$CellContext`xb$, {2, 2}]}], 
                 17, $CellContext`colS], {0.7, 0.1}, Left]}], 
             If[
              
              And[$CellContext`MB$$ == 5, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0.4}, {1.15, 0.6}]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0.7, 0.55}, 
                Left], 
               Text[
                Style[
                 StringJoin["quality = ", 
                  ToString[
                   NumberForm[$CellContext`q$, {3, 2}]], ""], 17], {0.7, 
                0.45}, Left]}], 
             If[
              And[$CellContext`MB$$ == 6, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0}, {1.15, 0.6}]}, 
               Text[
                Style[
                 Row[{
                   Style["L", Italic], " = ", 
                   NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.55}, Left], 
               Text[
                Style[
                 Row[{
                   Style["V", Italic], " = ", 
                   NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.45}, Left], 
               Text[
                Style[
                 Row[{
                   OverBar[
                    Style["L", Italic]], " = ", 
                   NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.35}, Left], 
               Text[
                Style[
                 Row[{
                   OverBar[
                    Style["V", Italic]], " = ", 
                   NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.25}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[$CellContext`xd$, {2, 2}]}], 17], {0.7, 0.15}, 
                Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[$CellContext`xb$, {2, 2}]}], 17], {0.7, 0.05}, 
                Left]}], 
             If[$CellContext`MB$$ == 10, {$CellContext`Dotnumbers$, Thick, 
               GrayLevel[
               0.4], $CellContext`Ry$, $CellContext`Sy$, $CellContext`Rx$, \
$CellContext`Sr$, 
               Table[
                
                Part[$CellContext`Sx$, $CellContext`a + 1], {$CellContext`a, 
                 0, $CellContext`nS$}]}]}], 
           If[$CellContext`showcolumn$$ == 
            True, $CellContext`size2$, $CellContext`size1$], \
$CellContext`size2$, $CellContext`size3$, $CellContext`size4$, 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 AnyTrue[{4, 5}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct feed rate = \n\t\t", 
                Row[{"feed rate (", 
                  Style["F", Italic], ") = "}]], 
               NumberForm[$CellContext`F$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               AnyTrue[{4, 5}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              
              AnyTrue[{4, 
               5}, # == $CellContext`RandomizeValuesShown$& ]], {-30, 
             26}, {-28.5, 40}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{5, 6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["z", Italic], "feed"], " = "}], 
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = "}]], 
               NumberForm[$CellContext`zf$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{5, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {-23, 
             68}, {-15, 58}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
                 AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct distillate flow = ", 
                Row[{"distillate flow (", 
                  Style["D", Italic], ") = "}]], 
               ToString[
                NumberForm[$CellContext`distflow$, {3, 2}]], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
               AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
              AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, 60}, {70, 72}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct bottoms flow = ", 
                Row[{"bottoms flow (", 
                  Style["B", Italic], ") = "}]], 
               ToString[
                NumberForm[$CellContext`botflow$, {3, 2}]], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, 23}, {70, 14}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["x", Italic], "D"]}], 
                Subscript[
                 Style["x", Italic], "D"]], " = ", 
               NumberForm[$CellContext`xd$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], {
             88, 102}, {88, 94}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["x", Italic], "B"]}], 
                Subscript[
                 Style["x", Italic], "B"]], " = ", 
               NumberForm[$CellContext`xb$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, -12}, {70, -3}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{3, 4, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct reflux ratio ", 
                Row[{"reflux ratio (", 
                  Style["L", Italic], "/", 
                  Style["D", Italic], ")"}]], " = ", 
               NumberForm[$CellContext`R$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{3, 4, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{3, 4, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {88, 100}, {
             88, 92}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 
                 AnyTrue[{1, 2, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Style["L", Italic]}], 
                Style["L", Italic]], " = ", 
               NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               
               AnyTrue[{1, 2, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            Which[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              
              AnyTrue[{1, 2, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {70, 
             53}, $CellContext`MB$$ != 3, {29.3, 53}, $CellContext`MB$$ == 
             3, {29.3, 63}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 
                 AnyTrue[{1, 2, 3, 
                  4}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Style["V", Italic]}], 
                Style["V", Italic]], " = ", 
               NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               
               AnyTrue[{1, 2, 3, 
                4}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            Which[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              AnyTrue[{1, 2, 3, 
               4}, # == $CellContext`RandomizeValuesShown$& ]], {70, 
             63}, $CellContext`MB$$ != 3, {29.3, 63}, $CellContext`MB$$ == 
             3, {29.3, 73}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{2, 4, 
                  5}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  OverBar[
                   Style["L", Italic]]}], 
                OverBar[
                 Style["L", Italic]]], " = ", 
               NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{2, 4, 
                5}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{2, 4, 
               5}, # == $CellContext`RandomizeValuesShown$& ]], {70, 32}, {
             29.3, 32}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{1, 3, 4, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  OverBar[
                   Style["V", Italic]]}], 
                OverBar[
                 Style["V", Italic]]], " = ", 
               NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{1, 3, 4, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{1, 3, 4, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {70, 40}, {
             29.3, 40}], Left], 
           Text[
            Style[
             StringJoin[
              If[
               And[$CellContext`solution$$ == True, 
                
                AnyTrue[{1, 2, 3, 
                 6}, # == $CellContext`RandomizeValuesShown$& ]], 
               "correct quality = ", "quality = "], 
              ToString[
               NumberForm[$CellContext`q$, {3, 2}]], ""], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{1, 2, 3, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{1, 2, 3, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {-18, 
             68}, {-18, 58}], Left], 
           Text[
            Style[
             Row[{"feed rate (", 
               Style["F", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessA$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {-28.5, 40}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["z", Italic], "feed"], " = ", 
               NumberForm[$CellContext`GuessB$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {-15, 58}, Left], 
           Text[
            Style[
             Row[{"distillate flow (", 
               Style["D", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessC$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {70, 72}, Left], 
           Text[
            Style[
             Row[{"bottoms flow (", 
               Style["B", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessD$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {70, 14}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["x", Italic], "D"], " = ", 
               NumberForm[$CellContext`GuessE$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {88, 94}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["x", Italic], "B"], " = ", 
               NumberForm[$CellContext`GuessF$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {70, -3}, Left], 
           Text[
            Style[
             Row[{"reflux ratio (", 
               Style["L", Italic], "/", 
               Style["D", Italic], ") = ", 
               NumberForm[$CellContext`GuessG$, {3, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {88, 92}, Left], 
           Text[
            Style[
             Row[{
               Style["L", Italic], " = ", 
               NumberForm[$CellContext`GuessH$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 53}, Left], 
           Text[
            Style[
             Row[{
               Style["V", Italic], " = ", 
               NumberForm[$CellContext`GuessI$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 63}, Left], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["L", Italic]], " = ", 
               NumberForm[$CellContext`GuessJ$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 32}, Left], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["V", Italic]], " = ", 
               NumberForm[$CellContext`GuessK$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 40}, Left], 
           Text[
            Style[
             StringJoin["quality = ", 
              ToString[
               NumberForm[$CellContext`GuessL$, {3, 2}]], ""], 17, 
             RGBColor[0, 0.6, 0]], {-18, 58}, Left], 
           Plot[{
             $CellContext`equilb$[$CellContext`x], $CellContext`x}, \
{$CellContext`x, 0, 1}, PlotStyle -> {{Thick, Black}}], {
            Thickness[0.005], 
            Arrow[{$CellContext`ArrowPt1$, $CellContext`ArrowPt2$}]}, 
           Text[
            Style["feed stream", 17], {13, $CellContext`ArrowHeight$$ + 5}], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["L", Italic]], " and ", 
               OverBar[
                Style["V", Italic]], 
               " = liquid and vapor flow\nrates in the stripping (bottom) \
section"}], 17, TextAlignment -> Left], {-24, 0}, Left], 
           Text[
            Style[
             Row[{
               Style["L", Italic], " and ", 
               Style["V", Italic], 
               " = liquid and vapor flow\nrates in the rectifying (top) \
section"}], 17, TextAlignment -> Left], {-24, 0}, 
            Left]]; $CellContext`Value1$ = $CellContext`equilb$[0.6] - 
          0.05; $CellContext`Value2$ = $CellContext`equilb$[0.4] - 0.05; 
        If[$CellContext`showcolumn$$, 
          
          Row[{$CellContext`Pane2$, $CellContext`Pane1$}], \
$CellContext`Pane2$]], 
      "Specifications" :> {{{$CellContext`solution$$, False, "solution"}, {
         True, False}, ControlType -> None}, {{$CellContext`MB$$, 4}, 1, 10, 
         1, ControlType -> None}, {{$CellContext`reset$$, 482}, 1, 10000, 1, 
         ControlType -> None, ControlPlacement -> 1}, {{$CellContext`MB$$, 4},
          1, 10, 1, ControlType -> None, ControlPlacement -> 
         2}, {{$CellContext`stage1guessA$$, {0.2, 0.5352106534516532}}, {{
         0.01, 0.99}, {0.01, 0.99}}, ControlType -> Locator, Appearance -> 
         None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         3}, {{$CellContext`solution$$, False, "solution"}, {True, False}, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         4}, {{$CellContext`hint$$, False, "hint"}, {False, True}, 
         ControlPlacement -> 
         5}, {{$CellContext`showcolumn$$, False, "column"}, {True, False}, 
         ControlPlacement -> 6}, {{$CellContext`Ans1$$, 0, 
          Dynamic[$CellContext`Box1$$]}, 0, 
         Dynamic[$CellContext`Ans1Range$$], 0.01, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], Appearance -> "Labeled",
          ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         7}, {{$CellContext`Ans2$$, 0, 
          Dynamic[$CellContext`Box2$$]}, 0, 
         Dynamic[$CellContext`Ans2Range$$], 0.01, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], Appearance -> "Labeled",
          ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         8}, {{$CellContext`Ans3$$, 0, 
          Dynamic[$CellContext`Box3$$]}, 0, 
         Dynamic[$CellContext`Ans3Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         9}, {{$CellContext`Ans4$$, 0, 
          Dynamic[$CellContext`Box4$$]}, 0, 
         Dynamic[$CellContext`Ans4Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         10}, {{$CellContext`Ans5$$, 0, 
          Dynamic[$CellContext`Box5$$]}, 0, 
         Dynamic[$CellContext`Ans5Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         11}, {{$CellContext`Ans6$$, 0, 
          Dynamic[$CellContext`Box6$$]}, 
         Dynamic[$CellContext`Ans6RangeL$$], 
         Dynamic[$CellContext`Ans6Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         12}, {{$CellContext`ptdist$$, {0.6, 0.6}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         13}, {{$CellContext`ptbott$$, {0.4, 0.4}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         14}, {{$CellContext`ptfeed$$, {0.2, 0.2}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         15}, {{$CellContext`qdot1$$, {0.3, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         16}, {{$CellContext`qdot2$$, {0.1, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         17}, {{$CellContext`BOLdot1$$, {0.3, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         18}, {{$CellContext`BOLdot2$$, {0.1, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         19}, {{$CellContext`TOLdot1$$, {0.3, 0.7}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         20}, {{$CellContext`TOLdot2$$, {0.1, 0.7}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         21}, {{$CellContext`ArrowHeight$$, 50, "feed height"}, 20, 90, 1, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         22}, {{$CellContext`Box1$$, "feed rate "}, 0, ControlType -> None, 
         ControlPlacement -> 23}, {{$CellContext`Box2$$, 
          Row[{"distillate composition ", 
            Subscript[
             Style["x", Italic], "D"]}]}, 0, ControlType -> None, 
         ControlPlacement -> 24}, {{$CellContext`Box3$$, "reflux ratio"}, 0, 
         ControlType -> None, ControlPlacement -> 25}, {{$CellContext`Box4$$, 
          Row[{"vapor flow rate ", 
            Style["V ", Italic]}]}, 0, ControlType -> None, ControlPlacement -> 
         26}, {{$CellContext`Box5$$, 
          Row[{"liquid flow rate ", 
            OverBar[
             Style["L", Italic]]}]}, 0, ControlType -> None, ControlPlacement -> 
         27}, {{$CellContext`Box6$$, 
          Row[{"vapor flow rate ", 
            OverBar[
             Style["V", Italic]]}]}, 0, ControlType -> None, ControlPlacement -> 
         28}, {{$CellContext`Ans1Range$$, 18.79018435380583}, 0, ControlType -> 
         None, ControlPlacement -> 29}, {{$CellContext`Ans2Range$$, 1}, 0, 
         ControlType -> None, ControlPlacement -> 
         30}, {{$CellContext`Ans3Range$$, 4.765399702910578}, 0, ControlType -> 
         None, ControlPlacement -> 
         31}, {{$CellContext`Ans4Range$$, 26.94719638937734}, 0, ControlType -> 
         None, ControlPlacement -> 
         32}, {{$CellContext`Ans5Range$$, 11.88985422266501}, 0, ControlType -> 
         None, ControlPlacement -> 
         33}, {{$CellContext`Ans6Range$$, 14.877110256846878`}, 0, 
         ControlType -> None, ControlPlacement -> 
         34}, {{$CellContext`Ans6RangeL$$, 0}, 0, ControlType -> None, 
         ControlPlacement -> 35}, {{$CellContext`HintTextColumnTrue$$, Null}, 
         0, ControlType -> None, ControlPlacement -> 36}, 
        Grid[{{
           Button[" new problem ", {
             Increment[$CellContext`reset$$], $CellContext`MB$$ = 
             1, $CellContext`solution$$ = False, $CellContext`hint$$ = False, 
             Clear[$CellContext`lineguess1], $CellContext`Ans1$$ = 
             0, $CellContext`Ans2$$ = 0, $CellContext`Ans3$$ = 
             0, $CellContext`Ans4$$ = 0, $CellContext`Ans5$$ = 
             0, $CellContext`Ans6$$ = 0, $CellContext`showcolumn$$ = 
             False, $CellContext`stage1guessA$$ = {0.5, 
              0.8}, $CellContext`ArrowHeight$$ = 
             50, $CellContext`qdot1$$ = {0.3, 0.9}, $CellContext`qdot2$$ = {
              0.1, 0.9}, $CellContext`ptdist$$ = {0.6, 
              0.7}, $CellContext`ptbott$$ = {0.4, 
              0.3}, $CellContext`ptfeed$$ = {0.2, 
              0.7}, $CellContext`BOLdot1$$ = {0.3, 
              0.9}, $CellContext`BOLdot2$$ = {0.1, 
              0.9}, $CellContext`TOLdot1$$ = {0.3, 
              0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}], 
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           Manipulate`Place[3], 
           PaneSelector[{1 -> Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 2 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 3 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 4 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 5 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 6 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 7 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 8 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 9 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}]}, 
            Dynamic[$CellContext`MB$$]], 
           
           PaneSelector[{
            1 -> "1. Solve for the missing green variables.", 2 -> 
             "2. Solve for the missing green variables.", 3 -> 
             "3. Solve for the missing green variables.", 4 -> 
             Column[{"4. Place the points at their correct", 
                Row[{"locations on the ", 
                  Style["y", Italic], " = ", 
                  Style["x", Italic], " line."}]}], 5 -> Row[{"5. Draw the ", 
                Style["q", Italic], "-line (feed line)."}], 6 -> 
             "6. Move the points to draw the top \n and bottom operating \
lines.", 7 -> "7. Drag the point to locate the first stage.", 8 -> 
             "8. Drag the point to locate the second stage.", 9 -> 
             "9. Drag the point to locate the final stage.", 10 -> 
             "10. Determine the feed stream location."}, 
            Dynamic[$CellContext`MB$$]], 
           Manipulate`Place[4], 
           
           PaneSelector[{
            1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
             Manipulate`Place[5], 5 -> Manipulate`Place[5], 6 -> 
             Manipulate`Place[5], 7 -> Manipulate`Place[5], 8 -> 
             Manipulate`Place[5], 9 -> Manipulate`Place[5], 10 -> 
             Manipulate`Place[5]}, 
            Dynamic[$CellContext`MB$$]], 
           PaneSelector[{5 -> Manipulate`Place[6], 6 -> Manipulate`Place[6]}, 
            Dynamic[$CellContext`MB$$]]}, {
           PaneSelector[{1 -> Grid[{{
                 Manipulate`Place[7], 
                 Manipulate`Place[8]}}], 2 -> Grid[{{
                 Manipulate`Place[9], 
                 Manipulate`Place[10]}}], 3 -> Grid[{{
                 Manipulate`Place[11], 
                 Manipulate`Place[12]}}], 4 -> Row[{
                Manipulate`Place[13], 
                Manipulate`Place[14], 
                Manipulate`Place[15]}], 5 -> Row[{
                Manipulate`Place[16], 
                Manipulate`Place[17], 
                Spacer[{200, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}], 6 -> Row[{
                Manipulate`Place[18], 
                Manipulate`Place[19], 
                Manipulate`Place[20], 
                Manipulate`Place[21], 
                Spacer[{200, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}], 10 -> Row[{
                Manipulate`Place[22], 
                Spacer[{40, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}]}, 
            Dynamic[$CellContext`MB$$]], SpanFromLeft}, {
           Manipulate`Place[23], 
           Manipulate`Place[24], 
           Manipulate`Place[25], 
           Manipulate`Place[26], 
           Manipulate`Place[27], 
           Manipulate`Place[28], 
           Manipulate`Place[29], 
           Manipulate`Place[30], 
           Manipulate`Place[31]}, {
           Manipulate`Place[32], 
           Manipulate`Place[33], 
           Manipulate`Place[34], 
           Manipulate`Place[35], 
           Manipulate`Place[36]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[Subscript] = {NHoldRest}, $CellContext`horizontalpt1 = {
        0.796279548785221, 0.8261797099333564}, $CellContext`horizontalpt2 = {
        0.5000000000000001, 0.8261797099333564}, $CellContext`verticalpt1 = {
        0.5000000000000001, 0.6357142857142858}, $CellContext`colF = 
       RGBColor[0.6, 0.4, 0.2], $CellContext`colR = 
       RGBColor[0, 0.6, 0], $CellContext`colS = Hue[0.9], $CellContext`pt1[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`col, 
          Blank[]]] := {$CellContext`col, 
         PointSize[0.022], 
         Point[$CellContext`pt], White, 
         PointSize[0.018], 
         Point[$CellContext`pt]}, $CellContext`pt2[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`col, 
          Blank[]]] := {$CellContext`col, 
         PointSize[0.022], 
         Point[$CellContext`pt]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->11386798,ExpressionUUID->"cdd54be5-3f71-4633-ae0b-195010686b15"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Ans1$$ = 0, $CellContext`Ans1Range$$ = 
    18.79018435380583, $CellContext`Ans2$$ = 0, $CellContext`Ans2Range$$ = 
    1, $CellContext`Ans3$$ = 0, $CellContext`Ans3Range$$ = 
    4.765399702910578, $CellContext`Ans4$$ = 0, $CellContext`Ans4Range$$ = 
    26.94719638937734, $CellContext`Ans5$$ = 0, $CellContext`Ans5Range$$ = 
    11.88985422266501, $CellContext`Ans6$$ = 0, $CellContext`Ans6Range$$ = 
    14.877110256846878`, $CellContext`Ans6RangeL$$ = 
    0, $CellContext`ArrowHeight$$ = 50, $CellContext`BOLdot1$$ = {0.3, 
    0.9}, $CellContext`BOLdot2$$ = {0.1, 0.9}, $CellContext`Box1$$ = 
    "feed rate ", $CellContext`Box2$$ = Row[{"distillate composition ", 
      Subscript[
       Style["x", Italic], "D"]}], $CellContext`Box3$$ = 
    "reflux ratio", $CellContext`Box4$$ = Row[{"vapor flow rate ", 
      Style["V ", Italic]}], $CellContext`Box5$$ = Row[{"liquid flow rate ", 
      OverBar[
       Style["L", Italic]]}], $CellContext`Box6$$ = Row[{"vapor flow rate ", 
      OverBar[
       Style["V", Italic]]}], $CellContext`hint$$ = 
    False, $CellContext`HintTextColumnTrue$$ = " ", $CellContext`MB$$ = 
    6, $CellContext`ptbott$$ = {0.4, 0.4}, $CellContext`ptdist$$ = {0.6, 
    0.6}, $CellContext`ptfeed$$ = {0.2, 0.2}, $CellContext`qdot1$$ = {0.3, 
    0.9}, $CellContext`qdot2$$ = {0.1, 0.9}, $CellContext`reset$$ = 
    482, $CellContext`showcolumn$$ = False, $CellContext`solution$$ = 
    True, $CellContext`stage1guessA$$ = {0.2, 
    0.5352106534516532}, $CellContext`TOLdot1$$ = {0.3, 
    0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`solution$$], True, "solution"}, {True, False}}, {{
       Hold[$CellContext`MB$$], 6}, 1, 10, 1}, {{
       Hold[$CellContext`reset$$], 482}, 1, 10000, 1}, {{
       Hold[$CellContext`MB$$], 6}, 1, 10, 1}, {{
       Hold[$CellContext`stage1guessA$$], {0.2, 0.5352106534516532}}, {{0.01, 
      0.99}, {0.01, 0.99}}}, {{
       Hold[$CellContext`solution$$], True, "solution"}, {True, False}}, {{
       Hold[$CellContext`hint$$], False, "hint"}, {False, True}}, {{
       Hold[$CellContext`showcolumn$$], False, "column"}, {True, False}}, {{
       Hold[$CellContext`Ans1$$], 0, 
       Dynamic[$CellContext`Box1$$]}, 0, 
      Dynamic[$CellContext`Ans1Range$$], 0.01}, {{
       Hold[$CellContext`Ans2$$], 0, 
       Dynamic[$CellContext`Box2$$]}, 0, 
      Dynamic[$CellContext`Ans2Range$$], 0.01}, {{
       Hold[$CellContext`Ans3$$], 0, 
       Dynamic[$CellContext`Box3$$]}, 0, 
      Dynamic[$CellContext`Ans3Range$$], 0.01}, {{
       Hold[$CellContext`Ans4$$], 0, 
       Dynamic[$CellContext`Box4$$]}, 0, 
      Dynamic[$CellContext`Ans4Range$$], 0.01}, {{
       Hold[$CellContext`Ans5$$], 0, 
       Dynamic[$CellContext`Box5$$]}, 0, 
      Dynamic[$CellContext`Ans5Range$$], 0.01}, {{
       Hold[$CellContext`Ans6$$], 0, 
       Dynamic[$CellContext`Box6$$]}, 
      Dynamic[$CellContext`Ans6RangeL$$], 
      Dynamic[$CellContext`Ans6Range$$], 0.01}, {{
       Hold[$CellContext`ptdist$$], {0.6, 0.6}}, Automatic}, {{
       Hold[$CellContext`ptbott$$], {0.4, 0.4}}, Automatic}, {{
       Hold[$CellContext`ptfeed$$], {0.2, 0.2}}, Automatic}, {{
       Hold[$CellContext`qdot1$$], {0.3, 0.9}}, Automatic}, {{
       Hold[$CellContext`qdot2$$], {0.1, 0.9}}, Automatic}, {{
       Hold[$CellContext`BOLdot1$$], {0.3, 0.9}}, Automatic}, {{
       Hold[$CellContext`BOLdot2$$], {0.1, 0.9}}, Automatic}, {{
       Hold[$CellContext`TOLdot1$$], {0.3, 0.7}}, Automatic}, {{
       Hold[$CellContext`TOLdot2$$], {0.1, 0.7}}, Automatic}, {{
       Hold[$CellContext`ArrowHeight$$], 50, "feed height"}, 20, 90, 1}, {{
       Hold[$CellContext`Box1$$], "feed rate "}, 0}, {{
       Hold[$CellContext`Box2$$], 
       Row[{"distillate composition ", 
         Subscript[
          Style["x", Italic], "D"]}]}, 0}, {{
       Hold[$CellContext`Box3$$], "reflux ratio"}, 0}, {{
       Hold[$CellContext`Box4$$], 
       Row[{"vapor flow rate ", 
         Style["V ", Italic]}]}, 0}, {{
       Hold[$CellContext`Box5$$], 
       Row[{"liquid flow rate ", 
         OverBar[
          Style["L", Italic]]}]}, 0}, {{
       Hold[$CellContext`Box6$$], 
       Row[{"vapor flow rate ", 
         OverBar[
          Style["V", Italic]]}]}, 0}, {{
       Hold[$CellContext`Ans1Range$$], 18.79018435380583}, 0}, {{
       Hold[$CellContext`Ans2Range$$], 1}, 0}, {{
       Hold[$CellContext`Ans3Range$$], 4.765399702910578}, 0}, {{
       Hold[$CellContext`Ans4Range$$], 26.94719638937734}, 0}, {{
       Hold[$CellContext`Ans5Range$$], 11.88985422266501}, 0}, {{
       Hold[$CellContext`Ans6Range$$], 14.877110256846878`}, 0}, {{
       Hold[$CellContext`Ans6RangeL$$], 0}, 0}, {{
       Hold[$CellContext`HintTextColumnTrue$$], " "}, 0}, {
      Hold[
       Grid[{{
          Button[" new problem ", {
            Increment[$CellContext`reset$$], $CellContext`MB$$ = 
            1, $CellContext`solution$$ = False, $CellContext`hint$$ = False, 
            Clear[$CellContext`lineguess1], $CellContext`Ans1$$ = 
            0, $CellContext`Ans2$$ = 0, $CellContext`Ans3$$ = 
            0, $CellContext`Ans4$$ = 0, $CellContext`Ans5$$ = 
            0, $CellContext`Ans6$$ = 0, $CellContext`showcolumn$$ = 
            False, $CellContext`stage1guessA$$ = {0.5, 
             0.8}, $CellContext`ArrowHeight$$ = 
            50, $CellContext`qdot1$$ = {0.3, 0.9}, $CellContext`qdot2$$ = {
             0.1, 0.9}, $CellContext`ptdist$$ = {0.6, 
             0.7}, $CellContext`ptbott$$ = {0.4, 
             0.3}, $CellContext`ptfeed$$ = {0.2, 
             0.7}, $CellContext`BOLdot1$$ = {0.3, 
             0.9}, $CellContext`BOLdot2$$ = {0.1, 
             0.9}, $CellContext`TOLdot1$$ = {0.3, 
             0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}], 
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          PaneSelector[{1 -> Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 2 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 3 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 4 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 5 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 6 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 7 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 8 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 9 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}]}, 
           Dynamic[$CellContext`MB$$]], 
          
          PaneSelector[{
           1 -> "1. Solve for the missing green variables.", 2 -> 
            "2. Solve for the missing green variables.", 3 -> 
            "3. Solve for the missing green variables.", 4 -> 
            Column[{"4. Place the points at their correct", 
               Row[{"locations on the ", 
                 Style["y", Italic], " = ", 
                 Style["x", Italic], " line."}]}], 5 -> Row[{"5. Draw the ", 
               Style["q", Italic], "-line (feed line)."}], 6 -> 
            "6. Move the points to draw the top \n and bottom operating \
lines.", 7 -> "7. Drag the point to locate the first stage.", 8 -> 
            "8. Drag the point to locate the second stage.", 9 -> 
            "9. Drag the point to locate the final stage.", 10 -> 
            "10. Determine the feed stream location."}, 
           Dynamic[$CellContext`MB$$]], 
          Manipulate`Place[4], 
          
          PaneSelector[{
           1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
            Manipulate`Place[5], 5 -> Manipulate`Place[5], 6 -> 
            Manipulate`Place[5], 7 -> Manipulate`Place[5], 8 -> 
            Manipulate`Place[5], 9 -> Manipulate`Place[5], 10 -> 
            Manipulate`Place[5]}, 
           Dynamic[$CellContext`MB$$]], 
          PaneSelector[{5 -> Manipulate`Place[6], 6 -> Manipulate`Place[6]}, 
           Dynamic[$CellContext`MB$$]]}, {
          PaneSelector[{1 -> Grid[{{
                Manipulate`Place[7], 
                Manipulate`Place[8]}}], 2 -> Grid[{{
                Manipulate`Place[9], 
                Manipulate`Place[10]}}], 3 -> Grid[{{
                Manipulate`Place[11], 
                Manipulate`Place[12]}}], 4 -> Row[{
               Manipulate`Place[13], 
               Manipulate`Place[14], 
               Manipulate`Place[15]}], 5 -> Row[{
               Manipulate`Place[16], 
               Manipulate`Place[17], 
               Spacer[{200, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}], 6 -> Row[{
               Manipulate`Place[18], 
               Manipulate`Place[19], 
               Manipulate`Place[20], 
               Manipulate`Place[21], 
               Spacer[{200, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}], 10 -> Row[{
               Manipulate`Place[22], 
               Spacer[{40, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}]}, 
           Dynamic[$CellContext`MB$$]], SpanFromLeft}, {
          Manipulate`Place[23], 
          Manipulate`Place[24], 
          Manipulate`Place[25], 
          Manipulate`Place[26], 
          Manipulate`Place[27], 
          Manipulate`Place[28], 
          Manipulate`Place[29], 
          Manipulate`Place[30], 
          Manipulate`Place[31]}, {
          Manipulate`Place[32], 
          Manipulate`Place[33], 
          Manipulate`Place[34], 
          Manipulate`Place[35], 
          Manipulate`Place[36]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`solution$10370$$ = False, $CellContext`MB$10371$$ = 
    0, $CellContext`reset$10372$$ = 0, $CellContext`stage1guessA$10373$$ = 
    False, $CellContext`hint$10374$$ = 
    False, $CellContext`showcolumn$10375$$ = 
    False, $CellContext`Ans1$10376$$ = 0, $CellContext`Ans2$10377$$ = 
    0, $CellContext`Ans3$10378$$ = 0, $CellContext`Ans4$10379$$ = 
    0, $CellContext`Ans5$10380$$ = 0, $CellContext`Ans6$10381$$ = 
    0, $CellContext`ArrowHeight$10382$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`Ans1$$ = 0, $CellContext`Ans1Range$$ = 
        18.79018435380583, $CellContext`Ans2$$ = 0, $CellContext`Ans2Range$$ = 
        1, $CellContext`Ans3$$ = 0, $CellContext`Ans3Range$$ = 
        4.765399702910578, $CellContext`Ans4$$ = 0, $CellContext`Ans4Range$$ = 
        26.94719638937734, $CellContext`Ans5$$ = 0, $CellContext`Ans5Range$$ = 
        11.88985422266501, $CellContext`Ans6$$ = 0, $CellContext`Ans6Range$$ = 
        14.877110256846878`, $CellContext`Ans6RangeL$$ = 
        0, $CellContext`ArrowHeight$$ = 
        50, $CellContext`BOLdot1$$ = {0.3, 0.9}, $CellContext`BOLdot2$$ = {
         0.1, 0.9}, $CellContext`Box1$$ = "feed rate ", $CellContext`Box2$$ = 
        Row[{"distillate composition ", 
           Subscript[
            Style["x", Italic], "D"]}], $CellContext`Box3$$ = 
        "reflux ratio", $CellContext`Box4$$ = Row[{"vapor flow rate ", 
           Style["V ", Italic]}], $CellContext`Box5$$ = 
        Row[{"liquid flow rate ", 
           OverBar[
            Style["L", Italic]]}], $CellContext`Box6$$ = 
        Row[{"vapor flow rate ", 
           OverBar[
            Style["V", Italic]]}], $CellContext`hint$$ = 
        False, $CellContext`HintTextColumnTrue$$ = " ", $CellContext`MB$$ = 
        6, $CellContext`ptbott$$ = {0.4, 0.4}, $CellContext`ptdist$$ = {0.6, 
         0.6}, $CellContext`ptfeed$$ = {0.2, 0.2}, $CellContext`qdot1$$ = {
         0.3, 0.9}, $CellContext`qdot2$$ = {0.1, 0.9}, $CellContext`reset$$ = 
        482, $CellContext`showcolumn$$ = False, $CellContext`solution$$ = 
        True, $CellContext`stage1guessA$$ = {0.2, 
         0.5352106534516532}, $CellContext`TOLdot1$$ = {0.3, 
         0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}, "ControllerVariables" :> {
        Hold[$CellContext`solution$$, $CellContext`solution$10370$$, False], 
        Hold[$CellContext`MB$$, $CellContext`MB$10371$$, 0], 
        Hold[$CellContext`reset$$, $CellContext`reset$10372$$, 0], 
        Hold[$CellContext`stage1guessA$$, $CellContext`stage1guessA$10373$$, 
         False], 
        Hold[$CellContext`hint$$, $CellContext`hint$10374$$, False], 
        Hold[$CellContext`showcolumn$$, $CellContext`showcolumn$10375$$, 
         False], 
        Hold[$CellContext`Ans1$$, $CellContext`Ans1$10376$$, 0], 
        Hold[$CellContext`Ans2$$, $CellContext`Ans2$10377$$, 0], 
        Hold[$CellContext`Ans3$$, $CellContext`Ans3$10378$$, 0], 
        Hold[$CellContext`Ans4$$, $CellContext`Ans4$10379$$, 0], 
        Hold[$CellContext`Ans5$$, $CellContext`Ans5$10380$$, 0], 
        Hold[$CellContext`Ans6$$, $CellContext`Ans6$10381$$, 0], 
        Hold[$CellContext`ArrowHeight$$, $CellContext`ArrowHeight$10382$$, 
         0]}, "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`\[Gamma]1$, $CellContext`\[Gamma]2$, \
$CellContext`A12$, $CellContext`A21$, $CellContext`ArrowPt1$, \
$CellContext`ArrowPt2$, $CellContext`BOLintercept$, $CellContext`BOLslope$, \
$CellContext`botflow$, $CellContext`CoordA$, $CellContext`CoordB$, \
$CellContext`CoordC$, $CellContext`CoordD$, $CellContext`CoordE$, \
$CellContext`CoordF$, $CellContext`CoordG$, $CellContext`CoordH$, \
$CellContext`CoordI$, $CellContext`CoordJ$, $CellContext`CoordK$, \
$CellContext`CoordL$, $CellContext`distcolumn$, $CellContext`distflow$, \
$CellContext`Dotnumbers$, $CellContext`equilb$, $CellContext`F$, \
$CellContext`feed$, $CellContext`Feedstate$, $CellContext`GuessA$, \
$CellContext`GuessB$, $CellContext`GuessC$, $CellContext`GuessD$, \
$CellContext`GuessE$, $CellContext`GuessF$, $CellContext`GuessG$, \
$CellContext`GuessH$, $CellContext`GuessI$, $CellContext`GuessJ$, \
$CellContext`GuessK$, $CellContext`GuessL$, $CellContext`i$, $CellContext`L$, \
$CellContext`Lbar$, $CellContext`LeftLimit$, $CellContext`MissingA$, \
$CellContext`MissingB$, $CellContext`MissingC$, $CellContext`MissingD$, \
$CellContext`MissingE$, $CellContext`MissingF$, $CellContext`MissingG$, \
$CellContext`MissingH$, $CellContext`MissingI$, $CellContext`MissingJ$, \
$CellContext`MissingK$, $CellContext`MissingL$, $CellContext`nR$, \
$CellContext`nS$, $CellContext`nT$, $CellContext`opertRect$, \
$CellContext`opertStrp$, $CellContext`P$, $CellContext`Pane1$, \
$CellContext`Pane2$, $CellContext`Part9Answer$, $CellContext`plotlabel$, \
$CellContext`q$, $CellContext`R$, $CellContext`RandomizeValuesShown$, \
$CellContext`rect$, $CellContext`rectnumbers$, $CellContext`RightLimit$, \
$CellContext`Rmin$, $CellContext`Rx$, $CellContext`Ry$, $CellContext`size1$, \
$CellContext`size2$, $CellContext`size3$, $CellContext`size4$, \
$CellContext`Sr$, $CellContext`stagelabels$, $CellContext`stagelines$, \
$CellContext`strip$, $CellContext`Sx$, $CellContext`Sy$, $CellContext`T$, \
$CellContext`tb$, $CellContext`V$, $CellContext`Value1$, \
$CellContext`Value2$, $CellContext`Vbar$, $CellContext`VPa$, \
$CellContext`VPb$, $CellContext`x1$, $CellContext`x2$, $CellContext`xb$, \
$CellContext`xd$, $CellContext`xeq$, $CellContext`xi$, $CellContext`xR$, \
$CellContext`xS$, $CellContext`y1$, $CellContext`y2$, $CellContext`yeq$, \
$CellContext`yi$, $CellContext`yR$, $CellContext`yS$, $CellContext`zf$}, 
        SeedRandom[$CellContext`reset$$]; $CellContext`A12$ = 
         RandomReal[]; $CellContext`A21$ = 
         RandomReal[{-0.5, 1}]; $CellContext`P$ = 
         RandomReal[{100, 300}]; $CellContext`q$ = 
         RandomChoice[{-0.2, 0.05, 0.22, 0.49, 0.75, 0.95, 
           1.13}]; $CellContext`zf$ = 
         RandomInteger[{30, 70}]/100.; $CellContext`F$ = 
         RandomInteger[{100, 1000}]/100.; $CellContext`xd$ = 
         RandomInteger[{85, 92}]/100.; $CellContext`xb$ = 
         RandomInteger[{5, 12}]/100.; $CellContext`VPa$ = 
         10^(8.08097 - 1582.271/($CellContext`T$ + 
           239.726)); $CellContext`VPb$ = 
         10^(8.07131 - 1730.63/($CellContext`T$ + 233.426)); 
        Clear[$CellContext`T$, $CellContext`i$]; $CellContext`\[Gamma]1$[
           Pattern[$CellContext`i$, 
            Blank[]]] = 
         Exp[$CellContext`x2$[$CellContext`i$]^2 ($CellContext`A12$ + 
            2 ($CellContext`A21$ - $CellContext`A12$) (
              1 - $CellContext`x2$[$CellContext`i$]))]; \
$CellContext`\[Gamma]2$[
           Pattern[$CellContext`i$, 
            Blank[]]] = 
         Exp[(1 - $CellContext`x2$[$CellContext`i$])^2 ($CellContext`A21$ + 
            2 ($CellContext`A12$ - $CellContext`A21$) \
$CellContext`x2$[$CellContext`i$])]; $CellContext`i$ = 0; 
        While[$CellContext`i$ < 
          101, {$CellContext`x2$[$CellContext`i$] = $CellContext`i$ 
            0.01, $CellContext`T$[$CellContext`i$] = Part[
             
             FindRoot[$CellContext`P$ == $CellContext`VPb$ $CellContext`\
\[Gamma]1$[$CellContext`i$] (
                 1 - $CellContext`x2$[$CellContext`i$]) + $CellContext`VPa$ \
$CellContext`\[Gamma]2$[$CellContext`i$] $CellContext`x2$[$CellContext`i$], \
{$CellContext`T$, 60}, AccuracyGoal -> 3], 1, 
             2], $CellContext`y2$[$CellContext`i$] = 
           ReplaceAll[$CellContext`x2$[$CellContext`i$] + ($CellContext`VPa$ \
$CellContext`\[Gamma]2$[$CellContext`i$] \
($CellContext`x2$[$CellContext`i$]/$CellContext`P$) - \
$CellContext`x2$[$CellContext`i$]), $CellContext`T$ -> \
$CellContext`T$[$CellContext`i$]], 
           Increment[$CellContext`i$]}]; $CellContext`tb$ = Table[{
            $CellContext`x2$[$CellContext`i$], 
            $CellContext`y2$[$CellContext`i$]}, {$CellContext`i$, 0, 
            100}]; $CellContext`equilb$ = Quiet[
           Interpolation[$CellContext`tb$]]; $CellContext`feed$[
           Pattern[$CellContext`x$, 
            Blank[]]] := $CellContext`q$ ($CellContext`x$/($CellContext`q$ - 
            1)) - $CellContext`zf$/($CellContext`q$ - 1); $CellContext`xeq$ = 
         ReplaceAll[$CellContext`x, 
           Quiet[
            
            FindRoot[$CellContext`feed$[$CellContext`x] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, $CellContext`zf$}]]]; \
$CellContext`yeq$ = $CellContext`feed$[$CellContext`xeq$]; \
$CellContext`opertRect$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := $CellContext`yeq$ + (($CellContext`x$ - \
$CellContext`xeq$)/($CellContext`xd$ - $CellContext`xeq$)) ($CellContext`xd$ - \
$CellContext`yeq$); $CellContext`opertStrp$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := $CellContext`yeq$ + (($CellContext`x$ - \
$CellContext`xeq$)/($CellContext`xb$ - $CellContext`xeq$)) ($CellContext`xb$ - \
$CellContext`yeq$); $CellContext`Rmin$ = (($CellContext`xd$ - \
$CellContext`yeq$)/($CellContext`xd$ - $CellContext`xeq$))/(
          1 - ($CellContext`xd$ - $CellContext`yeq$)/($CellContext`xd$ - \
$CellContext`xeq$)); $CellContext`R$ = 
         If[$CellContext`Rmin$ < 1, $CellContext`Rmin$ = 
           RandomInteger[{13, 18}]/10., $CellContext`Rmin$ (
            RandomInteger[{15, 20}]/10.)]; $CellContext`rect$[
           Pattern[$CellContext`x$, 
            Blank[]]] := ($CellContext`R$/($CellContext`R$ + 
            1)) $CellContext`x$ + $CellContext`xd$/($CellContext`R$ + 
           1); $CellContext`xi$ = ReplaceAll[$CellContext`x, 
           Quiet[
            
            FindRoot[$CellContext`feed$[$CellContext`x] == \
$CellContext`rect$[$CellContext`x], {$CellContext`x, 
              0.7}]]]; $CellContext`yi$ = \
$CellContext`rect$[$CellContext`xi$]; $CellContext`strip$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := ($CellContext`Lbar$/$CellContext`Vbar$) \
$CellContext`x$ - ($CellContext`Lbar$/$CellContext`Vbar$ - 
           1) $CellContext`xb$; $CellContext`distflow$ = 
         ReplaceAll[$CellContext`Dflow, 
           Part[
            
            Solve[{$CellContext`zf$ $CellContext`F$ == $CellContext`xd$ \
$CellContext`Dflow + $CellContext`xb$ $CellContext`Bflow, $CellContext`F$ == \
$CellContext`Dflow + $CellContext`Bflow}, {$CellContext`Dflow, \
$CellContext`Bflow}], 
            1]]; $CellContext`botflow$ = $CellContext`F$ - \
$CellContext`distflow$; $CellContext`L$ = $CellContext`distflow$ \
$CellContext`R$; $CellContext`V$ = $CellContext`distflow$ + $CellContext`L$; \
$CellContext`Lbar$ = $CellContext`L$ + $CellContext`q$ $CellContext`F$; \
$CellContext`Vbar$ = $CellContext`V$ - (
           1 - $CellContext`q$) $CellContext`F$; $CellContext`i$ = 
         0; $CellContext`yR$[0] = $CellContext`xd$; $CellContext`xR$[
          0] = $CellContext`xd$; 
        While[$CellContext`xR$[$CellContext`i$] > $CellContext`xi$, \
{$CellContext`x1$ = ReplaceAll[$CellContext`x, 
             Quiet[
              
              FindRoot[$CellContext`yR$[$CellContext`i$] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, \
$CellContext`xR$[$CellContext`i$] - 
                0.1}]]], $CellContext`y1$ = \
$CellContext`rect$[$CellContext`x1$], 
           If[
            Or[$CellContext`x1$ > $CellContext`xi$, 
             
             And[$CellContext`x1$ < $CellContext`xi$, $CellContext`i$ < 
              1]], {$CellContext`xR$[$CellContext`i$ + 
               1] = $CellContext`x1$, $CellContext`yR$[$CellContext`i$ + 
               1] = $CellContext`y1$}], 
           
           Increment[$CellContext`i$], $CellContext`nR$ = $CellContext`i$ - 
            1}]; $CellContext`i$ = 
         0; $CellContext`yS$[
          0] = $CellContext`yR$[$CellContext`nR$]; $CellContext`xS$[
          0] = $CellContext`xR$[$CellContext`nR$]; 
        While[$CellContext`xS$[$CellContext`i$] >= $CellContext`xb$, \
{$CellContext`x1$ = ReplaceAll[$CellContext`x, 
             Quiet[
              
              FindRoot[$CellContext`yS$[$CellContext`i$] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, \
$CellContext`xS$[$CellContext`i$] - 
                0.1}]]], $CellContext`y1$ = \
$CellContext`strip$[$CellContext`x1$], $CellContext`xS$[$CellContext`i$ + 
             1] = $CellContext`x1$, $CellContext`yS$[$CellContext`i$ + 
             1] = $CellContext`y1$, 
           Increment[$CellContext`i$]}]; $CellContext`nS$ = $CellContext`i$ - 
          1; $CellContext`nT$ = $CellContext`nR$ + $CellContext`nS$ + 
          1; $CellContext`Ry$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xR$[#], 
                $CellContext`yR$[# - 1]}, {
                $CellContext`xR$[#], 
                $CellContext`yR$[#]}}]& , 
             Range[$CellContext`nR$]]}, 
           Map[Line[{{
               $CellContext`xR$[#], 
               $CellContext`yR$[# - 1]}, {
               $CellContext`xR$[#], 
               $CellContext`yR$[#]}}]& , 
            Range[$CellContext`nR$]]]; $CellContext`Rx$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xR$[#], 
                $CellContext`yR$[#]}, {
                $CellContext`xR$[# + 1], 
                $CellContext`yR$[#]}}]& , 
             If[$CellContext`nR$ >= 1, 
              Range[0, $CellContext`nR$ - 1], {0}]]}, 
           Map[Line[{{
               $CellContext`xR$[#], 
               $CellContext`yR$[#]}, {
               $CellContext`xR$[# + 1], 
               $CellContext`yR$[#]}}]& , 
            If[$CellContext`nR$ >= 1, 
             Range[0, $CellContext`nR$ - 1], {0}]]]; $CellContext`Sy$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xS$[# + 1], 
                $CellContext`yS$[#]}, {
                $CellContext`xS$[# + 1], 
                $CellContext`yS$[# + 1]}}]& , 
             Range[0, $CellContext`nS$ - 1]]}, 
           Map[Line[{{
               $CellContext`xS$[# + 1], 
               $CellContext`yS$[#]}, {
               $CellContext`xS$[# + 1], 
               $CellContext`yS$[# + 1]}}]& , 
            Range[0, $CellContext`nS$ - 1]]]; $CellContext`Sx$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xS$[# - 1], 
                $CellContext`yS$[# - 1]}, {
                $CellContext`xS$[#], 
                $CellContext`yS$[# - 1]}}]& , 
             Range[$CellContext`nS$ + 1]]}, 
           Map[Line[{{
               $CellContext`xS$[# - 1], 
               $CellContext`yS$[# - 1]}, {
               $CellContext`xS$[#], 
               $CellContext`yS$[# - 1]}}]& , 
            Range[$CellContext`nS$ + 1]]]; $CellContext`Sr$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Line[{{
               $CellContext`xS$[$CellContext`nS$ + 1], 
               $CellContext`yS$[$CellContext`nS$]}, {
               $CellContext`xS$[$CellContext`nS$ + 1], 0}}]}, 
           Line[{{
              $CellContext`xS$[$CellContext`nS$ + 1], 
              $CellContext`yS$[$CellContext`nS$]}, {
              $CellContext`xS$[$CellContext`nS$ + 1], 
              0}}]]; $CellContext`Dotnumbers$ = Table[
           Text[
            Framed[
             Style[
              
              If[$CellContext`a < $CellContext`nT$ - 1, $CellContext`a + 1, 
               "R"], 17], Background -> White, 
             FrameMargins -> {{6, 4}, {0, 0}}, RoundingRadius -> 25, 
             FrameStyle -> Thin], 
            Which[$CellContext`a == 0, {
              If[$CellContext`nR$ > 0, 
               $CellContext`xR$[1], 
               $CellContext`xS$[1]], 
              $CellContext`yR$[0]}, 
             And[$CellContext`a == 1, $CellContext`nR$ == 0], {
              $CellContext`xS$[2], 
              $CellContext`yS$[1]}, $CellContext`a < $CellContext`nR$, {
              $CellContext`xR$[$CellContext`a + 1], 
              $CellContext`yR$[$CellContext`a]}, $CellContext`a == \
$CellContext`nR$, {
              $CellContext`xS$[1], 
              $CellContext`yS$[0]}, 
             
             Inequality[$CellContext`nR$, Less, $CellContext`a, 
              LessEqual, $CellContext`nT$ - 1], {
              $CellContext`xS$[$CellContext`a - $CellContext`nR$ + 1], 
              $CellContext`yS$[$CellContext`a - $CellContext`nR$]}], {
            1.2, -0.8}], {$CellContext`a, 0, $CellContext`nT$ - 
            1}]; $CellContext`plotlabel$ = Switch[$CellContext`MB$$, 1, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"equations: ", 
                Style["F", Italic], " = ", 
                Style["B", Italic], " + ", 
                Style["D", Italic], " and ", 
                Style["F", Italic], 
                Subscript[
                 Style["z", Italic], "feed"], " = ", 
                Subscript[
                 Style["x", Italic], "B"], 
                Style["B", Italic], " + ", 
                Subscript[
                 Style["x", Italic], "D"], 
                Style["D", Italic]}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do an overall balance and a component balance."}]], 2, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Equations: ", 
                Style["V ", Italic], "= ", 
                Style["L", Italic], " + ", 
                Style["D", Italic], " and ", 
                Style["L", Italic], " / ", 
                Style["D", Italic], " = reflux ratio."}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do a mass balance around the condenser."}]], 3, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Equations: ", 
                Style["V - ", Italic], 
                OverBar[
                 Style["V", Italic]], " + " Style["L ", Italic], "= ", 
                Style["V ", Italic], "+ ", 
                OverBar[
                 Style["L", Italic]], "      and      q = (", 
                OverBar[
                 Style["L", Italic]], 
                Style[" - L)/F.", Italic]}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do a mass balance around the feed stage."}]], 4, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{
                Style["x", Italic], " and ", 
                Style["y", Italic], 
                " coordinates should equal their respective \
compositions."}]}]], 5, 
           Which[
            
            And[$CellContext`solution$$ == True, $CellContext`showcolumn$$ == 
             False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Style["q", Italic], "-line equation: ", 
              Subscript[
               Style["y", Italic], "F"], " - ((", 
              Style["q", Italic], "/", 
              Style["q", Italic], "-1)x -(", 
              Subscript[
               Style["z", Italic], "feed"], "/(", 
              Style["q", Italic], "-1))."}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True, $CellContext`showcolumn$$ == False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Style["q", Italic], "-line slope: ", 
              Style["q", Italic], "/(", 
              Style["q", Italic], "-1)"}], $CellContext`showcolumn$$ == True, 
            ""], 6, 
           Which[
            
            And[$CellContext`solution$$ == True, $CellContext`showcolumn$$ == 
             False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Subscript[
               Style["y", Italic], "top"], " = (", 
              Style["L", Italic], "/", 
              Style["V", Italic], ")x + (1-(", 
              Style["L", Italic], "/", 
              Style["V", Italic], ")", 
              Subscript[
               Style["x", Italic], "D"], " and ", 
              Subscript["y", "bot"], " = (", 
              OverBar[
               Style["L", Italic]], "/", 
              OverBar[
               Style["V", Italic]], ")", 
              Style["x", Italic], " + (1-(", 
              OverBar[
               Style["L", Italic]], "/", 
              OverBar[
               Style["V", Italic]], ")", 
              Subscript[
               Style["x", Italic], "B"], ")."}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False, $CellContext`showcolumn$$ == False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True, $CellContext`showcolumn$$ == False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Slope of the top operating line = (", 
                Style["L", Italic], "/", 
                Style["V", Italic], ") and bottom operating line = (", 
                OverBar[
                 Style["L", Italic]], "/", 
                OverBar[
                 Style["V", Italic]], ")."}]}], $CellContext`showcolumn$$ == 
            True, ""], 7, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], "Start at the condenser."}]], 8, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], "The second stair from the top."}]], 9, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Continue the \"stair stepping\" method."}]], 10, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], " "}]]]; $CellContext`HintTextColumnTrue$$ = 
         Which[
           
           And[$CellContext`MB$$ == 5, $CellContext`hint$$ == 
            True, $CellContext`solution$$ == False, $CellContext`showcolumn$$ == 
            True], 
           Row[{
             Style["q", Italic], "-line slope: ", 
             Style["q", Italic], "/(", 
             Style["q", Italic], "-1)"}], 
           
           And[$CellContext`MB$$ == 5, $CellContext`solution$$ == 
            True, $CellContext`showcolumn$$ == True], 
           Row[{
             Spacer[{0, 1, 10}], 
             Style["q", Italic], "-line equation: ", 
             Subscript[
              Style["y", Italic], "F"], " = (", 
             Style["q", Italic], "/(", 
             Style["q", Italic], "-1))", 
             Style["x", Italic], "-(", 
             Subscript[
              Style["z", Italic], "feed"], "/(", 
             Style["q", Italic], "-1))"}], 
           
           And[$CellContext`MB$$ == 5, $CellContext`hint$$ == 
            False, $CellContext`solution$$ == 
            False, $CellContext`showcolumn$$ == True], " ", 
           
           And[$CellContext`MB$$ == 6, $CellContext`hint$$ == 
            True, $CellContext`solution$$ == False, $CellContext`showcolumn$$ == 
            True], 
           Row[{"Slope of the top operating line = (", 
             Style["L", Italic], "/", 
             Style["V", Italic], ") and bottom operating line = (", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], ")"}], 
           
           And[$CellContext`MB$$ == 6, $CellContext`solution$$ == 
            True, $CellContext`showcolumn$$ == True], 
           Row[{
             Spacer[{0, 1, 10}], 
             Subscript["y", "top"], " = (", 
             Style["L", Italic], "/", 
             Style["V", Italic], ") x + (1-(," Style["L", Italic], "/", 
             Style["V", Italic], "))", 
             Subscript["x", "D"], " and ", 
             Subscript["y", "bot"], " = (", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], "x + (1-(", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], ")", 
             Subscript["x", "B"], ")"}], 
           
           And[$CellContext`MB$$ == 6, $CellContext`hint$$ == 
            False, $CellContext`solution$$ == 
            False, $CellContext`showcolumn$$ == True], " ", 
           And[
            
            AnyTrue[{5, 
             6}, # == $CellContext`MB$$& ], $CellContext`showcolumn$$ == 
            False], " ", 
           And[$CellContext`MB$$ == 10, $CellContext`hint$$ == True], 
           "Has to do with where the two operating lines intersect.", 
           And[$CellContext`MB$$ == 10, $CellContext`hint$$ == False], 
           " "]; $CellContext`stagelines$ = Table[{
            Thickness[0.005], 
            
            Line[{{28, 20 + (70/$CellContext`nT$) $CellContext`i$}, {
              65, 20 + (
                 70/$CellContext`nT$) $CellContext`i$}}]}, {$CellContext`i$, 
            1, $CellContext`nT$ - 1}]; $CellContext`stagelabels$ = Table[
           Style[
            Text[
             StringJoin["stage ", 
              ToString[$CellContext`nT$ - $CellContext`i$], ""], {
             47, 22 + (70/$CellContext`nT$) $CellContext`i$}], 
            15], {$CellContext`i$, 1, $CellContext`nT$ - 
            1}]; $CellContext`ArrowPt1$ = {-15, 
           
           If[$CellContext`MB$$ == 1, 
            49, $CellContext`ArrowHeight$$]}; $CellContext`ArrowPt2$ = {28, 
           
           If[$CellContext`MB$$ == 1, 
            49, $CellContext`ArrowHeight$$]}; $CellContext`Part9Answer$ = 
         Rectangle[{28, 20 + (70/$CellContext`nT$) $CellContext`nS$}, {
           65, 20 + (70/$CellContext`nT$) ($CellContext`nS$ + 
              1)}]; $CellContext`LeftLimit$ = 
         If[$CellContext`MB$$ == 6, 10, -5]; $CellContext`RightLimit$ = 
         If[$CellContext`MB$$ >= 4, 100, 120]; $CellContext`stage1guessA$$ = {
           Part[$CellContext`stage1guessA$$, 1], 
           $CellContext`equilb$[
            Part[$CellContext`stage1guessA$$, 1]]}; $CellContext`ptdist$$ = {
           Part[$CellContext`ptdist$$, 1], 
           Part[$CellContext`ptdist$$, 1]}; $CellContext`ptfeed$$ = {
           Part[$CellContext`ptfeed$$, 1], 
           Part[$CellContext`ptfeed$$, 1]}; $CellContext`ptbott$$ = {
           Part[$CellContext`ptbott$$, 1], 
           Part[$CellContext`ptbott$$, 1]}; $CellContext`horizontalpt1 = 
         If[Part[$CellContext`stage1guessA$$, 2] >= $CellContext`yi$, {
            ReplaceAll[
             Quiet[$CellContext`x], 
             FindRoot[
             Part[$CellContext`stage1guessA$$, 
                2] == $CellContext`rect$[$CellContext`x], {$CellContext`x, 0, 
               1}]], 
            Part[$CellContext`stage1guessA$$, 2]}, {
            ReplaceAll[
             Quiet[$CellContext`x], 
             FindRoot[
             Part[$CellContext`stage1guessA$$, 
                2] == $CellContext`strip$[$CellContext`x], {$CellContext`x, 0,
                1}]], 
            
            Part[$CellContext`stage1guessA$$, 
             2]}]; $CellContext`horizontalpt2 = {
           ReplaceAll[
            Quiet[$CellContext`x], 
            FindRoot[
            Part[$CellContext`stage1guessA$$, 
               2] == $CellContext`equilb$[$CellContext`x], {$CellContext`x, 0,
               1}]], 
           Part[$CellContext`stage1guessA$$, 2]}; $CellContext`verticalpt1 = 
         Which[Part[$CellContext`horizontalpt2, 1] >= $CellContext`xi$, {
            Part[$CellContext`horizontalpt2, 1], 
            $CellContext`rect$[
             Part[$CellContext`horizontalpt2, 1]]}, 
           Inequality[$CellContext`xb$, LessEqual, 
            Part[$CellContext`horizontalpt2, 1], Less, $CellContext`xi$], {
            Part[$CellContext`horizontalpt2, 1], 
            $CellContext`strip$[
             Part[$CellContext`horizontalpt2, 1]]}, 
           Part[$CellContext`horizontalpt2, 1] < $CellContext`xb$, {
            Part[$CellContext`horizontalpt2, 1], 
            0}]; $CellContext`RandomizeValuesShown$ = RandomInteger[{1, 6}]; 
        Switch[$CellContext`RandomizeValuesShown$, 
          1, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = $CellContext`Ans1$$, \
$CellContext`GuessD$ = 0, $CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = $CellContext`Ans2$$, \
$CellContext`GuessG$ = 
           0, $CellContext`GuessH$ = $CellContext`Ans3$$, \
$CellContext`GuessI$ = $CellContext`Ans4$$, $CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}, 
          2, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = $CellContext`Ans1$$, \
$CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = $CellContext`Ans2$$, \
$CellContext`GuessG$ = 
           0, $CellContext`GuessH$ = $CellContext`Ans3$$, \
$CellContext`GuessI$ = $CellContext`Ans4$$, $CellContext`GuessJ$ = \
$CellContext`Ans5$$, $CellContext`GuessK$ = 
           0, $CellContext`GuessL$ = $CellContext`Ans6$$}, 
          3, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = $CellContext`Ans1$$, \
$CellContext`GuessE$ = $CellContext`Ans2$$, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = 
           0, $CellContext`GuessI$ = $CellContext`Ans4$$, \
$CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}, 
          4, {$CellContext`GuessA$ = $CellContext`Ans1$$, \
$CellContext`GuessB$ = 0, $CellContext`GuessC$ = 0, $CellContext`GuessD$ = 
           0, $CellContext`GuessE$ = $CellContext`Ans2$$, \
$CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = 
           0, $CellContext`GuessI$ = $CellContext`Ans4$$, \
$CellContext`GuessJ$ = $CellContext`Ans5$$, $CellContext`GuessK$ = \
$CellContext`Ans6$$, $CellContext`GuessL$ = 0}, 
          5, {$CellContext`GuessA$ = $CellContext`Ans1$$, \
$CellContext`GuessB$ = $CellContext`Ans2$$, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = 0, $CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = $CellContext`Ans4$$, $CellContext`GuessI$ = 
           
           0, $CellContext`GuessJ$ = $CellContext`Ans5$$, \
$CellContext`GuessK$ = $CellContext`Ans6$$, $CellContext`GuessL$ = 0}, 
          6, {$CellContext`GuessA$ = 
           0, $CellContext`GuessB$ = $CellContext`Ans2$$, \
$CellContext`GuessC$ = $CellContext`Ans1$$, $CellContext`GuessD$ = 
           0, $CellContext`GuessE$ = 0, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = $CellContext`Ans4$$, $CellContext`GuessI$ = 
           0, $CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}]; $CellContext`Box1$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, "distillate flow rate",
            2, "bottoms flow rate", 3, "bottoms flow rate", 4, "feed rate ", 
           5, "feed rate ", 6, "distillate flow rate"]; $CellContext`Box2$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"bottoms composition ", 
             Subscript[
              Style["x", Italic], "B"]}], 2, 
           Row[{"bottoms composition ", 
             Subscript[
              Style["x", Italic], "B"]}], 3, 
           Row[{"distillate composition ", 
             Subscript[
              Style["x", Italic], "D"]}], 4, 
           Row[{"distillate composition ", 
             Subscript[
              Style["x", Italic], "D"]}], 5, 
           Row[{"feed composition ", 
             Subscript[
              Style["z", Italic], "feed"]}], 6, 
           Row[{"feed composition ", 
             Subscript[
              Style["z", Italic], "feed"]}]]; $CellContext`Box3$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 2, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 3, "reflux ratio", 4, "reflux ratio", 5, 
           "reflux ratio", 6, "reflux ratio"]; $CellContext`Box4$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 2, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 3, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 4, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 5, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 6, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}]]; $CellContext`Box5$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 2, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 3, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 4, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 5, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 6, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}]]; $CellContext`Box6$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, "quality ", 2, 
           "quality ", 3, "quality ", 4, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 5, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 6, "quality "]; $CellContext`Ans1Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`F$, 2, 
           RandomReal[{1, 3}] $CellContext`F$, 3, 
           RandomReal[{1, 3}] $CellContext`F$, 4, 
           RandomReal[{1, 3}] $CellContext`F$, 5, 
           RandomReal[{1, 3}] $CellContext`F$, 6, 
           RandomReal[{1, 3}] $CellContext`F$]; $CellContext`Ans2Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 1, 2, 1, 3, 1, 4, 1, 5,
            1, 6, 1]; $CellContext`Ans3Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`L$, 2, 
           RandomReal[{1, 3}] $CellContext`L$, 3, 
           RandomReal[{1, 3}] $CellContext`R$, 4, 
           RandomReal[{1, 3}] $CellContext`R$, 5, 
           RandomReal[{1, 3}] $CellContext`R$, 6, 
           RandomReal[{1, 3}] $CellContext`R$]; $CellContext`Ans4Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`V$, 2, 
           RandomReal[{1, 3}] $CellContext`V$, 3, 
           RandomReal[{1, 3}] $CellContext`V$, 4, 
           RandomReal[{1, 3}] $CellContext`V$, 5, 
           RandomReal[{1, 3}] $CellContext`L$, 6, 
           RandomReal[{1, 3}] $CellContext`L$]; $CellContext`Ans5Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`Vbar$, 2, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 3, 
           RandomReal[{1, 3}] $CellContext`Vbar$, 4, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 5, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 6, 
           RandomReal[{1, 3}] $CellContext`Vbar$]; $CellContext`Ans6Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 2, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 3, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 4, RandomReal[{1, 3}] $CellContext`Vbar$,
            5, RandomReal[{1, 3}] $CellContext`Vbar$, 6, 
           
           RandomChoice[{(-2.3) $CellContext`q$, 2.1 $CellContext`q$, 
             1.2 $CellContext`q$, (-1.4) $CellContext`q$, (-1.48) \
$CellContext`q$, 1.87 $CellContext`q$}]]; $CellContext`Ans6RangeL$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 
           1, -$CellContext`Ans6Range$$, 2, -$CellContext`Ans6Range$$, 
           3, -$CellContext`Ans6Range$$, 4, 0, 5, 0, 
           6, -$CellContext`Ans6Range$$]; $CellContext`distcolumn$ = {
           Thickness[0.005], 
           Line[{{28, 25}, {28, 85}}], 
           Line[{{65, 25}, {65, 85}}], 
           Circle[{46.5, 85}, {18.5, 8}, {0, Pi}], 
           Circle[{46.5, 25}, {18.5, 8}, {Pi, 2 Pi}], Black, 
           Line[{{49, 93}, {49, 100}}], 
           Line[{{49, 100}, {80, 100}}], 
           Arrow[{{80, 100}, {80, 90}}], 
           Circle[{80, 85}, 5], 
           Arrow[{{60, 19}, {60, 10}}], 
           Line[{{55, 5}, {45, 5}}], 
           Arrow[{{45, 5}, {45, 17}}], 
           Circle[{60, 5}, 5], Black, 
           Arrow[{{75, 85}, {65, 85}}], 
           Arrow[{{85, 85}, {$CellContext`RightLimit$, 85}}], 
           Arrow[{{65, 5}, {$CellContext`RightLimit$, 5}}], 
           Text[
            Style["C", 15], {80, 85}], 
           Text[
            Style["R", 15], {60, 5}], 
           If[$CellContext`showcolumn$$ == True, 
            Switch[$CellContext`MB$$, 4, {
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = ", 
                  NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0, 56}, Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "D"], " = ", 
                  NumberForm[$CellContext`xd$, {2, 2}]}], 17], {75, 75}, 
               Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "B"], " = ", 
                  NumberForm[$CellContext`xb$, {2, 2}]}], 17], {75, 12}, 
               Left]}, 5, {
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = ", 
                  NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0, 56}, Left], 
              Text[
               Style[
                Row[{
                  Style["q", Italic], " = ", 
                  NumberForm[$CellContext`q$, {3, 2}]}], 17], {0, 64}, Left]},
              6, {
              Text[
               Style[
                Row[{
                  Style["L", Italic], " = ", 
                  NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 17], {30, 
               78}, Left], 
              Text[
               Style[
                Row[{
                  Style["V", Italic], " = ", 
                  NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 17], {30, 
               65}, Left], 
              Text[
               Style[
                Row[{
                  OverBar[
                   Style["L", Italic]], " = ", 
                  NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 17], {
               30, 26}, Left], 
              Text[
               Style[
                Row[{
                  OverBar[
                   Style["V", Italic]], " = ", 
                  NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 17], {
               30, 40}, Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "D"], " = ", 
                  NumberForm[$CellContext`xd$, {2, 2}]}], 17], {75, 75}, 
               Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "B"], " = ", 
                  NumberForm[$CellContext`xb$, {2, 2}]}], 17], {75, 12}, 
               Left]}], 
            Text["", {5, 5}]]}; $CellContext`size1$ = {
          PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> False, Frame -> 
           True, FrameLabel -> {
             Row[{"liquid mole fraction, ", 
               Style["x", Italic]}], 
             Row[{"vapor mole fraction, ", 
               Style["y", Italic]}]}, LabelStyle -> {17, Black}, 
           ImageSize -> {600, 360}, AspectRatio -> Full, GridLines -> {
             Range[0, 1, 0.05], 
             Range[0, 1, 0.05]}, GridLinesStyle -> GrayLevel[0.8], PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black], 
           ImageMargins -> {{0, 0}, {0, 0}}}; $CellContext`size2$ = {
          PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> False, Frame -> 
           True, FrameLabel -> {
             Row[{"liquid mole fraction, ", 
               Style["x", Italic]}], 
             Row[{"vapor mole fraction, ", 
               Style["y", Italic]}]}, LabelStyle -> {17, Black}, 
           ImageSize -> {290, 360}, AspectRatio -> Full, GridLines -> {
             Range[0, 1, 0.05], 
             Range[0, 1, 0.05]}, GridLinesStyle -> GrayLevel[0.8], PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black], 
           ImageMargins -> {{0, 0}, {0, 0}}}; $CellContext`size3$ = {
          ImageSize -> {600, 360}, AspectRatio -> Full, ImageMargins -> None, 
           PlotRangeClipping -> False, 
           PlotRange -> {{-28.7, 141}, {-15, 102}}, ImagePadding -> None, 
           PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black]}; $CellContext`size4$ = {
          ImageSize -> {310, 360}, AspectRatio -> Full, PlotRangeClipping -> 
           False, PlotRange -> {{$CellContext`LeftLimit$, 101}, {-15, 
             102}}}; $CellContext`Pane1$ = Show[
           Graphics[{$CellContext`distcolumn$, 
             Thickness[0.005], 
             
             Arrow[{$CellContext`ArrowPt1$, $CellContext`ArrowPt2$}]}], \
$CellContext`size4$]; $CellContext`Pane2$ = (Switch[$CellContext`MB$$, 1, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #8, #9, #10, #11, #12, #21, #24, #32}, 
               2, {#, #7, #8, #9, #10, #11, #12, #22, #24, #32}, 
               3, {#, #7, #8, #9, #10, #11, #12, #23, #22, #32}, 
               4, {#, #7, #8, #9, #10, #11, #12, #19, #23, #32}, 
               5, {#, #7, #8, #9, #10, #11, #12, #19, #20, #32}, 
               6, {#, #7, #8, #9, #10, #11, #12, #20, #21, #32}], False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #8, #10, #11, #21, #24, #32}, 
               2, {#, #7, #8, #9, #11, #22, #24, #32}, 
               3, {#, #7, #8, #9, #12, #23, #22, #32}, 
               4, {#, #8, #9, #10, #12, #19, #23, #32}, 
               5, {#, #9, #10, #11, #12, #19, #20, #32}, 
               6, {#, #7, #10, #11, #12, #20, #21, #32}]]], #5], 2, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #9, #13, #14, #15, #26, #27, #32, #35}, 
               2, {#, #9, #13, #14, #15, #26, #27, #32, #35}, 
               3, {#, #9, #13, #14, #15, #25, #27, #32, #35}, 
               4, {#, #9, #13, #14, #15, #25, #27, #32, #35}, 
               5, {#, #9, #13, #14, #15, #25, #26, #32, #35}, 
               6, {#, #9, #13, #14, #15, #25, #26, #32, #35}], False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #9, #13, #26, #27, #32, #35}, 
               2, {#, #9, #13, #26, #27, #32, #35}, 
               3, {#, #9, #14, #25, #27, #32, #35}, 
               4, {#, #9, #14, #25, #27, #32, #35}, 
               5, {#, #9, #15, #25, #26, #32, #35}, 
               6, {#, #9, #15, #25, #26, #32, #35}]]], #5], 3, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}, 
               2, {#, #7, #14, #15, #16, #17, #18, #28, #30, #32, #34}, 
               3, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}, 
               4, {#, #7, #14, #15, #16, #17, #18, #28, #29, #32, #34}, 
               5, {#, #7, #14, #15, #16, #17, #18, #28, #29, #32, #34}, 
               6, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}], 
              False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #14, #15, #16, #29, #30, #32, #34}, 
               2, {#, #7, #14, #15, #17, #28, #30, #32, #34}, 
               3, {#, #7, #14, #15, #16, #29, #30, #32, #34}, 
               4, {#, #7, #14, #15, #18, #28, #29, #32, #34}, 
               5, {#, #7, #14, #15, #18, #28, #29, #32, #34}, 
               6, {#, #7, #14, #15, #16, #29, #30, #32, #34}]]], #5], 4, 
           Show[{#31, #2}, #3], 5, 
           Show[{#31, #2}, #3], 6, 
           Show[{#31, #2}, #3], 7, 
           Show[{#31, #2}, #3], 8, 
           Show[{#31, #2}, #3], 9, 
           Show[{#31, #2}, #3], 10, 
           Row[{
             Show[
              
              Graphics[{#, $CellContext`stagelines$, \
$CellContext`stagelabels$, #32, #33, 
                If[
                 And[$CellContext`MB$$ == 10, $CellContext`solution$$], {
                 Yellow, 
                  Opacity[0.5], $CellContext`Part9Answer$}, {
                  Opacity[0], $CellContext`Part9Answer$}]}, #6]], 
             Show[{#31, #2}, #4]}]]& )[$CellContext`distcolumn$, 
           Graphics[{
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 4], {{
                
                Arrow[{{$CellContext`zf$, $CellContext`zf$ - 
                   0.15}, {$CellContext`zf$, $CellContext`zf$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colF, Background -> White], 
                  Style[
                   Subscript[
                    Style["z", Italic], "feed"], 17, $CellContext`colF, 
                   Background -> 
                   White]}], {$CellContext`zf$, $CellContext`zf$ - 0.19}], {
                
                Arrow[{{$CellContext`xd$, $CellContext`xd$ - 
                   0.15}, {$CellContext`xd$, $CellContext`xd$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colR, Background -> White], 
                  Style[
                   Subscript[
                    Style["x", Italic], "D"], 17, $CellContext`colR, 
                   Background -> 
                   White]}], {$CellContext`xd$, $CellContext`xd$ - 0.19}], {
                Arrow[{{$CellContext`xb$ + 0.16, $CellContext`xb$ - 
                   0.05}, {$CellContext`xb$, $CellContext`xb$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colS, Background -> White], 
                  Style[
                   Subscript[
                    Style["x", Italic], "B"], 17, $CellContext`colS, 
                   Background -> White]}], {$CellContext`xb$ + 
                 0.19, $CellContext`xb$ - 0.06}, Left]}], 
             If[$CellContext`MB$$ == 4, {{
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptdist$$, $CellContext`colR]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptdist$$, 1], {2, 2}]}], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`ptdist$$, {1, -2.5}], {
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptbott$$, $CellContext`colS]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptbott$$, 1], {2, 2}]}], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`ptbott$$, {-1, -2.5}], {
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptfeed$$, $CellContext`colF]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptfeed$$, 1], {2, 2}]}], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`ptfeed$$, {1, -2.5}]}], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`zf$, $CellContext`zf$}, \
$CellContext`colF]], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`xd$, $CellContext`xd$}, \
$CellContext`colR]], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`xb$, $CellContext`xb$}, \
$CellContext`colS]], 
             If[$CellContext`MB$$ == 5, 
              Dynamic[{{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`qdot1$$, $CellContext`colF]}, 
                Dynamic[{
                  Opacity[0.6], 
                  $CellContext`pt1[$CellContext`qdot2$$, $CellContext`colF]}], 
                Dynamic[{Dashed, Thick, 
                  Line[{$CellContext`qdot1$$, $CellContext`qdot2$$}]}]}]], 
             If[
              And[$CellContext`MB$$ == 5, $CellContext`solution$$ == False], {
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`qdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`qdot2$$, {0, -2}]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               
               Line[{{$CellContext`xeq$, $CellContext`yeq$}, \
{$CellContext`zf$, $CellContext`zf$}}]}], 
             If[$CellContext`MB$$ > 6, {$CellContext`colF, 
               Thickness[0.006], 
               
               Line[{{$CellContext`xi$, $CellContext`yi$}, {$CellContext`zf$, \
$CellContext`zf$}}]}], 
             If[$CellContext`MB$$ == 6, {Thick, $CellContext`colF, 
               
               Line[{{$CellContext`xeq$, $CellContext`yeq$}, \
{$CellContext`zf$, $CellContext`zf$}}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`TOLdot1$$, \
$CellContext`colR]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`TOLdot2$$, \
$CellContext`colR]}], 
               Dynamic[{Dashed, Thick, 
                 Line[{$CellContext`TOLdot1$$, $CellContext`TOLdot2$$}]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`BOLdot1$$, \
$CellContext`colS]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`BOLdot2$$, \
$CellContext`colS]}], 
               Dynamic[{Dashed, Thick, 
                 Line[{$CellContext`BOLdot1$$, $CellContext`BOLdot2$$}]}]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 6], {
               $CellContext`pt2[{$CellContext`xi$, $CellContext`yi$}, 
                Purple], {
                Opacity[0.5], 
                Thickness[0.01], 
                CapForm["Round"], Blue, {
                 
                 Line[{{$CellContext`xb$, $CellContext`xb$}, \
{$CellContext`xi$, $CellContext`yi$}}], 
                 
                 Line[{{$CellContext`xd$, $CellContext`xd$}, \
{$CellContext`xi$, $CellContext`yi$}}]}}}], 
             If[
              And[$CellContext`MB$$ == 6, $CellContext`solution$$ == False], {
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`TOLdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`TOLdot2$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`BOLdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`BOLdot2$$, {0, -2}]}], 
             If[$CellContext`MB$$ > 6, {
               Thickness[0.006], $CellContext`colS, 
               
               Line[{{$CellContext`xb$, $CellContext`xb$}, {$CellContext`xi$, \
$CellContext`yi$}}], $CellContext`colR, 
               
               Line[{{$CellContext`xd$, $CellContext`xd$}, {$CellContext`xi$, \
$CellContext`yi$}}]}], 
             If[
              
              Or[$CellContext`MB$$ == 7, $CellContext`MB$$ == 
               8, $CellContext`MB$$ == 9], {
               Dynamic[{Dashed, 
                 Thickness[0.008], 
                 RGBColor[0.9, 0.3, 0], 
                 
                 Line[{$CellContext`horizontalpt1, \
$CellContext`horizontalpt2}], 
                 
                 Line[{$CellContext`verticalpt1, \
$CellContext`horizontalpt2}]}], 
               $CellContext`pt1[$CellContext`stage1guessA$$, Blue], {Black, 
                PointSize[0.045], 
                
                Point[{Part[$CellContext`horizontalpt2, 1] - 0.03, 
                  Part[$CellContext`horizontalpt2, 2] + 0.04}], White, 
                PointSize[0.042], 
                
                Point[{Part[$CellContext`horizontalpt2, 1] - 0.03, 
                  Part[$CellContext`horizontalpt2, 2] + 0.04}]}, 
               Text[
                Style[
                 If[
                  Or[$CellContext`MB$$ == 7, $CellContext`MB$$ == 8], 
                  ToString[$CellContext`MB$$ - 6], 
                  ToString["R"]], 17], {
                Part[$CellContext`horizontalpt2, 1] - 0.025, 
                 Part[$CellContext`horizontalpt2, 2] + 0.034}]}], 
             If[
              Or[$CellContext`MB$$ == 8, $CellContext`MB$$ == 9], 
              Part[$CellContext`Dotnumbers$, 1]], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 7], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               If[$CellContext`nR$ > 0, 
                Part[$CellContext`Ry$, 1], 
                Part[$CellContext`Sy$, 1]], 
               Part[$CellContext`Rx$, 1]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 8], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               Which[
                And[$CellContext`nR$ == 0, $CellContext`nS$ > 1], {
                 Part[$CellContext`Sy$, 2], 
                 Part[$CellContext`Sx$, 2]}, 
                
                And[$CellContext`nR$ == 0, $CellContext`nS$ == 
                 1], {$CellContext`Sr$, 
                 Part[$CellContext`Sx$, 2]}, 
                And[$CellContext`nR$ == 1, $CellContext`nS$ > 0], {
                 Part[$CellContext`Sy$, 1], 
                 Part[$CellContext`Sx$, 1]}, 
                
                And[$CellContext`nR$ == 1, $CellContext`nS$ == 
                 1], {$CellContext`Sr$, 
                 Part[$CellContext`Rx$, 2]}, $CellContext`nR$ > 1, {
                 Part[$CellContext`Ry$, 2], 
                 Part[$CellContext`Rx$, 2]}]}], 
             If[$CellContext`MB$$ == 8, {Thick, 
               If[$CellContext`nR$ > 0, 
                Part[$CellContext`Ry$, 1], 
                Part[$CellContext`Sy$, 1]], 
               Part[$CellContext`Rx$, 1]}], 
             
             If[$CellContext`MB$$ == 9, {
              Thick, $CellContext`Ry$, $CellContext`Sy$, $CellContext`Rx$, 
               Table[
                
                Part[$CellContext`Sx$, $CellContext`a], {$CellContext`a, 
                 1, $CellContext`nS$}], 
               Part[$CellContext`Dotnumbers$, 
                Span[2, $CellContext`nT$ - 1]]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 9], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, $CellContext`Sr$, 
               Part[$CellContext`Sx$, $CellContext`nS$ + 1]}], 
             If[
              
              And[$CellContext`MB$$ == 4, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0.05}, {1.15, 0.35}]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[$CellContext`zf$, {2, 2}]}], 
                 17, $CellContext`colF], {0.7, 0.3}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[$CellContext`xd$, {2, 2}]}], 
                 17, $CellContext`colR], {0.7, 0.2}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[$CellContext`xb$, {2, 2}]}], 
                 17, $CellContext`colS], {0.7, 0.1}, Left]}], 
             If[
              
              And[$CellContext`MB$$ == 5, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0.4}, {1.15, 0.6}]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0.7, 0.55}, 
                Left], 
               Text[
                Style[
                 StringJoin["quality = ", 
                  ToString[
                   NumberForm[$CellContext`q$, {3, 2}]], ""], 17], {0.7, 
                0.45}, Left]}], 
             If[
              And[$CellContext`MB$$ == 6, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0}, {1.15, 0.6}]}, 
               Text[
                Style[
                 Row[{
                   Style["L", Italic], " = ", 
                   NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.55}, Left], 
               Text[
                Style[
                 Row[{
                   Style["V", Italic], " = ", 
                   NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.45}, Left], 
               Text[
                Style[
                 Row[{
                   OverBar[
                    Style["L", Italic]], " = ", 
                   NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.35}, Left], 
               Text[
                Style[
                 Row[{
                   OverBar[
                    Style["V", Italic]], " = ", 
                   NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.25}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[$CellContext`xd$, {2, 2}]}], 17], {0.7, 0.15}, 
                Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[$CellContext`xb$, {2, 2}]}], 17], {0.7, 0.05}, 
                Left]}], 
             If[$CellContext`MB$$ == 10, {$CellContext`Dotnumbers$, Thick, 
               GrayLevel[
               0.4], $CellContext`Ry$, $CellContext`Sy$, $CellContext`Rx$, \
$CellContext`Sr$, 
               Table[
                
                Part[$CellContext`Sx$, $CellContext`a + 1], {$CellContext`a, 
                 0, $CellContext`nS$}]}]}], 
           If[$CellContext`showcolumn$$ == 
            True, $CellContext`size2$, $CellContext`size1$], \
$CellContext`size2$, $CellContext`size3$, $CellContext`size4$, 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 AnyTrue[{4, 5}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct feed rate = \n\t\t", 
                Row[{"feed rate (", 
                  Style["F", Italic], ") = "}]], 
               NumberForm[$CellContext`F$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               AnyTrue[{4, 5}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              
              AnyTrue[{4, 
               5}, # == $CellContext`RandomizeValuesShown$& ]], {-30, 
             26}, {-28.5, 40}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{5, 6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["z", Italic], "feed"], " = "}], 
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = "}]], 
               NumberForm[$CellContext`zf$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{5, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {-23, 
             68}, {-15, 58}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
                 AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct distillate flow = ", 
                Row[{"distillate flow (", 
                  Style["D", Italic], ") = "}]], 
               ToString[
                NumberForm[$CellContext`distflow$, {3, 2}]], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
               AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
              AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, 60}, {70, 72}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct bottoms flow = ", 
                Row[{"bottoms flow (", 
                  Style["B", Italic], ") = "}]], 
               ToString[
                NumberForm[$CellContext`botflow$, {3, 2}]], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, 23}, {70, 14}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["x", Italic], "D"]}], 
                Subscript[
                 Style["x", Italic], "D"]], " = ", 
               NumberForm[$CellContext`xd$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], {
             88, 102}, {88, 94}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["x", Italic], "B"]}], 
                Subscript[
                 Style["x", Italic], "B"]], " = ", 
               NumberForm[$CellContext`xb$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, -12}, {70, -3}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{3, 4, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct reflux ratio ", 
                Row[{"reflux ratio (", 
                  Style["L", Italic], "/", 
                  Style["D", Italic], ")"}]], " = ", 
               NumberForm[$CellContext`R$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{3, 4, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{3, 4, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {88, 100}, {
             88, 92}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 
                 AnyTrue[{1, 2, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Style["L", Italic]}], 
                Style["L", Italic]], " = ", 
               NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               
               AnyTrue[{1, 2, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            Which[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              
              AnyTrue[{1, 2, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {70, 
             53}, $CellContext`MB$$ != 3, {29.3, 53}, $CellContext`MB$$ == 
             3, {29.3, 63}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 
                 AnyTrue[{1, 2, 3, 
                  4}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Style["V", Italic]}], 
                Style["V", Italic]], " = ", 
               NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               
               AnyTrue[{1, 2, 3, 
                4}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            Which[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              AnyTrue[{1, 2, 3, 
               4}, # == $CellContext`RandomizeValuesShown$& ]], {70, 
             63}, $CellContext`MB$$ != 3, {29.3, 63}, $CellContext`MB$$ == 
             3, {29.3, 73}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{2, 4, 
                  5}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  OverBar[
                   Style["L", Italic]]}], 
                OverBar[
                 Style["L", Italic]]], " = ", 
               NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{2, 4, 
                5}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{2, 4, 
               5}, # == $CellContext`RandomizeValuesShown$& ]], {70, 32}, {
             29.3, 32}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{1, 3, 4, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  OverBar[
                   Style["V", Italic]]}], 
                OverBar[
                 Style["V", Italic]]], " = ", 
               NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{1, 3, 4, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{1, 3, 4, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {70, 40}, {
             29.3, 40}], Left], 
           Text[
            Style[
             StringJoin[
              If[
               And[$CellContext`solution$$ == True, 
                
                AnyTrue[{1, 2, 3, 
                 6}, # == $CellContext`RandomizeValuesShown$& ]], 
               "correct quality = ", "quality = "], 
              ToString[
               NumberForm[$CellContext`q$, {3, 2}]], ""], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{1, 2, 3, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{1, 2, 3, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {-18, 
             68}, {-18, 58}], Left], 
           Text[
            Style[
             Row[{"feed rate (", 
               Style["F", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessA$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {-28.5, 40}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["z", Italic], "feed"], " = ", 
               NumberForm[$CellContext`GuessB$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {-15, 58}, Left], 
           Text[
            Style[
             Row[{"distillate flow (", 
               Style["D", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessC$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {70, 72}, Left], 
           Text[
            Style[
             Row[{"bottoms flow (", 
               Style["B", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessD$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {70, 14}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["x", Italic], "D"], " = ", 
               NumberForm[$CellContext`GuessE$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {88, 94}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["x", Italic], "B"], " = ", 
               NumberForm[$CellContext`GuessF$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {70, -3}, Left], 
           Text[
            Style[
             Row[{"reflux ratio (", 
               Style["L", Italic], "/", 
               Style["D", Italic], ") = ", 
               NumberForm[$CellContext`GuessG$, {3, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {88, 92}, Left], 
           Text[
            Style[
             Row[{
               Style["L", Italic], " = ", 
               NumberForm[$CellContext`GuessH$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 53}, Left], 
           Text[
            Style[
             Row[{
               Style["V", Italic], " = ", 
               NumberForm[$CellContext`GuessI$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 63}, Left], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["L", Italic]], " = ", 
               NumberForm[$CellContext`GuessJ$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 32}, Left], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["V", Italic]], " = ", 
               NumberForm[$CellContext`GuessK$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 40}, Left], 
           Text[
            Style[
             StringJoin["quality = ", 
              ToString[
               NumberForm[$CellContext`GuessL$, {3, 2}]], ""], 17, 
             RGBColor[0, 0.6, 0]], {-18, 58}, Left], 
           Plot[{
             $CellContext`equilb$[$CellContext`x], $CellContext`x}, \
{$CellContext`x, 0, 1}, PlotStyle -> {{Thick, Black}}], {
            Thickness[0.005], 
            Arrow[{$CellContext`ArrowPt1$, $CellContext`ArrowPt2$}]}, 
           Text[
            Style["feed stream", 17], {13, $CellContext`ArrowHeight$$ + 5}], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["L", Italic]], " and ", 
               OverBar[
                Style["V", Italic]], 
               " = liquid and vapor flow\nrates in the stripping (bottom) \
section"}], 17, TextAlignment -> Left], {-24, 0}, Left], 
           Text[
            Style[
             Row[{
               Style["L", Italic], " and ", 
               Style["V", Italic], 
               " = liquid and vapor flow\nrates in the rectifying (top) \
section"}], 17, TextAlignment -> Left], {-24, 0}, 
            Left]]; $CellContext`Value1$ = $CellContext`equilb$[0.6] - 
          0.05; $CellContext`Value2$ = $CellContext`equilb$[0.4] - 0.05; 
        If[$CellContext`showcolumn$$, 
          
          Row[{$CellContext`Pane2$, $CellContext`Pane1$}], \
$CellContext`Pane2$]], 
      "Specifications" :> {{{$CellContext`solution$$, True, "solution"}, {
         True, False}, ControlType -> None}, {{$CellContext`MB$$, 6}, 1, 10, 
         1, ControlType -> None}, {{$CellContext`reset$$, 482}, 1, 10000, 1, 
         ControlType -> None, ControlPlacement -> 1}, {{$CellContext`MB$$, 6},
          1, 10, 1, ControlType -> None, ControlPlacement -> 
         2}, {{$CellContext`stage1guessA$$, {0.2, 0.5352106534516532}}, {{
         0.01, 0.99}, {0.01, 0.99}}, ControlType -> Locator, Appearance -> 
         None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         3}, {{$CellContext`solution$$, True, "solution"}, {True, False}, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         4}, {{$CellContext`hint$$, False, "hint"}, {False, True}, 
         ControlPlacement -> 
         5}, {{$CellContext`showcolumn$$, False, "column"}, {True, False}, 
         ControlPlacement -> 6}, {{$CellContext`Ans1$$, 0, 
          Dynamic[$CellContext`Box1$$]}, 0, 
         Dynamic[$CellContext`Ans1Range$$], 0.01, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], Appearance -> "Labeled",
          ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         7}, {{$CellContext`Ans2$$, 0, 
          Dynamic[$CellContext`Box2$$]}, 0, 
         Dynamic[$CellContext`Ans2Range$$], 0.01, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], Appearance -> "Labeled",
          ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         8}, {{$CellContext`Ans3$$, 0, 
          Dynamic[$CellContext`Box3$$]}, 0, 
         Dynamic[$CellContext`Ans3Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         9}, {{$CellContext`Ans4$$, 0, 
          Dynamic[$CellContext`Box4$$]}, 0, 
         Dynamic[$CellContext`Ans4Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         10}, {{$CellContext`Ans5$$, 0, 
          Dynamic[$CellContext`Box5$$]}, 0, 
         Dynamic[$CellContext`Ans5Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         11}, {{$CellContext`Ans6$$, 0, 
          Dynamic[$CellContext`Box6$$]}, 
         Dynamic[$CellContext`Ans6RangeL$$], 
         Dynamic[$CellContext`Ans6Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         12}, {{$CellContext`ptdist$$, {0.6, 0.6}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         13}, {{$CellContext`ptbott$$, {0.4, 0.4}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         14}, {{$CellContext`ptfeed$$, {0.2, 0.2}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         15}, {{$CellContext`qdot1$$, {0.3, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         16}, {{$CellContext`qdot2$$, {0.1, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         17}, {{$CellContext`BOLdot1$$, {0.3, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         18}, {{$CellContext`BOLdot2$$, {0.1, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         19}, {{$CellContext`TOLdot1$$, {0.3, 0.7}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         20}, {{$CellContext`TOLdot2$$, {0.1, 0.7}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         21}, {{$CellContext`ArrowHeight$$, 50, "feed height"}, 20, 90, 1, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         22}, {{$CellContext`Box1$$, "feed rate "}, 0, ControlType -> None, 
         ControlPlacement -> 23}, {{$CellContext`Box2$$, 
          Row[{"distillate composition ", 
            Subscript[
             Style["x", Italic], "D"]}]}, 0, ControlType -> None, 
         ControlPlacement -> 24}, {{$CellContext`Box3$$, "reflux ratio"}, 0, 
         ControlType -> None, ControlPlacement -> 25}, {{$CellContext`Box4$$, 
          Row[{"vapor flow rate ", 
            Style["V ", Italic]}]}, 0, ControlType -> None, ControlPlacement -> 
         26}, {{$CellContext`Box5$$, 
          Row[{"liquid flow rate ", 
            OverBar[
             Style["L", Italic]]}]}, 0, ControlType -> None, ControlPlacement -> 
         27}, {{$CellContext`Box6$$, 
          Row[{"vapor flow rate ", 
            OverBar[
             Style["V", Italic]]}]}, 0, ControlType -> None, ControlPlacement -> 
         28}, {{$CellContext`Ans1Range$$, 18.79018435380583}, 0, ControlType -> 
         None, ControlPlacement -> 29}, {{$CellContext`Ans2Range$$, 1}, 0, 
         ControlType -> None, ControlPlacement -> 
         30}, {{$CellContext`Ans3Range$$, 4.765399702910578}, 0, ControlType -> 
         None, ControlPlacement -> 
         31}, {{$CellContext`Ans4Range$$, 26.94719638937734}, 0, ControlType -> 
         None, ControlPlacement -> 
         32}, {{$CellContext`Ans5Range$$, 11.88985422266501}, 0, ControlType -> 
         None, ControlPlacement -> 
         33}, {{$CellContext`Ans6Range$$, 14.877110256846878`}, 0, 
         ControlType -> None, ControlPlacement -> 
         34}, {{$CellContext`Ans6RangeL$$, 0}, 0, ControlType -> None, 
         ControlPlacement -> 35}, {{$CellContext`HintTextColumnTrue$$, " "}, 
         0, ControlType -> None, ControlPlacement -> 36}, 
        Grid[{{
           Button[" new problem ", {
             Increment[$CellContext`reset$$], $CellContext`MB$$ = 
             1, $CellContext`solution$$ = False, $CellContext`hint$$ = False, 
             Clear[$CellContext`lineguess1], $CellContext`Ans1$$ = 
             0, $CellContext`Ans2$$ = 0, $CellContext`Ans3$$ = 
             0, $CellContext`Ans4$$ = 0, $CellContext`Ans5$$ = 
             0, $CellContext`Ans6$$ = 0, $CellContext`showcolumn$$ = 
             False, $CellContext`stage1guessA$$ = {0.5, 
              0.8}, $CellContext`ArrowHeight$$ = 
             50, $CellContext`qdot1$$ = {0.3, 0.9}, $CellContext`qdot2$$ = {
              0.1, 0.9}, $CellContext`ptdist$$ = {0.6, 
              0.7}, $CellContext`ptbott$$ = {0.4, 
              0.3}, $CellContext`ptfeed$$ = {0.2, 
              0.7}, $CellContext`BOLdot1$$ = {0.3, 
              0.9}, $CellContext`BOLdot2$$ = {0.1, 
              0.9}, $CellContext`TOLdot1$$ = {0.3, 
              0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}], 
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           Manipulate`Place[3], 
           PaneSelector[{1 -> Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 2 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 3 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 4 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 5 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 6 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 7 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 8 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 9 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}]}, 
            Dynamic[$CellContext`MB$$]], 
           
           PaneSelector[{
            1 -> "1. Solve for the missing green variables.", 2 -> 
             "2. Solve for the missing green variables.", 3 -> 
             "3. Solve for the missing green variables.", 4 -> 
             Column[{"4. Place the points at their correct", 
                Row[{"locations on the ", 
                  Style["y", Italic], " = ", 
                  Style["x", Italic], " line."}]}], 5 -> Row[{"5. Draw the ", 
                Style["q", Italic], "-line (feed line)."}], 6 -> 
             "6. Move the points to draw the top \n and bottom operating \
lines.", 7 -> "7. Drag the point to locate the first stage.", 8 -> 
             "8. Drag the point to locate the second stage.", 9 -> 
             "9. Drag the point to locate the final stage.", 10 -> 
             "10. Determine the feed stream location."}, 
            Dynamic[$CellContext`MB$$]], 
           Manipulate`Place[4], 
           
           PaneSelector[{
            1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
             Manipulate`Place[5], 5 -> Manipulate`Place[5], 6 -> 
             Manipulate`Place[5], 7 -> Manipulate`Place[5], 8 -> 
             Manipulate`Place[5], 9 -> Manipulate`Place[5], 10 -> 
             Manipulate`Place[5]}, 
            Dynamic[$CellContext`MB$$]], 
           PaneSelector[{5 -> Manipulate`Place[6], 6 -> Manipulate`Place[6]}, 
            Dynamic[$CellContext`MB$$]]}, {
           PaneSelector[{1 -> Grid[{{
                 Manipulate`Place[7], 
                 Manipulate`Place[8]}}], 2 -> Grid[{{
                 Manipulate`Place[9], 
                 Manipulate`Place[10]}}], 3 -> Grid[{{
                 Manipulate`Place[11], 
                 Manipulate`Place[12]}}], 4 -> Row[{
                Manipulate`Place[13], 
                Manipulate`Place[14], 
                Manipulate`Place[15]}], 5 -> Row[{
                Manipulate`Place[16], 
                Manipulate`Place[17], 
                Spacer[{200, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}], 6 -> Row[{
                Manipulate`Place[18], 
                Manipulate`Place[19], 
                Manipulate`Place[20], 
                Manipulate`Place[21], 
                Spacer[{200, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}], 10 -> Row[{
                Manipulate`Place[22], 
                Spacer[{40, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}]}, 
            Dynamic[$CellContext`MB$$]], SpanFromLeft}, {
           Manipulate`Place[23], 
           Manipulate`Place[24], 
           Manipulate`Place[25], 
           Manipulate`Place[26], 
           Manipulate`Place[27], 
           Manipulate`Place[28], 
           Manipulate`Place[29], 
           Manipulate`Place[30], 
           Manipulate`Place[31]}, {
           Manipulate`Place[32], 
           Manipulate`Place[33], 
           Manipulate`Place[34], 
           Manipulate`Place[35], 
           Manipulate`Place[36]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[Subscript] = {NHoldRest}, $CellContext`horizontalpt1 = {
        0.796279548785221, 0.8261797099333564}, $CellContext`horizontalpt2 = {
        0.5000000000000001, 0.8261797099333564}, $CellContext`verticalpt1 = {
        0.5000000000000001, 0.6357142857142858}, $CellContext`colF = 
       RGBColor[0.6, 0.4, 0.2], $CellContext`colR = 
       RGBColor[0, 0.6, 0], $CellContext`colS = Hue[0.9], $CellContext`pt1[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`col, 
          Blank[]]] := {$CellContext`col, 
         PointSize[0.022], 
         Point[$CellContext`pt], White, 
         PointSize[0.018], 
         Point[$CellContext`pt]}, $CellContext`pt2[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`col, 
          Blank[]]] := {$CellContext`col, 
         PointSize[0.022], 
         Point[$CellContext`pt]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->127768073,ExpressionUUID->"0780ad88-ac9b-4715-8e2c-80a0c0b53bd1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Ans1$$ = 0, $CellContext`Ans1Range$$ = 
    18.79018435380583, $CellContext`Ans2$$ = 0, $CellContext`Ans2Range$$ = 
    1, $CellContext`Ans3$$ = 0, $CellContext`Ans3Range$$ = 
    4.765399702910578, $CellContext`Ans4$$ = 0, $CellContext`Ans4Range$$ = 
    26.94719638937734, $CellContext`Ans5$$ = 0, $CellContext`Ans5Range$$ = 
    11.88985422266501, $CellContext`Ans6$$ = 0, $CellContext`Ans6Range$$ = 
    14.877110256846878`, $CellContext`Ans6RangeL$$ = 
    0, $CellContext`ArrowHeight$$ = 50, $CellContext`BOLdot1$$ = {0.3, 
    0.9}, $CellContext`BOLdot2$$ = {0.1, 0.9}, $CellContext`Box1$$ = 
    "feed rate ", $CellContext`Box2$$ = Row[{"distillate composition ", 
      Subscript[
       Style["x", Italic], "D"]}], $CellContext`Box3$$ = 
    "reflux ratio", $CellContext`Box4$$ = Row[{"vapor flow rate ", 
      Style["V ", Italic]}], $CellContext`Box5$$ = Row[{"liquid flow rate ", 
      OverBar[
       Style["L", Italic]]}], $CellContext`Box6$$ = Row[{"vapor flow rate ", 
      OverBar[
       Style["V", Italic]]}], $CellContext`hint$$ = 
    False, $CellContext`HintTextColumnTrue$$ = " ", $CellContext`MB$$ = 
    10, $CellContext`ptbott$$ = {0.4, 0.4}, $CellContext`ptdist$$ = {0.6, 
    0.6}, $CellContext`ptfeed$$ = {0.2, 0.2}, $CellContext`qdot1$$ = {0.3, 
    0.9}, $CellContext`qdot2$$ = {0.1, 0.9}, $CellContext`reset$$ = 
    482, $CellContext`showcolumn$$ = False, $CellContext`solution$$ = 
    False, $CellContext`stage1guessA$$ = {0.2, 
    0.5352106534516532}, $CellContext`TOLdot1$$ = {0.3, 
    0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {{
       Hold[$CellContext`MB$$], 10}, 1, 10, 1}, {{
       Hold[$CellContext`reset$$], 482}, 1, 10000, 1}, {{
       Hold[$CellContext`MB$$], 10}, 1, 10, 1}, {{
       Hold[$CellContext`stage1guessA$$], {0.2, 0.5352106534516532}}, {{0.01, 
      0.99}, {0.01, 0.99}}}, {{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {{
       Hold[$CellContext`hint$$], False, "hint"}, {False, True}}, {{
       Hold[$CellContext`showcolumn$$], False, "column"}, {True, False}}, {{
       Hold[$CellContext`Ans1$$], 0, 
       Dynamic[$CellContext`Box1$$]}, 0, 
      Dynamic[$CellContext`Ans1Range$$], 0.01}, {{
       Hold[$CellContext`Ans2$$], 0, 
       Dynamic[$CellContext`Box2$$]}, 0, 
      Dynamic[$CellContext`Ans2Range$$], 0.01}, {{
       Hold[$CellContext`Ans3$$], 0, 
       Dynamic[$CellContext`Box3$$]}, 0, 
      Dynamic[$CellContext`Ans3Range$$], 0.01}, {{
       Hold[$CellContext`Ans4$$], 0, 
       Dynamic[$CellContext`Box4$$]}, 0, 
      Dynamic[$CellContext`Ans4Range$$], 0.01}, {{
       Hold[$CellContext`Ans5$$], 0, 
       Dynamic[$CellContext`Box5$$]}, 0, 
      Dynamic[$CellContext`Ans5Range$$], 0.01}, {{
       Hold[$CellContext`Ans6$$], 0, 
       Dynamic[$CellContext`Box6$$]}, 
      Dynamic[$CellContext`Ans6RangeL$$], 
      Dynamic[$CellContext`Ans6Range$$], 0.01}, {{
       Hold[$CellContext`ptdist$$], {0.6, 0.6}}, Automatic}, {{
       Hold[$CellContext`ptbott$$], {0.4, 0.4}}, Automatic}, {{
       Hold[$CellContext`ptfeed$$], {0.2, 0.2}}, Automatic}, {{
       Hold[$CellContext`qdot1$$], {0.3, 0.9}}, Automatic}, {{
       Hold[$CellContext`qdot2$$], {0.1, 0.9}}, Automatic}, {{
       Hold[$CellContext`BOLdot1$$], {0.3, 0.9}}, Automatic}, {{
       Hold[$CellContext`BOLdot2$$], {0.1, 0.9}}, Automatic}, {{
       Hold[$CellContext`TOLdot1$$], {0.3, 0.7}}, Automatic}, {{
       Hold[$CellContext`TOLdot2$$], {0.1, 0.7}}, Automatic}, {{
       Hold[$CellContext`ArrowHeight$$], 50, "feed height"}, 20, 90, 1}, {{
       Hold[$CellContext`Box1$$], "feed rate "}, 0}, {{
       Hold[$CellContext`Box2$$], 
       Row[{"distillate composition ", 
         Subscript[
          Style["x", Italic], "D"]}]}, 0}, {{
       Hold[$CellContext`Box3$$], "reflux ratio"}, 0}, {{
       Hold[$CellContext`Box4$$], 
       Row[{"vapor flow rate ", 
         Style["V ", Italic]}]}, 0}, {{
       Hold[$CellContext`Box5$$], 
       Row[{"liquid flow rate ", 
         OverBar[
          Style["L", Italic]]}]}, 0}, {{
       Hold[$CellContext`Box6$$], 
       Row[{"vapor flow rate ", 
         OverBar[
          Style["V", Italic]]}]}, 0}, {{
       Hold[$CellContext`Ans1Range$$], 18.79018435380583}, 0}, {{
       Hold[$CellContext`Ans2Range$$], 1}, 0}, {{
       Hold[$CellContext`Ans3Range$$], 4.765399702910578}, 0}, {{
       Hold[$CellContext`Ans4Range$$], 26.94719638937734}, 0}, {{
       Hold[$CellContext`Ans5Range$$], 11.88985422266501}, 0}, {{
       Hold[$CellContext`Ans6Range$$], 14.877110256846878`}, 0}, {{
       Hold[$CellContext`Ans6RangeL$$], 0}, 0}, {{
       Hold[$CellContext`HintTextColumnTrue$$], " "}, 0}, {
      Hold[
       Grid[{{
          Button[" new problem ", {
            Increment[$CellContext`reset$$], $CellContext`MB$$ = 
            1, $CellContext`solution$$ = False, $CellContext`hint$$ = False, 
            Clear[$CellContext`lineguess1], $CellContext`Ans1$$ = 
            0, $CellContext`Ans2$$ = 0, $CellContext`Ans3$$ = 
            0, $CellContext`Ans4$$ = 0, $CellContext`Ans5$$ = 
            0, $CellContext`Ans6$$ = 0, $CellContext`showcolumn$$ = 
            False, $CellContext`stage1guessA$$ = {0.5, 
             0.8}, $CellContext`ArrowHeight$$ = 
            50, $CellContext`qdot1$$ = {0.3, 0.9}, $CellContext`qdot2$$ = {
             0.1, 0.9}, $CellContext`ptdist$$ = {0.6, 
             0.7}, $CellContext`ptbott$$ = {0.4, 
             0.3}, $CellContext`ptfeed$$ = {0.2, 
             0.7}, $CellContext`BOLdot1$$ = {0.3, 
             0.9}, $CellContext`BOLdot2$$ = {0.1, 
             0.9}, $CellContext`TOLdot1$$ = {0.3, 
             0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}], 
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          Manipulate`Place[3], 
          PaneSelector[{1 -> Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 2 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 3 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 4 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 5 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 6 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 7 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 8 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}], 9 -> 
            Button[" next ", {
               If[
                Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                 Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                 False, $CellContext`hint$$ = False, 
                 If[$CellContext`MB$$ == 
                  7, $CellContext`stage1guessA$$ = {0.5, 
                   0.7}, $CellContext`stage1guessA$$ = {0.2, 
                   0.4}], $CellContext`showcolumn$$ = False}, Null]}]}, 
           Dynamic[$CellContext`MB$$]], 
          
          PaneSelector[{
           1 -> "1. Solve for the missing green variables.", 2 -> 
            "2. Solve for the missing green variables.", 3 -> 
            "3. Solve for the missing green variables.", 4 -> 
            Column[{"4. Place the points at their correct", 
               Row[{"locations on the ", 
                 Style["y", Italic], " = ", 
                 Style["x", Italic], " line."}]}], 5 -> Row[{"5. Draw the ", 
               Style["q", Italic], "-line (feed line)."}], 6 -> 
            "6. Move the points to draw the top \n and bottom operating \
lines.", 7 -> "7. Drag the point to locate the first stage.", 8 -> 
            "8. Drag the point to locate the second stage.", 9 -> 
            "9. Drag the point to locate the final stage.", 10 -> 
            "10. Determine the feed stream location."}, 
           Dynamic[$CellContext`MB$$]], 
          Manipulate`Place[4], 
          
          PaneSelector[{
           1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
            Manipulate`Place[5], 5 -> Manipulate`Place[5], 6 -> 
            Manipulate`Place[5], 7 -> Manipulate`Place[5], 8 -> 
            Manipulate`Place[5], 9 -> Manipulate`Place[5], 10 -> 
            Manipulate`Place[5]}, 
           Dynamic[$CellContext`MB$$]], 
          PaneSelector[{5 -> Manipulate`Place[6], 6 -> Manipulate`Place[6]}, 
           Dynamic[$CellContext`MB$$]]}, {
          PaneSelector[{1 -> Grid[{{
                Manipulate`Place[7], 
                Manipulate`Place[8]}}], 2 -> Grid[{{
                Manipulate`Place[9], 
                Manipulate`Place[10]}}], 3 -> Grid[{{
                Manipulate`Place[11], 
                Manipulate`Place[12]}}], 4 -> Row[{
               Manipulate`Place[13], 
               Manipulate`Place[14], 
               Manipulate`Place[15]}], 5 -> Row[{
               Manipulate`Place[16], 
               Manipulate`Place[17], 
               Spacer[{200, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}], 6 -> Row[{
               Manipulate`Place[18], 
               Manipulate`Place[19], 
               Manipulate`Place[20], 
               Manipulate`Place[21], 
               Spacer[{200, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}], 10 -> Row[{
               Manipulate`Place[22], 
               Spacer[{40, 1, 1}], 
               Dynamic[
                Style[
                 Text[$CellContext`HintTextColumnTrue$$], 12]]}]}, 
           Dynamic[$CellContext`MB$$]], SpanFromLeft}, {
          Manipulate`Place[23], 
          Manipulate`Place[24], 
          Manipulate`Place[25], 
          Manipulate`Place[26], 
          Manipulate`Place[27], 
          Manipulate`Place[28], 
          Manipulate`Place[29], 
          Manipulate`Place[30], 
          Manipulate`Place[31]}, {
          Manipulate`Place[32], 
          Manipulate`Place[33], 
          Manipulate`Place[34], 
          Manipulate`Place[35], 
          Manipulate`Place[36]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = Automatic, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`solution$10572$$ = False, $CellContext`MB$10573$$ = 
    0, $CellContext`reset$10574$$ = 0, $CellContext`stage1guessA$10575$$ = 
    False, $CellContext`hint$10576$$ = 
    False, $CellContext`showcolumn$10577$$ = 
    False, $CellContext`Ans1$10578$$ = 0, $CellContext`Ans2$10579$$ = 
    0, $CellContext`Ans3$10580$$ = 0, $CellContext`Ans4$10581$$ = 
    0, $CellContext`Ans5$10582$$ = 0, $CellContext`Ans6$10583$$ = 
    0, $CellContext`ArrowHeight$10584$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`Ans1$$ = 0, $CellContext`Ans1Range$$ = 
        18.79018435380583, $CellContext`Ans2$$ = 0, $CellContext`Ans2Range$$ = 
        1, $CellContext`Ans3$$ = 0, $CellContext`Ans3Range$$ = 
        4.765399702910578, $CellContext`Ans4$$ = 0, $CellContext`Ans4Range$$ = 
        26.94719638937734, $CellContext`Ans5$$ = 0, $CellContext`Ans5Range$$ = 
        11.88985422266501, $CellContext`Ans6$$ = 0, $CellContext`Ans6Range$$ = 
        14.877110256846878`, $CellContext`Ans6RangeL$$ = 
        0, $CellContext`ArrowHeight$$ = 
        50, $CellContext`BOLdot1$$ = {0.3, 0.9}, $CellContext`BOLdot2$$ = {
         0.1, 0.9}, $CellContext`Box1$$ = "feed rate ", $CellContext`Box2$$ = 
        Row[{"distillate composition ", 
           Subscript[
            Style["x", Italic], "D"]}], $CellContext`Box3$$ = 
        "reflux ratio", $CellContext`Box4$$ = Row[{"vapor flow rate ", 
           Style["V ", Italic]}], $CellContext`Box5$$ = 
        Row[{"liquid flow rate ", 
           OverBar[
            Style["L", Italic]]}], $CellContext`Box6$$ = 
        Row[{"vapor flow rate ", 
           OverBar[
            Style["V", Italic]]}], $CellContext`hint$$ = 
        False, $CellContext`HintTextColumnTrue$$ = " ", $CellContext`MB$$ = 
        10, $CellContext`ptbott$$ = {0.4, 0.4}, $CellContext`ptdist$$ = {0.6, 
         0.6}, $CellContext`ptfeed$$ = {0.2, 0.2}, $CellContext`qdot1$$ = {
         0.3, 0.9}, $CellContext`qdot2$$ = {0.1, 0.9}, $CellContext`reset$$ = 
        482, $CellContext`showcolumn$$ = False, $CellContext`solution$$ = 
        False, $CellContext`stage1guessA$$ = {0.2, 
         0.5352106534516532}, $CellContext`TOLdot1$$ = {0.3, 
         0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}, "ControllerVariables" :> {
        Hold[$CellContext`solution$$, $CellContext`solution$10572$$, False], 
        Hold[$CellContext`MB$$, $CellContext`MB$10573$$, 0], 
        Hold[$CellContext`reset$$, $CellContext`reset$10574$$, 0], 
        Hold[$CellContext`stage1guessA$$, $CellContext`stage1guessA$10575$$, 
         False], 
        Hold[$CellContext`hint$$, $CellContext`hint$10576$$, False], 
        Hold[$CellContext`showcolumn$$, $CellContext`showcolumn$10577$$, 
         False], 
        Hold[$CellContext`Ans1$$, $CellContext`Ans1$10578$$, 0], 
        Hold[$CellContext`Ans2$$, $CellContext`Ans2$10579$$, 0], 
        Hold[$CellContext`Ans3$$, $CellContext`Ans3$10580$$, 0], 
        Hold[$CellContext`Ans4$$, $CellContext`Ans4$10581$$, 0], 
        Hold[$CellContext`Ans5$$, $CellContext`Ans5$10582$$, 0], 
        Hold[$CellContext`Ans6$$, $CellContext`Ans6$10583$$, 0], 
        Hold[$CellContext`ArrowHeight$$, $CellContext`ArrowHeight$10584$$, 
         0]}, "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`\[Gamma]1$, $CellContext`\[Gamma]2$, \
$CellContext`A12$, $CellContext`A21$, $CellContext`ArrowPt1$, \
$CellContext`ArrowPt2$, $CellContext`BOLintercept$, $CellContext`BOLslope$, \
$CellContext`botflow$, $CellContext`CoordA$, $CellContext`CoordB$, \
$CellContext`CoordC$, $CellContext`CoordD$, $CellContext`CoordE$, \
$CellContext`CoordF$, $CellContext`CoordG$, $CellContext`CoordH$, \
$CellContext`CoordI$, $CellContext`CoordJ$, $CellContext`CoordK$, \
$CellContext`CoordL$, $CellContext`distcolumn$, $CellContext`distflow$, \
$CellContext`Dotnumbers$, $CellContext`equilb$, $CellContext`F$, \
$CellContext`feed$, $CellContext`Feedstate$, $CellContext`GuessA$, \
$CellContext`GuessB$, $CellContext`GuessC$, $CellContext`GuessD$, \
$CellContext`GuessE$, $CellContext`GuessF$, $CellContext`GuessG$, \
$CellContext`GuessH$, $CellContext`GuessI$, $CellContext`GuessJ$, \
$CellContext`GuessK$, $CellContext`GuessL$, $CellContext`i$, $CellContext`L$, \
$CellContext`Lbar$, $CellContext`LeftLimit$, $CellContext`MissingA$, \
$CellContext`MissingB$, $CellContext`MissingC$, $CellContext`MissingD$, \
$CellContext`MissingE$, $CellContext`MissingF$, $CellContext`MissingG$, \
$CellContext`MissingH$, $CellContext`MissingI$, $CellContext`MissingJ$, \
$CellContext`MissingK$, $CellContext`MissingL$, $CellContext`nR$, \
$CellContext`nS$, $CellContext`nT$, $CellContext`opertRect$, \
$CellContext`opertStrp$, $CellContext`P$, $CellContext`Pane1$, \
$CellContext`Pane2$, $CellContext`Part9Answer$, $CellContext`plotlabel$, \
$CellContext`q$, $CellContext`R$, $CellContext`RandomizeValuesShown$, \
$CellContext`rect$, $CellContext`rectnumbers$, $CellContext`RightLimit$, \
$CellContext`Rmin$, $CellContext`Rx$, $CellContext`Ry$, $CellContext`size1$, \
$CellContext`size2$, $CellContext`size3$, $CellContext`size4$, \
$CellContext`Sr$, $CellContext`stagelabels$, $CellContext`stagelines$, \
$CellContext`strip$, $CellContext`Sx$, $CellContext`Sy$, $CellContext`T$, \
$CellContext`tb$, $CellContext`V$, $CellContext`Value1$, \
$CellContext`Value2$, $CellContext`Vbar$, $CellContext`VPa$, \
$CellContext`VPb$, $CellContext`x1$, $CellContext`x2$, $CellContext`xb$, \
$CellContext`xd$, $CellContext`xeq$, $CellContext`xi$, $CellContext`xR$, \
$CellContext`xS$, $CellContext`y1$, $CellContext`y2$, $CellContext`yeq$, \
$CellContext`yi$, $CellContext`yR$, $CellContext`yS$, $CellContext`zf$}, 
        SeedRandom[$CellContext`reset$$]; $CellContext`A12$ = 
         RandomReal[]; $CellContext`A21$ = 
         RandomReal[{-0.5, 1}]; $CellContext`P$ = 
         RandomReal[{100, 300}]; $CellContext`q$ = 
         RandomChoice[{-0.2, 0.05, 0.22, 0.49, 0.75, 0.95, 
           1.13}]; $CellContext`zf$ = 
         RandomInteger[{30, 70}]/100.; $CellContext`F$ = 
         RandomInteger[{100, 1000}]/100.; $CellContext`xd$ = 
         RandomInteger[{85, 92}]/100.; $CellContext`xb$ = 
         RandomInteger[{5, 12}]/100.; $CellContext`VPa$ = 
         10^(8.08097 - 1582.271/($CellContext`T$ + 
           239.726)); $CellContext`VPb$ = 
         10^(8.07131 - 1730.63/($CellContext`T$ + 233.426)); 
        Clear[$CellContext`T$, $CellContext`i$]; $CellContext`\[Gamma]1$[
           Pattern[$CellContext`i$, 
            Blank[]]] = 
         Exp[$CellContext`x2$[$CellContext`i$]^2 ($CellContext`A12$ + 
            2 ($CellContext`A21$ - $CellContext`A12$) (
              1 - $CellContext`x2$[$CellContext`i$]))]; \
$CellContext`\[Gamma]2$[
           Pattern[$CellContext`i$, 
            Blank[]]] = 
         Exp[(1 - $CellContext`x2$[$CellContext`i$])^2 ($CellContext`A21$ + 
            2 ($CellContext`A12$ - $CellContext`A21$) \
$CellContext`x2$[$CellContext`i$])]; $CellContext`i$ = 0; 
        While[$CellContext`i$ < 
          101, {$CellContext`x2$[$CellContext`i$] = $CellContext`i$ 
            0.01, $CellContext`T$[$CellContext`i$] = Part[
             
             FindRoot[$CellContext`P$ == $CellContext`VPb$ $CellContext`\
\[Gamma]1$[$CellContext`i$] (
                 1 - $CellContext`x2$[$CellContext`i$]) + $CellContext`VPa$ \
$CellContext`\[Gamma]2$[$CellContext`i$] $CellContext`x2$[$CellContext`i$], \
{$CellContext`T$, 60}, AccuracyGoal -> 3], 1, 
             2], $CellContext`y2$[$CellContext`i$] = 
           ReplaceAll[$CellContext`x2$[$CellContext`i$] + ($CellContext`VPa$ \
$CellContext`\[Gamma]2$[$CellContext`i$] \
($CellContext`x2$[$CellContext`i$]/$CellContext`P$) - \
$CellContext`x2$[$CellContext`i$]), $CellContext`T$ -> \
$CellContext`T$[$CellContext`i$]], 
           Increment[$CellContext`i$]}]; $CellContext`tb$ = Table[{
            $CellContext`x2$[$CellContext`i$], 
            $CellContext`y2$[$CellContext`i$]}, {$CellContext`i$, 0, 
            100}]; $CellContext`equilb$ = Quiet[
           Interpolation[$CellContext`tb$]]; $CellContext`feed$[
           Pattern[$CellContext`x$, 
            Blank[]]] := $CellContext`q$ ($CellContext`x$/($CellContext`q$ - 
            1)) - $CellContext`zf$/($CellContext`q$ - 1); $CellContext`xeq$ = 
         ReplaceAll[$CellContext`x, 
           Quiet[
            
            FindRoot[$CellContext`feed$[$CellContext`x] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, $CellContext`zf$}]]]; \
$CellContext`yeq$ = $CellContext`feed$[$CellContext`xeq$]; \
$CellContext`opertRect$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := $CellContext`yeq$ + (($CellContext`x$ - \
$CellContext`xeq$)/($CellContext`xd$ - $CellContext`xeq$)) ($CellContext`xd$ - \
$CellContext`yeq$); $CellContext`opertStrp$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := $CellContext`yeq$ + (($CellContext`x$ - \
$CellContext`xeq$)/($CellContext`xb$ - $CellContext`xeq$)) ($CellContext`xb$ - \
$CellContext`yeq$); $CellContext`Rmin$ = (($CellContext`xd$ - \
$CellContext`yeq$)/($CellContext`xd$ - $CellContext`xeq$))/(
          1 - ($CellContext`xd$ - $CellContext`yeq$)/($CellContext`xd$ - \
$CellContext`xeq$)); $CellContext`R$ = 
         If[$CellContext`Rmin$ < 1, $CellContext`Rmin$ = 
           RandomInteger[{13, 18}]/10., $CellContext`Rmin$ (
            RandomInteger[{15, 20}]/10.)]; $CellContext`rect$[
           Pattern[$CellContext`x$, 
            Blank[]]] := ($CellContext`R$/($CellContext`R$ + 
            1)) $CellContext`x$ + $CellContext`xd$/($CellContext`R$ + 
           1); $CellContext`xi$ = ReplaceAll[$CellContext`x, 
           Quiet[
            
            FindRoot[$CellContext`feed$[$CellContext`x] == \
$CellContext`rect$[$CellContext`x], {$CellContext`x, 
              0.7}]]]; $CellContext`yi$ = \
$CellContext`rect$[$CellContext`xi$]; $CellContext`strip$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] := ($CellContext`Lbar$/$CellContext`Vbar$) \
$CellContext`x$ - ($CellContext`Lbar$/$CellContext`Vbar$ - 
           1) $CellContext`xb$; $CellContext`distflow$ = 
         ReplaceAll[$CellContext`Dflow, 
           Part[
            
            Solve[{$CellContext`zf$ $CellContext`F$ == $CellContext`xd$ \
$CellContext`Dflow + $CellContext`xb$ $CellContext`Bflow, $CellContext`F$ == \
$CellContext`Dflow + $CellContext`Bflow}, {$CellContext`Dflow, \
$CellContext`Bflow}], 
            1]]; $CellContext`botflow$ = $CellContext`F$ - \
$CellContext`distflow$; $CellContext`L$ = $CellContext`distflow$ \
$CellContext`R$; $CellContext`V$ = $CellContext`distflow$ + $CellContext`L$; \
$CellContext`Lbar$ = $CellContext`L$ + $CellContext`q$ $CellContext`F$; \
$CellContext`Vbar$ = $CellContext`V$ - (
           1 - $CellContext`q$) $CellContext`F$; $CellContext`i$ = 
         0; $CellContext`yR$[0] = $CellContext`xd$; $CellContext`xR$[
          0] = $CellContext`xd$; 
        While[$CellContext`xR$[$CellContext`i$] > $CellContext`xi$, \
{$CellContext`x1$ = ReplaceAll[$CellContext`x, 
             Quiet[
              
              FindRoot[$CellContext`yR$[$CellContext`i$] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, \
$CellContext`xR$[$CellContext`i$] - 
                0.1}]]], $CellContext`y1$ = \
$CellContext`rect$[$CellContext`x1$], 
           If[
            Or[$CellContext`x1$ > $CellContext`xi$, 
             
             And[$CellContext`x1$ < $CellContext`xi$, $CellContext`i$ < 
              1]], {$CellContext`xR$[$CellContext`i$ + 
               1] = $CellContext`x1$, $CellContext`yR$[$CellContext`i$ + 
               1] = $CellContext`y1$}], 
           
           Increment[$CellContext`i$], $CellContext`nR$ = $CellContext`i$ - 
            1}]; $CellContext`i$ = 
         0; $CellContext`yS$[
          0] = $CellContext`yR$[$CellContext`nR$]; $CellContext`xS$[
          0] = $CellContext`xR$[$CellContext`nR$]; 
        While[$CellContext`xS$[$CellContext`i$] >= $CellContext`xb$, \
{$CellContext`x1$ = ReplaceAll[$CellContext`x, 
             Quiet[
              
              FindRoot[$CellContext`yS$[$CellContext`i$] == \
$CellContext`equilb$[$CellContext`x], {$CellContext`x, \
$CellContext`xS$[$CellContext`i$] - 
                0.1}]]], $CellContext`y1$ = \
$CellContext`strip$[$CellContext`x1$], $CellContext`xS$[$CellContext`i$ + 
             1] = $CellContext`x1$, $CellContext`yS$[$CellContext`i$ + 
             1] = $CellContext`y1$, 
           Increment[$CellContext`i$]}]; $CellContext`nS$ = $CellContext`i$ - 
          1; $CellContext`nT$ = $CellContext`nR$ + $CellContext`nS$ + 
          1; $CellContext`Ry$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xR$[#], 
                $CellContext`yR$[# - 1]}, {
                $CellContext`xR$[#], 
                $CellContext`yR$[#]}}]& , 
             Range[$CellContext`nR$]]}, 
           Map[Line[{{
               $CellContext`xR$[#], 
               $CellContext`yR$[# - 1]}, {
               $CellContext`xR$[#], 
               $CellContext`yR$[#]}}]& , 
            Range[$CellContext`nR$]]]; $CellContext`Rx$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xR$[#], 
                $CellContext`yR$[#]}, {
                $CellContext`xR$[# + 1], 
                $CellContext`yR$[#]}}]& , 
             If[$CellContext`nR$ >= 1, 
              Range[0, $CellContext`nR$ - 1], {0}]]}, 
           Map[Line[{{
               $CellContext`xR$[#], 
               $CellContext`yR$[#]}, {
               $CellContext`xR$[# + 1], 
               $CellContext`yR$[#]}}]& , 
            If[$CellContext`nR$ >= 1, 
             Range[0, $CellContext`nR$ - 1], {0}]]]; $CellContext`Sy$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xS$[# + 1], 
                $CellContext`yS$[#]}, {
                $CellContext`xS$[# + 1], 
                $CellContext`yS$[# + 1]}}]& , 
             Range[0, $CellContext`nS$ - 1]]}, 
           Map[Line[{{
               $CellContext`xS$[# + 1], 
               $CellContext`yS$[#]}, {
               $CellContext`xS$[# + 1], 
               $CellContext`yS$[# + 1]}}]& , 
            Range[0, $CellContext`nS$ - 1]]]; $CellContext`Sx$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Map[Line[{{
                $CellContext`xS$[# - 1], 
                $CellContext`yS$[# - 1]}, {
                $CellContext`xS$[#], 
                $CellContext`yS$[# - 1]}}]& , 
             Range[$CellContext`nS$ + 1]]}, 
           Map[Line[{{
               $CellContext`xS$[# - 1], 
               $CellContext`yS$[# - 1]}, {
               $CellContext`xS$[#], 
               $CellContext`yS$[# - 1]}}]& , 
            Range[$CellContext`nS$ + 1]]]; $CellContext`Sr$ = If[
           And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
            Opacity[0.5], 
            Thickness[0.01], 
            CapForm["Round"], Blue, 
            Line[{{
               $CellContext`xS$[$CellContext`nS$ + 1], 
               $CellContext`yS$[$CellContext`nS$]}, {
               $CellContext`xS$[$CellContext`nS$ + 1], 0}}]}, 
           Line[{{
              $CellContext`xS$[$CellContext`nS$ + 1], 
              $CellContext`yS$[$CellContext`nS$]}, {
              $CellContext`xS$[$CellContext`nS$ + 1], 
              0}}]]; $CellContext`Dotnumbers$ = Table[
           Text[
            Framed[
             Style[
              
              If[$CellContext`a < $CellContext`nT$ - 1, $CellContext`a + 1, 
               "R"], 17], Background -> White, 
             FrameMargins -> {{6, 4}, {0, 0}}, RoundingRadius -> 25, 
             FrameStyle -> Thin], 
            Which[$CellContext`a == 0, {
              If[$CellContext`nR$ > 0, 
               $CellContext`xR$[1], 
               $CellContext`xS$[1]], 
              $CellContext`yR$[0]}, 
             And[$CellContext`a == 1, $CellContext`nR$ == 0], {
              $CellContext`xS$[2], 
              $CellContext`yS$[1]}, $CellContext`a < $CellContext`nR$, {
              $CellContext`xR$[$CellContext`a + 1], 
              $CellContext`yR$[$CellContext`a]}, $CellContext`a == \
$CellContext`nR$, {
              $CellContext`xS$[1], 
              $CellContext`yS$[0]}, 
             
             Inequality[$CellContext`nR$, Less, $CellContext`a, 
              LessEqual, $CellContext`nT$ - 1], {
              $CellContext`xS$[$CellContext`a - $CellContext`nR$ + 1], 
              $CellContext`yS$[$CellContext`a - $CellContext`nR$]}], {
            1.2, -0.8}], {$CellContext`a, 0, $CellContext`nT$ - 
            1}]; $CellContext`plotlabel$ = Switch[$CellContext`MB$$, 1, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"equations: ", 
                Style["F", Italic], " = ", 
                Style["B", Italic], " + ", 
                Style["D", Italic], " and ", 
                Style["F", Italic], 
                Subscript[
                 Style["z", Italic], "feed"], " = ", 
                Subscript[
                 Style["x", Italic], "B"], 
                Style["B", Italic], " + ", 
                Subscript[
                 Style["x", Italic], "D"], 
                Style["D", Italic]}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do an overall balance and a component balance."}]], 2, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Equations: ", 
                Style["V ", Italic], "= ", 
                Style["L", Italic], " + ", 
                Style["D", Italic], " and ", 
                Style["L", Italic], " / ", 
                Style["D", Italic], " = reflux ratio."}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do a mass balance around the condenser."}]], 3, 
           Which[$CellContext`solution$$ == True, 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Equations: ", 
                Style["V - ", Italic], 
                OverBar[
                 Style["V", Italic]], " + " Style["L ", Italic], "= ", 
                Style["V ", Italic], "+ ", 
                OverBar[
                 Style["L", Italic]], "      and      q = (", 
                OverBar[
                 Style["L", Italic]], 
                Style[" - L)/F.", Italic]}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Do a mass balance around the feed stage."}]], 4, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{
                Style["x", Italic], " and ", 
                Style["y", Italic], 
                " coordinates should equal their respective \
compositions."}]}]], 5, 
           Which[
            
            And[$CellContext`solution$$ == True, $CellContext`showcolumn$$ == 
             False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Style["q", Italic], "-line equation: ", 
              Subscript[
               Style["y", Italic], "F"], " - ((", 
              Style["q", Italic], "/", 
              Style["q", Italic], "-1)x -(", 
              Subscript[
               Style["z", Italic], "feed"], "/(", 
              Style["q", Italic], "-1))."}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True, $CellContext`showcolumn$$ == False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Style["q", Italic], "-line slope: ", 
              Style["q", Italic], "/(", 
              Style["q", Italic], "-1)"}], $CellContext`showcolumn$$ == True, 
            ""], 6, 
           Which[
            
            And[$CellContext`solution$$ == True, $CellContext`showcolumn$$ == 
             False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Subscript[
               Style["y", Italic], "top"], " = (", 
              Style["L", Italic], "/", 
              Style["V", Italic], ")x + (1-(", 
              Style["L", Italic], "/", 
              Style["V", Italic], ")", 
              Subscript[
               Style["x", Italic], "D"], " and ", 
              Subscript["y", "bot"], " = (", 
              OverBar[
               Style["L", Italic]], "/", 
              OverBar[
               Style["V", Italic]], ")", 
              Style["x", Italic], " + (1-(", 
              OverBar[
               Style["L", Italic]], "/", 
              OverBar[
               Style["V", Italic]], ")", 
              Subscript[
               Style["x", Italic], "B"], ")."}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             False, $CellContext`showcolumn$$ == False], 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            
            And[$CellContext`solution$$ == False, $CellContext`hint$$ == 
             True, $CellContext`showcolumn$$ == False], 
            Row[{
              Spacer[{0, 1, 10}], 
              Row[{"Slope of the top operating line = (", 
                Style["L", Italic], "/", 
                Style["V", Italic], ") and bottom operating line = (", 
                OverBar[
                 Style["L", Italic]], "/", 
                OverBar[
                 Style["V", Italic]], ")."}]}], $CellContext`showcolumn$$ == 
            True, ""], 7, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], "Start at the condenser."}]], 8, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], "The second stair from the top."}]], 9, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], 
              "Continue the \"stair stepping\" method."}]], 10, 
           If[$CellContext`hint$$ == False, 
            Row[{"", 
              Spacer[{0, 1, 10}]}], 
            Row[{
              Spacer[{0, 1, 10}], " "}]]]; $CellContext`HintTextColumnTrue$$ = 
         Which[
           
           And[$CellContext`MB$$ == 5, $CellContext`hint$$ == 
            True, $CellContext`solution$$ == False, $CellContext`showcolumn$$ == 
            True], 
           Row[{
             Style["q", Italic], "-line slope: ", 
             Style["q", Italic], "/(", 
             Style["q", Italic], "-1)"}], 
           
           And[$CellContext`MB$$ == 5, $CellContext`solution$$ == 
            True, $CellContext`showcolumn$$ == True], 
           Row[{
             Spacer[{0, 1, 10}], 
             Style["q", Italic], "-line equation: ", 
             Subscript[
              Style["y", Italic], "F"], " = (", 
             Style["q", Italic], "/(", 
             Style["q", Italic], "-1))", 
             Style["x", Italic], "-(", 
             Subscript[
              Style["z", Italic], "feed"], "/(", 
             Style["q", Italic], "-1))"}], 
           
           And[$CellContext`MB$$ == 5, $CellContext`hint$$ == 
            False, $CellContext`solution$$ == 
            False, $CellContext`showcolumn$$ == True], " ", 
           
           And[$CellContext`MB$$ == 6, $CellContext`hint$$ == 
            True, $CellContext`solution$$ == False, $CellContext`showcolumn$$ == 
            True], 
           Row[{"Slope of the top operating line = (", 
             Style["L", Italic], "/", 
             Style["V", Italic], ") and bottom operating line = (", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], ")"}], 
           
           And[$CellContext`MB$$ == 6, $CellContext`solution$$ == 
            True, $CellContext`showcolumn$$ == True], 
           Row[{
             Spacer[{0, 1, 10}], 
             Subscript["y", "top"], " = (", 
             Style["L", Italic], "/", 
             Style["V", Italic], ") x + (1-(," Style["L", Italic], "/", 
             Style["V", Italic], "))", 
             Subscript["x", "D"], " and ", 
             Subscript["y", "bot"], " = (", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], "x + (1-(", 
             OverBar[
              Style["L", Italic]], "/", 
             OverBar[
              Style["V", Italic]], ")", 
             Subscript["x", "B"], ")"}], 
           
           And[$CellContext`MB$$ == 6, $CellContext`hint$$ == 
            False, $CellContext`solution$$ == 
            False, $CellContext`showcolumn$$ == True], " ", 
           And[
            
            AnyTrue[{5, 
             6}, # == $CellContext`MB$$& ], $CellContext`showcolumn$$ == 
            False], " ", 
           And[$CellContext`MB$$ == 10, $CellContext`hint$$ == True], 
           "Has to do with where the two operating lines intersect.", 
           And[$CellContext`MB$$ == 10, $CellContext`hint$$ == False], 
           " "]; $CellContext`stagelines$ = Table[{
            Thickness[0.005], 
            
            Line[{{28, 20 + (70/$CellContext`nT$) $CellContext`i$}, {
              65, 20 + (
                 70/$CellContext`nT$) $CellContext`i$}}]}, {$CellContext`i$, 
            1, $CellContext`nT$ - 1}]; $CellContext`stagelabels$ = Table[
           Style[
            Text[
             StringJoin["stage ", 
              ToString[$CellContext`nT$ - $CellContext`i$], ""], {
             47, 22 + (70/$CellContext`nT$) $CellContext`i$}], 
            15], {$CellContext`i$, 1, $CellContext`nT$ - 
            1}]; $CellContext`ArrowPt1$ = {-15, 
           
           If[$CellContext`MB$$ == 1, 
            49, $CellContext`ArrowHeight$$]}; $CellContext`ArrowPt2$ = {28, 
           
           If[$CellContext`MB$$ == 1, 
            49, $CellContext`ArrowHeight$$]}; $CellContext`Part9Answer$ = 
         Rectangle[{28, 20 + (70/$CellContext`nT$) $CellContext`nS$}, {
           65, 20 + (70/$CellContext`nT$) ($CellContext`nS$ + 
              1)}]; $CellContext`LeftLimit$ = 
         If[$CellContext`MB$$ == 6, 10, -5]; $CellContext`RightLimit$ = 
         If[$CellContext`MB$$ >= 4, 100, 120]; $CellContext`stage1guessA$$ = {
           Part[$CellContext`stage1guessA$$, 1], 
           $CellContext`equilb$[
            Part[$CellContext`stage1guessA$$, 1]]}; $CellContext`ptdist$$ = {
           Part[$CellContext`ptdist$$, 1], 
           Part[$CellContext`ptdist$$, 1]}; $CellContext`ptfeed$$ = {
           Part[$CellContext`ptfeed$$, 1], 
           Part[$CellContext`ptfeed$$, 1]}; $CellContext`ptbott$$ = {
           Part[$CellContext`ptbott$$, 1], 
           Part[$CellContext`ptbott$$, 1]}; $CellContext`horizontalpt1 = 
         If[Part[$CellContext`stage1guessA$$, 2] >= $CellContext`yi$, {
            ReplaceAll[
             Quiet[$CellContext`x], 
             FindRoot[
             Part[$CellContext`stage1guessA$$, 
                2] == $CellContext`rect$[$CellContext`x], {$CellContext`x, 0, 
               1}]], 
            Part[$CellContext`stage1guessA$$, 2]}, {
            ReplaceAll[
             Quiet[$CellContext`x], 
             FindRoot[
             Part[$CellContext`stage1guessA$$, 
                2] == $CellContext`strip$[$CellContext`x], {$CellContext`x, 0,
                1}]], 
            
            Part[$CellContext`stage1guessA$$, 
             2]}]; $CellContext`horizontalpt2 = {
           ReplaceAll[
            Quiet[$CellContext`x], 
            FindRoot[
            Part[$CellContext`stage1guessA$$, 
               2] == $CellContext`equilb$[$CellContext`x], {$CellContext`x, 0,
               1}]], 
           Part[$CellContext`stage1guessA$$, 2]}; $CellContext`verticalpt1 = 
         Which[Part[$CellContext`horizontalpt2, 1] >= $CellContext`xi$, {
            Part[$CellContext`horizontalpt2, 1], 
            $CellContext`rect$[
             Part[$CellContext`horizontalpt2, 1]]}, 
           Inequality[$CellContext`xb$, LessEqual, 
            Part[$CellContext`horizontalpt2, 1], Less, $CellContext`xi$], {
            Part[$CellContext`horizontalpt2, 1], 
            $CellContext`strip$[
             Part[$CellContext`horizontalpt2, 1]]}, 
           Part[$CellContext`horizontalpt2, 1] < $CellContext`xb$, {
            Part[$CellContext`horizontalpt2, 1], 
            0}]; $CellContext`RandomizeValuesShown$ = RandomInteger[{1, 6}]; 
        Switch[$CellContext`RandomizeValuesShown$, 
          1, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = $CellContext`Ans1$$, \
$CellContext`GuessD$ = 0, $CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = $CellContext`Ans2$$, \
$CellContext`GuessG$ = 
           0, $CellContext`GuessH$ = $CellContext`Ans3$$, \
$CellContext`GuessI$ = $CellContext`Ans4$$, $CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}, 
          2, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = $CellContext`Ans1$$, \
$CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = $CellContext`Ans2$$, \
$CellContext`GuessG$ = 
           0, $CellContext`GuessH$ = $CellContext`Ans3$$, \
$CellContext`GuessI$ = $CellContext`Ans4$$, $CellContext`GuessJ$ = \
$CellContext`Ans5$$, $CellContext`GuessK$ = 
           0, $CellContext`GuessL$ = $CellContext`Ans6$$}, 
          3, {$CellContext`GuessA$ = 0, $CellContext`GuessB$ = 
           0, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = $CellContext`Ans1$$, \
$CellContext`GuessE$ = $CellContext`Ans2$$, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = 
           0, $CellContext`GuessI$ = $CellContext`Ans4$$, \
$CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}, 
          4, {$CellContext`GuessA$ = $CellContext`Ans1$$, \
$CellContext`GuessB$ = 0, $CellContext`GuessC$ = 0, $CellContext`GuessD$ = 
           0, $CellContext`GuessE$ = $CellContext`Ans2$$, \
$CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = 
           0, $CellContext`GuessI$ = $CellContext`Ans4$$, \
$CellContext`GuessJ$ = $CellContext`Ans5$$, $CellContext`GuessK$ = \
$CellContext`Ans6$$, $CellContext`GuessL$ = 0}, 
          5, {$CellContext`GuessA$ = $CellContext`Ans1$$, \
$CellContext`GuessB$ = $CellContext`Ans2$$, $CellContext`GuessC$ = 
           0, $CellContext`GuessD$ = 0, $CellContext`GuessE$ = 
           0, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = $CellContext`Ans4$$, $CellContext`GuessI$ = 
           
           0, $CellContext`GuessJ$ = $CellContext`Ans5$$, \
$CellContext`GuessK$ = $CellContext`Ans6$$, $CellContext`GuessL$ = 0}, 
          6, {$CellContext`GuessA$ = 
           0, $CellContext`GuessB$ = $CellContext`Ans2$$, \
$CellContext`GuessC$ = $CellContext`Ans1$$, $CellContext`GuessD$ = 
           0, $CellContext`GuessE$ = 0, $CellContext`GuessF$ = 
           0, $CellContext`GuessG$ = $CellContext`Ans3$$, \
$CellContext`GuessH$ = $CellContext`Ans4$$, $CellContext`GuessI$ = 
           0, $CellContext`GuessJ$ = 
           0, $CellContext`GuessK$ = $CellContext`Ans5$$, \
$CellContext`GuessL$ = $CellContext`Ans6$$}]; $CellContext`Box1$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, "distillate flow rate",
            2, "bottoms flow rate", 3, "bottoms flow rate", 4, "feed rate ", 
           5, "feed rate ", 6, "distillate flow rate"]; $CellContext`Box2$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"bottoms composition ", 
             Subscript[
              Style["x", Italic], "B"]}], 2, 
           Row[{"bottoms composition ", 
             Subscript[
              Style["x", Italic], "B"]}], 3, 
           Row[{"distillate composition ", 
             Subscript[
              Style["x", Italic], "D"]}], 4, 
           Row[{"distillate composition ", 
             Subscript[
              Style["x", Italic], "D"]}], 5, 
           Row[{"feed composition ", 
             Subscript[
              Style["z", Italic], "feed"]}], 6, 
           Row[{"feed composition ", 
             Subscript[
              Style["z", Italic], "feed"]}]]; $CellContext`Box3$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 2, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 3, "reflux ratio", 4, "reflux ratio", 5, 
           "reflux ratio", 6, "reflux ratio"]; $CellContext`Box4$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 2, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 3, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 4, 
           Row[{"vapor flow rate ", 
             Style["V ", Italic]}], 5, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}], 6, 
           Row[{"liquid flow rate ", 
             Style["L ", Italic]}]]; $CellContext`Box5$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 2, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 3, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 4, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 5, 
           Row[{"liquid flow rate ", 
             OverBar[
              Style["L", Italic]]}], 6, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}]]; $CellContext`Box6$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, "quality ", 2, 
           "quality ", 3, "quality ", 4, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 5, 
           Row[{"vapor flow rate ", 
             OverBar[
              Style["V", Italic]]}], 6, "quality "]; $CellContext`Ans1Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`F$, 2, 
           RandomReal[{1, 3}] $CellContext`F$, 3, 
           RandomReal[{1, 3}] $CellContext`F$, 4, 
           RandomReal[{1, 3}] $CellContext`F$, 5, 
           RandomReal[{1, 3}] $CellContext`F$, 6, 
           RandomReal[{1, 3}] $CellContext`F$]; $CellContext`Ans2Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 1, 2, 1, 3, 1, 4, 1, 5,
            1, 6, 1]; $CellContext`Ans3Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`L$, 2, 
           RandomReal[{1, 3}] $CellContext`L$, 3, 
           RandomReal[{1, 3}] $CellContext`R$, 4, 
           RandomReal[{1, 3}] $CellContext`R$, 5, 
           RandomReal[{1, 3}] $CellContext`R$, 6, 
           RandomReal[{1, 3}] $CellContext`R$]; $CellContext`Ans4Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`V$, 2, 
           RandomReal[{1, 3}] $CellContext`V$, 3, 
           RandomReal[{1, 3}] $CellContext`V$, 4, 
           RandomReal[{1, 3}] $CellContext`V$, 5, 
           RandomReal[{1, 3}] $CellContext`L$, 6, 
           RandomReal[{1, 3}] $CellContext`L$]; $CellContext`Ans5Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           RandomReal[{1, 3}] $CellContext`Vbar$, 2, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 3, 
           RandomReal[{1, 3}] $CellContext`Vbar$, 4, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 5, 
           RandomReal[{1, 3}] $CellContext`Lbar$, 6, 
           RandomReal[{1, 3}] $CellContext`Vbar$]; $CellContext`Ans6Range$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 1, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 2, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 3, 
           
           RandomChoice[{
            2.3 $CellContext`q$, 2.1 $CellContext`q$, 1.2 $CellContext`q$, 
             1.4 $CellContext`q$, 1.48 $CellContext`q$, 
             1.87 $CellContext`q$}], 4, RandomReal[{1, 3}] $CellContext`Vbar$,
            5, RandomReal[{1, 3}] $CellContext`Vbar$, 6, 
           
           RandomChoice[{(-2.3) $CellContext`q$, 2.1 $CellContext`q$, 
             1.2 $CellContext`q$, (-1.4) $CellContext`q$, (-1.48) \
$CellContext`q$, 1.87 $CellContext`q$}]]; $CellContext`Ans6RangeL$$ = 
         Switch[$CellContext`RandomizeValuesShown$, 
           1, -$CellContext`Ans6Range$$, 2, -$CellContext`Ans6Range$$, 
           3, -$CellContext`Ans6Range$$, 4, 0, 5, 0, 
           6, -$CellContext`Ans6Range$$]; $CellContext`distcolumn$ = {
           Thickness[0.005], 
           Line[{{28, 25}, {28, 85}}], 
           Line[{{65, 25}, {65, 85}}], 
           Circle[{46.5, 85}, {18.5, 8}, {0, Pi}], 
           Circle[{46.5, 25}, {18.5, 8}, {Pi, 2 Pi}], Black, 
           Line[{{49, 93}, {49, 100}}], 
           Line[{{49, 100}, {80, 100}}], 
           Arrow[{{80, 100}, {80, 90}}], 
           Circle[{80, 85}, 5], 
           Arrow[{{60, 19}, {60, 10}}], 
           Line[{{55, 5}, {45, 5}}], 
           Arrow[{{45, 5}, {45, 17}}], 
           Circle[{60, 5}, 5], Black, 
           Arrow[{{75, 85}, {65, 85}}], 
           Arrow[{{85, 85}, {$CellContext`RightLimit$, 85}}], 
           Arrow[{{65, 5}, {$CellContext`RightLimit$, 5}}], 
           Text[
            Style["C", 15], {80, 85}], 
           Text[
            Style["R", 15], {60, 5}], 
           If[$CellContext`showcolumn$$ == True, 
            Switch[$CellContext`MB$$, 4, {
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = ", 
                  NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0, 56}, Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "D"], " = ", 
                  NumberForm[$CellContext`xd$, {2, 2}]}], 17], {75, 75}, 
               Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "B"], " = ", 
                  NumberForm[$CellContext`xb$, {2, 2}]}], 17], {75, 12}, 
               Left]}, 5, {
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = ", 
                  NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0, 56}, Left], 
              Text[
               Style[
                Row[{
                  Style["q", Italic], " = ", 
                  NumberForm[$CellContext`q$, {3, 2}]}], 17], {0, 64}, Left]},
              6, {
              Text[
               Style[
                Row[{
                  Style["L", Italic], " = ", 
                  NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 17], {30, 
               78}, Left], 
              Text[
               Style[
                Row[{
                  Style["V", Italic], " = ", 
                  NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 17], {30, 
               65}, Left], 
              Text[
               Style[
                Row[{
                  OverBar[
                   Style["L", Italic]], " = ", 
                  NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 17], {
               30, 26}, Left], 
              Text[
               Style[
                Row[{
                  OverBar[
                   Style["V", Italic]], " = ", 
                  NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 17], {
               30, 40}, Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "D"], " = ", 
                  NumberForm[$CellContext`xd$, {2, 2}]}], 17], {75, 75}, 
               Left], 
              Text[
               Style[
                Row[{
                  Subscript[
                   Style["x", Italic], "B"], " = ", 
                  NumberForm[$CellContext`xb$, {2, 2}]}], 17], {75, 12}, 
               Left]}], 
            Text["", {5, 5}]]}; $CellContext`size1$ = {
          PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> False, Frame -> 
           True, FrameLabel -> {
             Row[{"liquid mole fraction, ", 
               Style["x", Italic]}], 
             Row[{"vapor mole fraction, ", 
               Style["y", Italic]}]}, LabelStyle -> {17, Black}, 
           ImageSize -> {600, 360}, AspectRatio -> Full, GridLines -> {
             Range[0, 1, 0.05], 
             Range[0, 1, 0.05]}, GridLinesStyle -> GrayLevel[0.8], PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black], 
           ImageMargins -> {{0, 0}, {0, 0}}}; $CellContext`size2$ = {
          PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> False, Frame -> 
           True, FrameLabel -> {
             Row[{"liquid mole fraction, ", 
               Style["x", Italic]}], 
             Row[{"vapor mole fraction, ", 
               Style["y", Italic]}]}, LabelStyle -> {17, Black}, 
           ImageSize -> {290, 360}, AspectRatio -> Full, GridLines -> {
             Range[0, 1, 0.05], 
             Range[0, 1, 0.05]}, GridLinesStyle -> GrayLevel[0.8], PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black], 
           ImageMargins -> {{0, 0}, {0, 0}}}; $CellContext`size3$ = {
          ImageSize -> {600, 360}, AspectRatio -> Full, ImageMargins -> None, 
           PlotRangeClipping -> False, 
           PlotRange -> {{-28.7, 141}, {-15, 102}}, ImagePadding -> None, 
           PlotLabel -> 
           Style[$CellContext`plotlabel$, 17, Black]}; $CellContext`size4$ = {
          ImageSize -> {310, 360}, AspectRatio -> Full, PlotRangeClipping -> 
           False, PlotRange -> {{$CellContext`LeftLimit$, 101}, {-15, 
             102}}}; $CellContext`Pane1$ = Show[
           Graphics[{$CellContext`distcolumn$, 
             Thickness[0.005], 
             
             Arrow[{$CellContext`ArrowPt1$, $CellContext`ArrowPt2$}]}], \
$CellContext`size4$]; $CellContext`Pane2$ = (Switch[$CellContext`MB$$, 1, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #8, #9, #10, #11, #12, #21, #24, #32}, 
               2, {#, #7, #8, #9, #10, #11, #12, #22, #24, #32}, 
               3, {#, #7, #8, #9, #10, #11, #12, #23, #22, #32}, 
               4, {#, #7, #8, #9, #10, #11, #12, #19, #23, #32}, 
               5, {#, #7, #8, #9, #10, #11, #12, #19, #20, #32}, 
               6, {#, #7, #8, #9, #10, #11, #12, #20, #21, #32}], False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #8, #10, #11, #21, #24, #32}, 
               2, {#, #7, #8, #9, #11, #22, #24, #32}, 
               3, {#, #7, #8, #9, #12, #23, #22, #32}, 
               4, {#, #8, #9, #10, #12, #19, #23, #32}, 
               5, {#, #9, #10, #11, #12, #19, #20, #32}, 
               6, {#, #7, #10, #11, #12, #20, #21, #32}]]], #5], 2, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #9, #13, #14, #15, #26, #27, #32, #35}, 
               2, {#, #9, #13, #14, #15, #26, #27, #32, #35}, 
               3, {#, #9, #13, #14, #15, #25, #27, #32, #35}, 
               4, {#, #9, #13, #14, #15, #25, #27, #32, #35}, 
               5, {#, #9, #13, #14, #15, #25, #26, #32, #35}, 
               6, {#, #9, #13, #14, #15, #25, #26, #32, #35}], False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #9, #13, #26, #27, #32, #35}, 
               2, {#, #9, #13, #26, #27, #32, #35}, 
               3, {#, #9, #14, #25, #27, #32, #35}, 
               4, {#, #9, #14, #25, #27, #32, #35}, 
               5, {#, #9, #15, #25, #26, #32, #35}, 
               6, {#, #9, #15, #25, #26, #32, #35}]]], #5], 3, 
           Show[
            Graphics[
             Switch[$CellContext`solution$$, True, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}, 
               2, {#, #7, #14, #15, #16, #17, #18, #28, #30, #32, #34}, 
               3, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}, 
               4, {#, #7, #14, #15, #16, #17, #18, #28, #29, #32, #34}, 
               5, {#, #7, #14, #15, #16, #17, #18, #28, #29, #32, #34}, 
               6, {#, #7, #14, #15, #16, #17, #18, #29, #30, #32, #34}], 
              False, 
              
              Switch[$CellContext`RandomizeValuesShown$, 
               1, {#, #7, #14, #15, #16, #29, #30, #32, #34}, 
               2, {#, #7, #14, #15, #17, #28, #30, #32, #34}, 
               3, {#, #7, #14, #15, #16, #29, #30, #32, #34}, 
               4, {#, #7, #14, #15, #18, #28, #29, #32, #34}, 
               5, {#, #7, #14, #15, #18, #28, #29, #32, #34}, 
               6, {#, #7, #14, #15, #16, #29, #30, #32, #34}]]], #5], 4, 
           Show[{#31, #2}, #3], 5, 
           Show[{#31, #2}, #3], 6, 
           Show[{#31, #2}, #3], 7, 
           Show[{#31, #2}, #3], 8, 
           Show[{#31, #2}, #3], 9, 
           Show[{#31, #2}, #3], 10, 
           Row[{
             Show[
              
              Graphics[{#, $CellContext`stagelines$, \
$CellContext`stagelabels$, #32, #33, 
                If[
                 And[$CellContext`MB$$ == 10, $CellContext`solution$$], {
                 Yellow, 
                  Opacity[0.5], $CellContext`Part9Answer$}, {
                  Opacity[0], $CellContext`Part9Answer$}]}, #6]], 
             Show[{#31, #2}, #4]}]]& )[$CellContext`distcolumn$, 
           Graphics[{
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 4], {{
                
                Arrow[{{$CellContext`zf$, $CellContext`zf$ - 
                   0.15}, {$CellContext`zf$, $CellContext`zf$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colF, Background -> White], 
                  Style[
                   Subscript[
                    Style["z", Italic], "feed"], 17, $CellContext`colF, 
                   Background -> 
                   White]}], {$CellContext`zf$, $CellContext`zf$ - 0.19}], {
                
                Arrow[{{$CellContext`xd$, $CellContext`xd$ - 
                   0.15}, {$CellContext`xd$, $CellContext`xd$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colR, Background -> White], 
                  Style[
                   Subscript[
                    Style["x", Italic], "D"], 17, $CellContext`colR, 
                   Background -> 
                   White]}], {$CellContext`xd$, $CellContext`xd$ - 0.19}], {
                Arrow[{{$CellContext`xb$ + 0.16, $CellContext`xb$ - 
                   0.05}, {$CellContext`xb$, $CellContext`xb$}}]}, 
               Text[
                Row[{
                  Style[
                  "correct ", 17, $CellContext`colS, Background -> White], 
                  Style[
                   Subscript[
                    Style["x", Italic], "B"], 17, $CellContext`colS, 
                   Background -> White]}], {$CellContext`xb$ + 
                 0.19, $CellContext`xb$ - 0.06}, Left]}], 
             If[$CellContext`MB$$ == 4, {{
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptdist$$, $CellContext`colR]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptdist$$, 1], {2, 2}]}], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`ptdist$$, {1, -2.5}], {
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptbott$$, $CellContext`colS]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptbott$$, 1], {2, 2}]}], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`ptbott$$, {-1, -2.5}], {
                Opacity[0.6], 
                $CellContext`pt1[$CellContext`ptfeed$$, $CellContext`colF]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[
                    Part[$CellContext`ptfeed$$, 1], {2, 2}]}], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`ptfeed$$, {1, -2.5}]}], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`zf$, $CellContext`zf$}, \
$CellContext`colF]], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`xd$, $CellContext`xd$}, \
$CellContext`colR]], 
             If[
              Or[
               And[$CellContext`solution$$, $CellContext`MB$$ == 4], 
               Inequality[7, Greater, $CellContext`MB$$, GreaterEqual, 5]], 
              $CellContext`pt2[{$CellContext`xb$, $CellContext`xb$}, \
$CellContext`colS]], 
             If[$CellContext`MB$$ == 5, 
              Dynamic[{{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`qdot1$$, $CellContext`colF]}, 
                Dynamic[{
                  Opacity[0.6], 
                  $CellContext`pt1[$CellContext`qdot2$$, $CellContext`colF]}], 
                Dynamic[{Dashed, Thick, 
                  Line[{$CellContext`qdot1$$, $CellContext`qdot2$$}]}]}]], 
             If[
              And[$CellContext`MB$$ == 5, $CellContext`solution$$ == False], {
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`qdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`qdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colF, Background -> 
                 White], $CellContext`qdot2$$, {0, -2}]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 5], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               
               Line[{{$CellContext`xeq$, $CellContext`yeq$}, \
{$CellContext`zf$, $CellContext`zf$}}]}], 
             If[$CellContext`MB$$ > 6, {$CellContext`colF, 
               Thickness[0.006], 
               
               Line[{{$CellContext`xi$, $CellContext`yi$}, {$CellContext`zf$, \
$CellContext`zf$}}]}], 
             If[$CellContext`MB$$ == 6, {Thick, $CellContext`colF, 
               
               Line[{{$CellContext`xeq$, $CellContext`yeq$}, \
{$CellContext`zf$, $CellContext`zf$}}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`TOLdot1$$, \
$CellContext`colR]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`TOLdot2$$, \
$CellContext`colR]}], 
               Dynamic[{Dashed, Thick, 
                 Line[{$CellContext`TOLdot1$$, $CellContext`TOLdot2$$}]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`BOLdot1$$, \
$CellContext`colS]}], 
               Dynamic[{
                 Opacity[0.6], 
                 $CellContext`pt1[$CellContext`BOLdot2$$, \
$CellContext`colS]}], 
               Dynamic[{Dashed, Thick, 
                 Line[{$CellContext`BOLdot1$$, $CellContext`BOLdot2$$}]}]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 6], {
               $CellContext`pt2[{$CellContext`xi$, $CellContext`yi$}, 
                Purple], {
                Opacity[0.5], 
                Thickness[0.01], 
                CapForm["Round"], Blue, {
                 
                 Line[{{$CellContext`xb$, $CellContext`xb$}, \
{$CellContext`xi$, $CellContext`yi$}}], 
                 
                 Line[{{$CellContext`xd$, $CellContext`xd$}, \
{$CellContext`xi$, $CellContext`yi$}}]}}}], 
             If[
              And[$CellContext`MB$$ == 6, $CellContext`solution$$ == False], {
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`TOLdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`TOLdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colR, Background -> 
                 White], $CellContext`TOLdot2$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot1$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot1$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`BOLdot1$$, {0, -2}], 
               Text[
                Style[
                 StringJoin["(", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot2$$, 1], {3, 2}]], ", ", 
                  ToString[
                   NumberForm[
                    Part[$CellContext`BOLdot2$$, 2], {3, 2}]], ")"], 
                 17, $CellContext`colS, Background -> 
                 White], $CellContext`BOLdot2$$, {0, -2}]}], 
             If[$CellContext`MB$$ > 6, {
               Thickness[0.006], $CellContext`colS, 
               
               Line[{{$CellContext`xb$, $CellContext`xb$}, {$CellContext`xi$, \
$CellContext`yi$}}], $CellContext`colR, 
               
               Line[{{$CellContext`xd$, $CellContext`xd$}, {$CellContext`xi$, \
$CellContext`yi$}}]}], 
             If[
              
              Or[$CellContext`MB$$ == 7, $CellContext`MB$$ == 
               8, $CellContext`MB$$ == 9], {
               Dynamic[{Dashed, 
                 Thickness[0.008], 
                 RGBColor[0.9, 0.3, 0], 
                 
                 Line[{$CellContext`horizontalpt1, \
$CellContext`horizontalpt2}], 
                 
                 Line[{$CellContext`verticalpt1, \
$CellContext`horizontalpt2}]}], 
               $CellContext`pt1[$CellContext`stage1guessA$$, Blue], {Black, 
                PointSize[0.045], 
                
                Point[{Part[$CellContext`horizontalpt2, 1] - 0.03, 
                  Part[$CellContext`horizontalpt2, 2] + 0.04}], White, 
                PointSize[0.042], 
                
                Point[{Part[$CellContext`horizontalpt2, 1] - 0.03, 
                  Part[$CellContext`horizontalpt2, 2] + 0.04}]}, 
               Text[
                Style[
                 If[
                  Or[$CellContext`MB$$ == 7, $CellContext`MB$$ == 8], 
                  ToString[$CellContext`MB$$ - 6], 
                  ToString["R"]], 17], {
                Part[$CellContext`horizontalpt2, 1] - 0.025, 
                 Part[$CellContext`horizontalpt2, 2] + 0.034}]}], 
             If[
              Or[$CellContext`MB$$ == 8, $CellContext`MB$$ == 9], 
              Part[$CellContext`Dotnumbers$, 1]], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 7], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               If[$CellContext`nR$ > 0, 
                Part[$CellContext`Ry$, 1], 
                Part[$CellContext`Sy$, 1]], 
               Part[$CellContext`Rx$, 1]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 8], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, 
               Which[
                And[$CellContext`nR$ == 0, $CellContext`nS$ > 1], {
                 Part[$CellContext`Sy$, 2], 
                 Part[$CellContext`Sx$, 2]}, 
                
                And[$CellContext`nR$ == 0, $CellContext`nS$ == 
                 1], {$CellContext`Sr$, 
                 Part[$CellContext`Sx$, 2]}, 
                And[$CellContext`nR$ == 1, $CellContext`nS$ > 0], {
                 Part[$CellContext`Sy$, 1], 
                 Part[$CellContext`Sx$, 1]}, 
                
                And[$CellContext`nR$ == 1, $CellContext`nS$ == 
                 1], {$CellContext`Sr$, 
                 Part[$CellContext`Rx$, 2]}, $CellContext`nR$ > 1, {
                 Part[$CellContext`Ry$, 2], 
                 Part[$CellContext`Rx$, 2]}]}], 
             If[$CellContext`MB$$ == 8, {Thick, 
               If[$CellContext`nR$ > 0, 
                Part[$CellContext`Ry$, 1], 
                Part[$CellContext`Sy$, 1]], 
               Part[$CellContext`Rx$, 1]}], 
             
             If[$CellContext`MB$$ == 9, {
              Thick, $CellContext`Ry$, $CellContext`Sy$, $CellContext`Rx$, 
               Table[
                
                Part[$CellContext`Sx$, $CellContext`a], {$CellContext`a, 
                 1, $CellContext`nS$}], 
               Part[$CellContext`Dotnumbers$, 
                Span[2, $CellContext`nT$ - 1]]}], 
             If[
              And[$CellContext`solution$$, $CellContext`MB$$ == 9], {
               Opacity[0.5], 
               Thickness[0.01], 
               CapForm["Round"], Blue, $CellContext`Sr$, 
               Part[$CellContext`Sx$, $CellContext`nS$ + 1]}], 
             If[
              
              And[$CellContext`MB$$ == 4, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0.05}, {1.15, 0.35}]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[$CellContext`zf$, {2, 2}]}], 
                 17, $CellContext`colF], {0.7, 0.3}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[$CellContext`xd$, {2, 2}]}], 
                 17, $CellContext`colR], {0.7, 0.2}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[$CellContext`xb$, {2, 2}]}], 
                 17, $CellContext`colS], {0.7, 0.1}, Left]}], 
             If[
              
              And[$CellContext`MB$$ == 5, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0.4}, {1.15, 0.6}]}, 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["z", Italic], "feed"], " = ", 
                   NumberForm[$CellContext`zf$, {2, 2}]}], 17], {0.7, 0.55}, 
                Left], 
               Text[
                Style[
                 StringJoin["quality = ", 
                  ToString[
                   NumberForm[$CellContext`q$, {3, 2}]], ""], 17], {0.7, 
                0.45}, Left]}], 
             If[
              And[$CellContext`MB$$ == 6, $CellContext`showcolumn$$ == 
               False], {{White, 
                Rectangle[{0.7, 0}, {1.15, 0.6}]}, 
               Text[
                Style[
                 Row[{
                   Style["L", Italic], " = ", 
                   NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.55}, Left], 
               Text[
                Style[
                 Row[{
                   Style["V", Italic], " = ", 
                   NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.45}, Left], 
               Text[
                Style[
                 Row[{
                   OverBar[
                    Style["L", Italic]], " = ", 
                   NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.35}, Left], 
               Text[
                Style[
                 Row[{
                   OverBar[
                    Style["V", Italic]], " = ", 
                   NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 17], {
                0.7, 0.25}, Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "D"], " = ", 
                   NumberForm[$CellContext`xd$, {2, 2}]}], 17], {0.7, 0.15}, 
                Left], 
               Text[
                Style[
                 Row[{
                   Subscript[
                    Style["x", Italic], "B"], " = ", 
                   NumberForm[$CellContext`xb$, {2, 2}]}], 17], {0.7, 0.05}, 
                Left]}], 
             If[$CellContext`MB$$ == 10, {$CellContext`Dotnumbers$, Thick, 
               GrayLevel[
               0.4], $CellContext`Ry$, $CellContext`Sy$, $CellContext`Rx$, \
$CellContext`Sr$, 
               Table[
                
                Part[$CellContext`Sx$, $CellContext`a + 1], {$CellContext`a, 
                 0, $CellContext`nS$}]}]}], 
           If[$CellContext`showcolumn$$ == 
            True, $CellContext`size2$, $CellContext`size1$], \
$CellContext`size2$, $CellContext`size3$, $CellContext`size4$, 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 AnyTrue[{4, 5}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct feed rate = \n\t\t", 
                Row[{"feed rate (", 
                  Style["F", Italic], ") = "}]], 
               NumberForm[$CellContext`F$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               AnyTrue[{4, 5}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              
              AnyTrue[{4, 
               5}, # == $CellContext`RandomizeValuesShown$& ]], {-30, 
             26}, {-28.5, 40}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{5, 6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["z", Italic], "feed"], " = "}], 
                Row[{
                  Subscript[
                   Style["z", Italic], "feed"], " = "}]], 
               NumberForm[$CellContext`zf$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{5, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {-23, 
             68}, {-15, 58}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
                 AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct distillate flow = ", 
                Row[{"distillate flow (", 
                  Style["D", Italic], ") = "}]], 
               ToString[
                NumberForm[$CellContext`distflow$, {3, 2}]], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
               AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ == 1, 
              AnyTrue[{1, 6}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, 60}, {70, 72}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct bottoms flow = ", 
                Row[{"bottoms flow (", 
                  Style["B", Italic], ") = "}]], 
               ToString[
                NumberForm[$CellContext`botflow$, {3, 2}]], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{2, 3}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, 23}, {70, 14}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["x", Italic], "D"]}], 
                Subscript[
                 Style["x", Italic], "D"]], " = ", 
               NumberForm[$CellContext`xd$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{3, 4}, # == $CellContext`RandomizeValuesShown$& ]], {
             88, 102}, {88, 94}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Subscript[
                   Style["x", Italic], "B"]}], 
                Subscript[
                 Style["x", Italic], "B"]], " = ", 
               NumberForm[$CellContext`xb$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], {
              17, Blue}, 17]], 
            If[
             And[$CellContext`solution$$ == True, 
              AnyTrue[{1, 2}, # == $CellContext`RandomizeValuesShown$& ]], {
             70, -12}, {70, -3}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{3, 4, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                "correct reflux ratio ", 
                Row[{"reflux ratio (", 
                  Style["L", Italic], "/", 
                  Style["D", Italic], ")"}]], " = ", 
               NumberForm[$CellContext`R$, {3, 2}]}], 
             If[
              And[$CellContext`solution$$ == True, 
               AnyTrue[{3, 4, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{3, 4, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {88, 100}, {
             88, 92}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 
                 AnyTrue[{1, 2, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Style["L", Italic]}], 
                Style["L", Italic]], " = ", 
               NumberForm[$CellContext`L$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               
               AnyTrue[{1, 2, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            Which[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              
              AnyTrue[{1, 2, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {70, 
             53}, $CellContext`MB$$ != 3, {29.3, 53}, $CellContext`MB$$ == 
             3, {29.3, 63}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
                 
                 AnyTrue[{1, 2, 3, 
                  4}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  Style["V", Italic]}], 
                Style["V", Italic]], " = ", 
               NumberForm[$CellContext`V$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
               
               AnyTrue[{1, 2, 3, 
                4}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            Which[
             And[$CellContext`solution$$ == True, $CellContext`MB$$ != 3, 
              AnyTrue[{1, 2, 3, 
               4}, # == $CellContext`RandomizeValuesShown$& ]], {70, 
             63}, $CellContext`MB$$ != 3, {29.3, 63}, $CellContext`MB$$ == 
             3, {29.3, 73}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{2, 4, 
                  5}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  OverBar[
                   Style["L", Italic]]}], 
                OverBar[
                 Style["L", Italic]]], " = ", 
               NumberForm[$CellContext`Lbar$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{2, 4, 
                5}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{2, 4, 
               5}, # == $CellContext`RandomizeValuesShown$& ]], {70, 32}, {
             29.3, 32}], Left], 
           Text[
            Style[
             Row[{
               If[
                And[$CellContext`solution$$ == True, 
                 
                 AnyTrue[{1, 3, 4, 5, 
                  6}, # == $CellContext`RandomizeValuesShown$& ]], 
                Row[{"correct ", 
                  OverBar[
                   Style["V", Italic]]}], 
                OverBar[
                 Style["V", Italic]]], " = ", 
               NumberForm[$CellContext`Vbar$, {3, 2}], " kmol/h"}], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{1, 3, 4, 5, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{1, 3, 4, 5, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {70, 40}, {
             29.3, 40}], Left], 
           Text[
            Style[
             StringJoin[
              If[
               And[$CellContext`solution$$ == True, 
                
                AnyTrue[{1, 2, 3, 
                 6}, # == $CellContext`RandomizeValuesShown$& ]], 
               "correct quality = ", "quality = "], 
              ToString[
               NumberForm[$CellContext`q$, {3, 2}]], ""], 
             If[
              And[$CellContext`solution$$ == True, 
               
               AnyTrue[{1, 2, 3, 
                6}, # == $CellContext`RandomizeValuesShown$& ]], {17, Blue}, 
              17]], 
            If[
             And[$CellContext`solution$$ == True, 
              
              AnyTrue[{1, 2, 3, 
               6}, # == $CellContext`RandomizeValuesShown$& ]], {-18, 
             68}, {-18, 58}], Left], 
           Text[
            Style[
             Row[{"feed rate (", 
               Style["F", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessA$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {-28.5, 40}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["z", Italic], "feed"], " = ", 
               NumberForm[$CellContext`GuessB$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {-15, 58}, Left], 
           Text[
            Style[
             Row[{"distillate flow (", 
               Style["D", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessC$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {70, 72}, Left], 
           Text[
            Style[
             Row[{"bottoms flow (", 
               Style["B", Italic], ") = ", 
               ToString[
                NumberForm[$CellContext`GuessD$, {3, 2}]], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {70, 14}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["x", Italic], "D"], " = ", 
               NumberForm[$CellContext`GuessE$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {88, 94}, Left], 
           Text[
            Style[
             Row[{
               Subscript[
                Style["x", Italic], "B"], " = ", 
               NumberForm[$CellContext`GuessF$, {2, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {70, -3}, Left], 
           Text[
            Style[
             Row[{"reflux ratio (", 
               Style["L", Italic], "/", 
               Style["D", Italic], ") = ", 
               NumberForm[$CellContext`GuessG$, {3, 2}]}], 17, 
             RGBColor[0, 0.6, 0]], {88, 92}, Left], 
           Text[
            Style[
             Row[{
               Style["L", Italic], " = ", 
               NumberForm[$CellContext`GuessH$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 53}, Left], 
           Text[
            Style[
             Row[{
               Style["V", Italic], " = ", 
               NumberForm[$CellContext`GuessI$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 63}, Left], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["L", Italic]], " = ", 
               NumberForm[$CellContext`GuessJ$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 32}, Left], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["V", Italic]], " = ", 
               NumberForm[$CellContext`GuessK$, {3, 2}], " kmol/h"}], 17, 
             RGBColor[0, 0.6, 0]], {29.3, 40}, Left], 
           Text[
            Style[
             StringJoin["quality = ", 
              ToString[
               NumberForm[$CellContext`GuessL$, {3, 2}]], ""], 17, 
             RGBColor[0, 0.6, 0]], {-18, 58}, Left], 
           Plot[{
             $CellContext`equilb$[$CellContext`x], $CellContext`x}, \
{$CellContext`x, 0, 1}, PlotStyle -> {{Thick, Black}}], {
            Thickness[0.005], 
            Arrow[{$CellContext`ArrowPt1$, $CellContext`ArrowPt2$}]}, 
           Text[
            Style["feed stream", 17], {13, $CellContext`ArrowHeight$$ + 5}], 
           Text[
            Style[
             Row[{
               OverBar[
                Style["L", Italic]], " and ", 
               OverBar[
                Style["V", Italic]], 
               " = liquid and vapor flow\nrates in the stripping (bottom) \
section"}], 17, TextAlignment -> Left], {-24, 0}, Left], 
           Text[
            Style[
             Row[{
               Style["L", Italic], " and ", 
               Style["V", Italic], 
               " = liquid and vapor flow\nrates in the rectifying (top) \
section"}], 17, TextAlignment -> Left], {-24, 0}, 
            Left]]; $CellContext`Value1$ = $CellContext`equilb$[0.6] - 
          0.05; $CellContext`Value2$ = $CellContext`equilb$[0.4] - 0.05; 
        If[$CellContext`showcolumn$$, 
          
          Row[{$CellContext`Pane2$, $CellContext`Pane1$}], \
$CellContext`Pane2$]], 
      "Specifications" :> {{{$CellContext`solution$$, False, "solution"}, {
         True, False}, ControlType -> None}, {{$CellContext`MB$$, 10}, 1, 10, 
         1, ControlType -> None}, {{$CellContext`reset$$, 482}, 1, 10000, 1, 
         ControlType -> None, ControlPlacement -> 
         1}, {{$CellContext`MB$$, 10}, 1, 10, 1, ControlType -> None, 
         ControlPlacement -> 
         2}, {{$CellContext`stage1guessA$$, {0.2, 0.5352106534516532}}, {{
         0.01, 0.99}, {0.01, 0.99}}, ControlType -> Locator, Appearance -> 
         None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         3}, {{$CellContext`solution$$, False, "solution"}, {True, False}, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         4}, {{$CellContext`hint$$, False, "hint"}, {False, True}, 
         ControlPlacement -> 
         5}, {{$CellContext`showcolumn$$, False, "column"}, {True, False}, 
         ControlPlacement -> 6}, {{$CellContext`Ans1$$, 0, 
          Dynamic[$CellContext`Box1$$]}, 0, 
         Dynamic[$CellContext`Ans1Range$$], 0.01, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], Appearance -> "Labeled",
          ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         7}, {{$CellContext`Ans2$$, 0, 
          Dynamic[$CellContext`Box2$$]}, 0, 
         Dynamic[$CellContext`Ans2Range$$], 0.01, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], Appearance -> "Labeled",
          ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         8}, {{$CellContext`Ans3$$, 0, 
          Dynamic[$CellContext`Box3$$]}, 0, 
         Dynamic[$CellContext`Ans3Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         9}, {{$CellContext`Ans4$$, 0, 
          Dynamic[$CellContext`Box4$$]}, 0, 
         Dynamic[$CellContext`Ans4Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         10}, {{$CellContext`Ans5$$, 0, 
          Dynamic[$CellContext`Box5$$]}, 0, 
         Dynamic[$CellContext`Ans5Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         11}, {{$CellContext`Ans6$$, 0, 
          Dynamic[$CellContext`Box6$$]}, 
         Dynamic[$CellContext`Ans6RangeL$$], 
         Dynamic[$CellContext`Ans6Range$$], 0.01, Appearance -> "Labeled", 
         ImageSize -> Small, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         12}, {{$CellContext`ptdist$$, {0.6, 0.6}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         13}, {{$CellContext`ptbott$$, {0.4, 0.4}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         14}, {{$CellContext`ptfeed$$, {0.2, 0.2}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         15}, {{$CellContext`qdot1$$, {0.3, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         16}, {{$CellContext`qdot2$$, {0.1, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         17}, {{$CellContext`BOLdot1$$, {0.3, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         18}, {{$CellContext`BOLdot2$$, {0.1, 0.9}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         19}, {{$CellContext`TOLdot1$$, {0.3, 0.7}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         20}, {{$CellContext`TOLdot2$$, {0.1, 0.7}}, Automatic, ControlType -> 
         Locator, Appearance -> None, Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         21}, {{$CellContext`ArrowHeight$$, 50, "feed height"}, 20, 90, 1, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         22}, {{$CellContext`Box1$$, "feed rate "}, 0, ControlType -> None, 
         ControlPlacement -> 23}, {{$CellContext`Box2$$, 
          Row[{"distillate composition ", 
            Subscript[
             Style["x", Italic], "D"]}]}, 0, ControlType -> None, 
         ControlPlacement -> 24}, {{$CellContext`Box3$$, "reflux ratio"}, 0, 
         ControlType -> None, ControlPlacement -> 25}, {{$CellContext`Box4$$, 
          Row[{"vapor flow rate ", 
            Style["V ", Italic]}]}, 0, ControlType -> None, ControlPlacement -> 
         26}, {{$CellContext`Box5$$, 
          Row[{"liquid flow rate ", 
            OverBar[
             Style["L", Italic]]}]}, 0, ControlType -> None, ControlPlacement -> 
         27}, {{$CellContext`Box6$$, 
          Row[{"vapor flow rate ", 
            OverBar[
             Style["V", Italic]]}]}, 0, ControlType -> None, ControlPlacement -> 
         28}, {{$CellContext`Ans1Range$$, 18.79018435380583}, 0, ControlType -> 
         None, ControlPlacement -> 29}, {{$CellContext`Ans2Range$$, 1}, 0, 
         ControlType -> None, ControlPlacement -> 
         30}, {{$CellContext`Ans3Range$$, 4.765399702910578}, 0, ControlType -> 
         None, ControlPlacement -> 
         31}, {{$CellContext`Ans4Range$$, 26.94719638937734}, 0, ControlType -> 
         None, ControlPlacement -> 
         32}, {{$CellContext`Ans5Range$$, 11.88985422266501}, 0, ControlType -> 
         None, ControlPlacement -> 
         33}, {{$CellContext`Ans6Range$$, 14.877110256846878`}, 0, 
         ControlType -> None, ControlPlacement -> 
         34}, {{$CellContext`Ans6RangeL$$, 0}, 0, ControlType -> None, 
         ControlPlacement -> 35}, {{$CellContext`HintTextColumnTrue$$, " "}, 
         0, ControlType -> None, ControlPlacement -> 36}, 
        Grid[{{
           Button[" new problem ", {
             Increment[$CellContext`reset$$], $CellContext`MB$$ = 
             1, $CellContext`solution$$ = False, $CellContext`hint$$ = False, 
             Clear[$CellContext`lineguess1], $CellContext`Ans1$$ = 
             0, $CellContext`Ans2$$ = 0, $CellContext`Ans3$$ = 
             0, $CellContext`Ans4$$ = 0, $CellContext`Ans5$$ = 
             0, $CellContext`Ans6$$ = 0, $CellContext`showcolumn$$ = 
             False, $CellContext`stage1guessA$$ = {0.5, 
              0.8}, $CellContext`ArrowHeight$$ = 
             50, $CellContext`qdot1$$ = {0.3, 0.9}, $CellContext`qdot2$$ = {
              0.1, 0.9}, $CellContext`ptdist$$ = {0.6, 
              0.7}, $CellContext`ptbott$$ = {0.4, 
              0.3}, $CellContext`ptfeed$$ = {0.2, 
              0.7}, $CellContext`BOLdot1$$ = {0.3, 
              0.9}, $CellContext`BOLdot2$$ = {0.1, 
              0.9}, $CellContext`TOLdot1$$ = {0.3, 
              0.7}, $CellContext`TOLdot2$$ = {0.1, 0.7}}], 
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           Manipulate`Place[3], 
           PaneSelector[{1 -> Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 2 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 3 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 4 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 5 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 6 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 7 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 8 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}], 9 -> 
             Button[" next ", {
                If[
                 Inequality[1, LessEqual, $CellContext`MB$$, Less, 10], {
                  Increment[$CellContext`MB$$], $CellContext`solution$$ = 
                  False, $CellContext`hint$$ = False, 
                  
                  If[$CellContext`MB$$ == 
                   7, $CellContext`stage1guessA$$ = {0.5, 
                    0.7}, $CellContext`stage1guessA$$ = {0.2, 
                    0.4}], $CellContext`showcolumn$$ = False}, Null]}]}, 
            Dynamic[$CellContext`MB$$]], 
           
           PaneSelector[{
            1 -> "1. Solve for the missing green variables.", 2 -> 
             "2. Solve for the missing green variables.", 3 -> 
             "3. Solve for the missing green variables.", 4 -> 
             Column[{"4. Place the points at their correct", 
                Row[{"locations on the ", 
                  Style["y", Italic], " = ", 
                  Style["x", Italic], " line."}]}], 5 -> Row[{"5. Draw the ", 
                Style["q", Italic], "-line (feed line)."}], 6 -> 
             "6. Move the points to draw the top \n and bottom operating \
lines.", 7 -> "7. Drag the point to locate the first stage.", 8 -> 
             "8. Drag the point to locate the second stage.", 9 -> 
             "9. Drag the point to locate the final stage.", 10 -> 
             "10. Determine the feed stream location."}, 
            Dynamic[$CellContext`MB$$]], 
           Manipulate`Place[4], 
           
           PaneSelector[{
            1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
             Manipulate`Place[5], 5 -> Manipulate`Place[5], 6 -> 
             Manipulate`Place[5], 7 -> Manipulate`Place[5], 8 -> 
             Manipulate`Place[5], 9 -> Manipulate`Place[5], 10 -> 
             Manipulate`Place[5]}, 
            Dynamic[$CellContext`MB$$]], 
           PaneSelector[{5 -> Manipulate`Place[6], 6 -> Manipulate`Place[6]}, 
            Dynamic[$CellContext`MB$$]]}, {
           PaneSelector[{1 -> Grid[{{
                 Manipulate`Place[7], 
                 Manipulate`Place[8]}}], 2 -> Grid[{{
                 Manipulate`Place[9], 
                 Manipulate`Place[10]}}], 3 -> Grid[{{
                 Manipulate`Place[11], 
                 Manipulate`Place[12]}}], 4 -> Row[{
                Manipulate`Place[13], 
                Manipulate`Place[14], 
                Manipulate`Place[15]}], 5 -> Row[{
                Manipulate`Place[16], 
                Manipulate`Place[17], 
                Spacer[{200, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}], 6 -> Row[{
                Manipulate`Place[18], 
                Manipulate`Place[19], 
                Manipulate`Place[20], 
                Manipulate`Place[21], 
                Spacer[{200, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}], 10 -> Row[{
                Manipulate`Place[22], 
                Spacer[{40, 1, 1}], 
                Dynamic[
                 Style[
                  Text[$CellContext`HintTextColumnTrue$$], 12]]}]}, 
            Dynamic[$CellContext`MB$$]], SpanFromLeft}, {
           Manipulate`Place[23], 
           Manipulate`Place[24], 
           Manipulate`Place[25], 
           Manipulate`Place[26], 
           Manipulate`Place[27], 
           Manipulate`Place[28], 
           Manipulate`Place[29], 
           Manipulate`Place[30], 
           Manipulate`Place[31]}, {
           Manipulate`Place[32], 
           Manipulate`Place[33], 
           Manipulate`Place[34], 
           Manipulate`Place[35], 
           Manipulate`Place[36]}}, Alignment -> Left]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({
      Attributes[Subscript] = {NHoldRest}, $CellContext`horizontalpt1 = {
        0.796279548785221, 0.8261797099333564}, $CellContext`horizontalpt2 = {
        0.5000000000000001, 0.8261797099333564}, $CellContext`verticalpt1 = {
        0.5000000000000001, 0.6357142857142858}, $CellContext`colF = 
       RGBColor[0.6, 0.4, 0.2], $CellContext`colR = 
       RGBColor[0, 0.6, 0], $CellContext`colS = Hue[0.9], $CellContext`pt1[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`col, 
          Blank[]]] := {$CellContext`col, 
         PointSize[0.022], 
         Point[$CellContext`pt], White, 
         PointSize[0.018], 
         Point[$CellContext`pt]}, $CellContext`pt2[
         Pattern[$CellContext`pt, 
          Blank[]], 
         Pattern[$CellContext`col, 
          Blank[]]] := {$CellContext`col, 
         PointSize[0.022], 
         Point[$CellContext`pt]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellID->759341582,ExpressionUUID->"a57bd747-c520-421c-a899-b2ce212d0a25"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection",ExpressionUUID->"9259d289-b1b8-4355-bfe7-9950428b8b0b"],

Cell["\<\
The McCabe\[Dash]Thiele graphical solution method for binary distillation is \
used to determine the number of equilibrium stages needed to achieve a \
specified separation in a distillation column. This method assumes: \
\>", "DetailNotes",
 CellChangeTimes->{{3.6764836855195093`*^9, 3.676483686241996*^9}, {
   3.6764837229709883`*^9, 3.676483801144796*^9}, {3.676484208985889*^9, 
   3.676484292825663*^9}, {3.6764843498604507`*^9, 3.6764843504218388`*^9}, {
   3.679176590575749*^9, 3.679176597007991*^9}, {3.6796555622816963`*^9, 
   3.6796556032297564`*^9}, 3.6796556425293694`*^9, {3.6816551956197796`*^9, 
   3.6816552069514*^9}, {3.6826933175814285`*^9, 3.682693339472233*^9}, 
   3.684240336671339*^9, {3.684240375978819*^9, 3.684240377204012*^9}},
 CellID->1224384310,ExpressionUUID->"6f388c87-ba74-4df9-9956-55161df4f782"],

Cell["1. The distillation column is adiabatic.", "DetailNotes",
 CellChangeTimes->{{3.6764836855195093`*^9, 3.676483686241996*^9}, {
  3.6764837229709883`*^9, 3.676483801144796*^9}, {3.676484208985889*^9, 
  3.676484295403784*^9}, {3.676484422381997*^9, 3.6764844523721724`*^9}, {
  3.679655607719017*^9, 3.6796556264626265`*^9}, {3.6826933476120467`*^9, 
  3.6826933483763857`*^9}, {3.684071917791325*^9, 3.684071922239135*^9}},
 CellID->2068001857,ExpressionUUID->"88f38144-1080-463c-8d9f-63fc6efec5f7"],

Cell[TextData[{
 "2. Constant molar overflow (CMO), which means that for every mole of vapor \
condensed, one mole of liquid is vaporized on any equilibrium stage. This \
results in constant ",
 Cell[BoxData[
  FormBox["L", TraditionalForm]], "InlineMath",ExpressionUUID->
  "2b80c2ee-37bc-46c3-9a4f-9d563ede9d3b"],
 " and ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]], "InlineMath",ExpressionUUID->
  "bb5b2b64-f6cb-40fa-8e07-e8c84a3012b8"],
 " flow rates in the rectifying (upper) section, and constant  ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["L", "_"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "70f500ec-1b78-4898-8598-402cd9643c4f"],
 " and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["V", "_"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "dda30be8-9848-4fe1-a51f-4fb1cbc0ddbe"],
 " flow rates in the stripping (bottom) section. The symbols used for liquid \
and vapor flow rates are ",
 Cell[BoxData[
  FormBox["L", TraditionalForm]], "InlineMath",ExpressionUUID->
  "17983e87-36a6-443f-b86e-098c35f99913"],
 " (liquid flow rate in the rectifying section), ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]], "InlineMath",ExpressionUUID->
  "76295aaa-3bc7-4a87-a36f-7fe083365139"],
 " (vapor flow rate in the rectifying section), ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["L", "_"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "d1c02116-d71d-4371-af72-b3cb613a900e"],
 " (liquid flow rate in the stripping section), and ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["V", "_"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "0c17e036-4055-4644-9fdc-3975c0085741"],
 " (vapor flow rate in the stripping section). "
}], "DetailNotes",
 CellChangeTimes->{{3.6764836855195093`*^9, 3.676483686241996*^9}, {
   3.6764837229709883`*^9, 3.676483801144796*^9}, {3.676484208985889*^9, 
   3.676484295403784*^9}, {3.676484422381997*^9, 3.676484456276331*^9}, {
   3.676484503206237*^9, 3.67648451246283*^9}, {3.676484550067234*^9, 
   3.676484732401277*^9}, {3.676484794407113*^9, 3.676484958034377*^9}, {
   3.676485023568264*^9, 3.676485111254067*^9}, {3.676485187148814*^9, 
   3.6764852239547787`*^9}, {3.676485264176264*^9, 3.676485264181322*^9}, 
   3.6791767043551984`*^9, {3.6791768909036303`*^9, 3.67917690897907*^9}, 
   3.679655705263569*^9, {3.6796557543353004`*^9, 3.679655790623124*^9}, {
   3.681583750678505*^9, 3.6815837531629095`*^9}, {3.6816552433509064`*^9, 
   3.681655269890976*^9}, {3.6842403952605953`*^9, 3.6842404203259363`*^9}, {
   3.7342721694338274`*^9, 3.7342722545824003`*^9}, {3.734272326840952*^9, 
   3.734272403495057*^9}, {3.7342734386924553`*^9, 3.7342734629985666`*^9}, {
   3.7348031154283495`*^9, 3.734803164407612*^9}, 3.7361711564016733`*^9, {
   3.7361711910522904`*^9, 3.7361712137086616`*^9}},
 CellID->343066307,ExpressionUUID->"21ed616f-45fb-49da-b77e-02115550fa2c"],

Cell["The constant molar overflow (CMO) assumption requires that:", \
"DetailNotes",
 CellChangeTimes->{{3.6764836855195093`*^9, 3.676483686241996*^9}, {
   3.6764837229709883`*^9, 3.676483801144796*^9}, {3.676484208985889*^9, 
   3.676484295403784*^9}, {3.676484422381997*^9, 3.676484456276331*^9}, {
   3.676484503206237*^9, 3.67648451246283*^9}, {3.676484550067234*^9, 
   3.676484732401277*^9}, {3.676484794407113*^9, 3.676484958034377*^9}, {
   3.676485023568264*^9, 3.676485111254067*^9}, {3.676485187148814*^9, 
   3.6764852239547787`*^9}, {3.676485264176264*^9, 3.676485264181322*^9}, 
   3.6791767043551984`*^9, {3.6791768909036303`*^9, 3.67917690897907*^9}, 
   3.679655705263569*^9, {3.6796557543353004`*^9, 3.679655790623124*^9}, {
   3.681583750678505*^9, 3.6815837531629095`*^9}, {3.6816552433509064`*^9, 
   3.681655269890976*^9}, {3.6842403952605953`*^9, 3.6842404203259363`*^9}, {
   3.7342721694338274`*^9, 3.7342722545824003`*^9}, {3.734272326840952*^9, 
   3.734272403495057*^9}, {3.7342734386924553`*^9, 3.7342734629985666`*^9}, {
   3.7348031154283495`*^9, 3.734803153494377*^9}},
 CellID->82520730,ExpressionUUID->"5d707e77-a557-470b-be13-ca3dee2a45c2"],

Cell[TextData[{
 "2a. Specific heat of vaporization ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "vap"], TraditionalForm]], "InlineMath",
  ExpressionUUID->"ad9956e8-eeb6-4084-a95e-7af3a59aca42"],
 " is the same for both components and thus independent of concentration. "
}], "DetailNotes",
 CellChangeTimes->{{3.6764836855195093`*^9, 3.676483686241996*^9}, {
   3.6764837229709883`*^9, 3.676483801144796*^9}, {3.676484208985889*^9, 
   3.676484295403784*^9}, {3.676484422381997*^9, 3.676484456276331*^9}, {
   3.676484503206237*^9, 3.67648451246283*^9}, {3.676484550067234*^9, 
   3.676484732401277*^9}, {3.676484794407113*^9, 3.676484958034377*^9}, {
   3.676485023568264*^9, 3.676485111254067*^9}, {3.676485187148814*^9, 
   3.6764852239547787`*^9}, {3.676485264176264*^9, 3.676485264181322*^9}, 
   3.6791767043551984`*^9, {3.6791768909036303`*^9, 3.67917690897907*^9}, 
   3.679655705263569*^9, {3.6796557543353004`*^9, 3.679655790623124*^9}, {
   3.681583750678505*^9, 3.6815837531629095`*^9}, {3.6816552433509064`*^9, 
   3.681655269890976*^9}, {3.6842403952605953`*^9, 3.684240469275427*^9}, 
   3.684240947696431*^9, {3.734803266636718*^9, 3.7348032704172926`*^9}, {
   3.734803411075494*^9, 3.7348034144935207`*^9}},
 CellID->1894578964,ExpressionUUID->"e36f53d2-5a6e-4907-9a9d-abedb071631d"],

Cell[TextData[{
 "2b. Molar enthalpy changes  (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[EmptyUpTriangle]", "\[InvisibleSpace]", "h"}], "=", 
    RowBox[{"|", 
     RowBox[{
      SubscriptBox["h", 
       RowBox[{"i", "+", "1"}]], "-", 
      SubscriptBox["h", "i"]}], "|", "  ", 
     RowBox[{
      StyleBox["J",
       FontSlant->"Plain"], "/", "mol"}]}]}], TraditionalForm]], "InlineMath",
  FontSize->14,ExpressionUUID->"d58ab208-4b87-4405-b55e-54baafa3def6"],
 ")  between stages are small compared to latent heat changes, so  "
}], "DetailNotes",
 CellChangeTimes->{{3.6764836855195093`*^9, 3.676483686241996*^9}, {
   3.6764837229709883`*^9, 3.676483801144796*^9}, {3.676484208985889*^9, 
   3.676484295403784*^9}, {3.676484422381997*^9, 3.676484456276331*^9}, {
   3.676484503206237*^9, 3.67648451246283*^9}, {3.676484550067234*^9, 
   3.676484732401277*^9}, {3.676484794407113*^9, 3.676484958034377*^9}, {
   3.676485023568264*^9, 3.676485111254067*^9}, {3.676485187148814*^9, 
   3.6764852239547787`*^9}, {3.676485264176264*^9, 3.676485264181322*^9}, 
   3.6791767043551984`*^9, {3.6791768909036303`*^9, 3.67917690897907*^9}, 
   3.679655705263569*^9, {3.6796557543353004`*^9, 3.679655790623124*^9}, {
   3.681583750678505*^9, 3.6815837531629095`*^9}, {3.6816552433509064`*^9, 
   3.681655269890976*^9}, {3.6842403952605953`*^9, 3.684240427582086*^9}, 
   3.684240475990819*^9, 3.684240949731552*^9, {3.734803264848389*^9, 
   3.7348032713466744`*^9}, {3.7348033598112016`*^9, 
   3.7348033628472104`*^9}, {3.7348034025826693`*^9, 3.73480350891325*^9}, {
   3.7348035831993465`*^9, 3.734803720322194*^9}, {3.734803751631874*^9, 
   3.7348037525476313`*^9}, {3.734803835294543*^9, 3.7348038669857416`*^9}, {
   3.7348039418060656`*^9, 3.734803945043726*^9}, {3.736171228166459*^9, 
   3.7361712423528337`*^9}},
 CellID->174106776,ExpressionUUID->"8c96d669-732c-40fa-b978-598c25200843"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     RowBox[{
      SubscriptBox["h", 
       RowBox[{"i", "+", "1"}]], "-", 
      SubscriptBox["h", "i"]}], "\[RightBracketingBar]"}], "\[TildeTilde]", 
    SubscriptBox["\[Lambda]", "vap"]}], TraditionalForm]], "InlineMath",
  FontSize->14,ExpressionUUID->"3b1b7486-5056-4568-9056-24ddbbd204fb"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.6828001348411045`*^9, 3.6828001351687055`*^9}, 
   3.682800215259367*^9, {3.734803858564007*^9, 3.734803858564007*^9}, 
   3.736171153573205*^9},
 CellID->372290207,ExpressionUUID->"fe65c715-a2b1-49f6-9766-cf9fdf2ecd29"],

Cell["3. Heat of mixing is negligible.", "DetailNotes",
 CellChangeTimes->{{3.6828001348411045`*^9, 3.6828001351687055`*^9}, 
   3.682800215259367*^9},
 CellID->690265751,ExpressionUUID->"b189975e-3155-4aa2-a222-ed74489c771f"],

Cell["\<\
The equilibrium curve was calculated using the modified Raoult's law:\
\>", "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.6815839032701855`*^9}, {3.6815840680532017`*^9, 
   3.6815840722496095`*^9}, {3.681655317914464*^9, 3.6816553192716665`*^9}, {
   3.7342734165781803`*^9, 3.7342734165781803`*^9}, 3.7361711518883986`*^9},
 CellID->182840712,ExpressionUUID->"47e8d5fa-5751-45b8-9ccc-c49361fadc2f"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], " ", 
      SubscriptBox["\[Gamma]", "1"], " ", 
      SubsuperscriptBox["P", "1", "sat"]}], "+", 
     RowBox[{
      SubscriptBox["x", "2"], " ", 
      SubscriptBox["\[Gamma]", "2"], " ", 
      SubsuperscriptBox["P", "2", "sat"]}]}]}], TraditionalForm]], 
  "InlineMath",
  FontSize->14,ExpressionUUID->"d6ddc8b0-0461-467d-874b-bf576300cd66"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
  3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
  3.6815839032701855`*^9}, {3.6815840680532017`*^9, 3.6815840722496095`*^9}, {
  3.681655317914464*^9, 3.6816553192716665`*^9}},
 CellID->413106355,ExpressionUUID->"3feee9e5-4af2-48ed-ad40-c5ba2a8993bd"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "i"], " ", "P"}], "=", 
    RowBox[{
     SubscriptBox["x", "i"], " ", 
     SubscriptBox["\[Gamma]", "i"], " ", 
     SubsuperscriptBox["P", "i", "sat"]}]}], TraditionalForm]], "InlineMath",
  FontSize->14,ExpressionUUID->"2841c29f-4d33-43bf-8d74-25eb0aae369f"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.6815839580785046`*^9}, {3.681655335263298*^9, 3.681655470192815*^9}, {
   3.681655757198767*^9, 3.6816557706083937`*^9}, {3.682693436044643*^9, 
   3.6826934831779604`*^9}, 3.684240507255883*^9, {3.7335057944331512`*^9, 
   3.733505823180738*^9}, {3.734273412467911*^9, 3.734273412467911*^9}, 
   3.736171150007551*^9},
 CellID->417910946,ExpressionUUID->"521911cb-93e3-420e-a274-81a248c5d4be"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "3a3a9bab-cf78-4d42-9056-399a19e0f064"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "7ab000f7-4f69-4918-9b2e-f8235b54796d"],
 " are the liquid and vapor mole fractions (",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "=", "1"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "c70970cf-127f-4d80-af3f-2bd500ae2e91"],
 " for the more volatile component, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"i", "=", "2"}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "221081f5-ba46-4a52-8374-fe89e687f59a"],
 " for the less volatile component), ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "+", 
     SubscriptBox["x", "2"]}], "=", "1"}], TraditionalForm]], "InlineMath",
  FontSize->14,ExpressionUUID->"8c2ab150-f6e5-4641-be32-165e6adb7c24"],
 StyleBox[", ",
  FontSize->14],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["y", "1"], "+", 
     SubscriptBox["y", "2"]}], "=", "1"}], TraditionalForm]], "InlineMath",
  FontSize->14,ExpressionUUID->"af723496-3c04-4145-912c-834d5666c07d"],
 ", ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]], "InlineMath",ExpressionUUID->
  "68e2be34-9f00-4222-badd-eeb0f5b9aa1a"],
 " is total pressure and ",
 Cell[BoxData[
  FormBox[Cell[TextData[Cell[BoxData[
    FormBox[
     SubsuperscriptBox["P", "i", "sat"], TraditionalForm]], "InlineMath",
    ExpressionUUID->"2d238acf-cbde-4ad6-a589-58295f380929"]], "InlineMath",
    ExpressionUUID->"3310b0d8-be45-48ae-9694-2beba8326d12"], 
   TraditionalForm]], "InlineMath",ExpressionUUID->
  "563d9a5e-1d4c-4350-9ac0-54ce6efc2d6d"],
 " is the saturation pressure, which is calculated using the Antoine equation:"
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.6815839580785046`*^9}, {3.681655335263298*^9, 3.681655470192815*^9}, {
   3.681655757198767*^9, 3.6816557706083937`*^9}, {3.682693436044643*^9, 
   3.6826934831779604`*^9}, 3.684240507255883*^9, {3.7335057944331512`*^9, 
   3.733505823180738*^9}},
 CellID->61356928,ExpressionUUID->"8dc83d9e-9e53-484b-82bd-ba83e15bfe4e"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["P", "i", "sat"], "=", 
    SuperscriptBox["10", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["A", "i"], "-", 
       FractionBox[
        SubscriptBox["B", "i"], 
        RowBox[{"T", "+", 
         SubscriptBox["C", "i"]}]]}], ")"}]]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"158b13ab-b180-4e19-85f0-015ac9d66edf"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6816554767358475`*^9, 3.681655495344495*^9}, 
   3.6842405324548597`*^9, {3.7342734107019925`*^9, 3.7342734107019925`*^9}, 
   3.736171148050275*^9},
 CellID->174539008,ExpressionUUID->"58b15bc4-0487-4809-813e-82728e2cc5b4"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]], "InlineMath",ExpressionUUID->
  "602378f7-a928-433a-9f79-8a5e177982e4"],
 " is temperature, and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "6a4b52ae-b4da-49b7-aca8-9ddf085cddf8"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["B", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "30bf9787-f3db-44ad-86f1-3756f3b7adc1"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "i"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "dbf0fc7b-3226-46c8-be4f-63303e477b8f"],
 " are Antoine constants."
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6816554767358475`*^9, 3.681655495344495*^9}, 
   3.6842405324548597`*^9},
 CellID->209265553,ExpressionUUID->"93e50291-96e7-48f9-a028-e6d255ac634d"],

Cell[TextData[{
 "The activity coefficients ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Gamma]", "i"], TraditionalForm]], "InlineMath",
  ExpressionUUID->"5225186f-7667-4ce7-9fb8-902f1a006246"],
 " are calculated using the two-parameter Margules model:"
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.6815841678462195`*^9}, {
   3.6816555125553427`*^9, 3.681655514162145*^9}, {3.6816556476592155`*^9, 
   3.681655653125225*^9}, {3.6925566729241257`*^9, 3.6925566729241257`*^9}, {
   3.7342734089519587`*^9, 3.7342734089519587`*^9}, 3.736171139695915*^9},
 CellID->678020050,ExpressionUUID->"00837755-c320-48e8-8a22-cb0ee11d85b2"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"ln", " ", 
     SubscriptBox["\[Gamma]", "1"]}], "=", 
    RowBox[{
     SubsuperscriptBox["x", "2", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["A", "12"], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["A", "21"], "-", 
          SubscriptBox["A", "12"]}], ")"}], " ", 
        SubscriptBox["x", "1"]}]}], ")"}]}]}], TraditionalForm]], "InlineMath",
  FontSize->14,ExpressionUUID->"9c5777eb-9dde-402f-842c-18b050074fc8"],
 StyleBox[",",
  FontSize->14]
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
  3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
  3.681584029688101*^9}, {3.6815840851456337`*^9, 3.6815841678462195`*^9}, {
  3.6816555125553427`*^9, 3.681655514162145*^9}, {3.6816556476592155`*^9, 
  3.681655653125225*^9}, {3.6925566729241257`*^9, 3.6925566729241257`*^9}},
 CellID->466517165,ExpressionUUID->"42c832a1-fc47-48f6-af45-094e84a72c5b"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"ln", " ", 
     SubscriptBox["\[Gamma]", "2"]}], "=", 
    RowBox[{
     SubsuperscriptBox["x", "1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["A", "21"], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["A", "12"], "-", 
          SubscriptBox["A", "21"]}], ")"}], " ", 
        SubscriptBox["x", "2"]}]}], ")"}]}]}], TraditionalForm]], "InlineMath",
  FontSize->14,ExpressionUUID->"b0eb5ff1-1116-41f2-b296-099a7c093a82"],
 StyleBox[",",
  FontSize->14]
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.681584244382209*^9}, {
   3.68165556187547*^9, 3.6816555810349073`*^9}, {3.6827990733635483`*^9, 
   3.6827990733635483`*^9}, {3.6828001676766496`*^9, 3.6828001687842517`*^9}, 
   3.6828002144325657`*^9, {3.684072081997102*^9, 3.684072105127761*^9}, {
   3.73350568667955*^9, 3.733505710773411*^9}, {3.733505778617516*^9, 
   3.733505779222219*^9}, {3.7342734004349937`*^9, 3.7342734004349937`*^9}, 
   3.736171142386387*^9},
 CellID->248628401,ExpressionUUID->"9ae05162-cf35-4b20-9152-46acaced4d39"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "12"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "028edaae-3891-4247-b78a-c72976e3aa43"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "21"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "65cdea81-5fdc-4a16-b5b3-2a1e5dfdf67b"],
 " are the Margules parameters for a binary mixture. Typically, these are \
measured experimentally. In this Demonstration, Margules parameters are \
pseudo-random values."
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.681584244382209*^9}, {
   3.68165556187547*^9, 3.6816555810349073`*^9}, 3.6827990733635483`*^9, {
   3.682799568245634*^9, 3.682799632861493*^9}, {3.7342724472644067`*^9, 
   3.7342724646267695`*^9}, {3.7342725787146173`*^9, 3.734272703854244*^9}, {
   3.734272746221362*^9, 3.7342728460894246`*^9}, {3.7342730326992435`*^9, 
   3.7342731382561717`*^9}, 3.7342731796147537`*^9, {3.7342734022787943`*^9, 
   3.7342734022787943`*^9}, 3.7361711448503537`*^9, {3.7361712808265376`*^9, 
   3.7361713023057356`*^9}},
 CellID->214837423,ExpressionUUID->"19d58939-a75a-44bc-9a0a-cf969d17adf8"],

Cell["The method:", "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.681584244382209*^9}, {
   3.68165556187547*^9, 3.6816555810349073`*^9}, 3.6827990733635483`*^9, {
   3.682799568245634*^9, 3.682799632861493*^9}, {3.7342724472644067`*^9, 
   3.7342724646267695`*^9}, {3.7342725787146173`*^9, 3.734272703854244*^9}, {
   3.734272746221362*^9, 3.7342728460894246`*^9}, {3.7342730326992435`*^9, 
   3.7342731382561717`*^9}, 3.7342731796147537`*^9, {3.7342735410655003`*^9, 
   3.7342735440708504`*^9}},
 CellID->211999651,ExpressionUUID->"f5171ae4-ed3c-4a9b-8e59-a5bdca67adea"],

Cell[TextData[{
 "1. First the feed and rectifying operating lines are calculated. In this \
simulation, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", 
    FractionBox[
     RowBox[{
      OverscriptBox["L", "_"], "-", "L"}], "F"]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"797940e0-cdc2-46c4-b0c6-2e0eb4c43075"],
 ", where F is the feed rate. Note that for sub-cooled liquids, ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]], "InlineMath",ExpressionUUID->
  "f291d37d-0a5b-456a-a621-a1b4348d082c"],
 " is greater than 1 and for superheated vapors, ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]], "InlineMath",ExpressionUUID->
  "6a78399a-b590-4747-91f0-c5de15450932"],
 " is less than 0. Equations for the feed line, and the top and bottom \
operating lines are given below."
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.681584244382209*^9}, {
   3.68165556187547*^9, 3.6816555810349073`*^9}, 3.6827990733635483`*^9, {
   3.682799568245634*^9, 3.682799633360694*^9}, {3.6827996977626524`*^9, 
   3.6827997503852453`*^9}, {3.692556682680975*^9, 3.692556706283097*^9}, {
   3.7342728539027586`*^9, 3.734272855875245*^9}, {3.734273398387538*^9, 
   3.734273398387538*^9}, 3.736171159574329*^9, {3.7361713248756905`*^9, 
   3.7361713343648233`*^9}},
 CellID->62774028,ExpressionUUID->"95eb1bd4-de36-4fe2-ad02-f3a4f5b839e4"],

Cell[TextData[{
 "Feed line:",
 StyleBox[" ",
  FontSize->12],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["y", 
     StyleBox["F",
      FontSlant->"Plain"]], "=", 
    RowBox[{
     RowBox[{
      FractionBox["q", 
       RowBox[{"q", "-", "1"}]], " ", "x"}], "-", 
     FractionBox[
      SubscriptBox["z", 
       StyleBox["F",
        FontSlant->"Plain"]], 
      RowBox[{"q", "-", "1"}]]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"06612754-372a-4dbd-b2da-4ac2667ef704"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.681584244382209*^9}, {
   3.68165556187547*^9, 3.6816555810349073`*^9}, 3.6827990733635483`*^9, {
   3.682799568245634*^9, 3.682799633360694*^9}, {3.6827996977626524`*^9, 
   3.6827997503852453`*^9}, {3.692556682680975*^9, 3.692556706283097*^9}, {
   3.7342728539027586`*^9, 3.734272855875245*^9}},
 CellID->579574339,ExpressionUUID->"2052267b-3d6b-4920-8e68-b865b567409b"],

Cell[TextData[{
 "Top operating line: ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     SubscriptBox["y", 
      StyleBox["R",
       FontSlant->"Plain"]], "=", 
     RowBox[{
      RowBox[{
       FractionBox["R", 
        RowBox[{"R", "+", "1"}]], " ", "x"}], "+", 
      FractionBox[
       SubscriptBox["x", 
        StyleBox["D",
         FontSlant->"Plain"]], 
       RowBox[{"R", "+", "1"}]]}]}],
    FontSize->14], TraditionalForm]], "InlineMath",ExpressionUUID->
  "d171e14d-43fe-47a1-8003-ba7a826d6be9"],
 StyleBox[",",
  FontSize->14]
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.681584244382209*^9}, {
   3.68165556187547*^9, 3.6816555810349073`*^9}, 3.6827990733635483`*^9, {
   3.682799568245634*^9, 3.682799633360694*^9}, {3.6827996977626524`*^9, 
   3.682799789102975*^9}, {3.692556690210021*^9, 3.6925567162655454`*^9}, {
   3.7342728513868895`*^9, 3.73427286224775*^9}, {3.7342730179156475`*^9, 
   3.734273018743904*^9}, {3.734803999397427*^9, 3.734803999397427*^9}},
 CellID->489852983,ExpressionUUID->"7223a679-7ed9-4b08-9b0b-2717f9373576"],

Cell[TextData[{
 "Bottom operating line: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["y", 
     StyleBox["S",
      FontSlant->"Plain"]], "=", 
    RowBox[{
     RowBox[{
      FractionBox[
       OverscriptBox["L", "_"], 
       OverscriptBox["V", "_"]], " ", "x"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         OverscriptBox["L", "_"], 
         OverscriptBox["V", "_"]], "-", "1"}], ")"}], " ", 
      SubscriptBox["x", 
       StyleBox["B",
        FontSlant->"Plain"]]}]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"b98c07f6-6bc6-438c-a7f4-c8794684be0c"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.681584244382209*^9}, {
   3.68165556187547*^9, 3.6816555810349073`*^9}, 3.6827990733635483`*^9, {
   3.682799568245634*^9, 3.682799633360694*^9}, {3.6827996977626524`*^9, 
   3.682799789102975*^9}, {3.692556690210021*^9, 3.6925567162655454`*^9}, {
   3.7342728640759153`*^9, 3.734272976205904*^9}, {3.734273006679741*^9, 
   3.734273010461585*^9}, 3.7361711613087425`*^9, {3.736171344026312*^9, 
   3.7361713824080815`*^9}},
 CellID->543079840,ExpressionUUID->"9954370d-7ec8-4079-8efd-1218dd711b70"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]], "InlineMath",ExpressionUUID->
  "6b1b9dd1-b9ab-4195-8927-9444e1a02bec"],
 " is the quality of the feed ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", 
    FractionBox[
     RowBox[{
      OverscriptBox["L", "_"], "-", "L"}], "F"]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"6a5c9d39-5c3a-432a-bdbd-37a89aa312c1"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", 
    StyleBox["F",
     FontSlant->"Plain"]], TraditionalForm]], "InlineMath",ExpressionUUID->
  "dfaadb34-7d44-4e3d-a663-649d9e5d09d7"],
 " is the mole fraction of the more volatile component in the feed, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    StyleBox["D",
     FontSlant->"Plain"]], TraditionalForm]], "InlineMath",ExpressionUUID->
  "718338f0-6a23-43fb-a3bb-3b4cb7e0a7ca"],
 " is the liquid mole fraction of the more volatile component in the \
distillate and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", 
    RowBox[{"L", "/", "D"}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"f7e0dd3e-44fc-4cf8-912b-5d346d5c62f2"],
 " is the reflux ratio."
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.681584244382209*^9}, {
   3.68165556187547*^9, 3.6816555810349073`*^9}, 3.6827990733635483`*^9, {
   3.682799568245634*^9, 3.682799633360694*^9}, {3.6827996977626524`*^9, 
   3.682799871664054*^9}, 3.684240588751419*^9, {3.6925567203667707`*^9, 
   3.6925567263563967`*^9}, {3.6939278990168557`*^9, 3.693927900297058*^9}, {
   3.733505751639255*^9, 3.733505767482089*^9}, {3.734273193273303*^9, 
   3.7342732013998437`*^9}, 3.7361711709929514`*^9, {3.7361713880618267`*^9, 
   3.7361713976194954`*^9}, 3.7361715072849216`*^9},
 CellID->251446915,ExpressionUUID->"e6893447-c0e1-4263-bdbb-35bda3292a71"],

Cell[TextData[{
 "The intersection point of the top operating line, bottom operating line, \
and feed line ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["x", "int"], ",", 
     SubscriptBox["y", "int"]}], ")"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"44c6967d-cdd7-4f17-8b88-8efc36ded3c4"],
 " can be calculated:"
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.681584244382209*^9}, {
   3.68165556187547*^9, 3.6816555810349073`*^9}, 3.6827990733635483`*^9, {
   3.682799568245634*^9, 3.682799633360694*^9}, {3.6827996977626524`*^9, 
   3.6828000315514946`*^9}, {3.6840723035832105`*^9, 3.68407231916284*^9}, {
   3.6840731130768075`*^9, 3.6840731893141804`*^9}, {3.68407341784453*^9, 
   3.684073419375333*^9}, {3.684240598889564*^9, 3.684240605639069*^9}, 
   3.6842666604852467`*^9, {3.6844964772022753`*^9, 3.684496477314076*^9}, {
   3.6925567352462444`*^9, 3.6925567598685665`*^9}, {3.734273222569255*^9, 
   3.734273287641297*^9}, {3.7348041875206413`*^9, 3.734804216078664*^9}},
 CellID->579065947,ExpressionUUID->"d2e48714-dec3-4a4f-b6c2-1ef71a68222a"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "int"], "=", 
    FractionBox[
     RowBox[{
      RowBox[{
       SubscriptBox["x", 
        StyleBox["D",
         FontSlant->"Plain"]], " ", 
       RowBox[{"(", 
        RowBox[{"q", "-", "1"}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox["z", 
        StyleBox["F",
         FontSlant->"Plain"]], " ", 
       RowBox[{"(", 
        RowBox[{"R", "+", "1"}], ")"}]}]}], 
     RowBox[{"q", "+", "R"}]]}], TraditionalForm]], "InlineMath",
  FontSize->14,ExpressionUUID->"a2f4d166-2968-43fa-8278-5f5ef243523b"],
 StyleBox[",",
  FontSize->14]
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.681584244382209*^9}, {
   3.68165556187547*^9, 3.6816555810349073`*^9}, 3.6827990733635483`*^9, {
   3.682799568245634*^9, 3.682799633360694*^9}, {3.6827996977626524`*^9, 
   3.6828000315514946`*^9}, {3.6840723035832105`*^9, 3.68407231916284*^9}, {
   3.6840731130768075`*^9, 3.684073229331272*^9}, {3.692556767355196*^9, 
   3.6925567676359963`*^9}, {3.694456020639531*^9, 3.694456020639531*^9}},
 CellID->17178618,ExpressionUUID->"9c6695fd-a92f-4542-b5a3-c2f7a0abd2ed"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["y", "int"], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["y", 
       StyleBox["F",
        FontSlant->"Plain"]], "(", 
      SubscriptBox["x", "int"], ")"}], "=", 
     RowBox[{
      SubscriptBox["y", 
       StyleBox["R",
        FontSlant->"Plain"]], "(", 
      SubscriptBox["x", "int"], ")"}]}]}], TraditionalForm]], "InlineMath",
  FontSize->14,ExpressionUUID->"66f242dd-8fa1-47f1-8a3b-9a2f4566536b"],
 StyleBox[",",
  FontSize->14]
}], "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.681584244382209*^9}, {
   3.68165556187547*^9, 3.6816555810349073`*^9}, 3.6827990733635483`*^9, {
   3.682799568245634*^9, 3.682799633360694*^9}, {3.6827996977626524`*^9, 
   3.6828000315514946`*^9}, {3.6840723035832105`*^9, 3.68407231916284*^9}, {
   3.6840731130768075`*^9, 3.6840734255891438`*^9}, {3.692556790956917*^9, 
   3.6925568108134155`*^9}, {3.7342735654024954`*^9, 3.734273568965562*^9}, 
   3.7361711689244704`*^9, {3.7361714133347054`*^9, 3.7361714176352077`*^9}},
 CellID->48127637,ExpressionUUID->"202d31cb-35da-40d4-bfab-c9eff41eebb0"],

Cell["\<\
2. The number of stages is determined by \"stair stepping\" along the \
operating line, using the equilibrium line to determine the composition at \
each equilibrium stage. One can \"stair step\" from the bottom (reboiler \
stage) to the top (condenser stage) or from the top (condenser stage) to the \
bottom (reboiler stage). In this Demonstration, stairs are drawn from the \
top-down.\
\>", "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.681584244382209*^9}, {
   3.68165556187547*^9, 3.6816555810349073`*^9}, 3.6827990733635483`*^9, {
   3.682799568245634*^9, 3.682799633360694*^9}, {3.6827996977626524`*^9, 
   3.6828000315514946`*^9}, {3.6840723035832105`*^9, 3.68407231916284*^9}, {
   3.6840731130768075`*^9, 3.6840734255891438`*^9}, {3.692556790956917*^9, 
   3.6925568108134155`*^9}, {3.7342735654024954`*^9, 
   3.7342737098317013`*^9}, {3.7348042869018335`*^9, 3.734804287487911*^9}, 
   3.736171167177108*^9, {3.7361714253267293`*^9, 3.73617145166216*^9}},
 CellID->145595665,ExpressionUUID->"91b72c6b-3daa-42a2-b459-4779fe774286"],

Cell["\<\
3. The location of the feed stream is determined using the now \
fully-specified graph. Locate the equilibrium stage that transitions from the \
top operating line to the bottom operating line. This is the stage where the \
feed stream must be put in order to get the specified distillate and bottoms \
compositions and flow rates.\
\>", "DetailNotes",
 CellChangeTimes->{{3.681583763492934*^9, 3.6815837770741696`*^9}, {
   3.681583821108074*^9, 3.681583838668726*^9}, {3.681583873968316*^9, 
   3.681584029688101*^9}, {3.6815840851456337`*^9, 3.681584244382209*^9}, {
   3.68165556187547*^9, 3.6816555810349073`*^9}, 3.6827990733635483`*^9, {
   3.682799568245634*^9, 3.682799633360694*^9}, {3.6827996977626524`*^9, 
   3.6828000315514946`*^9}, {3.6840723035832105`*^9, 3.68407231916284*^9}, {
   3.6840731130768075`*^9, 3.6840734255891438`*^9}, {3.692556790956917*^9, 
   3.6925568108134155`*^9}, {3.7342735654024954`*^9, 3.734273711696948*^9}, {
   3.734273762750698*^9, 3.7342739170162153`*^9}, 3.7361711763057003`*^9, {
   3.7361714613772917`*^9, 3.736171464611354*^9}},
 CellID->1043024316,ExpressionUUID->"e541ddf4-76e7-414e-b4ba-a82a4b6d1c1a"],

Cell["\<\
View the screencast videos at [1] and [2] for a step-by-step explanation of \
the McCabe\[Dash]Thiele method.\
\>", "DetailNotes",
 CellChangeTimes->{{3.6815848382518215`*^9, 3.6815849073777747`*^9}, {
  3.681655831996743*^9, 3.681655831996743*^9}, {3.684240647646414*^9, 
  3.684240647824456*^9}},
 CellID->566652879,ExpressionUUID->"7c4b7f26-ee84-49b4-ad65-138b2c5a8b65"],

Cell["References", "DetailNotes",
 CellChangeTimes->{{3.6815848382518215`*^9, 3.6815849073777747`*^9}, {
  3.681655831996743*^9, 3.681655834169548*^9}},
 CellID->122990324,ExpressionUUID->"385d69fe-dafb-4b96-981d-20c1813b078a"],

Cell[TextData[{
 "[1] ",
 StyleBox["McCabe\[Dash]Thiele Graphical Method Example Part 1",
  FontSlant->"Italic"],
 " [Video]. (Mar 6, 2014) ",
 ButtonBox["www.youtube.com/watch?v=Cv4KjY2BJTA",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.youtube.com/watch?v=Cv4KjY2BJTA"], None},
  ButtonNote->"https://www.youtube.com/watch?v=Cv4KjY2BJTA"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.681584915459237*^9, 3.6815849172683406`*^9}, {
  3.681584978673853*^9, 3.6815850242984624`*^9}, {3.68424066059481*^9, 
  3.684240660796167*^9}},
 CellID->91303191,ExpressionUUID->"73e793bc-4676-4e58-82b2-b3b728c570ce"],

Cell[TextData[{
 "[2] ",
 StyleBox["McCabe-Thiele Graphical Method Example Part 2",
  FontSlant->"Italic"],
 " [Video]. (Mar 6, 2014) ",
 ButtonBox["www.youtube.com/watch?v=eIJk5uXmBRc",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.youtube.com/watch?v=eIJk5uXmBRc"], None},
  ButtonNote->"https://www.youtube.com/watch?v=eIJk5uXmBRc"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.6815850442426033`*^9, 3.6815850813847275`*^9}},
 CellID->882520694,ExpressionUUID->"e7515b0d-e6e9-4768-b2bd-8b18959d2989"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection",ExpressionUUID->"cda23dd6-7a6f-4b28-a54e-f2e49d99438f"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Resize Images",ExpressionUUID->"cb233d8f-efba-4b1a-9711-27c2645861d8"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.736602903711266*^9},
 FontFamily->"Verdana",
 CellTags->
  "ResizeImages",ExpressionUUID->"0bdf0d86-c2d0-4027-949d-d6b3eae6a00a"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Rotate and Zoom in 3D",ExpressionUUID->
    "782d3983-46b1-4ab3-80a4-48e75ca5c0fc"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "RotateAndZoomIn3D",ExpressionUUID->"518e6556-a495-44a4-821c-e74e44efbb37"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Drag Locators",ExpressionUUID->"e0fac17a-0136-4c0e-8732-5bc881e2db5b"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.733505886102309*^9},
 FontFamily->"Verdana",
 CellTags->
  "DragLocators",ExpressionUUID->"cccb5dbb-cec3-4cb7-b957-5430e6df309f"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Create and Delete Locators",ExpressionUUID->
    "91fb187f-aba1-4a77-9f18-b302ba48f644"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "CreateAndDeleteLocators",ExpressionUUID->"952b693e-9105-42d4-b740-\
5dd730ff17ad"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Slider Zoom",ExpressionUUID->"d9ba9a32-88a7-4507-9ff9-cc175a9567f9"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{{3.736171487455345*^9, 3.736171487656389*^9}},
 FontFamily->"Verdana",
 CellTags->
  "SliderZoom",ExpressionUUID->"43f7774b-15cc-4a03-b916-8c94ae082aa4"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Gamepad Controls",ExpressionUUID->
    "734f5835-c58d-4d76-8143-ee57d230d1ff"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{
  3.35696210375764*^9, 3.3895522232313623`*^9, {3.7361714882736816`*^9, 
   3.7361714884843493`*^9}},
 FontFamily->"Verdana",
 CellTags->
  "GamepadControls",ExpressionUUID->"c0ee2032-4052-43d6-83d0-241d7ff12616"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Automatic Animation",ExpressionUUID->
    "c3ca3286-bfad-4b8a-b36d-650d024ab97d"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{{3.7361714892152805`*^9, 3.7361714894029875`*^9}},
 FontFamily->"Verdana",
 CellTags->
  "AutomaticAnimation",ExpressionUUID->"2a187a6e-e5df-4884-ac67-b7c605cafe34"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Bookmark Animation",ExpressionUUID->
    "fb3fa278-2ab0-434b-bd3d-3f4d2f5107ae"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "BookmarkAnimation",ExpressionUUID->"ab1a9bb3-abff-4315-9f45-8ad5d310ca28"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection",ExpressionUUID->"be0675b7-c1c6-46ea-8890-aae5da3cbfa3"],

Cell["distillation", "SearchTerms",
 CellChangeTimes->{{3.6764858546888638`*^9, 3.676485855389348*^9}, {
   3.679655477543532*^9, 3.679655478133607*^9}, 3.682693293771456*^9},
 CellID->881704250,ExpressionUUID->"cbb130ce-62b9-430c-bac7-73bf0e2e49f8"],

Cell["separations", "SearchTerms",
 CellChangeTimes->{{3.676485858442082*^9, 3.6764858593483553`*^9}, {
   3.6796554571590257`*^9, 3.6796554813905163`*^9}, 3.6816558439969664`*^9, 
   3.6826932767378488`*^9},
 CellID->1806955628,ExpressionUUID->"e05da383-e1d0-49ec-85ba-448a85d95b03"],

Cell["chemical engineering", "SearchTerms",
 CellChangeTimes->{{3.676485858442082*^9, 3.6764858593483553`*^9}, {
  3.6796554571590257`*^9, 3.679655488168081*^9}},
 CellID->274039471,ExpressionUUID->"aa65dd2a-4cf0-4461-a21a-cb9f457556f6"],

Cell["phase equilibrium", "SearchTerms",
 CellChangeTimes->{{3.676485858442082*^9, 3.6764858593483553`*^9}, {
  3.6796554571590257`*^9, 3.679655492205284*^9}},
 CellID->256725449,ExpressionUUID->"38fc022d-08a9-4bf6-a545-92852b784906"],

Cell["distillation column", "SearchTerms",
 CellChangeTimes->{{3.681655846446171*^9, 3.6816558515191793`*^9}},
 CellID->219566529,ExpressionUUID->"fdc49287-3622-41bb-8452-fb705dd33153"],

Cell["thermodynamics", "SearchTerms",
 CellChangeTimes->{{3.681655846446171*^9, 3.681655856263588*^9}},
 CellID->654425661,ExpressionUUID->"31900ce2-547a-4355-9287-c1d7311e121b"],

Cell["equilibrium", "SearchTerms",
 CellChangeTimes->{{3.681655846446171*^9, 3.6816558684154105`*^9}},
 CellID->106196522,ExpressionUUID->"4ce4b0ec-6016-4c06-a4bc-ef761cd9c1ad"],

Cell["binary mixture", "SearchTerms",
 CellChangeTimes->{{3.7335059290695744`*^9, 3.733505933136119*^9}, {
  3.733566592150038*^9, 3.733566592821876*^9}},
 CellID->1123609365,ExpressionUUID->"0ced6ef8-160d-4e02-9ba9-5337fccfa013"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection",ExpressionUUID->"fb180578-ab97-4d98-9b3f-877b41e97503"],

Cell[TextData[ButtonBox["McCabe & Thiele Graphical Method",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/McCabeThieleGraphicalMethod/"], 
   None},
 ButtonNote->
  "http://demonstrations.wolfram.com/McCabeThieleGraphicalMethod/"]], \
"RelatedLinks",
 CellChangeTimes->{{3.733601313207491*^9, 3.733601313207491*^9}},
 CellID->1410773545,ExpressionUUID->"5af4c41c-9401-4274-b4cb-9cde6c3f55e9"],

Cell[TextData[ButtonBox["Apply the Hunter-Nash Method to Liquid-Liquid \
Extraction",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/\
ApplyTheHunterNashMethodToLiquidLiquidExtraction/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/\
ApplyTheHunterNashMethodToLiquidLiquidExtraction/"]], "RelatedLinks",
 CellChangeTimes->{{3.7336014771899114`*^9, 3.7336015063244495`*^9}},
 CellID->4611496,ExpressionUUID->"54a4ae18-7c41-4ea8-9770-eca973b59866"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection",ExpressionUUID->"cdf398f1-5276-47e4-8b9e-0cea7346abda"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Neil Hendren",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Neil+Hendren"], 
    None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Neil+Hendren"],
 " and ",
 ButtonBox["Rachael L. Baumann",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Rachael+L.+\
Baumann"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Rachael+L.+Baumann"]
}], "Author",
 CellChangeTimes->{{3.733505947654351*^9, 
  3.73350597612237*^9}},ExpressionUUID->"d88fbebe-6f6b-4694-8af3-\
b358a1ef3e67"],

Cell[TextData[{
 "Additional contributions by: ",
 ButtonBox["John L. Falconer",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=John+L.+\
Falconer"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=John+L.+Falconer"]
}], "Author",
 CellChangeTimes->{{3.733505947654351*^9, 3.733505986171401*^9}, {
  3.7336013093162875`*^9, 3.7336013096757164`*^9}},
 CellID->138606341,ExpressionUUID->"ea4ec49f-5ff6-4286-b62a-b39290ae7fb4"],

Cell["\<\
(University of Colorado Boulder, Department of Chemical and Biological \
Engineering)\
\>", "Author",
 CellChangeTimes->{{3.733505947654351*^9, 3.733505985156395*^9}},
 CellID->943000160,ExpressionUUID->"4c39b6ae-7a20-46b2-ad1e-f83438cabfe4"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[897788, 19642, 470, 11, 22, "ControlSuggestions",ExpressionUUID->"0bdf0d86-c2d0-4027-949d-d6b3eae6a00a",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[898261, 19655, 800, 19, 22, "ControlSuggestions",ExpressionUUID->"518e6556-a495-44a4-821c-e74e44efbb37",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[899064, 19676, 498, 14, 22, "ControlSuggestions",ExpressionUUID->"cccb5dbb-cec3-4cb7-b957-5430e6df309f",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[899565, 19692, 761, 19, 22, "ControlSuggestions",ExpressionUUID->"952b693e-9105-42d4-b740-5dd730ff17ad",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[900329, 19713, 1026, 24, 22, "ControlSuggestions",ExpressionUUID->"43f7774b-15cc-4a03-b916-8c94ae082aa4",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[901358, 19739, 547, 14, 22, "ControlSuggestions",ExpressionUUID->"c0ee2032-4052-43d6-83d0-241d7ff12616",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[901908, 19755, 1655, 35, 22, "ControlSuggestions",ExpressionUUID->"2a187a6e-e5df-4884-ac67-b7c605cafe34",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[903566, 19792, 1030, 24, 22, "ControlSuggestions",ExpressionUUID->"ab1a9bb3-abff-4315-9f45-8ad5d310ca28",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 909547, 19950},
 {"RotateAndZoomIn3D", 909714, 19953},
 {"DragLocators", 909881, 19956},
 {"CreateAndDeleteLocators", 910054, 19959},
 {"SliderZoom", 910225, 19962},
 {"GamepadControls", 910389, 19965},
 {"AutomaticAnimation", 910560, 19968},
 {"BookmarkAnimation", 910734, 19971}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 246, 4, 74, "DemoTitle",ExpressionUUID->"1d81d3bf-6076-4855-8077-1358a6578556"],
Cell[CellGroupData[{
Cell[851, 30, 88, 0, 275, "InitializationSection",ExpressionUUID->"8ce6550c-828f-4d6e-839a-e1e433f8fd3d"],
Cell[942, 32, 714, 16, 27, "Input",ExpressionUUID->"8ca5c09f-98ab-402f-9e14-32b98d5b0636",
 InitializationCell->True,
 CellID->45851877],
Cell[1659, 50, 749, 17, 27, "Input",ExpressionUUID->"012da6ae-7b68-480e-abc5-95e74aec2128",
 InitializationCell->True,
 CellID->5357600],
Cell[2411, 69, 573, 14, 27, "Input",ExpressionUUID->"3837b801-6793-4d89-bdcf-44db8b88cd08",
 InitializationCell->True,
 CellID->424262759]
}, Closed]],
Cell[CellGroupData[{
Cell[3021, 88, 84, 0, 189, "ManipulateSection",ExpressionUUID->"76b1817c-99e6-4ca4-adf5-b90083842c77"],
Cell[CellGroupData[{
Cell[3130, 92, 296517, 6543, 13697, "Input",ExpressionUUID->"40bcde4e-e41d-4dca-977c-cfca7664b371"],
Cell[299650, 6637, 111885, 2424, 38, "Output",ExpressionUUID->"c163bb6a-ae5f-48fe-b737-46521bc6abc9",
 CellID->621665024]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[411584, 9067, 91, 0, 169, "ManipulateCaptionSection",ExpressionUUID->"77f531f1-ff01-4186-8cc6-9d556871f6a4"],
Cell[411678, 9069, 815, 12, 52, "ManipulateCaption",ExpressionUUID->"aa44178b-5408-43cc-948b-fa333c9214dc",
 CellID->679420478]
}, Open  ]],
Cell[CellGroupData[{
Cell[412530, 9086, 83, 0, 172, "ThumbnailSection",ExpressionUUID->"3314508f-b885-46cf-bd1b-cbd4848bbd04"],
Cell[412616, 9088, 112080, 2427, 38, "Output",ExpressionUUID->"bdd39db6-4bbd-40ad-b8f0-e9ff5c710505",
 CellID->32784436]
}, Open  ]],
Cell[CellGroupData[{
Cell[524733, 11520, 83, 0, 142, "SnapshotsSection",ExpressionUUID->"5dfd097e-9056-4586-ac2a-cd3c15e42dd1"],
Cell[524819, 11522, 112114, 2428, 38, "Output",ExpressionUUID->"cdd54be5-3f71-4633-ae0b-195010686b15",
 CellID->11386798],
Cell[636936, 13952, 112105, 2428, 38, "Output",ExpressionUUID->"0780ad88-ac9b-4715-8e2c-80a0c0b53bd1",
 CellID->127768073],
Cell[749044, 16382, 112127, 2429, 38, "Output",ExpressionUUID->"a57bd747-c520-421c-a899-b2ce212d0a25",
 CellID->759341582]
}, Open  ]],
Cell[CellGroupData[{
Cell[861208, 18816, 81, 0, 339, "DetailsSection",ExpressionUUID->"9259d289-b1b8-4355-bfe7-9950428b8b0b"],
Cell[861292, 18818, 845, 12, 37, "DetailNotes",ExpressionUUID->"6f388c87-ba74-4df9-9956-55161df4f782",
 CellID->1224384310],
Cell[862140, 18832, 505, 6, 22, "DetailNotes",ExpressionUUID->"88f38144-1080-463c-8d9f-63fc6efec5f7",
 CellID->2068001857],
Cell[862648, 18840, 2855, 57, 61, "DetailNotes",ExpressionUUID->"21ed616f-45fb-49da-b77e-02115550fa2c",
 CellID->343066307],
Cell[865506, 18899, 1176, 16, 22, "DetailNotes",ExpressionUUID->"5d707e77-a557-470b-be13-ca3dee2a45c2",
 CellID->82520730],
Cell[866685, 18917, 1316, 21, 26, "DetailNotes",ExpressionUUID->"e36f53d2-5a6e-4907-9a9d-abedb071631d",
 CellID->1894578964],
Cell[868004, 18940, 1910, 35, 26, "DetailNotes",ExpressionUUID->"8c96d669-732c-40fa-b978-598c25200843",
 CellID->174106776],
Cell[869917, 18977, 657, 16, 27, "DetailNotes",ExpressionUUID->"fe65c715-a2b1-49f6-9766-cf9fdf2ecd29",
 CellID->372290207],
Cell[870577, 18995, 226, 3, 22, "DetailNotes",ExpressionUUID->"b189975e-3155-4aa2-a222-ed74489c771f",
 CellID->690265751],
Cell[870806, 19000, 525, 8, 22, "DetailNotes",ExpressionUUID->"47e8d5fa-5751-45b8-9ccc-c49361fadc2f",
 CellID->182840712],
Cell[871334, 19010, 836, 21, 26, "DetailNotes",ExpressionUUID->"3feee9e5-4af2-48ed-ad40-c5ba2a8993bd",
 CellID->413106355],
Cell[872173, 19033, 918, 20, 26, "DetailNotes",ExpressionUUID->"521911cb-93e3-420e-a274-81a248c5d4be",
 CellID->417910946],
Cell[873094, 19055, 2342, 59, 42, "DetailNotes",ExpressionUUID->"8dc83d9e-9e53-484b-82bd-ba83e15bfe4e",
 CellID->61356928],
Cell[875439, 19116, 835, 21, 39, "DetailNotes",ExpressionUUID->"58b15bc4-0487-4809-813e-82728e2cc5b4",
 CellID->174539008],
Cell[876277, 19139, 991, 26, 23, "DetailNotes",ExpressionUUID->"93e50291-96e7-48f9-a028-e6d255ac634d",
 CellID->209265553],
Cell[877271, 19167, 799, 14, 23, "DetailNotes",ExpressionUUID->"00837755-c320-48e8-8a22-cb0ee11d85b2",
 CellID->678020050],
Cell[878073, 19183, 1053, 26, 27, "DetailNotes",ExpressionUUID->"42c832a1-fc47-48f6-af45-094e84a72c5b",
 CellID->466517165],
Cell[879129, 19211, 1305, 30, 27, "DetailNotes",ExpressionUUID->"9ae05162-cf35-4b20-9152-46acaced4d39",
 CellID->248628401],
Cell[880437, 19243, 1300, 25, 23, "DetailNotes",ExpressionUUID->"19d58939-a75a-44bc-9a0a-cf969d17adf8",
 CellID->214837423],
Cell[881740, 19270, 736, 10, 22, "DetailNotes",ExpressionUUID->"f5171ae4-ed3c-4a9b-8e59-a5bdca67adea",
 CellID->211999651],
Cell[882479, 19282, 1511, 30, 55, "DetailNotes",ExpressionUUID->"95eb1bd4-de36-4fe2-ad02-f3a4f5b839e4",
 CellID->62774028],
Cell[883993, 19314, 1093, 29, 37, "DetailNotes",ExpressionUUID->"2052267b-3d6b-4920-8e68-b865b567409b",
 CellID->579574339],
Cell[885089, 19345, 1239, 31, 33, "DetailNotes",ExpressionUUID->"7223a679-7ed9-4b08-9b0b-2717f9373576",
 CellID->489852983],
Cell[886331, 19378, 1345, 34, 39, "DetailNotes",ExpressionUUID->"9954370d-7ec8-4079-8efd-1218dd711b70",
 CellID->543079840],
Cell[887679, 19414, 1951, 46, 55, "DetailNotes",ExpressionUUID->"e6893447-c0e1-4263-bdbb-35bda3292a71",
 CellID->251446915],
Cell[889633, 19462, 1270, 23, 23, "DetailNotes",ExpressionUUID->"d2e48714-dec3-4a4f-b6c2-1ef71a68222a",
 CellID->579065947],
Cell[890906, 19487, 1309, 32, 36, "DetailNotes",ExpressionUUID->"9c6695fd-a92f-4542-b5a3-c2f7a0abd2ed",
 CellID->17178618],
Cell[892218, 19521, 1285, 29, 25, "DetailNotes",ExpressionUUID->"202d31cb-35da-40d4-bfab-c9eff41eebb0",
 CellID->48127637],
Cell[893506, 19552, 1217, 18, 37, "DetailNotes",ExpressionUUID->"91b72c6b-3daa-42a2-b459-4779fe774286",
 CellID->145595665],
Cell[894726, 19572, 1162, 17, 37, "DetailNotes",ExpressionUUID->"e541ddf4-76e7-414e-b4ba-a82a4b6d1c1a",
 CellID->1043024316],
Cell[895891, 19591, 383, 7, 22, "DetailNotes",ExpressionUUID->"7c4b7f26-ee84-49b4-ad65-138b2c5a8b65",
 CellID->566652879],
Cell[896277, 19600, 227, 3, 22, "DetailNotes",ExpressionUUID->"385d69fe-dafb-4b96-981d-20c1813b078a",
 CellID->122990324],
Cell[896507, 19605, 624, 15, 22, "DetailNotes",ExpressionUUID->"73e793bc-4676-4e58-82b2-b3b728c570ce",
 CellID->91303191],
Cell[897134, 19622, 522, 13, 22, "DetailNotes",ExpressionUUID->"e7515b0d-e6e9-4768-b2bd-8b18959d2989",
 CellID->882520694]
}, Open  ]],
Cell[CellGroupData[{
Cell[897693, 19640, 92, 0, 126, "ControlSuggestionsSection",ExpressionUUID->"cda23dd6-7a6f-4b28-a54e-f2e49d99438f"],
Cell[897788, 19642, 470, 11, 22, "ControlSuggestions",ExpressionUUID->"0bdf0d86-c2d0-4027-949d-d6b3eae6a00a",
 CellTags->"ResizeImages"],
Cell[898261, 19655, 800, 19, 22, "ControlSuggestions",ExpressionUUID->"518e6556-a495-44a4-821c-e74e44efbb37",
 CellTags->"RotateAndZoomIn3D"],
Cell[899064, 19676, 498, 14, 22, "ControlSuggestions",ExpressionUUID->"cccb5dbb-cec3-4cb7-b957-5430e6df309f",
 CellTags->"DragLocators"],
Cell[899565, 19692, 761, 19, 22, "ControlSuggestions",ExpressionUUID->"952b693e-9105-42d4-b740-5dd730ff17ad",
 CellTags->"CreateAndDeleteLocators"],
Cell[900329, 19713, 1026, 24, 22, "ControlSuggestions",ExpressionUUID->"43f7774b-15cc-4a03-b916-8c94ae082aa4",
 CellTags->"SliderZoom"],
Cell[901358, 19739, 547, 14, 22, "ControlSuggestions",ExpressionUUID->"c0ee2032-4052-43d6-83d0-241d7ff12616",
 CellTags->"GamepadControls"],
Cell[901908, 19755, 1655, 35, 22, "ControlSuggestions",ExpressionUUID->"2a187a6e-e5df-4884-ac67-b7c605cafe34",
 CellTags->"AutomaticAnimation"],
Cell[903566, 19792, 1030, 24, 22, "ControlSuggestions",ExpressionUUID->"ab1a9bb3-abff-4315-9f45-8ad5d310ca28",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[904633, 19821, 85, 0, 158, "SearchTermsSection",ExpressionUUID->"be0675b7-c1c6-46ea-8890-aae5da3cbfa3"],
Cell[904721, 19823, 250, 3, 22, "SearchTerms",ExpressionUUID->"cbb130ce-62b9-430c-bac7-73bf0e2e49f8",
 CellID->881704250],
Cell[904974, 19828, 284, 4, 22, "SearchTerms",ExpressionUUID->"e05da383-e1d0-49ec-85ba-448a85d95b03",
 CellID->1806955628],
Cell[905261, 19834, 237, 3, 22, "SearchTerms",ExpressionUUID->"aa65dd2a-4cf0-4461-a21a-cb9f457556f6",
 CellID->274039471],
Cell[905501, 19839, 234, 3, 22, "SearchTerms",ExpressionUUID->"38fc022d-08a9-4bf6-a545-92852b784906",
 CellID->256725449],
Cell[905738, 19844, 185, 2, 22, "SearchTerms",ExpressionUUID->"fdc49287-3622-41bb-8452-fb705dd33153",
 CellID->219566529],
Cell[905926, 19848, 178, 2, 22, "SearchTerms",ExpressionUUID->"31900ce2-547a-4355-9287-c1d7311e121b",
 CellID->654425661],
Cell[906107, 19852, 177, 2, 22, "SearchTerms",ExpressionUUID->"4ce4b0ec-6016-4c06-a4bc-ef761cd9c1ad",
 CellID->106196522],
Cell[906287, 19856, 230, 3, 22, "SearchTerms",ExpressionUUID->"0ced6ef8-160d-4e02-9ba9-5337fccfa013",
 CellID->1123609365]
}, Open  ]],
Cell[CellGroupData[{
Cell[906554, 19864, 86, 0, 143, "RelatedLinksSection",ExpressionUUID->"fb180578-ab97-4d98-9b3f-877b41e97503"],
Cell[906643, 19866, 428, 9, 22, "RelatedLinks",ExpressionUUID->"5af4c41c-9401-4274-b4cb-9cde6c3f55e9",
 CellID->1410773545],
Cell[907074, 19877, 495, 10, 22, "RelatedLinks",ExpressionUUID->"54a4ae18-7c41-4ea8-9770-eca973b59866",
 CellID->4611496]
}, Open  ]],
Cell[CellGroupData[{
Cell[907606, 19892, 80, 0, 141, "AuthorSection",ExpressionUUID->"cdf398f1-5276-47e4-8b9e-0cea7346abda"],
Cell[907689, 19894, 693, 20, 22, "Author",ExpressionUUID->"d88fbebe-6f6b-4694-8af3-b358a1ef3e67"],
Cell[908385, 19916, 512, 12, 22, "Author",ExpressionUUID->"ea4ec49f-5ff6-4286-b62a-b39290ae7fb4",
 CellID->138606341],
Cell[908900, 19930, 252, 5, 22, "Author",ExpressionUUID->"4c39b6ae-7a20-46b2-ad1e-f83438cabfe4",
 CellID->943000160]
}, Open  ]]
}, Open  ]]
}
]
*)

