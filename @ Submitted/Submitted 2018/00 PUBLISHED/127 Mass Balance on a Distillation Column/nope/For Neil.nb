(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     16772,        413]
NotebookOptionsPosition[     16122,        393]
NotebookOutlinePosition[     16465,        408]
CellTagsIndexPosition[     16422,        405]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "unknowns1", ",", "unknowns2", ",", "unknowns", ",", "list", ",", "zF", 
       ",", "feed", ",", "xB", ",", "bottoms", ",", "xD", ",", "distillate", 
       ",", "sol"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SeedRandom", "[", "reset", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"unknowns1", "=", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"{", 
         RowBox[{"zf", ",", "xd", ",", "xb"}], "}"}], "]"}]}], ";", 
      RowBox[{"unknowns2", "=", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"{", 
         RowBox[{"f", ",", "b"}], "}"}], "]"}]}], ";", 
      RowBox[{"unknowns", "=", 
       RowBox[{"{", 
        RowBox[{"unknowns1", ",", "unknowns2"}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"list", "[", "var_", "]"}], ":=", 
       RowBox[{"MemberQ", "[", 
        RowBox[{"unknowns", ",", "var"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "is", " ", "a", " ", "variable", " ", "a", " ", "part", " ", "of", " ",
         "the", " ", "unknowns", " ", "list"}], "*)"}], "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"zF", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"list", "[", "zF", "]"}], ",", "zf", ",", 
         RowBox[{
          RowBox[{"N", "@", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "6"}], "}"}], "]"}]}], "/", "10"}]}], "]"}]}], 
      ";", 
      RowBox[{"feed", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"list", "[", "feed", "]"}], ",", "f", ",", 
         RowBox[{
          RowBox[{"N", "@", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"10", ",", "15"}], "}"}], "]"}]}], "/", "10"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xB", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"list", "[", "xB", "]"}], ",", "xb", ",", 
         RowBox[{
          RowBox[{"N", "@", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"5", ",", "20"}], "}"}], "]"}]}], "/", "100"}]}], 
        "]"}]}], ";", 
      RowBox[{"bottoms", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"list", "[", "bottoms", "]"}], ",", "b", ",", 
         RowBox[{
          RowBox[{"N", "@", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "6"}], "}"}], "]"}]}], "/", "10"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"xD", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"list", "[", "xD", "]"}], ",", "xd", ",", 
         RowBox[{
          RowBox[{"N", "@", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"80", ",", "98"}], "}"}], "]"}]}], "/", "100"}]}], 
        "]"}]}], ";", 
      RowBox[{"distillate", "=", 
       RowBox[{"feed", "-", "bottoms"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"list", "[", "zf", "]"}], ",", "zf", ",", "zF"}], 
                "]"}], "*", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"list", "[", "f", "]"}], ",", "f", ",", "feed"}], 
                "]"}]}], "\[Equal]", 
              RowBox[{
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"list", "[", "xd", "]"}], ",", "xd", ",", "xD"}], 
                 "]"}], "*", "distillate"}], "+", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"list", "[", "xb", "]"}], ",", "xb", ",", "xB"}], 
                 "]"}], "*", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"list", "[", "b", "]"}], ",", "b", ",", "bottoms"}],
                  "]"}]}]}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"list", "[", "f", "]"}], ",", "f", ",", "feed"}], 
               "]"}], "\[Equal]", 
              RowBox[{"distillate", "+", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"list", "[", "b", "]"}], ",", "b", ",", "bottoms"}], 
                "]"}]}]}]}], "\[IndentingNewLine]", "}"}], ",", "unknowns"}], 
          "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"zF", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"list", "[", "zf", "]"}], ",", 
          RowBox[{"zf", "/.", "sol"}], ",", "zF"}], "]"}]}]}], ";", 
      RowBox[{"feed", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"list", "[", "f", "]"}], ",", 
          RowBox[{"f", "/.", "sol"}], ",", "feed"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xB", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"list", "[", "xb", "]"}], ",", 
          RowBox[{"xb", "/.", "sol"}], ",", "xB"}], "]"}]}]}], ";", 
      RowBox[{"bottoms", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"list", "[", "b", "]"}], ",", 
          RowBox[{"b", "/.", "sol"}], ",", "bottoms"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xD", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"list", "[", "xd", "]"}], ",", 
          RowBox[{"xd", "/.", "sol"}], ",", "xD"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Text", "@", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "\"\<unknowns =\>\"", ",", "SpanFromLeft", ",", "unknowns", ",",
                "SpanFromLeft"}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(z\), \(F\)]\) =\>\"", ",", "zF", ",", 
               RowBox[{"Spacer", "@", "15"}], ",", "\"\<F =\>\"", ",", "feed",
                ",", "\"\< kmol/h\>\""}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(x\), \(D\)]\) =\>\"", ",", "xD", ",", 
               RowBox[{"Spacer", "@", "15"}], ",", "\"\<D =\>\"", ",", 
               "distillate", ",", "\"\< kmol/h\>\""}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<\!\(\*SubscriptBox[\(x\), \(B\)]\) =\>\"", ",", "xB", ",", 
               RowBox[{"Spacer", "@", "15"}], ",", "\"\<B =\>\"", ",", 
               "bottoms", ",", "\"\< kmol/h\>\""}], "}"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], ",", "17"}], 
        "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "@", 
    RowBox[{"{", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Button", "[", 
        RowBox[{"\"\< new problem \>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"reset", "<", "1000"}], ",", 
           RowBox[{"reset", "=", 
            RowBox[{"reset", "+", "1"}]}], ",", 
           RowBox[{"reset", "=", 
            RowBox[{"reset", "-", "1"}]}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"reset", ",", "1"}], "}"}], ",", "1", ",", "1000", ",", 
          "1", ",", "None"}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.734183400491827*^9, 3.734183681012167*^9}, {
  3.7341837878127284`*^9, 3.734183791169531*^9}, {3.7341840001441813`*^9, 
  3.734184063410565*^9}},ExpressionUUID->"cbfbcd1d-aed9-471b-abfd-\
9c27da8a24f0"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`reset$$ = 2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`reset$$], 1}, 1, 1000, 1}, {
      Hold[
       Grid[{{
          Button[" new problem ", 
           
           If[$CellContext`reset$$ < 
            1000, $CellContext`reset$$ = $CellContext`reset$$ + 
             1, $CellContext`reset$$ = $CellContext`reset$$ - 1]], 
          Manipulate`Place[1]}}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {252., {42., 49.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`reset$11590$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`reset$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`reset$$, $CellContext`reset$11590$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`unknowns1$, $CellContext`unknowns2$, \
$CellContext`unknowns$, $CellContext`list$, $CellContext`zF$, \
$CellContext`feed$, $CellContext`xB$, $CellContext`bottoms$, \
$CellContext`xD$, $CellContext`distillate$, $CellContext`sol$}, 
        SeedRandom[$CellContext`reset$$]; $CellContext`unknowns1$ = 
         RandomChoice[{$CellContext`zf, $CellContext`xd, $CellContext`xb}]; \
$CellContext`unknowns2$ = 
         RandomChoice[{$CellContext`f, $CellContext`b}]; \
$CellContext`unknowns$ = {$CellContext`unknowns1$, $CellContext`unknowns2$}; \
$CellContext`list$[
           Pattern[$CellContext`var$, 
            Blank[]]] := 
         MemberQ[$CellContext`unknowns$, $CellContext`var$]; $CellContext`zF$ = 
         If[
           $CellContext`list$[$CellContext`zF$], $CellContext`zf, N[
             RandomInteger[{1, 6}]]/10]; $CellContext`feed$ = If[
           $CellContext`list$[$CellContext`feed$], $CellContext`f, N[
             RandomInteger[{10, 15}]]/10]; $CellContext`xB$ = If[
           $CellContext`list$[$CellContext`xB$], $CellContext`xb, N[
             RandomInteger[{5, 20}]]/100]; $CellContext`bottoms$ = If[
           $CellContext`list$[$CellContext`bottoms$], $CellContext`b, N[
             RandomInteger[{1, 6}]]/10]; $CellContext`xD$ = If[
           $CellContext`list$[$CellContext`xD$], $CellContext`xd, N[
             RandomInteger[{80, 98}]]/
           100]; $CellContext`distillate$ = $CellContext`feed$ - \
$CellContext`bottoms$; $CellContext`sol$ = Quiet[
           Part[
            Solve[{If[
                 $CellContext`list$[$CellContext`zf], $CellContext`zf, \
$CellContext`zF$] If[
                 $CellContext`list$[$CellContext`f], $CellContext`f, \
$CellContext`feed$] == If[
                  $CellContext`list$[$CellContext`xd], $CellContext`xd, \
$CellContext`xD$] $CellContext`distillate$ + If[
                  $CellContext`list$[$CellContext`xb], $CellContext`xb, \
$CellContext`xB$] If[
                  $CellContext`list$[$CellContext`b], $CellContext`b, \
$CellContext`bottoms$], If[
                $CellContext`list$[$CellContext`f], $CellContext`f, \
$CellContext`feed$] == $CellContext`distillate$ + If[
                 $CellContext`list$[$CellContext`b], $CellContext`b, \
$CellContext`bottoms$]}, $CellContext`unknowns$], 1]]; $CellContext`zF$ = 
         Quiet[
           If[
            $CellContext`list$[$CellContext`zf], 
            
            ReplaceAll[$CellContext`zf, $CellContext`sol$], \
$CellContext`zF$]]; $CellContext`feed$ = Quiet[
           If[
            $CellContext`list$[$CellContext`f], 
            
            ReplaceAll[$CellContext`f, $CellContext`sol$], \
$CellContext`feed$]]; $CellContext`xB$ = Quiet[
           If[
            $CellContext`list$[$CellContext`xb], 
            
            ReplaceAll[$CellContext`xb, $CellContext`sol$], \
$CellContext`xB$]]; $CellContext`bottoms$ = Quiet[
           If[
            $CellContext`list$[$CellContext`b], 
            
            ReplaceAll[$CellContext`b, $CellContext`sol$], \
$CellContext`bottoms$]]; $CellContext`xD$ = Quiet[
           If[
            $CellContext`list$[$CellContext`xd], 
            
            ReplaceAll[$CellContext`xd, $CellContext`sol$], \
$CellContext`xD$]]; Text[
          Style[
           
           Grid[{{"unknowns =", SpanFromLeft, $CellContext`unknowns$, 
              SpanFromLeft}, {
             "\!\(\*SubscriptBox[\(z\), \(F\)]\) =", $CellContext`zF$, 
              Spacer[15], "F =", $CellContext`feed$, " kmol/h"}, {
             "\!\(\*SubscriptBox[\(x\), \(D\)]\) =", $CellContext`xD$, 
              Spacer[15], "D =", $CellContext`distillate$, " kmol/h"}, {
             "\!\(\*SubscriptBox[\(x\), \(B\)]\) =", $CellContext`xB$, 
              Spacer[15], "B =", $CellContext`bottoms$, " kmol/h"}}, 
            Alignment -> Left], 17]]], 
      "Specifications" :> {{{$CellContext`reset$$, 1}, 1, 1000, 1, 
         ControlType -> None, ControlPlacement -> 1}, 
        Grid[{{
           Button[" new problem ", 
            
            If[$CellContext`reset$$ < 
             1000, $CellContext`reset$$ = $CellContext`reset$$ + 
              1, $CellContext`reset$$ = $CellContext`reset$$ - 1]], 
           Manipulate`Place[1]}}]}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{303., {91., 97.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.734183476840293*^9, 3.734183577716937*^9, {3.734183652936857*^9, 
   3.734183681574723*^9}, 3.734183791751861*^9, {3.734184011537162*^9, 
   3.734184027797494*^9}},
 CellLabel->"Out[23]=",ExpressionUUID->"f80befbc-81a1-4c97-a55c-1100213ef1e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.2", "*", "1.2"}], ",", 
   RowBox[{"0.9", "*", "0.6"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.734183869250636*^9, 3.734183877133919*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"4f7f52f1-dfe3-4e3d-9985-44aa60706cd2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.24`", ",", "0.54`"}], "}"}]], "Output",
 CellChangeTimes->{3.734183877643571*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"743f0f0b-e7ba-4639-8fe6-9e89294d624a"]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 8688, 218, 618, "Input",ExpressionUUID->"cbfbcd1d-aed9-471b-abfd-9c27da8a24f0"],
Cell[9271, 242, 6320, 131, 207, "Output",ExpressionUUID->"f80befbc-81a1-4c97-a55c-1100213ef1e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15628, 378, 273, 6, 28, "Input",ExpressionUUID->"4f7f52f1-dfe3-4e3d-9985-44aa60706cd2"],
Cell[15904, 386, 202, 4, 32, "Output",ExpressionUUID->"743f0f0b-e7ba-4639-8fe6-9e89294d624a"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

