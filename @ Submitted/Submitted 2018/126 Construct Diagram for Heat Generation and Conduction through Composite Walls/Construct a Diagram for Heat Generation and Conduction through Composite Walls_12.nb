(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    673799,      12728]
NotebookOptionsPosition[    662234,      12510]
NotebookOutlinePosition[    664307,      12560]
CellTagsIndexPosition[    663963,      12548]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Identify Temperature Profiles for Heat Generation/Conduction through \
Composite Walls\
\>", "DemoTitle",
 CellChangeTimes->{
  3.739889977958769*^9, {3.74147277298117*^9, 3.7414727909138517`*^9}, {
   3.748778511800126*^9, 
   3.7487785137049494`*^9}},ExpressionUUID->"94eb3805-c037-44a8-a460-\
3e1728052e61"],

Cell["", "InitializationSection",ExpressionUUID->"bccee37e-7439-4545-9aee-18c1e59279af"],

Cell[CellGroupData[{

Cell["", "ManipulateSection",ExpressionUUID->"f4901b0b-9f12-4aa9-8a9a-96570bcd32ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "wall", ",", "kA", ",", "kB", ",", "kC", ",", "Qdot", ",", "Rtc", ",", 
       "T\[Infinity]", ",", "h", ",", "qflux", ",", "sol", ",", "T", ",", 
       "Ts1", ",", "Ts2", ",", "Ts3", ",", "Ts4", ",", "Ts5", ",", "Ts6", ",",
        "TProfile", ",", "TA", ",", "TB", ",", "TC", ",", "T1", ",", "T2", 
       ",", "colA", ",", "colB", ",", "colC", ",", "colS", ",", "colAns", ",",
        "pt", ",", "list", ",", "label", ",", "plotlabel"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SeedRandom", "[", "reset", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"wall", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"kA", "=", 
       RowBox[{"RandomChoice", "@", 
        RowBox[{"Range", "[", 
         RowBox[{"0.26", ",", "0.3", ",", "0.01"}], "]"}]}]}], ";", 
      RowBox[{"kB", "=", 
       RowBox[{"RandomChoice", "@", 
        RowBox[{"Range", "[", 
         RowBox[{"0.12", ",", "0.13", ",", "0.01"}], "]"}]}]}], ";", 
      RowBox[{"kC", "=", 
       RowBox[{"RandomChoice", "@", 
        RowBox[{"Range", "[", 
         RowBox[{"0.13", ",", "0.18", ",", "0.01"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LA", "=", "0.026"}], ";", 
      RowBox[{"LB", "=", "0.026"}], ";", 
      RowBox[{"LC", "=", "0.026"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Qdot", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"wall", "\[Equal]", "1"}], ",", "10", ",", "14"}], "]"}]}], 
      ";", 
      RowBox[{"(*", 
       RowBox[{"kW", "/", "m3"}], "*)"}], 
      RowBox[{"Rtc", "=", "0.08"}], ";", 
      RowBox[{"(*", 
       RowBox[{"m2", " ", 
        RowBox[{"K", "/", "W"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"T\[Infinity]", "=", "20"}], ";", 
      RowBox[{"(*", "\[Degree]C", "*)"}], 
      RowBox[{"h", "=", "10"}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"W", "/", "m2"}], "/", "K"}], "*)"}], 
      RowBox[{"qflux", "=", 
       RowBox[{"1000", "*", "Qdot", "*", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"wall", "\[Equal]", "1"}], ",", "LA", ",", "LB"}], 
         "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"kW", "/", "m2"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{
        RowBox[{"DSolve", "[", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"t", "''"}], "[", "z", "]"}], "\[Equal]", 
             RowBox[{
              RowBox[{"-", "1000"}], "*", 
              RowBox[{"Qdot", "/", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"wall", "\[Equal]", "1"}], ",", "kA", ",", "kB"}], 
                "]"}]}]}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"t", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"wall", "\[Equal]", "1"}], ",", "LA", ",", 
                RowBox[{"LA", "+", "LB"}]}], "]"}], "]"}], "\[Equal]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"wall", "\[Equal]", "1"}], ",", "Ts5", ",", "Ts3"}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"t", "'"}], "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"wall", "\[Equal]", "1"}], ",", "0", ",", "LA"}], 
               "]"}], "]"}], "\[Equal]", "0"}]}], "\[IndentingNewLine]", 
           "}"}], ",", 
          RowBox[{"t", "[", "z", "]"}], ",", "z"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"T", "[", "x_", "]"}], ":=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"t", "[", "z", "]"}], "/.", "sol"}], ")"}], "/.", 
        RowBox[{"z", "\[Rule]", "x"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Ts1", "=", 
       RowBox[{"T\[Infinity]", "+", 
        RowBox[{"qflux", "/", "h"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ts2", "=", 
       RowBox[{"Ts1", "+", 
        RowBox[{"qflux", "*", 
         RowBox[{"LC", "/", "kC"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ts3", "=", 
       RowBox[{"Ts2", "+", 
        RowBox[{"qflux", "*", "Rtc"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ts4", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"wall", "\[Equal]", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1000", "*", "LA"}], ",", 
           RowBox[{"Ts3", "+", 
            RowBox[{"qflux", "*", 
             RowBox[{"LB", "/", "kB"}]}]}]}], "}"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"n", ",", 
             RowBox[{"T", "[", 
              RowBox[{"n", "/", "1000"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", 
             RowBox[{"LA", "*", "1000"}], ",", 
             RowBox[{"1000", "*", 
              RowBox[{"(", 
               RowBox[{"LA", "+", "LB"}], ")"}]}], ",", "1"}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ts5", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"wall", "\[Equal]", "1"}], ",", 
         RowBox[{
          RowBox[{"Ts4", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", 
          RowBox[{"qflux", "*", "Rtc"}]}], ",", 
         RowBox[{"T", "[", "LA", "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ts6", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"wall", "\[Equal]", "1"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"n", ",", 
             RowBox[{"T", "[", 
              RowBox[{"n", "/", "1000"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "0", ",", 
             RowBox[{"LA", "*", "1000"}], ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"T", "[", "LA", "]"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"TProfile", "=", 
       RowBox[{"Level", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Ts6", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1000", "*", "LA"}], ",", "Ts5"}], "}"}], ",", "Ts4", 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1000", "*", 
              RowBox[{"(", 
               RowBox[{"LA", "+", "LB"}], ")"}]}], ",", "Ts3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1000", "*", 
              RowBox[{"(", 
               RowBox[{"LA", "+", "LB"}], ")"}]}], ",", "Ts2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1000", "*", 
              RowBox[{"(", 
               RowBox[{"LA", "+", "LB", "+", "LC"}], ")"}]}], ",", "Ts1"}], 
            "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"-", "2"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"TA", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"wall", "\[Equal]", "1"}], ",", "Ts6", ",", 
           RowBox[{"{", "Ts6", "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1000", "*", "LA"}], ",", "Ts5"}], "}"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"TB", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"wall", "\[Equal]", "1"}], ",", 
           RowBox[{"{", "Ts4", "}"}], ",", "Ts4"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1000", "*", 
             RowBox[{"(", 
              RowBox[{"LA", "+", "LB"}], ")"}]}], ",", "Ts3"}], "}"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"TC", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1000", "*", 
            RowBox[{"(", 
             RowBox[{"LA", "+", "LB"}], ")"}]}], ",", "Ts2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1000", "*", 
            RowBox[{"(", 
             RowBox[{"LA", "+", "LB", "+", "LC"}], ")"}]}], ",", "Ts1"}], 
          "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"T1", "=", 
       RowBox[{"-", "5"}]}], ";", 
      RowBox[{"T2", "=", "275"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"colA", "=", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.25", ",", "0.8", ",", "0.9"}], "]"}]}], ";", 
      RowBox[{"colB", "=", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.45", ",", "0.9", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"colC", "=", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0.95", ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"colS", "=", "Purple"}], ";", 
      RowBox[{"colAns", "=", 
       RowBox[{"Opacity", "[", 
        RowBox[{"0.5", ",", "colS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pt", "[", 
        RowBox[{"point_", ",", "col_"}], "]"}], ":=", 
       RowBox[{"{", 
        RowBox[{"col", ",", 
         RowBox[{"PointSize", "@", "0.025"}], ",", 
         RowBox[{"Point", "@", "point"}], ",", "White", ",", 
         RowBox[{"PointSize", "@", "0.015"}], ",", 
         RowBox[{"Point", "@", "point"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"list", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"CS", "\[Equal]", "3"}], ",", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"{", 
           RowBox[{
           "\"\< A \>\"", ",", "\"\< B \>\"", ",", "\"\< C \>\"", ",", 
            "\"\< D \>\""}], "}"}], "]"}], ",", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"{", 
           RowBox[{
           "\"\< A \>\"", ",", "\"\< B \>\"", ",", "\"\< C \>\"", ",", 
            "\"\< D \>\"", ",", "\"\< E \>\""}], "}"}], "]"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"label", "[", 
        RowBox[{"part_", ",", "color_"}], "]"}], ":=", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"list", "[", 
          RowBox[{"[", "part", "]"}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"list", "[", 
             RowBox[{"[", "part", "]"}], "]"}], "\[Equal]", "answer"}], ",", 
           RowBox[{"{", 
            RowBox[{"20", ",", "Bold"}], "}"}], ",", "17"}], "]"}], ",", 
         "colS", ",", 
         RowBox[{"Background", "\[Rule]", "color"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"plotlabel", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"CS", "\[Equal]", "4"}], ",", 
         RowBox[{"Column", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<Heat generation in wall \>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"wall", "\[Equal]", "1"}], ",", "\"\<A\>\"", ",", 
                 "\"\<B\>\""}], "]"}], ",", "\"\< = \>\"", ",", "Qdot", ",", 
               "\"\< kW/m.\>\""}], "}"}]}], ",", 
            RowBox[{"Row", "@", 
             RowBox[{"{", 
              RowBox[{"\"\<Contact resistance exists between walls \>\"", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"wall", "\[Equal]", "1"}], ",", "\"\<A and B.\>\"", 
                 ",", "\"\<B and C.\>\""}], "]"}]}], "}"}]}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"hint", ",", 
           RowBox[{"Switch", "[", 
            RowBox[{
            "CS", ",", "1", ",", 
             "\"\<There is no heat transfer from the left side\>\"", ",", "2",
              ",", "\"\<\>\"", ",", "3", ",", 
             "\"\<There is convective heat transfer from the right \
side.\>\""}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Column", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Row", "@", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Select the button that shows the correct temperature \
profile for wall \>\"", ",", 
                 RowBox[{"Switch", "[", 
                  RowBox[{
                  "CS", ",", "1", ",", "\"\<A\>\"", ",", "2", ",", 
                   "\"\<B\>\"", ",", "3", ",", "\"\<C\>\""}], "]"}], ",", 
                 "\"\<.\>\""}], "}"}]}], ",", 
              RowBox[{"Row", "@", 
               RowBox[{"{", 
                RowBox[{"\"\<Heat generation in wall \>\"", ",", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"wall", "\[Equal]", "1"}], ",", "\"\<A\>\"", ",", 
                   "\"\<B\>\""}], "]"}], ",", "\"\< = 10 kW/m.\>\"", ",", 
                 RowBox[{"Spacer", "@", "30"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"2", "\[LessEqual]", "CS", "\[LessEqual]", "3"}], 
                   ",", 
                   RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Contact resistance = \>\"", ",", "Rtc", ",", 
                    "\"\< W/[\>\"", ",", 
                    RowBox[{"Superscript", "[", 
                    RowBox[{"\"\<m\>\"", ",", "2"}], "]"}], ",", 
                    "\"\< K].\>\""}], "}"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"wall", "\[Equal]", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"CS", "\[Equal]", "2"}], "\[Or]", 
                    RowBox[{"CS", "\[Equal]", "3"}]}], ",", "#"}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"CS", "\[Equal]", "3"}], ",", "#"}], "]"}]}], 
                    "]"}], "&"}], "@", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<Contact resistance = \>\"", ",", "Rtc", ",", 
                    "\"\< W/[\>\"", ",", 
                    RowBox[{"Superscript", "[", 
                    RowBox[{"\"\<m\>\"", ",", "2"}], "]"}], ",", 
                    "\"\< K].\>\""}], "}"}]}]}], "*)"}], "}"}]}]}], 
             "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Line", "@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "5"}], ",", 
                 RowBox[{"25", "+", "n"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"30", "+", "n"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", 
               RowBox[{"-", "10"}], ",", "235", ",", "15"}], "}"}]}], "]"}]}],
           ",", "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Rotate", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<insulation \>\"", ",", "17", ",", 
                RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
              RowBox[{"90", "\[Degree]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.5"}], ",", "145"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", "Black"}], ",", 
            RowBox[{"FaceForm", "[", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"wall", "==", "1"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Opacity", "[", 
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"0.3", "+", 
                    RowBox[{"0.7", "*", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", "*", 
                    RowBox[{"Clock", "[", 
                    RowBox[{"1", ",", "3"}], "]"}]}], "]"}], "]"}]}]}], "]"}],
                   "]"}], ",", "colA"}], "}"}], ",", "colA"}], "]"}], "]"}], 
            ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "T1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"LA", "*", "1000"}], ",", "T2"}], "}"}]}], "]"}]}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", "Black"}], ",", 
            RowBox[{"FaceForm", "@", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"wall", "\[Equal]", "2"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Opacity", "[", 
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"0.2", "+", 
                    RowBox[{"0.8", "*", 
                    RowBox[{"Abs", "[", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"\[Pi]", "*", 
                    RowBox[{"Clock", "[", 
                    RowBox[{"1", ",", "3"}], "]"}]}], "]"}], "]"}]}]}], "]"}],
                   "]"}], ",", "colB"}], "}"}], ",", "colB"}], "]"}]}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"LA", "*", "1000"}], ",", "T1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1000", "*", 
                 RowBox[{"(", 
                  RowBox[{"LA", "+", "LB"}], ")"}]}], ",", "T2"}], "}"}]}], 
             "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "@", "Black"}], ",", 
            RowBox[{"FaceForm", "@", "colC"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1000", "*", 
                 RowBox[{"(", 
                  RowBox[{"LA", "+", "LB"}], ")"}]}], ",", "T1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1000", "*", 
                 RowBox[{"(", 
                  RowBox[{"LA", "+", "LB", "+", "LC"}], ")"}]}], ",", "T2"}], 
               "}"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Row", "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<k\>\"", ",", "Italic"}], "]"}], ",", "#1"}], 
                    "]"}], ",", "\"\< = \>\"", ",", "#2", ",", 
                   "\"\< W/[m K]\>\""}], "}"}]}], ",", "16"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"#3", ",", 
                RowBox[{"T1", "+", "12"}]}], "}"}]}], "]"}], "&"}], "@@@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<A\>\"", ",", "kA", ",", 
               RowBox[{"500", "*", "LA"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<B\>\"", ",", "kB", ",", 
               RowBox[{
                RowBox[{"1000", "*", "LA"}], "+", 
                RowBox[{"500", "*", "LB"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\"\<C\>\"", ",", "kC", ",", 
               RowBox[{
                RowBox[{"1000", "*", 
                 RowBox[{"(", 
                  RowBox[{"LA", "+", "LB"}], ")"}]}], "+", 
                RowBox[{"500", "*", "LC"}]}]}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Thin", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"T1", "-", "15"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB", "+", "LC"}], ")"}]}], ",", 
                   RowBox[{"T1", "-", "15"}]}], "}"}]}], "}"}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "#"}], ",", 
                    RowBox[{"T1", "-", "10"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "#"}], ",", 
                    RowBox[{"T1", "-", "20"}]}], "}"}]}], "}"}], "]"}], "&"}],
                "/@", 
               RowBox[{"{", 
                RowBox[{"0", ",", "LA", ",", 
                 RowBox[{"LA", "+", "LB"}], ",", 
                 RowBox[{"LA", "+", "LB", "+", "LC"}]}], "}"}]}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Framed", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"Row", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "#1"}], ",", "\"\< mm\>\""}], 
                    "}"}]}], ",", "17"}], "]"}], ",", 
                  RowBox[{"Background", "\[Rule]", "White"}], ",", 
                  RowBox[{"FrameStyle", "\[Rule]", "None"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1000", "*", "#2"}], ",", 
                  RowBox[{"T1", "-", "15"}]}], "}"}]}], "]"}], "&"}], "@@@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"LA", ",", 
                 RowBox[{"0.5", "*", "LA"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"LB", ",", 
                 RowBox[{"LA", "+", 
                  RowBox[{"0.5", "*", "LB"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"LC", ",", 
                 RowBox[{"LA", "+", "LB", "+", 
                  RowBox[{"0.5", "*", "LC"}]}]}], "}"}]}], "}"}]}], ","}], 
           "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"CS", "\[Equal]", "1"}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"solution", ",", 
                RowBox[{"{", 
                 RowBox[{"colS", ",", "Thick", ",", 
                  RowBox[{"Line", "@", "TA"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Dashed", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"BezierCurve", "[", "#", "]"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"1", ",", "colA"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.2", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"1.15", "*", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"250", "*", "LA"}], ",", 
                    RowBox[{"1.5", "*", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "LA"}], ",", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}]}],
                 ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"Line", "[", "#", "]"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"2", ",", "colA"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.35", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"1.15", "*", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "LA"}], ",", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}]}],
                 ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"colAns", ",", 
                  RowBox[{"Line", "@", "TA"}]}], "}"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"label", "[", 
                   RowBox[{"3", ",", "colA"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"BezierFunction", "[", "TA", "]"}], "[", "0.5", 
                   "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"Line", "[", "#", "]"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"4", ",", "colA"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.65", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"0.8", "*", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "LA"}], ",", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
                  "}"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"BezierCurve", "[", "#", "]"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"5", ",", "colA"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.8", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"0.7", "*", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"500", "*", "LA"}], ",", 
                    RowBox[{"0.7", "*", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "LA"}], ",", 
                    RowBox[{"0.85", "*", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "}"}]}],
                   "}"}]}]}], "\[IndentingNewLine]", "}"}]}], "}"}]}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"CS", ">", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "@", "0.006"}], ",", 
              RowBox[{"Line", "@", "TA"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"CS", "\[Equal]", "2"}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"solution", ",", 
                RowBox[{"{", 
                 RowBox[{"colS", ",", "Thick", ",", 
                  RowBox[{"Line", "@", "TB"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"wall", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Thick", ",", "Dashed", ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"Line", "@", "#"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"1", ",", "colB"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.5", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "LA"}], ",", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], ",", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
                    "}"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"colAns", ",", 
                    RowBox[{"Line", "@", "TB"}]}], "}"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"2", ",", "colB"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "TB", "]"}], "[", "0.35", 
                    "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"BezierCurve", "@", "#"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"3", ",", "colB"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.5", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "LA"}], ",", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", 
                    RowBox[{"0.4", "*", "LB"}]}], ")"}]}], ",", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], ",", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
                    "}"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"Line", "@", "#"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"4", ",", "colB"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.2", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "LA"}], ",", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], ",", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
                    "}"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"Line", "@", "#"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"5", ",", "colB"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.25", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "LA"}], ",", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], ",", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
                    "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"Thick", ",", "Dashed", ",", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"Line", "@", "#"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"1", ",", "colB"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.2", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "LA"}], ",", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], ",", 
                    RowBox[{"0.8", "*", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "}"}]}],
                     "}"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"Line", "@", "#"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"1", ",", "colB"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.2", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"#1", ",", 
                    RowBox[{"0.9", "*", "#2"}]}], "}"}], "&"}], "@@@", "TB"}],
                     ")"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{"colAns", ",", 
                    RowBox[{"Line", "@", "TB"}]}], "}"}], ",", 
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"2", ",", "colB"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "TB", "]"}], "[", "0.35", 
                    "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"BezierCurve", "@", "#"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"3", ",", "colB"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.5", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "LA"}], ",", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", 
                    RowBox[{"0.4", "*", "LB"}]}], ")"}]}], ",", 
                    RowBox[{"1.3", "*", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], ",", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
                    "}"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"Line", "@", "#"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"4", ",", "colB"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.65", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "LA"}], ",", 
                    RowBox[{"0.9", "*", 
                    RowBox[{"TA", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], ",", 
                    RowBox[{"0.8", "*", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "}"}]}],
                     "}"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"Line", "@", "#"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"5", ",", "colB"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.8", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", "LA"}], ",", 
                    RowBox[{"0.8", "*", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], ",", 
                    RowBox[{"0.8", "*", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "}"}]}],
                     "}"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"CS", ">", "2"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "@", "0.006"}], ",", 
              RowBox[{"Line", "@", "TB"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"CS", "\[Equal]", "3"}], ",", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"solution", ",", 
                RowBox[{"{", 
                 RowBox[{"colS", ",", "Thick", ",", 
                  RowBox[{"Line", "@", "TC"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Dashed", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"Line", "@", "#"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"1", ",", "colC"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.5", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], ",", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB", "+", "LC"}], ")"}]}], ",", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}]}], 
                  "}"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"Line", "@", "#"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"2", ",", "colC"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.5", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], ",", 
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB", "+", "LC"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"TC", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"TB", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}], "-", 
                    RowBox[{"TC", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}]}]}], 
                    "}"}]}], "}"}]}], "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], ",", 
                    RowBox[{"1.1", "*", 
                    RowBox[{"TC", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB", "+", "LC"}], ")"}]}], ",", 
                    RowBox[{"1.1", "*", 
                    RowBox[{"TC", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "}"}]}],
                   "}"}], "*)"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"colAns", ",", 
                  RowBox[{"Line", "@", "TC"}]}], "}"}], ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"label", "[", 
                   RowBox[{"3", ",", "colC"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"BezierFunction", "[", "TC", "]"}], "[", "0.5", 
                   "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"Line", "@", "#"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"4", ",", "colC"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.65", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], ",", 
                    RowBox[{"TC", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB", "+", "LC"}], ")"}]}], ",", 
                    RowBox[{"0.5", "*", 
                    RowBox[{"TC", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "}"}]}],
                     "}"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"colAns", ",", 
                    RowBox[{"BezierCurve", "[", "#", "]"}]}], "}"}], ",", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"label", "[", 
                    RowBox[{"4", ",", "colC"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"BezierFunction", "[", "#", "]"}], "[", "0.5", 
                    "]"}]}], "]"}]}], "}"}], "&"}], "@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], ",", 
                    RowBox[{"0.9", "*", 
                    RowBox[{"TC", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB", "+", 
                    RowBox[{"0.3", "*", "LC"}]}], ")"}]}], ",", 
                    RowBox[{"0.4", "*", 
                    RowBox[{"TC", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB", "+", "LC"}], ")"}]}], ",", 
                    RowBox[{"0.5", "*", 
                    RowBox[{"TC", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], "}"}]}],
                   "}"}]}]}], "\[IndentingNewLine]", "}"}]}], "}"}]}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"CS", ">", "3"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "@", "0.006"}], ",", 
              RowBox[{"Line", "@", "TC"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"LightGray", ",", 
            RowBox[{"EdgeForm", "[", 
             RowBox[{"{", 
              RowBox[{"Thin", ",", "Black"}], "}"}], "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1000", "*", "LA"}], "-", "0.3"}], ",", "T1"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1000", "*", "LA"}], "+", "0.3"}], ",", "T2"}], 
               "}"}]}], "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1000", "*", 
                  RowBox[{"(", 
                   RowBox[{"LA", "+", "LB"}], ")"}]}], "-", "0.3"}], ",", 
                "T1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1000", "*", 
                  RowBox[{"(", 
                   RowBox[{"LA", "+", "LB"}], ")"}]}], "+", "0.3"}], ",", 
                "T2"}], "}"}]}], "]"}], ",", "Black", ",", 
            RowBox[{"PointSize", "@", "0.001"}], ",", 
            RowBox[{"Point", "@", 
             RowBox[{"RandomPoint", "[", 
              RowBox[{
               RowBox[{"Rectangle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"1000", "*", "LA"}], "-", "0.3"}], ",", "T1"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"1000", "*", "LA"}], "+", "0.3"}], ",", "T2"}], 
                  "}"}]}], "]"}], ",", "300"}], "]"}]}], ",", 
            RowBox[{"Point", "@", 
             RowBox[{"RandomPoint", "[", 
              RowBox[{
               RowBox[{"Rectangle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], "-", "0.3"}], ",", 
                   "T1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"1000", "*", 
                    RowBox[{"(", 
                    RowBox[{"LA", "+", "LB"}], ")"}]}], "+", "0.3"}], ",", 
                   "T2"}], "}"}]}], "]"}], ",", "300"}], "]"}]}]}], "}"}], 
          ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1000", "*", 
                   RowBox[{"(", 
                    RowBox[{"LA", "+", "LB", "+", "LC"}], ")"}]}], "+", "#"}],
                  ",", 
                 RowBox[{"T1", "+", "15"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"1000", "*", 
                   RowBox[{"(", 
                    RowBox[{"LA", "+", "LB", "+", "LC"}], ")"}]}], "+", "#"}],
                  ",", 
                 RowBox[{"T2", "-", "60"}]}], "}"}]}], "}"}], "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{"5", ",", "11", ",", "17"}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"Column", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Subscript", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<T\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<air\>\""}], "]"}], ",", "\"\< = \>\"", ",", 
                    "T\[Infinity]", ",", "\"\< \[Degree]C\>\""}], "}"}]}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{"Row", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<h\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\< = \>\"", ",", "h", ",", "\"\< W/[\>\"", ",", 
                    RowBox[{"Superscript", "[", 
                    RowBox[{"\"\<m\>\"", ",", "2"}], "]"}], ",", 
                    "\"\< K]\>\""}], "}"}]}]}], "\[IndentingNewLine]", "}"}], 
                ",", "Center"}], "]"}], ",", "17"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"1000", "*", 
                RowBox[{"(", 
                 RowBox[{"LA", "+", "LB", "+", "LC"}], ")"}]}], "+", "11"}], 
              ",", 
              RowBox[{"T2", "-", "30"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Arrowheads", "@", "0.03"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"0.15", "*", "1000", "*", "LA"}], ",", 
                 RowBox[{"T1", "+", "25"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"0.15", "*", "1000", "*", "LA"}], ",", 
                 RowBox[{"T1", "+", "85"}]}], "}"}]}], "}"}], "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"0.15", "*", "1000", "*", "LA"}], ",", 
                 RowBox[{"T1", "+", "25"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"0.65", "*", "1000", "*", "LA"}], ",", 
                 RowBox[{"T1", "+", "25"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Rotate", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{"\"\<temperature\>\"", ",", "16"}], "]"}], ",", 
              RowBox[{"90", "\[Degree]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0.08", "*", "1000", "*", "LA"}], ",", 
              RowBox[{"T1", "+", "50"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<distance\>\"", ",", "16"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0.4", "*", "1000", "*", "LA"}], ",", 
              RowBox[{"T1", "+", "35"}]}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"600", ",", "400"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "All"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"T1", "-", "1"}], ",", 
             RowBox[{"T2", "+", "5"}]}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{"plotlabel", ",", "17", ",", "Black"}], "]"}]}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "@", 
    RowBox[{"{", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Button", "[", 
        RowBox[{"\"\< new problem \>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"reset", "<", "1000"}], ",", 
             RowBox[{"reset", "=", 
              RowBox[{"reset", "+", "1"}]}], ",", 
             RowBox[{"reset", "=", 
              RowBox[{"reset", "-", "1"}]}]}], "]"}], ",", 
           RowBox[{"CS", "=", "1"}], ",", 
           RowBox[{"solution", "=", "False"}], ",", 
           RowBox[{"answer", "=", "\"\< a \>\""}]}], "}"}]}], "]"}], ",", 
       "SpanFromLeft", ",", "\[IndentingNewLine]", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"reset", ",", "1"}], "}"}], ",", "1", ",", "1000", ",", 
          "1", ",", "None"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"answer", ",", "\"\< A \>\""}], "}"}], ",", "None"}], 
         "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PaneSelector", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "\"\<1. Wall A temperature profile.\>\""}],
            ",", 
           RowBox[{"2", "\[Rule]", "\"\<2. Wall B temperature profile.\>\""}],
            ",", 
           RowBox[{"3", "\[Rule]", "\"\<3. Wall C temperature profile.\>\""}],
            ",", 
           RowBox[{"4", "\[Rule]", "\"\<\>\""}]}], "}"}], ",", 
         RowBox[{"Dynamic", "@", "CS"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"CS", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
          RowBox[{"Range", "@", "4"}], ",", "None"}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PaneSelector", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"##", "&"}], "@@", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Rule]", 
             RowBox[{"Button", "[", 
              RowBox[{
               RowBox[{"Dynamic", "@", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"CS", "\[Equal]", "3"}], "\[And]", "solution"}], 
                  ",", "\"\< show solution \>\"", ",", "\"\< next \>\""}], 
                 "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"1", "\[LessEqual]", "CS", "<", "4"}], ",", 
                   RowBox[{"CS", "=", 
                    RowBox[{"CS", "+", "1"}]}], ",", 
                   RowBox[{"CS", "=", "4"}]}], "]"}], ",", 
                 RowBox[{"solution", "=", "False"}], ",", 
                 RowBox[{"hint", "=", "False"}], ",", 
                 RowBox[{"answer", "=", "\"\< a \>\""}]}], "}"}], ",", 
               RowBox[{"Enabled", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{"solution", ",", "True", ",", "False"}], "]"}]}]}], 
              "]"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"Dynamic", "@", "CS"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PaneSelector", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"##", "&"}], "@@", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", 
             RowBox[{"Control", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"hint", ",", "False", ",", "\"\<hint\>\""}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}]}], "}"}], "]"}]}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"Dynamic", "@", "CS"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PaneSelector", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"##", "&"}], "@@", 
           RowBox[{"Thread", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Rule]", 
             RowBox[{"Control", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"solution", ",", "False", ",", "\"\<solution\>\""}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"True", ",", "False"}], "}"}], ",", 
                RowBox[{"Enabled", "\[Rule]", 
                 RowBox[{"If", "[", 
                  RowBox[{"solution", ",", "False", ",", "True"}], "]"}]}]}], 
               "}"}], "]"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"Dynamic", "@", "CS"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{"LA", ",", "0.021", ",", "None"}], "}"}], "]"}], ",", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{"LB", ",", "0.025", ",", "None"}], "}"}], "]"}], ",", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{"LC", ",", "0.025", ",", "None"}], "}"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PaneSelector", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"##", "&"}], "@@", 
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
          RowBox[{"RadioButtonBar", "[", 
           RowBox[{
            RowBox[{"Dynamic", "@", "answer"}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\"\< A \>\"", ",", "\"\< B \>\"", ",", "\"\< C \>\"", ",", 
              "\"\< D \>\"", ",", "\"\< E \>\""}], "}"}], ",", 
            RowBox[{"Enabled", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{"solution", ",", "False", ",", "True"}], "]"}]}]}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"3", "\[Rule]", 
        RowBox[{"RadioButtonBar", "[", 
         RowBox[{
          RowBox[{"Dynamic", "@", "answer"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\< A \>\"", ",", "\"\< B \>\"", ",", "\"\< C \>\"", ",", 
            "\"\< D \>\""}], "}"}], ",", 
          RowBox[{"Enabled", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{"solution", ",", "False", ",", "True"}], "]"}]}]}], 
         "]"}]}]}], "}"}], ",", 
     RowBox[{"Dynamic", "@", "CS"}]}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{",", "\[IndentingNewLine]", 
    RowBox[{"Grid", "@", 
     RowBox[{"{", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"kA", ",", "0.05"}], "}"}], ",", "0.05", ",", "0.75", ",",
            "0.05", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"kB", ",", "0.05"}], "}"}], ",", "0.05", ",", "0.75", ",",
            "0.05", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"kC", ",", "0.05"}], "}"}], ",", "0.05", ",", "0.75", ",",
            "0.05", ",", 
           RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "}"}]}]}], "*)"}], "\[IndentingNewLine]",
   "]"}]], "Input",
 CellChangeTimes->{{3.739885768748908*^9, 3.7398857862329793`*^9}, {
   3.7398858693689585`*^9, 3.7398860472321744`*^9}, {3.73988608408255*^9, 
   3.7398861492301507`*^9}, {3.739886314660452*^9, 3.7398863277043962`*^9}, 
   3.7398863798012085`*^9, {3.739886548468071*^9, 3.73988665957425*^9}, {
   3.7398867105840807`*^9, 3.739886764001934*^9}, {3.7398868032498627`*^9, 
   3.7398869729674473`*^9}, {3.7398871300093675`*^9, 3.739887154532433*^9}, {
   3.739887223301197*^9, 3.739887272498185*^9}, {3.739887328730357*^9, 
   3.739887492117983*^9}, {3.7398875268293853`*^9, 3.7398876632514424`*^9}, {
   3.7398884775191574`*^9, 3.7398885856891265`*^9}, {3.739888618985858*^9, 
   3.7398886357399755`*^9}, {3.7398887073328323`*^9, 3.739888785313223*^9}, 
   3.7398888166114244`*^9, {3.739888882700382*^9, 3.739889072778904*^9}, {
   3.7398891134413404`*^9, 3.7398892311677628`*^9}, {3.7398892863728848`*^9, 
   3.7398893376836643`*^9}, {3.739889391476472*^9, 3.73988945079538*^9}, {
   3.7398894881368003`*^9, 3.739889543654183*^9}, {3.7398895738494873`*^9, 
   3.739889628113118*^9}, {3.7398896601111403`*^9, 3.7398897742738132`*^9}, {
   3.739889830272568*^9, 3.739889916678432*^9}, {3.7398906365794425`*^9, 
   3.7398906392489243`*^9}, {3.7398908633491354`*^9, 3.7398908770289993`*^9}, 
   3.7398915334047413`*^9, {3.740231990419944*^9, 3.740232018330943*^9}, {
   3.7403242959103546`*^9, 3.74032431052804*^9}, {3.7403245249277506`*^9, 
   3.7403245312402706`*^9}, {3.7404020332502246`*^9, 3.740402126311075*^9}, {
   3.740402263958358*^9, 3.7404022665044837`*^9}, 3.74040243092037*^9, {
   3.740402500927371*^9, 3.7404025491327925`*^9}, {3.7404068524795895`*^9, 
   3.7404070206723275`*^9}, {3.740407051306258*^9, 3.740407131985879*^9}, {
   3.7404071636487927`*^9, 3.7404071832166433`*^9}, {3.7404072243938975`*^9, 
   3.740407227911394*^9}, 3.7404072830337496`*^9, {3.740407337872032*^9, 
   3.7404073641277885`*^9}, {3.7404074003851976`*^9, 
   3.7404074183841476`*^9}, {3.7404075024055476`*^9, 3.740407520271877*^9}, {
   3.7404075621963897`*^9, 3.7404076050637226`*^9}, {3.740407666112962*^9, 
   3.7404076781052723`*^9}, {3.740407793240214*^9, 3.740407858018056*^9}, {
   3.7404079383020525`*^9, 3.740407979295514*^9}, {3.7404080416774693`*^9, 
   3.7404081736600943`*^9}, {3.7404082412246943`*^9, 3.740408260507659*^9}, {
   3.7404083414911127`*^9, 3.740408402869*^9}, {3.740408458406437*^9, 
   3.740408494520894*^9}, {3.7404085323670025`*^9, 3.7404086055403986`*^9}, {
   3.7404086435708003`*^9, 3.740408687676369*^9}, {3.740408720289316*^9, 
   3.740408878516544*^9}, {3.7404089288994474`*^9, 3.7404092062411284`*^9}, {
   3.7404092564872704`*^9, 3.7404094091577854`*^9}, {3.7404094412844467`*^9, 
   3.7404094439439793`*^9}, {3.7404094816611443`*^9, 
   3.7404095043757157`*^9}, {3.7404095465240393`*^9, 
   3.7404096430792823`*^9}, {3.74040974022325*^9, 3.740409748086021*^9}, {
   3.7404097973525696`*^9, 3.7404098393454275`*^9}, 3.7408365028131566`*^9, {
   3.740836600984784*^9, 3.7408366054977217`*^9}, {3.740836637594933*^9, 
   3.740836647418667*^9}, {3.740836709472807*^9, 3.740836710510033*^9}, {
   3.740836758675293*^9, 3.7408368302519703`*^9}, {3.7408368618275723`*^9, 
   3.7408369213973155`*^9}, {3.74083700155165*^9, 3.740837038621529*^9}, {
   3.740837128810495*^9, 3.740837245086668*^9}, {3.7408373734036875`*^9, 
   3.740837398123641*^9}, {3.7408377186509027`*^9, 3.740837760232757*^9}, {
   3.741355555197562*^9, 3.7413556285024595`*^9}, {3.741357739443817*^9, 
   3.741357906032689*^9}, 3.7413579390085382`*^9, {3.7413579729100227`*^9, 
   3.7413581169191246`*^9}, {3.7413581649202685`*^9, 
   3.7413583610869317`*^9}, {3.741358401443419*^9, 3.7413585211468945`*^9}, {
   3.741358558277485*^9, 3.741358568016061*^9}, {3.7413586349585743`*^9, 
   3.7413586952005515`*^9}, 3.741358728376206*^9, {3.741358823467603*^9, 
   3.7413588658017707`*^9}, {3.7413589033234253`*^9, 3.741358961881177*^9}, {
   3.7413590081860857`*^9, 3.7413591001652336`*^9}, {3.7414425622520494`*^9, 
   3.7414426368790607`*^9}, {3.7419639245105786`*^9, 
   3.7419639924074078`*^9}, {3.742049863980482*^9, 3.742049883279894*^9}, {
   3.742050245212308*^9, 3.742050260766958*^9}, {3.7420503204687014`*^9, 
   3.742050362880175*^9}, {3.7420505072555213`*^9, 3.742050509316847*^9}, {
   3.7421393958789577`*^9, 3.7421394204968724`*^9}, {3.7421394684321547`*^9, 
   3.7421395145676727`*^9}, {3.742140922741766*^9, 3.742140926441805*^9}, {
   3.742910199763977*^9, 3.7429106038114223`*^9}, {3.742910774430132*^9, 
   3.742910878381132*^9}, 3.742910962028433*^9, {3.7429110807968082`*^9, 
   3.742911081088031*^9}, {3.743347495356563*^9, 3.7433475290628223`*^9}, {
   3.7434297081879063`*^9, 3.743429786605281*^9}, {3.7434298998923607`*^9, 
   3.7434299398565097`*^9}, {3.7434299797628155`*^9, 3.743429984990838*^9}, {
   3.7434300185570946`*^9, 3.7434300291168613`*^9}, {3.7469056986109667`*^9, 
   3.7469057226967936`*^9}, {3.7469057650041018`*^9, 3.746905766056053*^9}, {
   3.7469058161173544`*^9, 3.7469058741316824`*^9}, {3.7469059235223703`*^9, 
   3.746905923595435*^9}, {3.74690597922195*^9, 3.7469059793060265`*^9}, {
   3.7469060169150653`*^9, 3.7469060480442*^9}, {3.7469060907588263`*^9, 
   3.7469060936514406`*^9}, {3.7469061264831705`*^9, 3.746906165536586*^9}, {
   3.746906260024022*^9, 3.746906260116106*^9}, {3.7469066279023404`*^9, 
   3.7469066653892393`*^9}, {3.7469067951066256`*^9, 3.746906795183696*^9}, {
   3.746906834399236*^9, 3.7469068821175094`*^9}, {3.746906995225895*^9, 
   3.7469070312694993`*^9}, {3.746907082915666*^9, 3.7469071100247655`*^9}, {
   3.7469071488619146`*^9, 3.746907242186657*^9}, {3.746907303785102*^9, 
   3.746907306424491*^9}, {3.746907477621497*^9, 3.7469075456560698`*^9}, {
   3.7469075764039173`*^9, 3.746907615709544*^9}, {3.7469077160462923`*^9, 
   3.746907716121361*^9}, {3.7469077830259094`*^9, 3.746907835754322*^9}, {
   3.7469079459968424`*^9, 3.7469079763240986`*^9}, {3.7469080604065633`*^9, 
   3.7469080897952538`*^9}, {3.7469081481757383`*^9, 3.746908161551846*^9}, {
   3.7469082069663563`*^9, 3.7469082152621126`*^9}, {3.747589851410357*^9, 
   3.747589854292863*^9}, {3.747589894187726*^9, 3.747589941275118*^9}, {
   3.7475899916607447`*^9, 3.7475902064105453`*^9}, {3.747590257040455*^9, 
   3.747590269470498*^9}, {3.747590384619463*^9, 3.747590414136469*^9}, {
   3.747590617611971*^9, 3.747590661910862*^9}, {3.7475906959028788`*^9, 
   3.747590729033184*^9}, {3.747590774803447*^9, 3.747590890444395*^9}, {
   3.747590926601179*^9, 3.7475909695761557`*^9}, {3.747591028429834*^9, 
   3.747591050477763*^9}, {3.747595049026416*^9, 3.7475950882947197`*^9}, {
   3.747595193426807*^9, 3.747595215218974*^9}, {3.747595342479927*^9, 
   3.747595343748645*^9}, {3.7475955871464767`*^9, 3.747595632655487*^9}, {
   3.747595663587967*^9, 3.747595693238963*^9}, {3.74759581710746*^9, 
   3.7475958180941963`*^9}, {3.747595850063731*^9, 3.7475960235493298`*^9}, {
   3.7475960608409233`*^9, 3.7475961775167923`*^9}, {3.7475962119262543`*^9, 
   3.747596221031259*^9}, {3.7475962568288183`*^9, 3.747596278276307*^9}, {
   3.747596357609462*^9, 3.747596361330147*^9}, {3.7480399533631716`*^9, 
   3.7480399576540613`*^9}, {3.7480400418834343`*^9, 3.748040052507038*^9}, {
   3.748040111180273*^9, 3.7480401280175414`*^9}, {3.74864148054627*^9, 
   3.7486415733554344`*^9}, {3.748641651600444*^9, 3.748641691030422*^9}, {
   3.748641731666264*^9, 3.7486417506814985`*^9}, {3.748641850133269*^9, 
   3.7486419028004*^9}, {3.7486421356139317`*^9, 3.748642135993289*^9}, {
   3.748642224251385*^9, 3.748642244276542*^9}, {3.7486423015589223`*^9, 
   3.7486423730638585`*^9}, {3.748642421594905*^9, 3.7486424268436575`*^9}, {
   3.7486424692141285`*^9, 3.74864247015697*^9}, {3.748642504413067*^9, 
   3.7486425284568863`*^9}, {3.748642576896942*^9, 3.748642665786367*^9}, {
   3.748642706092922*^9, 3.7486427400998077`*^9}, {3.7486428697095957`*^9, 
   3.74864290381553*^9}, {3.7486429974413385`*^9, 3.748643061712479*^9}, {
   3.748643107539917*^9, 3.7486431087052927`*^9}, {3.7486431710569687`*^9, 
   3.7486432566509075`*^9}, {3.7486433236207237`*^9, 
   3.7486433367487736`*^9}, {3.7486433830727577`*^9, 3.748643383249919*^9}, {
   3.7486434321582956`*^9, 3.748643450688137*^9}, {3.7499307889115157`*^9, 
   3.7499308202308908`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d9deae28-a8d1-47ff-8bb2-bfe393590a8e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`answer$$ = " a ", $CellContext`CS$$ = 
    1, $CellContext`hint$$ = False, $CellContext`LA$$ = 
    0.026, $CellContext`LB$$ = 0.026, $CellContext`LC$$ = 
    0.026, $CellContext`reset$$ = 4, $CellContext`solution$$ = False, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`reset$$], 1}, 1, 1000, 1}, {{
       Hold[$CellContext`answer$$], " A "}, 0}, {{
       Hold[$CellContext`CS$$], 1, ""}, {1, 2, 3, 4}}, {{
       Hold[$CellContext`hint$$], False, "hint"}, {True, False}}, {{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {
      Hold[$CellContext`LA$$], 0.021}, {
      Hold[$CellContext`LB$$], 0.025}, {
      Hold[$CellContext`LC$$], 0.025}, {
      Hold[
       Grid[{{
          Button[" new problem ", {
            
            If[$CellContext`reset$$ < 
             1000, $CellContext`reset$$ = $CellContext`reset$$ + 
              1, $CellContext`reset$$ = $CellContext`reset$$ - 
              1], $CellContext`CS$$ = 1, $CellContext`solution$$ = 
            False, $CellContext`answer$$ = " a "}], SpanFromLeft, 
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          
          PaneSelector[{
           1 -> "1. Wall A temperature profile.", 2 -> 
            "2. Wall B temperature profile.", 3 -> 
            "3. Wall C temperature profile.", 4 -> ""}, 
           Dynamic[$CellContext`CS$$]], 
          Manipulate`Place[3], 
          PaneSelector[{1 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
            2 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
            3 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]]}, 
           Dynamic[$CellContext`CS$$]], 
          PaneSelector[{1 -> Manipulate`Place[4], 3 -> Manipulate`Place[4]}, 
           Dynamic[$CellContext`CS$$]], 
          
          PaneSelector[{
           1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
            Manipulate`Place[5]}, 
           Dynamic[$CellContext`CS$$]], 
          Manipulate`Place[6], 
          Manipulate`Place[7], 
          Manipulate`Place[8]}}]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       PaneSelector[{1 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {
           " A ", " B ", " C ", " D ", " E "}, Enabled -> 
           If[$CellContext`solution$$, False, True]], 2 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {
           " A ", " B ", " C ", " D ", " E "}, Enabled -> 
           If[$CellContext`solution$$, False, True]], 3 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {" A ", " B ", " C ", " D "}, 
           Enabled -> If[$CellContext`solution$$, False, True]]}, 
        Dynamic[$CellContext`CS$$]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {197., 203.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`reset$105772$$ = 0, $CellContext`CS$105773$$ = 
    0, $CellContext`hint$105774$$ = False, $CellContext`solution$105775$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`answer$$ = " A ", $CellContext`CS$$ = 
        1, $CellContext`hint$$ = False, $CellContext`LA$$ = 
        0.021, $CellContext`LB$$ = 0.025, $CellContext`LC$$ = 
        0.025, $CellContext`reset$$ = 1, $CellContext`solution$$ = False}, 
      "ControllerVariables" :> {
        Hold[$CellContext`reset$$, $CellContext`reset$105772$$, 0], 
        Hold[$CellContext`CS$$, $CellContext`CS$105773$$, 0], 
        Hold[$CellContext`hint$$, $CellContext`hint$105774$$, False], 
        Hold[$CellContext`solution$$, $CellContext`solution$105775$$, False]},
       "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`wall$, $CellContext`kA$, $CellContext`kB$, \
$CellContext`kC$, $CellContext`Qdot$, $CellContext`Rtc$, $CellContext`T\
\[Infinity]$, $CellContext`h$, $CellContext`qflux$, $CellContext`sol$, \
$CellContext`T$, $CellContext`Ts1$, $CellContext`Ts2$, $CellContext`Ts3$, \
$CellContext`Ts4$, $CellContext`Ts5$, $CellContext`Ts6$, \
$CellContext`TProfile$, $CellContext`TA$, $CellContext`TB$, $CellContext`TC$, \
$CellContext`T1$, $CellContext`T2$, $CellContext`colA$, $CellContext`colB$, \
$CellContext`colC$, $CellContext`colS$, $CellContext`colAns$, \
$CellContext`pt$, $CellContext`list$, $CellContext`label$, \
$CellContext`plotlabel$}, 
        SeedRandom[$CellContext`reset$$]; $CellContext`wall$ = 
         RandomInteger[{1, 2}]; $CellContext`kA$ = RandomChoice[
           Range[0.26, 0.3, 0.01]]; $CellContext`kB$ = RandomChoice[
           Range[0.12, 0.13, 0.01]]; $CellContext`kC$ = RandomChoice[
           Range[0.13, 0.18, 0.01]]; $CellContext`LA$$ = 
         0.026; $CellContext`LB$$ = 0.026; $CellContext`LC$$ = 
         0.026; $CellContext`Qdot$ = 
         If[$CellContext`wall$ == 1, 10, 14]; $CellContext`Rtc$ = 
         0.08; $CellContext`T\[Infinity]$ = 20; $CellContext`h$ = 
         10; $CellContext`qflux$ = (1000 $CellContext`Qdot$) 
          If[$CellContext`wall$ == 
            1, $CellContext`LA$$, $CellContext`LB$$]; $CellContext`sol$ = Part[
           
           DSolve[{Derivative[
              2][$CellContext`t][$CellContext`z] == (-1000) \
($CellContext`Qdot$/
               If[$CellContext`wall$ == 
                1, $CellContext`kA$, $CellContext`kB$]), $CellContext`t[
               
               If[$CellContext`wall$ == 
                1, $CellContext`LA$$, $CellContext`LA$$ + $CellContext`LB$$]] == 
             If[$CellContext`wall$ == 
               1, $CellContext`Ts5$, $CellContext`Ts3$], 
             Derivative[1][$CellContext`t][
               If[$CellContext`wall$ == 1, 0, $CellContext`LA$$]] == 0}, 
            $CellContext`t[$CellContext`z], $CellContext`z], 
           1]; $CellContext`T$[
           Pattern[$CellContext`x$, 
            Blank[]]] := ReplaceAll[
           ReplaceAll[
            $CellContext`t[$CellContext`z], $CellContext`sol$], \
$CellContext`z -> $CellContext`x$]; $CellContext`Ts1$ = $CellContext`T\
\[Infinity]$ + $CellContext`qflux$/$CellContext`h$; $CellContext`Ts2$ = \
$CellContext`Ts1$ + $CellContext`qflux$ ($CellContext`LC$$/$CellContext`kC$); \
$CellContext`Ts3$ = $CellContext`Ts2$ + $CellContext`qflux$ $CellContext`Rtc$; \
$CellContext`Ts4$ = 
         If[$CellContext`wall$ == 1, {
           1000 $CellContext`LA$$, $CellContext`Ts3$ + $CellContext`qflux$ \
($CellContext`LB$$/$CellContext`kB$)}, 
           Table[{$CellContext`n, 
             $CellContext`T$[$CellContext`n/
              1000]}, {$CellContext`n, $CellContext`LA$$ 1000, 
             1000 ($CellContext`LA$$ + $CellContext`LB$$), 
             1}]]; $CellContext`Ts5$ = 
         If[$CellContext`wall$ == 1, 
           Part[$CellContext`Ts4$, 2] + $CellContext`qflux$ $CellContext`Rtc$, 
           $CellContext`T$[$CellContext`LA$$]]; $CellContext`Ts6$ = 
         If[$CellContext`wall$ == 1, 
           Table[{$CellContext`n, 
             $CellContext`T$[$CellContext`n/1000]}, {$CellContext`n, 
             0, $CellContext`LA$$ 1000, 1}], {0, 
            $CellContext`T$[$CellContext`LA$$]}]; $CellContext`TProfile$ = 
         Level[{$CellContext`Ts6$, {
            1000 $CellContext`LA$$, $CellContext`Ts5$}, $CellContext`Ts4$, {
            1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts3$}, \
{1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts2$}, {
            1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`Ts1$}}, {-2}]; $CellContext`TA$ = Join[
           
           If[$CellContext`wall$ == 
            1, $CellContext`Ts6$, {$CellContext`Ts6$}], {{
            1000 $CellContext`LA$$, $CellContext`Ts5$}}]; $CellContext`TB$ = 
         Join[
           
           If[$CellContext`wall$ == 
            1, {$CellContext`Ts4$}, $CellContext`Ts4$], {{
            1000 ($CellContext`LA$$ + $CellContext`LB$$), \
$CellContext`Ts3$}}]; $CellContext`TC$ = {{
           1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts2$}, {
           1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`Ts1$}}; $CellContext`T1$ = -5; $CellContext`T2$ = 
         275; $CellContext`colA$ = 
         RGBColor[0.25, 0.8, 0.9]; $CellContext`colB$ = 
         RGBColor[0.45, 0.9, 0]; $CellContext`colC$ = 
         RGBColor[1, 0.95, 0]; $CellContext`colS$ = 
         Purple; $CellContext`colAns$ = 
         Opacity[0.5, $CellContext`colS$]; $CellContext`pt$[
           Pattern[$CellContext`point, 
            Blank[]], 
           Pattern[$CellContext`col, 
            Blank[]]] := {$CellContext`col, 
           PointSize[0.025], 
           Point[$CellContext`point], White, 
           PointSize[0.015], 
           Point[$CellContext`point]}; $CellContext`list$ = 
         If[$CellContext`CS$$ == 3, 
           RandomSample[{" A ", " B ", " C ", " D "}], 
           
           RandomSample[{
            " A ", " B ", " C ", " D ", " E "}]]; $CellContext`label$[
           Pattern[$CellContext`part$, 
            Blank[]], 
           Pattern[$CellContext`color$, 
            Blank[]]] := Style[
           Part[$CellContext`list$, $CellContext`part$], 
           If[
           Part[$CellContext`list$, $CellContext`part$] == \
$CellContext`answer$$, {20, Bold}, 17], $CellContext`colS$, 
           Background -> $CellContext`color$]; $CellContext`plotlabel$ = 
         If[$CellContext`CS$$ == 4, 
           Column[{
             Row[{"Heat generation in wall ", 
               If[$CellContext`wall$ == 1, "A", "B"], 
               " = ", $CellContext`Qdot$, " kW/m."}], 
             Row[{"Contact resistance exists between walls ", 
               If[$CellContext`wall$ == 1, "A and B.", "B and C."]}]}], 
           If[$CellContext`hint$$, 
            
            Switch[$CellContext`CS$$, 1, 
             "There is no heat transfer from the left side", 2, "", 3, 
             "There is convective heat transfer from the right side."], 
            Column[{
              
              Row[{"Select the button that shows the correct temperature \
profile for wall ", 
                Switch[$CellContext`CS$$, 1, "A", 2, "B", 3, "C"], "."}], 
              Row[{"Heat generation in wall ", 
                If[$CellContext`wall$ == 1, "A", "B"], " = 10 kW/m.", 
                Spacer[30], 
                If[2 <= $CellContext`CS$$ <= 3, 
                 Row[{"Contact resistance = ", $CellContext`Rtc$, " W/[", 
                   Superscript["m", 2], " K]."}]]}]}]]]; Graphics[{
           Line[
            Table[{{-5, 25 + $CellContext`n}, {
              0, 30 + $CellContext`n}}, {$CellContext`n, -10, 235, 15}]], 
           Text[
            Rotate[
             Style["insulation ", 17, Background -> White], 90 Degree], {-2.5,
              145}], {
            EdgeForm[Black], 
            FaceForm[
             If[$CellContext`wall$ == 1, {
               Opacity[
                Dynamic[0.3 + 0.7 Abs[
                    Cos[
                    Pi Clock[
                    1, 3]]]]], $CellContext`colA$}, $CellContext`colA$]], 
            
            Rectangle[{
             0, $CellContext`T1$}, {$CellContext`LA$$ 
              1000, $CellContext`T2$}]}, {
            EdgeForm[Black], 
            FaceForm[
             If[$CellContext`wall$ == 2, {
               Opacity[
                Dynamic[0.2 + 0.8 Abs[
                    Cos[
                    Pi Clock[
                    1, 3]]]]], $CellContext`colB$}, $CellContext`colB$]], 
            
            Rectangle[{$CellContext`LA$$ 1000, $CellContext`T1$}, {
             1000 ($CellContext`LA$$ + $CellContext`LB$$), \
$CellContext`T2$}]}, {
            EdgeForm[Black], 
            FaceForm[$CellContext`colC$], 
            
            Rectangle[{
             1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`T1$}, \
{1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`T2$}]}, 
           Apply[Text[
             Style[
              Row[{
                Subscript[
                 Style["k", Italic], #], " = ", #2, " W/[m K]"}], 
              16], {#3, $CellContext`T1$ + 12}]& , {{
             "A", $CellContext`kA$, 500 $CellContext`LA$$}, {
             "B", $CellContext`kB$, 1000 $CellContext`LA$$ + 
              500 $CellContext`LB$$}, {
             "C", $CellContext`kC$, 
              1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
              500 $CellContext`LC$$}}, {1}], 
           If[$CellContext`CS$$ == 1, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TA$]}], {Thick, Dashed, 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[1, $CellContext`colA$], 
                BezierFunction[#][0.2]]}& )[{{
                0, 1.15 Part[$CellContext`TA$, 1, 2]}, {
                250 $CellContext`LA$$, 1.5 Part[$CellContext`TA$, 1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, 1, 2]}}], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[2, $CellContext`colA$], 
                BezierFunction[#][0.35]]}& )[{{
                0, 1.15 Part[$CellContext`TA$, 1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, 1, 2]}}], {$CellContext`colAns$, 
               Line[$CellContext`TA$]}, 
              Text[
               $CellContext`label$[3, $CellContext`colA$], 
               BezierFunction[$CellContext`TA$][0.5]], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[4, $CellContext`colA$], 
                BezierFunction[#][0.65]]}& )[{{
                0, 0.8 Part[$CellContext`TA$, -1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, -1, 2]}}], 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[5, $CellContext`colA$], 
                BezierFunction[#][0.8]]}& )[{{
                0, 0.7 Part[$CellContext`TA$, -1, 2]}, {
                500 $CellContext`LA$$, 0.7 Part[$CellContext`TA$, -1, 2]}, {
                1000 $CellContext`LA$$, 0.85 
                 Part[$CellContext`TA$, -1, 2]}}]}}], 
           If[$CellContext`CS$$ > 1, {
             Thickness[0.006], 
             Line[$CellContext`TA$]}], 
           If[$CellContext`CS$$ == 2, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TB$]}], 
             If[$CellContext`wall$ == 1, {Thick, Dashed, 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[1, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TA$, -1, 2]}}], {$CellContext`colAns$, 
                Line[$CellContext`TB$]}, 
               Text[
                $CellContext`label$[2, $CellContext`colB$], 
                BezierFunction[$CellContext`TB$][0.35]], 
               ({{$CellContext`colAns$, 
                 BezierCurve[#]}, 
                Text[
                 $CellContext`label$[3, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TB$, 1, 2]}, {
                 1000 ($CellContext`LA$$ + 0.4 $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[4, $CellContext`colB$], 
                 BezierFunction[#][0.2]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[5, $CellContext`colB$], 
                 BezierFunction[#][0.25]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}]}, {Thick, Dashed, 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[1, $CellContext`colB$], 
                 BezierFunction[#][0.2]]}& )[
                
                Apply[{#, 0.9 #2}& , $CellContext`TB$, {
                 1}]], {$CellContext`colAns$, 
                Line[$CellContext`TB$]}, 
               Text[
                $CellContext`label$[2, $CellContext`colB$], 
                BezierFunction[$CellContext`TB$][0.35]], 
               ({{$CellContext`colAns$, 
                 BezierCurve[#]}, 
                Text[
                 $CellContext`label$[3, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + 0.4 $CellContext`LB$$), 1.3 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[4, $CellContext`colB$], 
                 BezierFunction[#][0.65]]}& )[{{
                 1000 $CellContext`LA$$, 0.9 Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.8 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[5, $CellContext`colB$], 
                 BezierFunction[#][0.8]]}& )[{{
                 1000 $CellContext`LA$$, 0.8 Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.8 
                  Part[$CellContext`TB$, -1, 2]}}]}]}], 
           If[$CellContext`CS$$ > 2, {
             Thickness[0.006], 
             Line[$CellContext`TB$]}], 
           If[$CellContext`CS$$ == 3, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TC$]}], {Thick, Dashed, 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[1, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                 Part[$CellContext`TB$, -1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 
                 Part[$CellContext`TB$, -1, 2]}}], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[2, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                 Part[$CellContext`TB$, -1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 
                 Part[$CellContext`TC$, -1, 2] + (
                  Part[$CellContext`TB$, -1, 2] - 
                  Part[$CellContext`TC$, 1, 2])}}], {$CellContext`colAns$, 
               Line[$CellContext`TC$]}, 
              Text[
               $CellContext`label$[3, $CellContext`colC$], 
               BezierFunction[$CellContext`TC$][0.5]], 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[4, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.9 
                 Part[$CellContext`TC$, 1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + 
                  0.3 $CellContext`LC$$), 0.4 Part[$CellContext`TC$, 1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 0.5 Part[$CellContext`TC$, -1, 2]}}]}}], 
           If[$CellContext`CS$$ > 3, {
             Thickness[0.006], 
             Line[$CellContext`TC$]}], {LightGray, 
            EdgeForm[{Thin, Black}], 
            
            Rectangle[{1000 $CellContext`LA$$ - 0.3, $CellContext`T1$}, {
             1000 $CellContext`LA$$ + 0.3, $CellContext`T2$}], 
            
            Rectangle[{
             1000 ($CellContext`LA$$ + $CellContext`LB$$) - 
              0.3, $CellContext`T1$}, {
             1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
              0.3, $CellContext`T2$}], Black, 
            PointSize[0.001], 
            Point[
             RandomPoint[
              
              Rectangle[{1000 $CellContext`LA$$ - 0.3, $CellContext`T1$}, {
               1000 $CellContext`LA$$ + 0.3, $CellContext`T2$}], 300]], 
            Point[
             RandomPoint[
              
              Rectangle[{
               1000 ($CellContext`LA$$ + $CellContext`LB$$) - 
                0.3, $CellContext`T1$}, {
               1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
                0.3, $CellContext`T2$}], 300]]}, 
           Map[
           Arrow[{{1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$) + #, $CellContext`T1$ + 15}, {
              1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$) + #, $CellContext`T2$ - 60}}]& , {5, 11, 17}], 
           Text[
            Style[
             Column[{
               Row[{
                 Subscript[
                  Style["T", Italic], "air"], 
                 " = ", $CellContext`T\[Infinity]$, " \[Degree]C"}], 
               Row[{
                 Style["h", Italic], " = ", $CellContext`h$, " W/[", 
                 Superscript["m", 2], " K]"}]}, Center], 17], {
            1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$) + 
             11, $CellContext`T2$ - 30}], {
            Arrowheads[0.03], 
            
            Arrow[{{(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 
               25}, {(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 85}}], 
            
            Arrow[{{(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 
               25}, {(0.65 1000) $CellContext`LA$$, $CellContext`T1$ + 25}}]}, 
           Text[
            Rotate[
             Style["temperature", 16], 90 
             Degree], {(0.08 1000) $CellContext`LA$$, $CellContext`T1$ + 50}], 
           Text[
            Style[
            "distance", 16], {(0.4 1000) $CellContext`LA$$, $CellContext`T1$ + 
             35}]}, ImageSize -> {600, 400}, AspectRatio -> Full, 
          PlotRange -> {{-5, All}, {$CellContext`T1$ - 1, $CellContext`T2$ + 
             5}}, PlotLabel -> Style[$CellContext`plotlabel$, 17, Black]]], 
      "Specifications" :> {{{$CellContext`reset$$, 1}, 1, 1000, 1, 
         ControlType -> None, ControlPlacement -> 
         1}, {{$CellContext`answer$$, " A "}, 0, ControlType -> None, 
         ControlPlacement -> 2}, {{$CellContext`CS$$, 1, ""}, {1, 2, 3, 4}, 
         ControlType -> None, ControlPlacement -> 
         3}, {{$CellContext`hint$$, False, "hint"}, {True, False}, 
         ControlPlacement -> 
         4}, {{$CellContext`solution$$, False, "solution"}, {True, False}, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         5}, {$CellContext`LA$$, 0.021, ControlType -> None, ControlPlacement -> 
         6}, {$CellContext`LB$$, 0.025, ControlType -> None, ControlPlacement -> 
         7}, {$CellContext`LC$$, 0.025, ControlType -> None, ControlPlacement -> 
         8}, 
        Grid[{{
           Button[" new problem ", {
             
             If[$CellContext`reset$$ < 
              1000, $CellContext`reset$$ = $CellContext`reset$$ + 
               1, $CellContext`reset$$ = $CellContext`reset$$ - 
               1], $CellContext`CS$$ = 1, $CellContext`solution$$ = 
             False, $CellContext`answer$$ = " a "}], SpanFromLeft, 
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           
           PaneSelector[{
            1 -> "1. Wall A temperature profile.", 2 -> 
             "2. Wall B temperature profile.", 3 -> 
             "3. Wall C temperature profile.", 4 -> ""}, 
            Dynamic[$CellContext`CS$$]], 
           Manipulate`Place[3], 
           PaneSelector[{1 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
             2 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
             3 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]]}, 
            Dynamic[$CellContext`CS$$]], 
           PaneSelector[{1 -> Manipulate`Place[4], 3 -> Manipulate`Place[4]}, 
            Dynamic[$CellContext`CS$$]], 
           
           PaneSelector[{
            1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
             Manipulate`Place[5]}, 
            Dynamic[$CellContext`CS$$]], 
           Manipulate`Place[6], 
           Manipulate`Place[7], 
           Manipulate`Place[8]}}], 
        PaneSelector[{1 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {
            " A ", " B ", " C ", " D ", " E "}, Enabled -> 
            If[$CellContext`solution$$, False, True]], 2 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {
            " A ", " B ", " C ", " D ", " E "}, Enabled -> 
            If[$CellContext`solution$$, False, True]], 3 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {" A ", " B ", " C ", " D "}, 
            Enabled -> If[$CellContext`solution$$, False, True]]}, 
         Dynamic[$CellContext`CS$$]]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{649., {254., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7398861581361284`*^9, 3.7398861821921835`*^9}, 
   3.739886328515486*^9, {3.739886569229165*^9, 3.7398866384794292`*^9}, 
   3.7398866717181296`*^9, {3.739886725982482*^9, 3.739886764801118*^9}, {
   3.739886852379656*^9, 3.739886867350623*^9}, 3.739886904049053*^9, 
   3.7398869545490017`*^9, {3.7398871553483286`*^9, 3.7398871763179674`*^9}, 
   3.73988728572692*^9, {3.73988744818804*^9, 3.739887494964662*^9}, {
   3.739887585753549*^9, 3.739887591564273*^9}, 3.7398876640458865`*^9, {
   3.7398885869632287`*^9, 3.7398886504231553`*^9}, 3.7398887876558065`*^9, {
   3.7398888181038384`*^9, 3.7398888311868763`*^9}, {3.739889027163328*^9, 
   3.7398890319083347`*^9}, 3.7398890737313943`*^9, 3.739889164286744*^9, 
   3.739889232426257*^9, {3.7398893291507998`*^9, 3.7398893507897725`*^9}, 
   3.739889451798864*^9, {3.7398894932860613`*^9, 3.7398895087926006`*^9}, 
   3.739889544415865*^9, {3.739889576637546*^9, 3.73988962929426*^9}, {
   3.739889763836508*^9, 3.739889775548913*^9}, {3.739889840026825*^9, 
   3.739889885067809*^9}, {3.739890865160185*^9, 3.739890877839771*^9}, 
   3.739891534214939*^9, {3.740148859556032*^9, 3.7401488822376766`*^9}, {
   3.7402319152435036`*^9, 3.7402319301333427`*^9}, 3.7402320193802547`*^9, {
   3.740232065756505*^9, 3.7402320845749145`*^9}, 3.7403243131952343`*^9, 
   3.740324532155945*^9, 3.740324608010602*^9, 3.740325138437014*^9, 
   3.740402038074424*^9, {3.740402079752214*^9, 3.740402127105771*^9}, 
   3.7404022714058886`*^9, 3.740402433220332*^9, 3.7404025507640867`*^9, {
   3.74040690588799*^9, 3.740406920913294*^9}, 3.7404069741010294`*^9, {
   3.740407011875176*^9, 3.740407022514721*^9}, {3.7404070543976936`*^9, 
   3.7404071328400183`*^9}, {3.7404071768063245`*^9, 3.740407184106427*^9}, 
   3.7404072284424863`*^9, 3.7404072841680875`*^9, 3.7404073651283474`*^9, {
   3.740407413797538*^9, 3.7404074193532085`*^9}, 3.740407521495319*^9, {
   3.740407564496058*^9, 3.7404076062003074`*^9}, {3.740407669148201*^9, 
   3.740407678921219*^9}, {3.740407797355013*^9, 3.74040785001694*^9}, 
   3.740407880055278*^9, {3.740407960848115*^9, 3.7404079801036406`*^9}, 
   3.740408017702592*^9, 3.7404080835373116`*^9, {3.7404082613455224`*^9, 
   3.740408407919528*^9}, 3.7404085011619186`*^9, {3.7404085579711833`*^9, 
   3.740408570402384*^9}, 3.740408606440935*^9, {3.740408671137686*^9, 
   3.7404087013581004`*^9}, 3.7404088815481596`*^9, 3.7404089312500563`*^9, {
   3.740408964086361*^9, 3.7404090428261175`*^9}, {3.7404091077076983`*^9, 
   3.740409113214405*^9}, 3.7404091763107834`*^9, {3.740409395756132*^9, 
   3.740409410290596*^9}, 3.740409447545277*^9, {3.74040948894062*^9, 
   3.740409514322141*^9}, 3.740409609206399*^9, 3.7404097490441637`*^9, 
   3.7404097821415577`*^9, {3.7404098259163465`*^9, 3.7404098525567303`*^9}, {
   3.740836503951112*^9, 3.7408365076033792`*^9}, 3.7408366119673924`*^9, 
   3.7408366494910965`*^9, 3.7408367116998353`*^9, {3.740836788532451*^9, 
   3.7408368309680605`*^9}, {3.7408368735541954`*^9, 3.7408368946518035`*^9}, 
   3.740836927881982*^9, 3.7408370059847918`*^9, {3.7408370394892116`*^9, 
   3.740837043956318*^9}, {3.740837206639434*^9, 3.7408372459374037`*^9}, 
   3.740837401026853*^9, 3.7408374593399887`*^9, 3.74083769588974*^9, {
   3.74083773616409*^9, 3.7408377619421573`*^9}, 3.7409286669563985`*^9, 
   3.741357941592676*^9, 3.7413580006643686`*^9, {3.741358036864564*^9, 
   3.7413580726906443`*^9}, 3.741358117868055*^9, 3.7413581891667776`*^9, 
   3.741358226297928*^9, {3.7413582584931955`*^9, 3.7413582857469196`*^9}, {
   3.7413583527964287`*^9, 3.7413583625396976`*^9}, {3.74135847240891*^9, 
   3.7413585221611505`*^9}, {3.741358559180173*^9, 3.7413585707250476`*^9}, 
   3.741358638399571*^9, {3.7413586962768745`*^9, 3.7413587398339095`*^9}, {
   3.7413588671754*^9, 3.7413589059393425`*^9}, 3.7413589626271067`*^9, {
   3.7413590350459094`*^9, 3.7413590504507008`*^9}, {3.741359081977558*^9, 
   3.7413591010992413`*^9}, 3.741442460688792*^9, 3.741442564304969*^9, {
   3.7414426248443255`*^9, 3.7414426609882927`*^9}, 3.741963622427905*^9, {
   3.74196383958853*^9, 3.7419638758057423`*^9}, 3.7419639551540008`*^9, 
   3.7419639933322372`*^9, 3.742037400061171*^9, 3.7420498857668047`*^9, {
   3.7420502475890555`*^9, 3.7420502679845877`*^9}, {3.742050364723462*^9, 
   3.7420503813141265`*^9}, {3.742050472572467*^9, 3.742050513222066*^9}, {
   3.7421394213906827`*^9, 3.7421394563166723`*^9}, 3.742139503394026*^9, {
   3.7421409279107122`*^9, 3.7421409320337305`*^9}, {3.742910262719613*^9, 
   3.7429102912403393`*^9}, {3.7429103519680023`*^9, 3.742910398192316*^9}, {
   3.7429104455945454`*^9, 3.742910467529888*^9}, 3.742910503070835*^9, {
   3.742910566440365*^9, 3.74291060510197*^9}, 3.742910717930231*^9, {
   3.742910775563102*^9, 3.7429107769284534`*^9}, {3.742910823570717*^9, 
   3.7429108491642685`*^9}, {3.742910879645751*^9, 3.742910892664936*^9}, {
   3.742910967385107*^9, 3.7429110234681225`*^9}, 3.7429110840820227`*^9, {
   3.7433323497352824`*^9, 3.743332367037017*^9}, {3.7433474964746914`*^9, 
   3.743347530433815*^9}, 3.7434297903053527`*^9, {3.7434299277927923`*^9, 
   3.743429940749124*^9}, 3.74342998588046*^9, 3.743430030378488*^9, 
   3.7434300617605853`*^9, 3.7434302812783427`*^9, 3.7469057257475505`*^9, 
   3.7469057667316523`*^9, 3.7469058203331485`*^9, 3.7469058776018143`*^9, 
   3.7469059242880487`*^9, 3.746905979936598*^9, 3.746906049173217*^9, 
   3.746906095830412*^9, {3.7469061361509495`*^9, 3.7469061661261063`*^9}, {
   3.746906261824651*^9, 3.746906284155139*^9}, {3.746906351730229*^9, 
   3.746906424004863*^9}, {3.7469064711614723`*^9, 3.7469064841702595`*^9}, {
   3.746906716163183*^9, 3.746906732958398*^9}, {3.7469067970323687`*^9, 
   3.7469067989791355`*^9}, {3.746906837237792*^9, 3.746906906445565*^9}, {
   3.746907048997925*^9, 3.746907056189459*^9}, {3.746907159839006*^9, 
   3.746907166395967*^9}, {3.7469072149529524`*^9, 3.7469072495002937`*^9}, {
   3.746907307931864*^9, 3.746907314185636*^9}, 3.746907385288957*^9, {
   3.746907421984135*^9, 3.746907426733426*^9}, 3.7469075477259274`*^9, {
   3.746907581522535*^9, 3.746907616339115*^9}, 3.7469077178118763`*^9, {
   3.746907810965717*^9, 3.7469078365059886`*^9}, {3.746907962928939*^9, 
   3.746908071964071*^9}, {3.7469081254971685`*^9, 3.746908172874523*^9}, 
   3.747589945562894*^9, 3.7475900034390173`*^9, 3.7475900590522203`*^9, 
   3.747590123817062*^9, 3.747590161471408*^9, 3.747590194898007*^9, 
   3.747590271339799*^9, {3.747590403520733*^9, 3.7475904148445873`*^9}, 
   3.747590619138142*^9, 3.747590664121456*^9, {3.747590706524342*^9, 
   3.747590733623719*^9}, {3.74759078607934*^9, 3.747590813691744*^9}, {
   3.747590862688518*^9, 3.7475908924491873`*^9}, 3.747590971755274*^9, {
   3.747591032986807*^9, 3.747591051510364*^9}, 3.747595090142054*^9, 
   3.747595216912367*^9, 3.747595696661613*^9, 3.747595819950645*^9, {
   3.7475958573986187`*^9, 3.7475960260851927`*^9}, {3.7475960711250563`*^9, 
   3.747596125086741*^9}, {3.747596157601453*^9, 3.7475961794396772`*^9}, 
   3.747596222210511*^9, {3.747596260449317*^9, 3.7475962822634974`*^9}, 
   3.747596362912643*^9, 3.748039958868162*^9, 3.7480400534809227`*^9, {
   3.748040113583451*^9, 3.7480401529431443`*^9}, 3.748641576950674*^9, {
   3.748641668454906*^9, 3.748641691986275*^9}, {3.7486417377317405`*^9, 
   3.7486418290181093`*^9}, {3.748641885620783*^9, 3.748641939845162*^9}, {
   3.748642137651784*^9, 3.7486421463176746`*^9}, {3.7486422260880356`*^9, 
   3.748642230164755*^9}, {3.7486423740827694`*^9, 3.748642377978324*^9}, {
   3.7486424280567436`*^9, 3.748642431350751*^9}, {3.748642474251687*^9, 
   3.748642534715556*^9}, {3.7486425999517946`*^9, 3.7486426335971394`*^9}, {
   3.748642666745225*^9, 3.7486426697249465`*^9}, {3.7486427102897367`*^9, 
   3.7486428124235687`*^9}, {3.7486428715612607`*^9, 
   3.7486428739144125`*^9}, {3.748642905599134*^9, 3.7486429072466307`*^9}, {
   3.74864300149327*^9, 3.748643051500194*^9}, {3.748643110514918*^9, 
   3.7486431581902714`*^9}, {3.748643265467909*^9, 3.748643271699586*^9}, {
   3.7486433387465677`*^9, 3.7486433424609575`*^9}, {3.7486433846862097`*^9, 
   3.7486434654513955`*^9}, {3.748643501106807*^9, 3.748643519695693*^9}, 
   3.7499308221275973`*^9, {3.749931261426866*^9, 3.7499312669829063`*^9}, {
   3.7499321240114856`*^9, 3.7499321282303004`*^9}},
 CellLabel->"Out[1]=",
 CellID->129107899,ExpressionUUID->"4dc214cd-c8c6-49ae-8f91-c1237bd9fe49"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"0.875", "-", "0.25"}]], "Input",
 CellChangeTimes->{{3.7475907968874063`*^9, 3.747590800492413*^9}},
 CellID->1980587025,ExpressionUUID->"0a56cc4b-2a06-44e2-91e2-78c90310f16c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection",ExpressionUUID->"4e668a58-7ac2-4429-878e-3b2b690e3429"],

Cell[TextData[{
 "Heat is generated at a constant rate in either wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["A",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "315ec3e7-fe39-4f7c-b7f8-d6f4b0effb77"],
 " or ",
 Cell[BoxData[
  FormBox[
   StyleBox["B",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "5c2f3413-38ea-44d3-a2fb-968788219abe"],
 " (whichever wall is slowly changing color intensity), and the objective of \
this Demonstration is to identify the correct steady-state temperature \
profile in each wall. The thermal conductivity for each wall is indicated on \
the figure, and the contact resistance between the walls is given. The left \
side of wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["A",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "f75b9796-bc25-47c4-9e4e-51b4f95fb769"],
 " is insulated and heat is transferred from the right side of wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["C",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "0d93821b-f599-483f-9d3f-67d3f97b1752"],
 " to flowing air at 20\[Degree]C. Use buttons to select the correct \
temperature profile for each wall in sequence; check the \"hint\" box for \
help. Once you select a temperature profile for a wall, you must check \
\"solution\" before pressing the \"next\" button; you cannot move backwards.  \
Press the \"new problem\" button to start over with a new set of conditions."
}], "ManipulateCaption",
 CellChangeTimes->{{3.7404066069178085`*^9, 3.7404068006859627`*^9}, {
  3.7404949460913444`*^9, 3.7404950552625046`*^9}, {3.7404952071802073`*^9, 
  3.740495329441386*^9}, {3.7404953646420636`*^9, 3.7404957218568954`*^9}, {
  3.740497070835555*^9, 3.740497079297997*^9}, {3.7408378981919746`*^9, 
  3.7408379561241703`*^9}, {3.7414721153249216`*^9, 3.7414721164260917`*^9}, {
  3.7414728585126762`*^9, 3.741472884160941*^9}, {3.7414729172223916`*^9, 
  3.741472928131694*^9}, {3.748778542592663*^9, 3.7487785608251762`*^9}, {
  3.7487786168687286`*^9, 3.748778651668796*^9}, {3.7487788140955296`*^9, 
  3.7487788739196196`*^9}},ExpressionUUID->"bdfa55d2-ad3a-4e8f-8b27-\
09f5c4f34d82"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection",ExpressionUUID->"b591cb25-1e72-4582-978c-8d3d2bd8e67c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`answer$$ = " A ", $CellContext`CS$$ = 
    1, $CellContext`hint$$ = False, $CellContext`LA$$ = 
    0.026, $CellContext`LB$$ = 0.026, $CellContext`LC$$ = 
    0.026, $CellContext`reset$$ = 2, $CellContext`solution$$ = False, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`reset$$], 1}, 1, 1000, 1}, {{
       Hold[$CellContext`answer$$], " A "}, 0}, {{
       Hold[$CellContext`CS$$], 1, ""}, {1, 2, 3, 4}}, {{
       Hold[$CellContext`hint$$], False, "hint"}, {True, False}}, {{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {
      Hold[$CellContext`LA$$], 0.021}, {
      Hold[$CellContext`LB$$], 0.025}, {
      Hold[$CellContext`LC$$], 0.025}, {
      Hold[
       Grid[{{
          Button[" new problem ", {
            
            If[$CellContext`reset$$ < 
             1000, $CellContext`reset$$ = $CellContext`reset$$ + 
              1, $CellContext`reset$$ = $CellContext`reset$$ - 
              1], $CellContext`CS$$ = 1, $CellContext`solution$$ = 
            False, $CellContext`answer$$ = " a "}], SpanFromLeft, 
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          
          PaneSelector[{
           1 -> "1. Wall A temperature profile.", 2 -> 
            "2. Wall B temperature profile.", 3 -> 
            "3. Wall C temperature profile.", 4 -> ""}, 
           Dynamic[$CellContext`CS$$]], 
          Manipulate`Place[3], 
          PaneSelector[{1 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
            2 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
            3 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]]}, 
           Dynamic[$CellContext`CS$$]], 
          PaneSelector[{1 -> Manipulate`Place[4], 3 -> Manipulate`Place[4]}, 
           Dynamic[$CellContext`CS$$]], 
          
          PaneSelector[{
           1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
            Manipulate`Place[5]}, 
           Dynamic[$CellContext`CS$$]], 
          Manipulate`Place[6], 
          Manipulate`Place[7], 
          Manipulate`Place[8]}}]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       PaneSelector[{1 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {
           " A ", " B ", " C ", " D ", " E "}, Enabled -> 
           If[$CellContext`solution$$, False, True]], 2 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {
           " A ", " B ", " C ", " D ", " E "}, Enabled -> 
           If[$CellContext`solution$$, False, True]], 3 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {" A ", " B ", " C ", " D "}, 
           Enabled -> If[$CellContext`solution$$, False, True]]}, 
        Dynamic[$CellContext`CS$$]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {197., 203.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`reset$105772$$ = 0, $CellContext`CS$105773$$ = 
    0, $CellContext`hint$105774$$ = False, $CellContext`solution$105775$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`answer$$ = " A ", $CellContext`CS$$ = 
        1, $CellContext`hint$$ = False, $CellContext`LA$$ = 
        0.021, $CellContext`LB$$ = 0.025, $CellContext`LC$$ = 
        0.025, $CellContext`reset$$ = 1, $CellContext`solution$$ = False}, 
      "ControllerVariables" :> {
        Hold[$CellContext`reset$$, $CellContext`reset$105772$$, 0], 
        Hold[$CellContext`CS$$, $CellContext`CS$105773$$, 0], 
        Hold[$CellContext`hint$$, $CellContext`hint$105774$$, False], 
        Hold[$CellContext`solution$$, $CellContext`solution$105775$$, False]},
       "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`wall$, $CellContext`kA$, $CellContext`kB$, \
$CellContext`kC$, $CellContext`Qdot$, $CellContext`Rtc$, $CellContext`T\
\[Infinity]$, $CellContext`h$, $CellContext`qflux$, $CellContext`sol$, \
$CellContext`T$, $CellContext`Ts1$, $CellContext`Ts2$, $CellContext`Ts3$, \
$CellContext`Ts4$, $CellContext`Ts5$, $CellContext`Ts6$, \
$CellContext`TProfile$, $CellContext`TA$, $CellContext`TB$, $CellContext`TC$, \
$CellContext`T1$, $CellContext`T2$, $CellContext`colA$, $CellContext`colB$, \
$CellContext`colC$, $CellContext`colS$, $CellContext`colAns$, \
$CellContext`pt$, $CellContext`list$, $CellContext`label$, \
$CellContext`plotlabel$}, 
        SeedRandom[$CellContext`reset$$]; $CellContext`wall$ = 
         RandomInteger[{1, 2}]; $CellContext`kA$ = RandomChoice[
           Range[0.26, 0.3, 0.01]]; $CellContext`kB$ = RandomChoice[
           Range[0.12, 0.13, 0.01]]; $CellContext`kC$ = RandomChoice[
           Range[0.13, 0.18, 0.01]]; $CellContext`LA$$ = 
         0.026; $CellContext`LB$$ = 0.026; $CellContext`LC$$ = 
         0.026; $CellContext`Qdot$ = 
         If[$CellContext`wall$ == 1, 10, 14]; $CellContext`Rtc$ = 
         0.08; $CellContext`T\[Infinity]$ = 20; $CellContext`h$ = 
         10; $CellContext`qflux$ = (1000 $CellContext`Qdot$) 
          If[$CellContext`wall$ == 
            1, $CellContext`LA$$, $CellContext`LB$$]; $CellContext`sol$ = Part[
           
           DSolve[{Derivative[
              2][$CellContext`t][$CellContext`z] == (-1000) \
($CellContext`Qdot$/
               If[$CellContext`wall$ == 
                1, $CellContext`kA$, $CellContext`kB$]), $CellContext`t[
               
               If[$CellContext`wall$ == 
                1, $CellContext`LA$$, $CellContext`LA$$ + $CellContext`LB$$]] == 
             If[$CellContext`wall$ == 
               1, $CellContext`Ts5$, $CellContext`Ts3$], 
             Derivative[1][$CellContext`t][
               If[$CellContext`wall$ == 1, 0, $CellContext`LA$$]] == 0}, 
            $CellContext`t[$CellContext`z], $CellContext`z], 
           1]; $CellContext`T$[
           Pattern[$CellContext`x$, 
            Blank[]]] := ReplaceAll[
           ReplaceAll[
            $CellContext`t[$CellContext`z], $CellContext`sol$], \
$CellContext`z -> $CellContext`x$]; $CellContext`Ts1$ = $CellContext`T\
\[Infinity]$ + $CellContext`qflux$/$CellContext`h$; $CellContext`Ts2$ = \
$CellContext`Ts1$ + $CellContext`qflux$ ($CellContext`LC$$/$CellContext`kC$); \
$CellContext`Ts3$ = $CellContext`Ts2$ + $CellContext`qflux$ $CellContext`Rtc$; \
$CellContext`Ts4$ = 
         If[$CellContext`wall$ == 1, {
           1000 $CellContext`LA$$, $CellContext`Ts3$ + $CellContext`qflux$ \
($CellContext`LB$$/$CellContext`kB$)}, 
           Table[{$CellContext`n, 
             $CellContext`T$[$CellContext`n/
              1000]}, {$CellContext`n, $CellContext`LA$$ 1000, 
             1000 ($CellContext`LA$$ + $CellContext`LB$$), 
             1}]]; $CellContext`Ts5$ = 
         If[$CellContext`wall$ == 1, 
           Part[$CellContext`Ts4$, 2] + $CellContext`qflux$ $CellContext`Rtc$, 
           $CellContext`T$[$CellContext`LA$$]]; $CellContext`Ts6$ = 
         If[$CellContext`wall$ == 1, 
           Table[{$CellContext`n, 
             $CellContext`T$[$CellContext`n/1000]}, {$CellContext`n, 
             0, $CellContext`LA$$ 1000, 1}], {0, 
            $CellContext`T$[$CellContext`LA$$]}]; $CellContext`TProfile$ = 
         Level[{$CellContext`Ts6$, {
            1000 $CellContext`LA$$, $CellContext`Ts5$}, $CellContext`Ts4$, {
            1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts3$}, \
{1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts2$}, {
            1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`Ts1$}}, {-2}]; $CellContext`TA$ = Join[
           
           If[$CellContext`wall$ == 
            1, $CellContext`Ts6$, {$CellContext`Ts6$}], {{
            1000 $CellContext`LA$$, $CellContext`Ts5$}}]; $CellContext`TB$ = 
         Join[
           
           If[$CellContext`wall$ == 
            1, {$CellContext`Ts4$}, $CellContext`Ts4$], {{
            1000 ($CellContext`LA$$ + $CellContext`LB$$), \
$CellContext`Ts3$}}]; $CellContext`TC$ = {{
           1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts2$}, {
           1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`Ts1$}}; $CellContext`T1$ = -5; $CellContext`T2$ = 
         275; $CellContext`colA$ = 
         RGBColor[0.25, 0.8, 0.9]; $CellContext`colB$ = 
         RGBColor[0.45, 0.9, 0]; $CellContext`colC$ = 
         RGBColor[1, 0.95, 0]; $CellContext`colS$ = 
         Purple; $CellContext`colAns$ = 
         Opacity[0.5, $CellContext`colS$]; $CellContext`pt$[
           Pattern[$CellContext`point, 
            Blank[]], 
           Pattern[$CellContext`col, 
            Blank[]]] := {$CellContext`col, 
           PointSize[0.025], 
           Point[$CellContext`point], White, 
           PointSize[0.015], 
           Point[$CellContext`point]}; $CellContext`list$ = 
         If[$CellContext`CS$$ == 3, 
           RandomSample[{" A ", " B ", " C ", " D "}], 
           
           RandomSample[{
            " A ", " B ", " C ", " D ", " E "}]]; $CellContext`label$[
           Pattern[$CellContext`part$, 
            Blank[]], 
           Pattern[$CellContext`color$, 
            Blank[]]] := Style[
           Part[$CellContext`list$, $CellContext`part$], 
           If[
           Part[$CellContext`list$, $CellContext`part$] == \
$CellContext`answer$$, {20, Bold}, 17], $CellContext`colS$, 
           Background -> $CellContext`color$]; $CellContext`plotlabel$ = 
         If[$CellContext`CS$$ == 4, 
           Column[{
             Row[{"Heat generation in wall ", 
               If[$CellContext`wall$ == 1, "A", "B"], 
               " = ", $CellContext`Qdot$, " kW/m."}], 
             Row[{"Contact resistance exists between walls ", 
               If[$CellContext`wall$ == 1, "A and B.", "B and C."]}]}], 
           If[$CellContext`hint$$, 
            
            Switch[$CellContext`CS$$, 1, 
             "There is no heat transfer from the left side", 2, "", 3, 
             "There is convective heat transfer from the right side."], 
            Column[{
              
              Row[{"Select the button that shows the correct temperature \
profile for wall ", 
                Switch[$CellContext`CS$$, 1, "A", 2, "B", 3, "C"], "."}], 
              Row[{"Heat generation in wall ", 
                If[$CellContext`wall$ == 1, "A", "B"], " = 10 kW/m.", 
                Spacer[30], 
                If[2 <= $CellContext`CS$$ <= 3, 
                 Row[{"Contact resistance = ", $CellContext`Rtc$, " W/[", 
                   Superscript["m", 2], " K]."}]]}]}]]]; Graphics[{
           Line[
            Table[{{-5, 25 + $CellContext`n}, {
              0, 30 + $CellContext`n}}, {$CellContext`n, -10, 235, 15}]], 
           Text[
            Rotate[
             Style["insulation ", 17, Background -> White], 90 Degree], {-2.5,
              145}], {
            EdgeForm[Black], 
            FaceForm[
             If[$CellContext`wall$ == 1, {
               Opacity[
                Dynamic[0.3 + 0.7 Abs[
                    Cos[
                    Pi Clock[
                    1, 3]]]]], $CellContext`colA$}, $CellContext`colA$]], 
            
            Rectangle[{
             0, $CellContext`T1$}, {$CellContext`LA$$ 
              1000, $CellContext`T2$}]}, {
            EdgeForm[Black], 
            FaceForm[
             If[$CellContext`wall$ == 2, {
               Opacity[
                Dynamic[0.2 + 0.8 Abs[
                    Cos[
                    Pi Clock[
                    1, 3]]]]], $CellContext`colB$}, $CellContext`colB$]], 
            
            Rectangle[{$CellContext`LA$$ 1000, $CellContext`T1$}, {
             1000 ($CellContext`LA$$ + $CellContext`LB$$), \
$CellContext`T2$}]}, {
            EdgeForm[Black], 
            FaceForm[$CellContext`colC$], 
            
            Rectangle[{
             1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`T1$}, \
{1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`T2$}]}, 
           Apply[Text[
             Style[
              Row[{
                Subscript[
                 Style["k", Italic], #], " = ", #2, " W/[m K]"}], 
              16], {#3, $CellContext`T1$ + 12}]& , {{
             "A", $CellContext`kA$, 500 $CellContext`LA$$}, {
             "B", $CellContext`kB$, 1000 $CellContext`LA$$ + 
              500 $CellContext`LB$$}, {
             "C", $CellContext`kC$, 
              1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
              500 $CellContext`LC$$}}, {1}], 
           If[$CellContext`CS$$ == 1, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TA$]}], {Thick, Dashed, 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[1, $CellContext`colA$], 
                BezierFunction[#][0.2]]}& )[{{
                0, 1.15 Part[$CellContext`TA$, 1, 2]}, {
                250 $CellContext`LA$$, 1.5 Part[$CellContext`TA$, 1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, 1, 2]}}], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[2, $CellContext`colA$], 
                BezierFunction[#][0.35]]}& )[{{
                0, 1.15 Part[$CellContext`TA$, 1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, 1, 2]}}], {$CellContext`colAns$, 
               Line[$CellContext`TA$]}, 
              Text[
               $CellContext`label$[3, $CellContext`colA$], 
               BezierFunction[$CellContext`TA$][0.5]], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[4, $CellContext`colA$], 
                BezierFunction[#][0.65]]}& )[{{
                0, 0.8 Part[$CellContext`TA$, -1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, -1, 2]}}], 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[5, $CellContext`colA$], 
                BezierFunction[#][0.8]]}& )[{{
                0, 0.7 Part[$CellContext`TA$, -1, 2]}, {
                500 $CellContext`LA$$, 0.7 Part[$CellContext`TA$, -1, 2]}, {
                1000 $CellContext`LA$$, 0.85 
                 Part[$CellContext`TA$, -1, 2]}}]}}], 
           If[$CellContext`CS$$ > 1, {
             Thickness[0.006], 
             Line[$CellContext`TA$]}], 
           If[$CellContext`CS$$ == 2, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TB$]}], 
             If[$CellContext`wall$ == 1, {Thick, Dashed, 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[1, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TA$, -1, 2]}}], {$CellContext`colAns$, 
                Line[$CellContext`TB$]}, 
               Text[
                $CellContext`label$[2, $CellContext`colB$], 
                BezierFunction[$CellContext`TB$][0.35]], 
               ({{$CellContext`colAns$, 
                 BezierCurve[#]}, 
                Text[
                 $CellContext`label$[3, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TB$, 1, 2]}, {
                 1000 ($CellContext`LA$$ + 0.4 $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[4, $CellContext`colB$], 
                 BezierFunction[#][0.2]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[5, $CellContext`colB$], 
                 BezierFunction[#][0.25]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}]}, {Thick, Dashed, 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[1, $CellContext`colB$], 
                 BezierFunction[#][0.2]]}& )[
                
                Apply[{#, 0.9 #2}& , $CellContext`TB$, {
                 1}]], {$CellContext`colAns$, 
                Line[$CellContext`TB$]}, 
               Text[
                $CellContext`label$[2, $CellContext`colB$], 
                BezierFunction[$CellContext`TB$][0.35]], 
               ({{$CellContext`colAns$, 
                 BezierCurve[#]}, 
                Text[
                 $CellContext`label$[3, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + 0.4 $CellContext`LB$$), 1.3 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[4, $CellContext`colB$], 
                 BezierFunction[#][0.65]]}& )[{{
                 1000 $CellContext`LA$$, 0.9 Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.8 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[5, $CellContext`colB$], 
                 BezierFunction[#][0.8]]}& )[{{
                 1000 $CellContext`LA$$, 0.8 Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.8 
                  Part[$CellContext`TB$, -1, 2]}}]}]}], 
           If[$CellContext`CS$$ > 2, {
             Thickness[0.006], 
             Line[$CellContext`TB$]}], 
           If[$CellContext`CS$$ == 3, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TC$]}], {Thick, Dashed, 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[1, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                 Part[$CellContext`TB$, -1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 
                 Part[$CellContext`TB$, -1, 2]}}], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[2, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                 Part[$CellContext`TB$, -1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 
                 Part[$CellContext`TC$, -1, 2] + (
                  Part[$CellContext`TB$, -1, 2] - 
                  Part[$CellContext`TC$, 1, 2])}}], {$CellContext`colAns$, 
               Line[$CellContext`TC$]}, 
              Text[
               $CellContext`label$[3, $CellContext`colC$], 
               BezierFunction[$CellContext`TC$][0.5]], 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[4, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.9 
                 Part[$CellContext`TC$, 1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + 
                  0.3 $CellContext`LC$$), 0.4 Part[$CellContext`TC$, 1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 0.5 Part[$CellContext`TC$, -1, 2]}}]}}], 
           If[$CellContext`CS$$ > 3, {
             Thickness[0.006], 
             Line[$CellContext`TC$]}], {LightGray, 
            EdgeForm[{Thin, Black}], 
            
            Rectangle[{1000 $CellContext`LA$$ - 0.3, $CellContext`T1$}, {
             1000 $CellContext`LA$$ + 0.3, $CellContext`T2$}], 
            
            Rectangle[{
             1000 ($CellContext`LA$$ + $CellContext`LB$$) - 
              0.3, $CellContext`T1$}, {
             1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
              0.3, $CellContext`T2$}], Black, 
            PointSize[0.001], 
            Point[
             RandomPoint[
              
              Rectangle[{1000 $CellContext`LA$$ - 0.3, $CellContext`T1$}, {
               1000 $CellContext`LA$$ + 0.3, $CellContext`T2$}], 300]], 
            Point[
             RandomPoint[
              
              Rectangle[{
               1000 ($CellContext`LA$$ + $CellContext`LB$$) - 
                0.3, $CellContext`T1$}, {
               1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
                0.3, $CellContext`T2$}], 300]]}, 
           Map[
           Arrow[{{1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$) + #, $CellContext`T1$ + 15}, {
              1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$) + #, $CellContext`T2$ - 60}}]& , {5, 11, 17}], 
           Text[
            Style[
             Column[{
               Row[{
                 Subscript[
                  Style["T", Italic], "air"], 
                 " = ", $CellContext`T\[Infinity]$, " \[Degree]C"}], 
               Row[{
                 Style["h", Italic], " = ", $CellContext`h$, " W/[", 
                 Superscript["m", 2], " K]"}]}, Center], 17], {
            1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$) + 
             11, $CellContext`T2$ - 30}], {
            Arrowheads[0.03], 
            
            Arrow[{{(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 
               25}, {(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 85}}], 
            
            Arrow[{{(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 
               25}, {(0.65 1000) $CellContext`LA$$, $CellContext`T1$ + 25}}]}, 
           Text[
            Rotate[
             Style["temperature", 16], 90 
             Degree], {(0.08 1000) $CellContext`LA$$, $CellContext`T1$ + 50}], 
           Text[
            Style[
            "distance", 16], {(0.4 1000) $CellContext`LA$$, $CellContext`T1$ + 
             35}]}, ImageSize -> {600, 400}, AspectRatio -> Full, 
          PlotRange -> {{-5, All}, {$CellContext`T1$ - 1, $CellContext`T2$ + 
             5}}, PlotLabel -> Style[$CellContext`plotlabel$, 17, Black]]], 
      "Specifications" :> {{{$CellContext`reset$$, 1}, 1, 1000, 1, 
         ControlType -> None, ControlPlacement -> 
         1}, {{$CellContext`answer$$, " A "}, 0, ControlType -> None, 
         ControlPlacement -> 2}, {{$CellContext`CS$$, 1, ""}, {1, 2, 3, 4}, 
         ControlType -> None, ControlPlacement -> 
         3}, {{$CellContext`hint$$, False, "hint"}, {True, False}, 
         ControlPlacement -> 
         4}, {{$CellContext`solution$$, False, "solution"}, {True, False}, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         5}, {$CellContext`LA$$, 0.021, ControlType -> None, ControlPlacement -> 
         6}, {$CellContext`LB$$, 0.025, ControlType -> None, ControlPlacement -> 
         7}, {$CellContext`LC$$, 0.025, ControlType -> None, ControlPlacement -> 
         8}, 
        Grid[{{
           Button[" new problem ", {
             
             If[$CellContext`reset$$ < 
              1000, $CellContext`reset$$ = $CellContext`reset$$ + 
               1, $CellContext`reset$$ = $CellContext`reset$$ - 
               1], $CellContext`CS$$ = 1, $CellContext`solution$$ = 
             False, $CellContext`answer$$ = " a "}], SpanFromLeft, 
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           
           PaneSelector[{
            1 -> "1. Wall A temperature profile.", 2 -> 
             "2. Wall B temperature profile.", 3 -> 
             "3. Wall C temperature profile.", 4 -> ""}, 
            Dynamic[$CellContext`CS$$]], 
           Manipulate`Place[3], 
           PaneSelector[{1 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
             2 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
             3 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]]}, 
            Dynamic[$CellContext`CS$$]], 
           PaneSelector[{1 -> Manipulate`Place[4], 3 -> Manipulate`Place[4]}, 
            Dynamic[$CellContext`CS$$]], 
           
           PaneSelector[{
            1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
             Manipulate`Place[5]}, 
            Dynamic[$CellContext`CS$$]], 
           Manipulate`Place[6], 
           Manipulate`Place[7], 
           Manipulate`Place[8]}}], 
        PaneSelector[{1 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {
            " A ", " B ", " C ", " D ", " E "}, Enabled -> 
            If[$CellContext`solution$$, False, True]], 2 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {
            " A ", " B ", " C ", " D ", " E "}, Enabled -> 
            If[$CellContext`solution$$, False, True]], 3 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {" A ", " B ", " C ", " D "}, 
            Enabled -> If[$CellContext`solution$$, False, True]]}, 
         Dynamic[$CellContext`CS$$]]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{649., {254., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7398861581361284`*^9, 3.7398861821921835`*^9}, 
   3.739886328515486*^9, {3.739886569229165*^9, 3.7398866384794292`*^9}, 
   3.7398866717181296`*^9, {3.739886725982482*^9, 3.739886764801118*^9}, {
   3.739886852379656*^9, 3.739886867350623*^9}, 3.739886904049053*^9, 
   3.7398869545490017`*^9, {3.7398871553483286`*^9, 3.7398871763179674`*^9}, 
   3.73988728572692*^9, {3.73988744818804*^9, 3.739887494964662*^9}, {
   3.739887585753549*^9, 3.739887591564273*^9}, 3.7398876640458865`*^9, {
   3.7398885869632287`*^9, 3.7398886504231553`*^9}, 3.7398887876558065`*^9, {
   3.7398888181038384`*^9, 3.7398888311868763`*^9}, {3.739889027163328*^9, 
   3.7398890319083347`*^9}, 3.7398890737313943`*^9, 3.739889164286744*^9, 
   3.739889232426257*^9, {3.7398893291507998`*^9, 3.7398893507897725`*^9}, 
   3.739889451798864*^9, {3.7398894932860613`*^9, 3.7398895087926006`*^9}, 
   3.739889544415865*^9, {3.739889576637546*^9, 3.73988962929426*^9}, {
   3.739889763836508*^9, 3.739889775548913*^9}, {3.739889840026825*^9, 
   3.739889885067809*^9}, {3.739890865160185*^9, 3.739890877839771*^9}, 
   3.739891534214939*^9, {3.740148859556032*^9, 3.7401488822376766`*^9}, {
   3.7402319152435036`*^9, 3.7402319301333427`*^9}, 3.7402320193802547`*^9, {
   3.740232065756505*^9, 3.7402320845749145`*^9}, 3.7403243131952343`*^9, 
   3.740324532155945*^9, 3.740324608010602*^9, 3.740325138437014*^9, 
   3.740402038074424*^9, {3.740402079752214*^9, 3.740402127105771*^9}, 
   3.7404022714058886`*^9, 3.740402433220332*^9, 3.7404025507640867`*^9, {
   3.74040690588799*^9, 3.740406920913294*^9}, 3.7404069741010294`*^9, {
   3.740407011875176*^9, 3.740407022514721*^9}, {3.7404070543976936`*^9, 
   3.7404071328400183`*^9}, {3.7404071768063245`*^9, 3.740407184106427*^9}, 
   3.7404072284424863`*^9, 3.7404072841680875`*^9, 3.7404073651283474`*^9, {
   3.740407413797538*^9, 3.7404074193532085`*^9}, 3.740407521495319*^9, {
   3.740407564496058*^9, 3.7404076062003074`*^9}, {3.740407669148201*^9, 
   3.740407678921219*^9}, {3.740407797355013*^9, 3.74040785001694*^9}, 
   3.740407880055278*^9, {3.740407960848115*^9, 3.7404079801036406`*^9}, 
   3.740408017702592*^9, 3.7404080835373116`*^9, {3.7404082613455224`*^9, 
   3.740408407919528*^9}, 3.7404085011619186`*^9, {3.7404085579711833`*^9, 
   3.740408570402384*^9}, 3.740408606440935*^9, {3.740408671137686*^9, 
   3.7404087013581004`*^9}, 3.7404088815481596`*^9, 3.7404089312500563`*^9, {
   3.740408964086361*^9, 3.7404090428261175`*^9}, {3.7404091077076983`*^9, 
   3.740409113214405*^9}, 3.7404091763107834`*^9, {3.740409395756132*^9, 
   3.740409410290596*^9}, 3.740409447545277*^9, {3.74040948894062*^9, 
   3.740409514322141*^9}, 3.740409609206399*^9, 3.7404097490441637`*^9, 
   3.7404097821415577`*^9, {3.7404098259163465`*^9, 3.7404098525567303`*^9}, {
   3.740836503951112*^9, 3.7408365076033792`*^9}, 3.7408366119673924`*^9, 
   3.7408366494910965`*^9, 3.7408367116998353`*^9, {3.740836788532451*^9, 
   3.7408368309680605`*^9}, {3.7408368735541954`*^9, 3.7408368946518035`*^9}, 
   3.740836927881982*^9, 3.7408370059847918`*^9, {3.7408370394892116`*^9, 
   3.740837043956318*^9}, {3.740837206639434*^9, 3.7408372459374037`*^9}, 
   3.740837401026853*^9, 3.7408374593399887`*^9, 3.74083769588974*^9, {
   3.74083773616409*^9, 3.7408377619421573`*^9}, 3.7409286669563985`*^9, 
   3.741357941592676*^9, 3.7413580006643686`*^9, {3.741358036864564*^9, 
   3.7413580726906443`*^9}, 3.741358117868055*^9, 3.7413581891667776`*^9, 
   3.741358226297928*^9, {3.7413582584931955`*^9, 3.7413582857469196`*^9}, {
   3.7413583527964287`*^9, 3.7413583625396976`*^9}, {3.74135847240891*^9, 
   3.7413585221611505`*^9}, {3.741358559180173*^9, 3.7413585707250476`*^9}, 
   3.741358638399571*^9, {3.7413586962768745`*^9, 3.7413587398339095`*^9}, {
   3.7413588671754*^9, 3.7413589059393425`*^9}, 3.7413589626271067`*^9, {
   3.7413590350459094`*^9, 3.7413590504507008`*^9}, {3.741359081977558*^9, 
   3.7413591010992413`*^9}, 3.741442460688792*^9, 3.741442564304969*^9, {
   3.7414426248443255`*^9, 3.7414426609882927`*^9}, 3.741963622427905*^9, {
   3.74196383958853*^9, 3.7419638758057423`*^9}, 3.7419639551540008`*^9, 
   3.7419639933322372`*^9, 3.742037400061171*^9, 3.7420498857668047`*^9, {
   3.7420502475890555`*^9, 3.7420502679845877`*^9}, {3.742050364723462*^9, 
   3.7420503813141265`*^9}, {3.742050472572467*^9, 3.742050513222066*^9}, {
   3.7421394213906827`*^9, 3.7421394563166723`*^9}, 3.742139503394026*^9, {
   3.7421409279107122`*^9, 3.7421409320337305`*^9}, {3.742910262719613*^9, 
   3.7429102912403393`*^9}, {3.7429103519680023`*^9, 3.742910398192316*^9}, {
   3.7429104455945454`*^9, 3.742910467529888*^9}, 3.742910503070835*^9, {
   3.742910566440365*^9, 3.74291060510197*^9}, 3.742910717930231*^9, {
   3.742910775563102*^9, 3.7429107769284534`*^9}, {3.742910823570717*^9, 
   3.7429108491642685`*^9}, {3.742910879645751*^9, 3.742910892664936*^9}, {
   3.742910967385107*^9, 3.7429110234681225`*^9}, 3.7429110840820227`*^9, {
   3.7433323497352824`*^9, 3.743332367037017*^9}, {3.7433474964746914`*^9, 
   3.743347530433815*^9}, 3.7434297903053527`*^9, {3.7434299277927923`*^9, 
   3.743429940749124*^9}, 3.74342998588046*^9, 3.743430030378488*^9, 
   3.7434300617605853`*^9, 3.7434302812783427`*^9, 3.7469057257475505`*^9, 
   3.7469057667316523`*^9, 3.7469058203331485`*^9, 3.7469058776018143`*^9, 
   3.7469059242880487`*^9, 3.746905979936598*^9, 3.746906049173217*^9, 
   3.746906095830412*^9, {3.7469061361509495`*^9, 3.7469061661261063`*^9}, {
   3.746906261824651*^9, 3.746906284155139*^9}, {3.746906351730229*^9, 
   3.746906424004863*^9}, {3.7469064711614723`*^9, 3.7469064841702595`*^9}, {
   3.746906716163183*^9, 3.746906732958398*^9}, {3.7469067970323687`*^9, 
   3.7469067989791355`*^9}, {3.746906837237792*^9, 3.746906906445565*^9}, {
   3.746907048997925*^9, 3.746907056189459*^9}, {3.746907159839006*^9, 
   3.746907166395967*^9}, {3.7469072149529524`*^9, 3.7469072495002937`*^9}, {
   3.746907307931864*^9, 3.746907314185636*^9}, 3.746907385288957*^9, {
   3.746907421984135*^9, 3.746907426733426*^9}, 3.7469075477259274`*^9, {
   3.746907581522535*^9, 3.746907616339115*^9}, 3.7469077178118763`*^9, {
   3.746907810965717*^9, 3.7469078365059886`*^9}, {3.746907962928939*^9, 
   3.746908071964071*^9}, {3.7469081254971685`*^9, 3.746908172874523*^9}, 
   3.747589945562894*^9, 3.7475900034390173`*^9, 3.7475900590522203`*^9, 
   3.747590123817062*^9, 3.747590161471408*^9, 3.747590194898007*^9, 
   3.747590271339799*^9, {3.747590403520733*^9, 3.7475904148445873`*^9}, 
   3.747590619138142*^9, 3.747590664121456*^9, {3.747590706524342*^9, 
   3.747590733623719*^9}, {3.74759078607934*^9, 3.747590813691744*^9}, {
   3.747590862688518*^9, 3.7475908924491873`*^9}, 3.747590971755274*^9, {
   3.747591032986807*^9, 3.747591051510364*^9}, 3.747595090142054*^9, 
   3.747595216912367*^9, 3.747595696661613*^9, 3.747595819950645*^9, {
   3.7475958573986187`*^9, 3.7475960260851927`*^9}, {3.7475960711250563`*^9, 
   3.747596125086741*^9}, {3.747596157601453*^9, 3.7475961794396772`*^9}, 
   3.747596222210511*^9, {3.747596260449317*^9, 3.7475962822634974`*^9}, 
   3.747596362912643*^9, 3.748039958868162*^9, 3.7480400534809227`*^9, {
   3.748040113583451*^9, 3.7480401529431443`*^9}, 3.748641576950674*^9, {
   3.748641668454906*^9, 3.748641691986275*^9}, {3.7486417377317405`*^9, 
   3.7486418290181093`*^9}, {3.748641885620783*^9, 3.748641939845162*^9}, {
   3.748642137651784*^9, 3.7486421463176746`*^9}, {3.7486422260880356`*^9, 
   3.748642230164755*^9}, {3.7486423740827694`*^9, 3.748642377978324*^9}, {
   3.7486424280567436`*^9, 3.748642431350751*^9}, {3.748642474251687*^9, 
   3.748642534715556*^9}, {3.7486425999517946`*^9, 3.7486426335971394`*^9}, {
   3.748642666745225*^9, 3.7486426697249465`*^9}, {3.7486427102897367`*^9, 
   3.7486428124235687`*^9}, {3.7486428715612607`*^9, 
   3.7486428739144125`*^9}, {3.748642905599134*^9, 3.7486429072466307`*^9}, {
   3.74864300149327*^9, 3.748643051500194*^9}, {3.748643110514918*^9, 
   3.7486431581902714`*^9}, {3.748643265467909*^9, 3.748643271699586*^9}, {
   3.7486433387465677`*^9, 3.7486433424609575`*^9}, {3.7486433846862097`*^9, 
   3.7486434654513955`*^9}, {3.748643501106807*^9, 3.748643519695693*^9}, 
   3.7499308221275973`*^9},
 CellLabel->"Out[1]=",
 CellID->17050048,ExpressionUUID->"ef3f41e5-1284-4b2e-afdc-9e92b12b67bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection",ExpressionUUID->"7492f191-2e3e-4e93-a213-716c69fcbc0a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`answer$$ = " B ", $CellContext`CS$$ = 
    1, $CellContext`hint$$ = False, $CellContext`LA$$ = 
    0.026, $CellContext`LB$$ = 0.026, $CellContext`LC$$ = 
    0.026, $CellContext`reset$$ = 2, $CellContext`solution$$ = False, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`reset$$], 1}, 1, 1000, 1}, {{
       Hold[$CellContext`answer$$], " A "}, 0}, {{
       Hold[$CellContext`CS$$], 1, ""}, {1, 2, 3, 4}}, {{
       Hold[$CellContext`hint$$], False, "hint"}, {True, False}}, {{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {
      Hold[$CellContext`LA$$], 0.021}, {
      Hold[$CellContext`LB$$], 0.025}, {
      Hold[$CellContext`LC$$], 0.025}, {
      Hold[
       Grid[{{
          Button[" new problem ", {
            
            If[$CellContext`reset$$ < 
             1000, $CellContext`reset$$ = $CellContext`reset$$ + 
              1, $CellContext`reset$$ = $CellContext`reset$$ - 
              1], $CellContext`CS$$ = 1, $CellContext`solution$$ = 
            False, $CellContext`answer$$ = " a "}], SpanFromLeft, 
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          
          PaneSelector[{
           1 -> "1. Wall A temperature profile.", 2 -> 
            "2. Wall B temperature profile.", 3 -> 
            "3. Wall C temperature profile.", 4 -> ""}, 
           Dynamic[$CellContext`CS$$]], 
          Manipulate`Place[3], 
          PaneSelector[{1 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
            2 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
            3 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]]}, 
           Dynamic[$CellContext`CS$$]], 
          PaneSelector[{1 -> Manipulate`Place[4], 3 -> Manipulate`Place[4]}, 
           Dynamic[$CellContext`CS$$]], 
          
          PaneSelector[{
           1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
            Manipulate`Place[5]}, 
           Dynamic[$CellContext`CS$$]], 
          Manipulate`Place[6], 
          Manipulate`Place[7], 
          Manipulate`Place[8]}}]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       PaneSelector[{1 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {
           " A ", " B ", " C ", " D ", " E "}, Enabled -> 
           If[$CellContext`solution$$, False, True]], 2 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {
           " A ", " B ", " C ", " D ", " E "}, Enabled -> 
           If[$CellContext`solution$$, False, True]], 3 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {" A ", " B ", " C ", " D "}, 
           Enabled -> If[$CellContext`solution$$, False, True]]}, 
        Dynamic[$CellContext`CS$$]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {197., 203.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`reset$105772$$ = 0, $CellContext`CS$105773$$ = 
    0, $CellContext`hint$105774$$ = False, $CellContext`solution$105775$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`answer$$ = " A ", $CellContext`CS$$ = 
        1, $CellContext`hint$$ = False, $CellContext`LA$$ = 
        0.021, $CellContext`LB$$ = 0.025, $CellContext`LC$$ = 
        0.025, $CellContext`reset$$ = 1, $CellContext`solution$$ = False}, 
      "ControllerVariables" :> {
        Hold[$CellContext`reset$$, $CellContext`reset$105772$$, 0], 
        Hold[$CellContext`CS$$, $CellContext`CS$105773$$, 0], 
        Hold[$CellContext`hint$$, $CellContext`hint$105774$$, False], 
        Hold[$CellContext`solution$$, $CellContext`solution$105775$$, False]},
       "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`wall$, $CellContext`kA$, $CellContext`kB$, \
$CellContext`kC$, $CellContext`Qdot$, $CellContext`Rtc$, $CellContext`T\
\[Infinity]$, $CellContext`h$, $CellContext`qflux$, $CellContext`sol$, \
$CellContext`T$, $CellContext`Ts1$, $CellContext`Ts2$, $CellContext`Ts3$, \
$CellContext`Ts4$, $CellContext`Ts5$, $CellContext`Ts6$, \
$CellContext`TProfile$, $CellContext`TA$, $CellContext`TB$, $CellContext`TC$, \
$CellContext`T1$, $CellContext`T2$, $CellContext`colA$, $CellContext`colB$, \
$CellContext`colC$, $CellContext`colS$, $CellContext`colAns$, \
$CellContext`pt$, $CellContext`list$, $CellContext`label$, \
$CellContext`plotlabel$}, 
        SeedRandom[$CellContext`reset$$]; $CellContext`wall$ = 
         RandomInteger[{1, 2}]; $CellContext`kA$ = RandomChoice[
           Range[0.26, 0.3, 0.01]]; $CellContext`kB$ = RandomChoice[
           Range[0.12, 0.13, 0.01]]; $CellContext`kC$ = RandomChoice[
           Range[0.13, 0.18, 0.01]]; $CellContext`LA$$ = 
         0.026; $CellContext`LB$$ = 0.026; $CellContext`LC$$ = 
         0.026; $CellContext`Qdot$ = 
         If[$CellContext`wall$ == 1, 10, 14]; $CellContext`Rtc$ = 
         0.08; $CellContext`T\[Infinity]$ = 20; $CellContext`h$ = 
         10; $CellContext`qflux$ = (1000 $CellContext`Qdot$) 
          If[$CellContext`wall$ == 
            1, $CellContext`LA$$, $CellContext`LB$$]; $CellContext`sol$ = Part[
           
           DSolve[{Derivative[
              2][$CellContext`t][$CellContext`z] == (-1000) \
($CellContext`Qdot$/
               If[$CellContext`wall$ == 
                1, $CellContext`kA$, $CellContext`kB$]), $CellContext`t[
               
               If[$CellContext`wall$ == 
                1, $CellContext`LA$$, $CellContext`LA$$ + $CellContext`LB$$]] == 
             If[$CellContext`wall$ == 
               1, $CellContext`Ts5$, $CellContext`Ts3$], 
             Derivative[1][$CellContext`t][
               If[$CellContext`wall$ == 1, 0, $CellContext`LA$$]] == 0}, 
            $CellContext`t[$CellContext`z], $CellContext`z], 
           1]; $CellContext`T$[
           Pattern[$CellContext`x$, 
            Blank[]]] := ReplaceAll[
           ReplaceAll[
            $CellContext`t[$CellContext`z], $CellContext`sol$], \
$CellContext`z -> $CellContext`x$]; $CellContext`Ts1$ = $CellContext`T\
\[Infinity]$ + $CellContext`qflux$/$CellContext`h$; $CellContext`Ts2$ = \
$CellContext`Ts1$ + $CellContext`qflux$ ($CellContext`LC$$/$CellContext`kC$); \
$CellContext`Ts3$ = $CellContext`Ts2$ + $CellContext`qflux$ $CellContext`Rtc$; \
$CellContext`Ts4$ = 
         If[$CellContext`wall$ == 1, {
           1000 $CellContext`LA$$, $CellContext`Ts3$ + $CellContext`qflux$ \
($CellContext`LB$$/$CellContext`kB$)}, 
           Table[{$CellContext`n, 
             $CellContext`T$[$CellContext`n/
              1000]}, {$CellContext`n, $CellContext`LA$$ 1000, 
             1000 ($CellContext`LA$$ + $CellContext`LB$$), 
             1}]]; $CellContext`Ts5$ = 
         If[$CellContext`wall$ == 1, 
           Part[$CellContext`Ts4$, 2] + $CellContext`qflux$ $CellContext`Rtc$, 
           $CellContext`T$[$CellContext`LA$$]]; $CellContext`Ts6$ = 
         If[$CellContext`wall$ == 1, 
           Table[{$CellContext`n, 
             $CellContext`T$[$CellContext`n/1000]}, {$CellContext`n, 
             0, $CellContext`LA$$ 1000, 1}], {0, 
            $CellContext`T$[$CellContext`LA$$]}]; $CellContext`TProfile$ = 
         Level[{$CellContext`Ts6$, {
            1000 $CellContext`LA$$, $CellContext`Ts5$}, $CellContext`Ts4$, {
            1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts3$}, \
{1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts2$}, {
            1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`Ts1$}}, {-2}]; $CellContext`TA$ = Join[
           
           If[$CellContext`wall$ == 
            1, $CellContext`Ts6$, {$CellContext`Ts6$}], {{
            1000 $CellContext`LA$$, $CellContext`Ts5$}}]; $CellContext`TB$ = 
         Join[
           
           If[$CellContext`wall$ == 
            1, {$CellContext`Ts4$}, $CellContext`Ts4$], {{
            1000 ($CellContext`LA$$ + $CellContext`LB$$), \
$CellContext`Ts3$}}]; $CellContext`TC$ = {{
           1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts2$}, {
           1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`Ts1$}}; $CellContext`T1$ = -5; $CellContext`T2$ = 
         275; $CellContext`colA$ = 
         RGBColor[0.25, 0.8, 0.9]; $CellContext`colB$ = 
         RGBColor[0.45, 0.9, 0]; $CellContext`colC$ = 
         RGBColor[1, 0.95, 0]; $CellContext`colS$ = 
         Purple; $CellContext`colAns$ = 
         Opacity[0.5, $CellContext`colS$]; $CellContext`pt$[
           Pattern[$CellContext`point, 
            Blank[]], 
           Pattern[$CellContext`col, 
            Blank[]]] := {$CellContext`col, 
           PointSize[0.025], 
           Point[$CellContext`point], White, 
           PointSize[0.015], 
           Point[$CellContext`point]}; $CellContext`list$ = 
         If[$CellContext`CS$$ == 3, 
           RandomSample[{" A ", " B ", " C ", " D "}], 
           
           RandomSample[{
            " A ", " B ", " C ", " D ", " E "}]]; $CellContext`label$[
           Pattern[$CellContext`part$, 
            Blank[]], 
           Pattern[$CellContext`color$, 
            Blank[]]] := Style[
           Part[$CellContext`list$, $CellContext`part$], 
           If[
           Part[$CellContext`list$, $CellContext`part$] == \
$CellContext`answer$$, {20, Bold}, 17], $CellContext`colS$, 
           Background -> $CellContext`color$]; $CellContext`plotlabel$ = 
         If[$CellContext`CS$$ == 4, 
           Column[{
             Row[{"Heat generation in wall ", 
               If[$CellContext`wall$ == 1, "A", "B"], 
               " = ", $CellContext`Qdot$, " kW/m."}], 
             Row[{"Contact resistance exists between walls ", 
               If[$CellContext`wall$ == 1, "A and B.", "B and C."]}]}], 
           If[$CellContext`hint$$, 
            
            Switch[$CellContext`CS$$, 1, 
             "There is no heat transfer from the left side", 2, "", 3, 
             "There is convective heat transfer from the right side."], 
            Column[{
              
              Row[{"Select the button that shows the correct temperature \
profile for wall ", 
                Switch[$CellContext`CS$$, 1, "A", 2, "B", 3, "C"], "."}], 
              Row[{"Heat generation in wall ", 
                If[$CellContext`wall$ == 1, "A", "B"], " = 10 kW/m.", 
                Spacer[30], 
                If[2 <= $CellContext`CS$$ <= 3, 
                 Row[{"Contact resistance = ", $CellContext`Rtc$, " W/[", 
                   Superscript["m", 2], " K]."}]]}]}]]]; Graphics[{
           Line[
            Table[{{-5, 25 + $CellContext`n}, {
              0, 30 + $CellContext`n}}, {$CellContext`n, -10, 235, 15}]], 
           Text[
            Rotate[
             Style["insulation ", 17, Background -> White], 90 Degree], {-2.5,
              145}], {
            EdgeForm[Black], 
            FaceForm[
             If[$CellContext`wall$ == 1, {
               Opacity[
                Dynamic[0.3 + 0.7 Abs[
                    Cos[
                    Pi Clock[
                    1, 3]]]]], $CellContext`colA$}, $CellContext`colA$]], 
            
            Rectangle[{
             0, $CellContext`T1$}, {$CellContext`LA$$ 
              1000, $CellContext`T2$}]}, {
            EdgeForm[Black], 
            FaceForm[
             If[$CellContext`wall$ == 2, {
               Opacity[
                Dynamic[0.2 + 0.8 Abs[
                    Cos[
                    Pi Clock[
                    1, 3]]]]], $CellContext`colB$}, $CellContext`colB$]], 
            
            Rectangle[{$CellContext`LA$$ 1000, $CellContext`T1$}, {
             1000 ($CellContext`LA$$ + $CellContext`LB$$), \
$CellContext`T2$}]}, {
            EdgeForm[Black], 
            FaceForm[$CellContext`colC$], 
            
            Rectangle[{
             1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`T1$}, \
{1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`T2$}]}, 
           Apply[Text[
             Style[
              Row[{
                Subscript[
                 Style["k", Italic], #], " = ", #2, " W/[m K]"}], 
              16], {#3, $CellContext`T1$ + 12}]& , {{
             "A", $CellContext`kA$, 500 $CellContext`LA$$}, {
             "B", $CellContext`kB$, 1000 $CellContext`LA$$ + 
              500 $CellContext`LB$$}, {
             "C", $CellContext`kC$, 
              1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
              500 $CellContext`LC$$}}, {1}], 
           If[$CellContext`CS$$ == 1, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TA$]}], {Thick, Dashed, 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[1, $CellContext`colA$], 
                BezierFunction[#][0.2]]}& )[{{
                0, 1.15 Part[$CellContext`TA$, 1, 2]}, {
                250 $CellContext`LA$$, 1.5 Part[$CellContext`TA$, 1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, 1, 2]}}], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[2, $CellContext`colA$], 
                BezierFunction[#][0.35]]}& )[{{
                0, 1.15 Part[$CellContext`TA$, 1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, 1, 2]}}], {$CellContext`colAns$, 
               Line[$CellContext`TA$]}, 
              Text[
               $CellContext`label$[3, $CellContext`colA$], 
               BezierFunction[$CellContext`TA$][0.5]], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[4, $CellContext`colA$], 
                BezierFunction[#][0.65]]}& )[{{
                0, 0.8 Part[$CellContext`TA$, -1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, -1, 2]}}], 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[5, $CellContext`colA$], 
                BezierFunction[#][0.8]]}& )[{{
                0, 0.7 Part[$CellContext`TA$, -1, 2]}, {
                500 $CellContext`LA$$, 0.7 Part[$CellContext`TA$, -1, 2]}, {
                1000 $CellContext`LA$$, 0.85 
                 Part[$CellContext`TA$, -1, 2]}}]}}], 
           If[$CellContext`CS$$ > 1, {
             Thickness[0.006], 
             Line[$CellContext`TA$]}], 
           If[$CellContext`CS$$ == 2, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TB$]}], 
             If[$CellContext`wall$ == 1, {Thick, Dashed, 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[1, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TA$, -1, 2]}}], {$CellContext`colAns$, 
                Line[$CellContext`TB$]}, 
               Text[
                $CellContext`label$[2, $CellContext`colB$], 
                BezierFunction[$CellContext`TB$][0.35]], 
               ({{$CellContext`colAns$, 
                 BezierCurve[#]}, 
                Text[
                 $CellContext`label$[3, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TB$, 1, 2]}, {
                 1000 ($CellContext`LA$$ + 0.4 $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[4, $CellContext`colB$], 
                 BezierFunction[#][0.2]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[5, $CellContext`colB$], 
                 BezierFunction[#][0.25]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}]}, {Thick, Dashed, 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[1, $CellContext`colB$], 
                 BezierFunction[#][0.2]]}& )[
                
                Apply[{#, 0.9 #2}& , $CellContext`TB$, {
                 1}]], {$CellContext`colAns$, 
                Line[$CellContext`TB$]}, 
               Text[
                $CellContext`label$[2, $CellContext`colB$], 
                BezierFunction[$CellContext`TB$][0.35]], 
               ({{$CellContext`colAns$, 
                 BezierCurve[#]}, 
                Text[
                 $CellContext`label$[3, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + 0.4 $CellContext`LB$$), 1.3 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[4, $CellContext`colB$], 
                 BezierFunction[#][0.65]]}& )[{{
                 1000 $CellContext`LA$$, 0.9 Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.8 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[5, $CellContext`colB$], 
                 BezierFunction[#][0.8]]}& )[{{
                 1000 $CellContext`LA$$, 0.8 Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.8 
                  Part[$CellContext`TB$, -1, 2]}}]}]}], 
           If[$CellContext`CS$$ > 2, {
             Thickness[0.006], 
             Line[$CellContext`TB$]}], 
           If[$CellContext`CS$$ == 3, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TC$]}], {Thick, Dashed, 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[1, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                 Part[$CellContext`TB$, -1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 
                 Part[$CellContext`TB$, -1, 2]}}], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[2, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                 Part[$CellContext`TB$, -1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 
                 Part[$CellContext`TC$, -1, 2] + (
                  Part[$CellContext`TB$, -1, 2] - 
                  Part[$CellContext`TC$, 1, 2])}}], {$CellContext`colAns$, 
               Line[$CellContext`TC$]}, 
              Text[
               $CellContext`label$[3, $CellContext`colC$], 
               BezierFunction[$CellContext`TC$][0.5]], 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[4, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.9 
                 Part[$CellContext`TC$, 1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + 
                  0.3 $CellContext`LC$$), 0.4 Part[$CellContext`TC$, 1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 0.5 Part[$CellContext`TC$, -1, 2]}}]}}], 
           If[$CellContext`CS$$ > 3, {
             Thickness[0.006], 
             Line[$CellContext`TC$]}], {LightGray, 
            EdgeForm[{Thin, Black}], 
            
            Rectangle[{1000 $CellContext`LA$$ - 0.3, $CellContext`T1$}, {
             1000 $CellContext`LA$$ + 0.3, $CellContext`T2$}], 
            
            Rectangle[{
             1000 ($CellContext`LA$$ + $CellContext`LB$$) - 
              0.3, $CellContext`T1$}, {
             1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
              0.3, $CellContext`T2$}], Black, 
            PointSize[0.001], 
            Point[
             RandomPoint[
              
              Rectangle[{1000 $CellContext`LA$$ - 0.3, $CellContext`T1$}, {
               1000 $CellContext`LA$$ + 0.3, $CellContext`T2$}], 300]], 
            Point[
             RandomPoint[
              
              Rectangle[{
               1000 ($CellContext`LA$$ + $CellContext`LB$$) - 
                0.3, $CellContext`T1$}, {
               1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
                0.3, $CellContext`T2$}], 300]]}, 
           Map[
           Arrow[{{1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$) + #, $CellContext`T1$ + 15}, {
              1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$) + #, $CellContext`T2$ - 60}}]& , {5, 11, 17}], 
           Text[
            Style[
             Column[{
               Row[{
                 Subscript[
                  Style["T", Italic], "air"], 
                 " = ", $CellContext`T\[Infinity]$, " \[Degree]C"}], 
               Row[{
                 Style["h", Italic], " = ", $CellContext`h$, " W/[", 
                 Superscript["m", 2], " K]"}]}, Center], 17], {
            1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$) + 
             11, $CellContext`T2$ - 30}], {
            Arrowheads[0.03], 
            
            Arrow[{{(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 
               25}, {(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 85}}], 
            
            Arrow[{{(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 
               25}, {(0.65 1000) $CellContext`LA$$, $CellContext`T1$ + 25}}]}, 
           Text[
            Rotate[
             Style["temperature", 16], 90 
             Degree], {(0.08 1000) $CellContext`LA$$, $CellContext`T1$ + 50}], 
           Text[
            Style[
            "distance", 16], {(0.4 1000) $CellContext`LA$$, $CellContext`T1$ + 
             35}]}, ImageSize -> {600, 400}, AspectRatio -> Full, 
          PlotRange -> {{-5, All}, {$CellContext`T1$ - 1, $CellContext`T2$ + 
             5}}, PlotLabel -> Style[$CellContext`plotlabel$, 17, Black]]], 
      "Specifications" :> {{{$CellContext`reset$$, 1}, 1, 1000, 1, 
         ControlType -> None, ControlPlacement -> 
         1}, {{$CellContext`answer$$, " A "}, 0, ControlType -> None, 
         ControlPlacement -> 2}, {{$CellContext`CS$$, 1, ""}, {1, 2, 3, 4}, 
         ControlType -> None, ControlPlacement -> 
         3}, {{$CellContext`hint$$, False, "hint"}, {True, False}, 
         ControlPlacement -> 
         4}, {{$CellContext`solution$$, False, "solution"}, {True, False}, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         5}, {$CellContext`LA$$, 0.021, ControlType -> None, ControlPlacement -> 
         6}, {$CellContext`LB$$, 0.025, ControlType -> None, ControlPlacement -> 
         7}, {$CellContext`LC$$, 0.025, ControlType -> None, ControlPlacement -> 
         8}, 
        Grid[{{
           Button[" new problem ", {
             
             If[$CellContext`reset$$ < 
              1000, $CellContext`reset$$ = $CellContext`reset$$ + 
               1, $CellContext`reset$$ = $CellContext`reset$$ - 
               1], $CellContext`CS$$ = 1, $CellContext`solution$$ = 
             False, $CellContext`answer$$ = " a "}], SpanFromLeft, 
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           
           PaneSelector[{
            1 -> "1. Wall A temperature profile.", 2 -> 
             "2. Wall B temperature profile.", 3 -> 
             "3. Wall C temperature profile.", 4 -> ""}, 
            Dynamic[$CellContext`CS$$]], 
           Manipulate`Place[3], 
           PaneSelector[{1 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
             2 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
             3 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]]}, 
            Dynamic[$CellContext`CS$$]], 
           PaneSelector[{1 -> Manipulate`Place[4], 3 -> Manipulate`Place[4]}, 
            Dynamic[$CellContext`CS$$]], 
           
           PaneSelector[{
            1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
             Manipulate`Place[5]}, 
            Dynamic[$CellContext`CS$$]], 
           Manipulate`Place[6], 
           Manipulate`Place[7], 
           Manipulate`Place[8]}}], 
        PaneSelector[{1 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {
            " A ", " B ", " C ", " D ", " E "}, Enabled -> 
            If[$CellContext`solution$$, False, True]], 2 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {
            " A ", " B ", " C ", " D ", " E "}, Enabled -> 
            If[$CellContext`solution$$, False, True]], 3 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {" A ", " B ", " C ", " D "}, 
            Enabled -> If[$CellContext`solution$$, False, True]]}, 
         Dynamic[$CellContext`CS$$]]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{649., {254., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7398861581361284`*^9, 3.7398861821921835`*^9}, 
   3.739886328515486*^9, {3.739886569229165*^9, 3.7398866384794292`*^9}, 
   3.7398866717181296`*^9, {3.739886725982482*^9, 3.739886764801118*^9}, {
   3.739886852379656*^9, 3.739886867350623*^9}, 3.739886904049053*^9, 
   3.7398869545490017`*^9, {3.7398871553483286`*^9, 3.7398871763179674`*^9}, 
   3.73988728572692*^9, {3.73988744818804*^9, 3.739887494964662*^9}, {
   3.739887585753549*^9, 3.739887591564273*^9}, 3.7398876640458865`*^9, {
   3.7398885869632287`*^9, 3.7398886504231553`*^9}, 3.7398887876558065`*^9, {
   3.7398888181038384`*^9, 3.7398888311868763`*^9}, {3.739889027163328*^9, 
   3.7398890319083347`*^9}, 3.7398890737313943`*^9, 3.739889164286744*^9, 
   3.739889232426257*^9, {3.7398893291507998`*^9, 3.7398893507897725`*^9}, 
   3.739889451798864*^9, {3.7398894932860613`*^9, 3.7398895087926006`*^9}, 
   3.739889544415865*^9, {3.739889576637546*^9, 3.73988962929426*^9}, {
   3.739889763836508*^9, 3.739889775548913*^9}, {3.739889840026825*^9, 
   3.739889885067809*^9}, {3.739890865160185*^9, 3.739890877839771*^9}, 
   3.739891534214939*^9, {3.740148859556032*^9, 3.7401488822376766`*^9}, {
   3.7402319152435036`*^9, 3.7402319301333427`*^9}, 3.7402320193802547`*^9, {
   3.740232065756505*^9, 3.7402320845749145`*^9}, 3.7403243131952343`*^9, 
   3.740324532155945*^9, 3.740324608010602*^9, 3.740325138437014*^9, 
   3.740402038074424*^9, {3.740402079752214*^9, 3.740402127105771*^9}, 
   3.7404022714058886`*^9, 3.740402433220332*^9, 3.7404025507640867`*^9, {
   3.74040690588799*^9, 3.740406920913294*^9}, 3.7404069741010294`*^9, {
   3.740407011875176*^9, 3.740407022514721*^9}, {3.7404070543976936`*^9, 
   3.7404071328400183`*^9}, {3.7404071768063245`*^9, 3.740407184106427*^9}, 
   3.7404072284424863`*^9, 3.7404072841680875`*^9, 3.7404073651283474`*^9, {
   3.740407413797538*^9, 3.7404074193532085`*^9}, 3.740407521495319*^9, {
   3.740407564496058*^9, 3.7404076062003074`*^9}, {3.740407669148201*^9, 
   3.740407678921219*^9}, {3.740407797355013*^9, 3.74040785001694*^9}, 
   3.740407880055278*^9, {3.740407960848115*^9, 3.7404079801036406`*^9}, 
   3.740408017702592*^9, 3.7404080835373116`*^9, {3.7404082613455224`*^9, 
   3.740408407919528*^9}, 3.7404085011619186`*^9, {3.7404085579711833`*^9, 
   3.740408570402384*^9}, 3.740408606440935*^9, {3.740408671137686*^9, 
   3.7404087013581004`*^9}, 3.7404088815481596`*^9, 3.7404089312500563`*^9, {
   3.740408964086361*^9, 3.7404090428261175`*^9}, {3.7404091077076983`*^9, 
   3.740409113214405*^9}, 3.7404091763107834`*^9, {3.740409395756132*^9, 
   3.740409410290596*^9}, 3.740409447545277*^9, {3.74040948894062*^9, 
   3.740409514322141*^9}, 3.740409609206399*^9, 3.7404097490441637`*^9, 
   3.7404097821415577`*^9, {3.7404098259163465`*^9, 3.7404098525567303`*^9}, {
   3.740836503951112*^9, 3.7408365076033792`*^9}, 3.7408366119673924`*^9, 
   3.7408366494910965`*^9, 3.7408367116998353`*^9, {3.740836788532451*^9, 
   3.7408368309680605`*^9}, {3.7408368735541954`*^9, 3.7408368946518035`*^9}, 
   3.740836927881982*^9, 3.7408370059847918`*^9, {3.7408370394892116`*^9, 
   3.740837043956318*^9}, {3.740837206639434*^9, 3.7408372459374037`*^9}, 
   3.740837401026853*^9, 3.7408374593399887`*^9, 3.74083769588974*^9, {
   3.74083773616409*^9, 3.7408377619421573`*^9}, 3.7409286669563985`*^9, 
   3.741357941592676*^9, 3.7413580006643686`*^9, {3.741358036864564*^9, 
   3.7413580726906443`*^9}, 3.741358117868055*^9, 3.7413581891667776`*^9, 
   3.741358226297928*^9, {3.7413582584931955`*^9, 3.7413582857469196`*^9}, {
   3.7413583527964287`*^9, 3.7413583625396976`*^9}, {3.74135847240891*^9, 
   3.7413585221611505`*^9}, {3.741358559180173*^9, 3.7413585707250476`*^9}, 
   3.741358638399571*^9, {3.7413586962768745`*^9, 3.7413587398339095`*^9}, {
   3.7413588671754*^9, 3.7413589059393425`*^9}, 3.7413589626271067`*^9, {
   3.7413590350459094`*^9, 3.7413590504507008`*^9}, {3.741359081977558*^9, 
   3.7413591010992413`*^9}, 3.741442460688792*^9, 3.741442564304969*^9, {
   3.7414426248443255`*^9, 3.7414426609882927`*^9}, 3.741963622427905*^9, {
   3.74196383958853*^9, 3.7419638758057423`*^9}, 3.7419639551540008`*^9, 
   3.7419639933322372`*^9, 3.742037400061171*^9, 3.7420498857668047`*^9, {
   3.7420502475890555`*^9, 3.7420502679845877`*^9}, {3.742050364723462*^9, 
   3.7420503813141265`*^9}, {3.742050472572467*^9, 3.742050513222066*^9}, {
   3.7421394213906827`*^9, 3.7421394563166723`*^9}, 3.742139503394026*^9, {
   3.7421409279107122`*^9, 3.7421409320337305`*^9}, {3.742910262719613*^9, 
   3.7429102912403393`*^9}, {3.7429103519680023`*^9, 3.742910398192316*^9}, {
   3.7429104455945454`*^9, 3.742910467529888*^9}, 3.742910503070835*^9, {
   3.742910566440365*^9, 3.74291060510197*^9}, 3.742910717930231*^9, {
   3.742910775563102*^9, 3.7429107769284534`*^9}, {3.742910823570717*^9, 
   3.7429108491642685`*^9}, {3.742910879645751*^9, 3.742910892664936*^9}, {
   3.742910967385107*^9, 3.7429110234681225`*^9}, 3.7429110840820227`*^9, {
   3.7433323497352824`*^9, 3.743332367037017*^9}, {3.7433474964746914`*^9, 
   3.743347530433815*^9}, 3.7434297903053527`*^9, {3.7434299277927923`*^9, 
   3.743429940749124*^9}, 3.74342998588046*^9, 3.743430030378488*^9, 
   3.7434300617605853`*^9, 3.7434302812783427`*^9, 3.7469057257475505`*^9, 
   3.7469057667316523`*^9, 3.7469058203331485`*^9, 3.7469058776018143`*^9, 
   3.7469059242880487`*^9, 3.746905979936598*^9, 3.746906049173217*^9, 
   3.746906095830412*^9, {3.7469061361509495`*^9, 3.7469061661261063`*^9}, {
   3.746906261824651*^9, 3.746906284155139*^9}, {3.746906351730229*^9, 
   3.746906424004863*^9}, {3.7469064711614723`*^9, 3.7469064841702595`*^9}, {
   3.746906716163183*^9, 3.746906732958398*^9}, {3.7469067970323687`*^9, 
   3.7469067989791355`*^9}, {3.746906837237792*^9, 3.746906906445565*^9}, {
   3.746907048997925*^9, 3.746907056189459*^9}, {3.746907159839006*^9, 
   3.746907166395967*^9}, {3.7469072149529524`*^9, 3.7469072495002937`*^9}, {
   3.746907307931864*^9, 3.746907314185636*^9}, 3.746907385288957*^9, {
   3.746907421984135*^9, 3.746907426733426*^9}, 3.7469075477259274`*^9, {
   3.746907581522535*^9, 3.746907616339115*^9}, 3.7469077178118763`*^9, {
   3.746907810965717*^9, 3.7469078365059886`*^9}, {3.746907962928939*^9, 
   3.746908071964071*^9}, {3.7469081254971685`*^9, 3.746908172874523*^9}, 
   3.747589945562894*^9, 3.7475900034390173`*^9, 3.7475900590522203`*^9, 
   3.747590123817062*^9, 3.747590161471408*^9, 3.747590194898007*^9, 
   3.747590271339799*^9, {3.747590403520733*^9, 3.7475904148445873`*^9}, 
   3.747590619138142*^9, 3.747590664121456*^9, {3.747590706524342*^9, 
   3.747590733623719*^9}, {3.74759078607934*^9, 3.747590813691744*^9}, {
   3.747590862688518*^9, 3.7475908924491873`*^9}, 3.747590971755274*^9, {
   3.747591032986807*^9, 3.747591051510364*^9}, 3.747595090142054*^9, 
   3.747595216912367*^9, 3.747595696661613*^9, 3.747595819950645*^9, {
   3.7475958573986187`*^9, 3.7475960260851927`*^9}, {3.7475960711250563`*^9, 
   3.747596125086741*^9}, {3.747596157601453*^9, 3.7475961794396772`*^9}, 
   3.747596222210511*^9, {3.747596260449317*^9, 3.7475962822634974`*^9}, 
   3.747596362912643*^9, 3.748039958868162*^9, 3.7480400534809227`*^9, {
   3.748040113583451*^9, 3.7480401529431443`*^9}, 3.748641576950674*^9, {
   3.748641668454906*^9, 3.748641691986275*^9}, {3.7486417377317405`*^9, 
   3.7486418290181093`*^9}, {3.748641885620783*^9, 3.748641939845162*^9}, {
   3.748642137651784*^9, 3.7486421463176746`*^9}, {3.7486422260880356`*^9, 
   3.748642230164755*^9}, {3.7486423740827694`*^9, 3.748642377978324*^9}, {
   3.7486424280567436`*^9, 3.748642431350751*^9}, {3.748642474251687*^9, 
   3.748642534715556*^9}, {3.7486425999517946`*^9, 3.7486426335971394`*^9}, {
   3.748642666745225*^9, 3.7486426697249465`*^9}, {3.7486427102897367`*^9, 
   3.7486428124235687`*^9}, {3.7486428715612607`*^9, 
   3.7486428739144125`*^9}, {3.748642905599134*^9, 3.7486429072466307`*^9}, {
   3.74864300149327*^9, 3.748643051500194*^9}, {3.748643110514918*^9, 
   3.7486431581902714`*^9}, {3.748643265467909*^9, 3.748643271699586*^9}, {
   3.7486433387465677`*^9, 3.7486433424609575`*^9}, {3.7486433846862097`*^9, 
   3.7486434654513955`*^9}, {3.748643501106807*^9, 3.748643519695693*^9}, 
   3.7499308221275973`*^9},
 CellLabel->"Out[1]=",
 CellID->187560187,ExpressionUUID->"9f49b70d-d381-40fb-9e6f-188e4ff4874f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`answer$$ = " B ", $CellContext`CS$$ = 
    1, $CellContext`hint$$ = False, $CellContext`LA$$ = 
    0.026, $CellContext`LB$$ = 0.026, $CellContext`LC$$ = 
    0.026, $CellContext`reset$$ = 2, $CellContext`solution$$ = True, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`reset$$], 1}, 1, 1000, 1}, {{
       Hold[$CellContext`answer$$], " A "}, 0}, {{
       Hold[$CellContext`CS$$], 1, ""}, {1, 2, 3, 4}}, {{
       Hold[$CellContext`hint$$], False, "hint"}, {True, False}}, {{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {
      Hold[$CellContext`LA$$], 0.021}, {
      Hold[$CellContext`LB$$], 0.025}, {
      Hold[$CellContext`LC$$], 0.025}, {
      Hold[
       Grid[{{
          Button[" new problem ", {
            
            If[$CellContext`reset$$ < 
             1000, $CellContext`reset$$ = $CellContext`reset$$ + 
              1, $CellContext`reset$$ = $CellContext`reset$$ - 
              1], $CellContext`CS$$ = 1, $CellContext`solution$$ = 
            False, $CellContext`answer$$ = " a "}], SpanFromLeft, 
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          
          PaneSelector[{
           1 -> "1. Wall A temperature profile.", 2 -> 
            "2. Wall B temperature profile.", 3 -> 
            "3. Wall C temperature profile.", 4 -> ""}, 
           Dynamic[$CellContext`CS$$]], 
          Manipulate`Place[3], 
          PaneSelector[{1 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
            2 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
            3 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]]}, 
           Dynamic[$CellContext`CS$$]], 
          PaneSelector[{1 -> Manipulate`Place[4], 3 -> Manipulate`Place[4]}, 
           Dynamic[$CellContext`CS$$]], 
          
          PaneSelector[{
           1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
            Manipulate`Place[5]}, 
           Dynamic[$CellContext`CS$$]], 
          Manipulate`Place[6], 
          Manipulate`Place[7], 
          Manipulate`Place[8]}}]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       PaneSelector[{1 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {
           " A ", " B ", " C ", " D ", " E "}, Enabled -> 
           If[$CellContext`solution$$, False, True]], 2 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {
           " A ", " B ", " C ", " D ", " E "}, Enabled -> 
           If[$CellContext`solution$$, False, True]], 3 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {" A ", " B ", " C ", " D "}, 
           Enabled -> If[$CellContext`solution$$, False, True]]}, 
        Dynamic[$CellContext`CS$$]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {197., 203.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`reset$105772$$ = 0, $CellContext`CS$105773$$ = 
    0, $CellContext`hint$105774$$ = False, $CellContext`solution$105775$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`answer$$ = " A ", $CellContext`CS$$ = 
        1, $CellContext`hint$$ = False, $CellContext`LA$$ = 
        0.021, $CellContext`LB$$ = 0.025, $CellContext`LC$$ = 
        0.025, $CellContext`reset$$ = 1, $CellContext`solution$$ = False}, 
      "ControllerVariables" :> {
        Hold[$CellContext`reset$$, $CellContext`reset$105772$$, 0], 
        Hold[$CellContext`CS$$, $CellContext`CS$105773$$, 0], 
        Hold[$CellContext`hint$$, $CellContext`hint$105774$$, False], 
        Hold[$CellContext`solution$$, $CellContext`solution$105775$$, False]},
       "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`wall$, $CellContext`kA$, $CellContext`kB$, \
$CellContext`kC$, $CellContext`Qdot$, $CellContext`Rtc$, $CellContext`T\
\[Infinity]$, $CellContext`h$, $CellContext`qflux$, $CellContext`sol$, \
$CellContext`T$, $CellContext`Ts1$, $CellContext`Ts2$, $CellContext`Ts3$, \
$CellContext`Ts4$, $CellContext`Ts5$, $CellContext`Ts6$, \
$CellContext`TProfile$, $CellContext`TA$, $CellContext`TB$, $CellContext`TC$, \
$CellContext`T1$, $CellContext`T2$, $CellContext`colA$, $CellContext`colB$, \
$CellContext`colC$, $CellContext`colS$, $CellContext`colAns$, \
$CellContext`pt$, $CellContext`list$, $CellContext`label$, \
$CellContext`plotlabel$}, 
        SeedRandom[$CellContext`reset$$]; $CellContext`wall$ = 
         RandomInteger[{1, 2}]; $CellContext`kA$ = RandomChoice[
           Range[0.26, 0.3, 0.01]]; $CellContext`kB$ = RandomChoice[
           Range[0.12, 0.13, 0.01]]; $CellContext`kC$ = RandomChoice[
           Range[0.13, 0.18, 0.01]]; $CellContext`LA$$ = 
         0.026; $CellContext`LB$$ = 0.026; $CellContext`LC$$ = 
         0.026; $CellContext`Qdot$ = 
         If[$CellContext`wall$ == 1, 10, 14]; $CellContext`Rtc$ = 
         0.08; $CellContext`T\[Infinity]$ = 20; $CellContext`h$ = 
         10; $CellContext`qflux$ = (1000 $CellContext`Qdot$) 
          If[$CellContext`wall$ == 
            1, $CellContext`LA$$, $CellContext`LB$$]; $CellContext`sol$ = Part[
           
           DSolve[{Derivative[
              2][$CellContext`t][$CellContext`z] == (-1000) \
($CellContext`Qdot$/
               If[$CellContext`wall$ == 
                1, $CellContext`kA$, $CellContext`kB$]), $CellContext`t[
               
               If[$CellContext`wall$ == 
                1, $CellContext`LA$$, $CellContext`LA$$ + $CellContext`LB$$]] == 
             If[$CellContext`wall$ == 
               1, $CellContext`Ts5$, $CellContext`Ts3$], 
             Derivative[1][$CellContext`t][
               If[$CellContext`wall$ == 1, 0, $CellContext`LA$$]] == 0}, 
            $CellContext`t[$CellContext`z], $CellContext`z], 
           1]; $CellContext`T$[
           Pattern[$CellContext`x$, 
            Blank[]]] := ReplaceAll[
           ReplaceAll[
            $CellContext`t[$CellContext`z], $CellContext`sol$], \
$CellContext`z -> $CellContext`x$]; $CellContext`Ts1$ = $CellContext`T\
\[Infinity]$ + $CellContext`qflux$/$CellContext`h$; $CellContext`Ts2$ = \
$CellContext`Ts1$ + $CellContext`qflux$ ($CellContext`LC$$/$CellContext`kC$); \
$CellContext`Ts3$ = $CellContext`Ts2$ + $CellContext`qflux$ $CellContext`Rtc$; \
$CellContext`Ts4$ = 
         If[$CellContext`wall$ == 1, {
           1000 $CellContext`LA$$, $CellContext`Ts3$ + $CellContext`qflux$ \
($CellContext`LB$$/$CellContext`kB$)}, 
           Table[{$CellContext`n, 
             $CellContext`T$[$CellContext`n/
              1000]}, {$CellContext`n, $CellContext`LA$$ 1000, 
             1000 ($CellContext`LA$$ + $CellContext`LB$$), 
             1}]]; $CellContext`Ts5$ = 
         If[$CellContext`wall$ == 1, 
           Part[$CellContext`Ts4$, 2] + $CellContext`qflux$ $CellContext`Rtc$, 
           $CellContext`T$[$CellContext`LA$$]]; $CellContext`Ts6$ = 
         If[$CellContext`wall$ == 1, 
           Table[{$CellContext`n, 
             $CellContext`T$[$CellContext`n/1000]}, {$CellContext`n, 
             0, $CellContext`LA$$ 1000, 1}], {0, 
            $CellContext`T$[$CellContext`LA$$]}]; $CellContext`TProfile$ = 
         Level[{$CellContext`Ts6$, {
            1000 $CellContext`LA$$, $CellContext`Ts5$}, $CellContext`Ts4$, {
            1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts3$}, \
{1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts2$}, {
            1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`Ts1$}}, {-2}]; $CellContext`TA$ = Join[
           
           If[$CellContext`wall$ == 
            1, $CellContext`Ts6$, {$CellContext`Ts6$}], {{
            1000 $CellContext`LA$$, $CellContext`Ts5$}}]; $CellContext`TB$ = 
         Join[
           
           If[$CellContext`wall$ == 
            1, {$CellContext`Ts4$}, $CellContext`Ts4$], {{
            1000 ($CellContext`LA$$ + $CellContext`LB$$), \
$CellContext`Ts3$}}]; $CellContext`TC$ = {{
           1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts2$}, {
           1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`Ts1$}}; $CellContext`T1$ = -5; $CellContext`T2$ = 
         275; $CellContext`colA$ = 
         RGBColor[0.25, 0.8, 0.9]; $CellContext`colB$ = 
         RGBColor[0.45, 0.9, 0]; $CellContext`colC$ = 
         RGBColor[1, 0.95, 0]; $CellContext`colS$ = 
         Purple; $CellContext`colAns$ = 
         Opacity[0.5, $CellContext`colS$]; $CellContext`pt$[
           Pattern[$CellContext`point, 
            Blank[]], 
           Pattern[$CellContext`col, 
            Blank[]]] := {$CellContext`col, 
           PointSize[0.025], 
           Point[$CellContext`point], White, 
           PointSize[0.015], 
           Point[$CellContext`point]}; $CellContext`list$ = 
         If[$CellContext`CS$$ == 3, 
           RandomSample[{" A ", " B ", " C ", " D "}], 
           
           RandomSample[{
            " A ", " B ", " C ", " D ", " E "}]]; $CellContext`label$[
           Pattern[$CellContext`part$, 
            Blank[]], 
           Pattern[$CellContext`color$, 
            Blank[]]] := Style[
           Part[$CellContext`list$, $CellContext`part$], 
           If[
           Part[$CellContext`list$, $CellContext`part$] == \
$CellContext`answer$$, {20, Bold}, 17], $CellContext`colS$, 
           Background -> $CellContext`color$]; $CellContext`plotlabel$ = 
         If[$CellContext`CS$$ == 4, 
           Column[{
             Row[{"Heat generation in wall ", 
               If[$CellContext`wall$ == 1, "A", "B"], 
               " = ", $CellContext`Qdot$, " kW/m."}], 
             Row[{"Contact resistance exists between walls ", 
               If[$CellContext`wall$ == 1, "A and B.", "B and C."]}]}], 
           If[$CellContext`hint$$, 
            
            Switch[$CellContext`CS$$, 1, 
             "There is no heat transfer from the left side", 2, "", 3, 
             "There is convective heat transfer from the right side."], 
            Column[{
              
              Row[{"Select the button that shows the correct temperature \
profile for wall ", 
                Switch[$CellContext`CS$$, 1, "A", 2, "B", 3, "C"], "."}], 
              Row[{"Heat generation in wall ", 
                If[$CellContext`wall$ == 1, "A", "B"], " = 10 kW/m.", 
                Spacer[30], 
                If[2 <= $CellContext`CS$$ <= 3, 
                 Row[{"Contact resistance = ", $CellContext`Rtc$, " W/[", 
                   Superscript["m", 2], " K]."}]]}]}]]]; Graphics[{
           Line[
            Table[{{-5, 25 + $CellContext`n}, {
              0, 30 + $CellContext`n}}, {$CellContext`n, -10, 235, 15}]], 
           Text[
            Rotate[
             Style["insulation ", 17, Background -> White], 90 Degree], {-2.5,
              145}], {
            EdgeForm[Black], 
            FaceForm[
             If[$CellContext`wall$ == 1, {
               Opacity[
                Dynamic[0.3 + 0.7 Abs[
                    Cos[
                    Pi Clock[
                    1, 3]]]]], $CellContext`colA$}, $CellContext`colA$]], 
            
            Rectangle[{
             0, $CellContext`T1$}, {$CellContext`LA$$ 
              1000, $CellContext`T2$}]}, {
            EdgeForm[Black], 
            FaceForm[
             If[$CellContext`wall$ == 2, {
               Opacity[
                Dynamic[0.2 + 0.8 Abs[
                    Cos[
                    Pi Clock[
                    1, 3]]]]], $CellContext`colB$}, $CellContext`colB$]], 
            
            Rectangle[{$CellContext`LA$$ 1000, $CellContext`T1$}, {
             1000 ($CellContext`LA$$ + $CellContext`LB$$), \
$CellContext`T2$}]}, {
            EdgeForm[Black], 
            FaceForm[$CellContext`colC$], 
            
            Rectangle[{
             1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`T1$}, \
{1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`T2$}]}, 
           Apply[Text[
             Style[
              Row[{
                Subscript[
                 Style["k", Italic], #], " = ", #2, " W/[m K]"}], 
              16], {#3, $CellContext`T1$ + 12}]& , {{
             "A", $CellContext`kA$, 500 $CellContext`LA$$}, {
             "B", $CellContext`kB$, 1000 $CellContext`LA$$ + 
              500 $CellContext`LB$$}, {
             "C", $CellContext`kC$, 
              1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
              500 $CellContext`LC$$}}, {1}], 
           If[$CellContext`CS$$ == 1, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TA$]}], {Thick, Dashed, 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[1, $CellContext`colA$], 
                BezierFunction[#][0.2]]}& )[{{
                0, 1.15 Part[$CellContext`TA$, 1, 2]}, {
                250 $CellContext`LA$$, 1.5 Part[$CellContext`TA$, 1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, 1, 2]}}], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[2, $CellContext`colA$], 
                BezierFunction[#][0.35]]}& )[{{
                0, 1.15 Part[$CellContext`TA$, 1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, 1, 2]}}], {$CellContext`colAns$, 
               Line[$CellContext`TA$]}, 
              Text[
               $CellContext`label$[3, $CellContext`colA$], 
               BezierFunction[$CellContext`TA$][0.5]], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[4, $CellContext`colA$], 
                BezierFunction[#][0.65]]}& )[{{
                0, 0.8 Part[$CellContext`TA$, -1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, -1, 2]}}], 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[5, $CellContext`colA$], 
                BezierFunction[#][0.8]]}& )[{{
                0, 0.7 Part[$CellContext`TA$, -1, 2]}, {
                500 $CellContext`LA$$, 0.7 Part[$CellContext`TA$, -1, 2]}, {
                1000 $CellContext`LA$$, 0.85 
                 Part[$CellContext`TA$, -1, 2]}}]}}], 
           If[$CellContext`CS$$ > 1, {
             Thickness[0.006], 
             Line[$CellContext`TA$]}], 
           If[$CellContext`CS$$ == 2, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TB$]}], 
             If[$CellContext`wall$ == 1, {Thick, Dashed, 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[1, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TA$, -1, 2]}}], {$CellContext`colAns$, 
                Line[$CellContext`TB$]}, 
               Text[
                $CellContext`label$[2, $CellContext`colB$], 
                BezierFunction[$CellContext`TB$][0.35]], 
               ({{$CellContext`colAns$, 
                 BezierCurve[#]}, 
                Text[
                 $CellContext`label$[3, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TB$, 1, 2]}, {
                 1000 ($CellContext`LA$$ + 0.4 $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[4, $CellContext`colB$], 
                 BezierFunction[#][0.2]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[5, $CellContext`colB$], 
                 BezierFunction[#][0.25]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}]}, {Thick, Dashed, 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[1, $CellContext`colB$], 
                 BezierFunction[#][0.2]]}& )[
                
                Apply[{#, 0.9 #2}& , $CellContext`TB$, {
                 1}]], {$CellContext`colAns$, 
                Line[$CellContext`TB$]}, 
               Text[
                $CellContext`label$[2, $CellContext`colB$], 
                BezierFunction[$CellContext`TB$][0.35]], 
               ({{$CellContext`colAns$, 
                 BezierCurve[#]}, 
                Text[
                 $CellContext`label$[3, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + 0.4 $CellContext`LB$$), 1.3 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[4, $CellContext`colB$], 
                 BezierFunction[#][0.65]]}& )[{{
                 1000 $CellContext`LA$$, 0.9 Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.8 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[5, $CellContext`colB$], 
                 BezierFunction[#][0.8]]}& )[{{
                 1000 $CellContext`LA$$, 0.8 Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.8 
                  Part[$CellContext`TB$, -1, 2]}}]}]}], 
           If[$CellContext`CS$$ > 2, {
             Thickness[0.006], 
             Line[$CellContext`TB$]}], 
           If[$CellContext`CS$$ == 3, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TC$]}], {Thick, Dashed, 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[1, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                 Part[$CellContext`TB$, -1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 
                 Part[$CellContext`TB$, -1, 2]}}], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[2, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                 Part[$CellContext`TB$, -1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 
                 Part[$CellContext`TC$, -1, 2] + (
                  Part[$CellContext`TB$, -1, 2] - 
                  Part[$CellContext`TC$, 1, 2])}}], {$CellContext`colAns$, 
               Line[$CellContext`TC$]}, 
              Text[
               $CellContext`label$[3, $CellContext`colC$], 
               BezierFunction[$CellContext`TC$][0.5]], 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[4, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.9 
                 Part[$CellContext`TC$, 1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + 
                  0.3 $CellContext`LC$$), 0.4 Part[$CellContext`TC$, 1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 0.5 Part[$CellContext`TC$, -1, 2]}}]}}], 
           If[$CellContext`CS$$ > 3, {
             Thickness[0.006], 
             Line[$CellContext`TC$]}], {LightGray, 
            EdgeForm[{Thin, Black}], 
            
            Rectangle[{1000 $CellContext`LA$$ - 0.3, $CellContext`T1$}, {
             1000 $CellContext`LA$$ + 0.3, $CellContext`T2$}], 
            
            Rectangle[{
             1000 ($CellContext`LA$$ + $CellContext`LB$$) - 
              0.3, $CellContext`T1$}, {
             1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
              0.3, $CellContext`T2$}], Black, 
            PointSize[0.001], 
            Point[
             RandomPoint[
              
              Rectangle[{1000 $CellContext`LA$$ - 0.3, $CellContext`T1$}, {
               1000 $CellContext`LA$$ + 0.3, $CellContext`T2$}], 300]], 
            Point[
             RandomPoint[
              
              Rectangle[{
               1000 ($CellContext`LA$$ + $CellContext`LB$$) - 
                0.3, $CellContext`T1$}, {
               1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
                0.3, $CellContext`T2$}], 300]]}, 
           Map[
           Arrow[{{1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$) + #, $CellContext`T1$ + 15}, {
              1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$) + #, $CellContext`T2$ - 60}}]& , {5, 11, 17}], 
           Text[
            Style[
             Column[{
               Row[{
                 Subscript[
                  Style["T", Italic], "air"], 
                 " = ", $CellContext`T\[Infinity]$, " \[Degree]C"}], 
               Row[{
                 Style["h", Italic], " = ", $CellContext`h$, " W/[", 
                 Superscript["m", 2], " K]"}]}, Center], 17], {
            1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$) + 
             11, $CellContext`T2$ - 30}], {
            Arrowheads[0.03], 
            
            Arrow[{{(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 
               25}, {(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 85}}], 
            
            Arrow[{{(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 
               25}, {(0.65 1000) $CellContext`LA$$, $CellContext`T1$ + 25}}]}, 
           Text[
            Rotate[
             Style["temperature", 16], 90 
             Degree], {(0.08 1000) $CellContext`LA$$, $CellContext`T1$ + 50}], 
           Text[
            Style[
            "distance", 16], {(0.4 1000) $CellContext`LA$$, $CellContext`T1$ + 
             35}]}, ImageSize -> {600, 400}, AspectRatio -> Full, 
          PlotRange -> {{-5, All}, {$CellContext`T1$ - 1, $CellContext`T2$ + 
             5}}, PlotLabel -> Style[$CellContext`plotlabel$, 17, Black]]], 
      "Specifications" :> {{{$CellContext`reset$$, 1}, 1, 1000, 1, 
         ControlType -> None, ControlPlacement -> 
         1}, {{$CellContext`answer$$, " A "}, 0, ControlType -> None, 
         ControlPlacement -> 2}, {{$CellContext`CS$$, 1, ""}, {1, 2, 3, 4}, 
         ControlType -> None, ControlPlacement -> 
         3}, {{$CellContext`hint$$, False, "hint"}, {True, False}, 
         ControlPlacement -> 
         4}, {{$CellContext`solution$$, False, "solution"}, {True, False}, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         5}, {$CellContext`LA$$, 0.021, ControlType -> None, ControlPlacement -> 
         6}, {$CellContext`LB$$, 0.025, ControlType -> None, ControlPlacement -> 
         7}, {$CellContext`LC$$, 0.025, ControlType -> None, ControlPlacement -> 
         8}, 
        Grid[{{
           Button[" new problem ", {
             
             If[$CellContext`reset$$ < 
              1000, $CellContext`reset$$ = $CellContext`reset$$ + 
               1, $CellContext`reset$$ = $CellContext`reset$$ - 
               1], $CellContext`CS$$ = 1, $CellContext`solution$$ = 
             False, $CellContext`answer$$ = " a "}], SpanFromLeft, 
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           
           PaneSelector[{
            1 -> "1. Wall A temperature profile.", 2 -> 
             "2. Wall B temperature profile.", 3 -> 
             "3. Wall C temperature profile.", 4 -> ""}, 
            Dynamic[$CellContext`CS$$]], 
           Manipulate`Place[3], 
           PaneSelector[{1 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
             2 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
             3 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]]}, 
            Dynamic[$CellContext`CS$$]], 
           PaneSelector[{1 -> Manipulate`Place[4], 3 -> Manipulate`Place[4]}, 
            Dynamic[$CellContext`CS$$]], 
           
           PaneSelector[{
            1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
             Manipulate`Place[5]}, 
            Dynamic[$CellContext`CS$$]], 
           Manipulate`Place[6], 
           Manipulate`Place[7], 
           Manipulate`Place[8]}}], 
        PaneSelector[{1 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {
            " A ", " B ", " C ", " D ", " E "}, Enabled -> 
            If[$CellContext`solution$$, False, True]], 2 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {
            " A ", " B ", " C ", " D ", " E "}, Enabled -> 
            If[$CellContext`solution$$, False, True]], 3 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {" A ", " B ", " C ", " D "}, 
            Enabled -> If[$CellContext`solution$$, False, True]]}, 
         Dynamic[$CellContext`CS$$]]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{649., {254., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7398861581361284`*^9, 3.7398861821921835`*^9}, 
   3.739886328515486*^9, {3.739886569229165*^9, 3.7398866384794292`*^9}, 
   3.7398866717181296`*^9, {3.739886725982482*^9, 3.739886764801118*^9}, {
   3.739886852379656*^9, 3.739886867350623*^9}, 3.739886904049053*^9, 
   3.7398869545490017`*^9, {3.7398871553483286`*^9, 3.7398871763179674`*^9}, 
   3.73988728572692*^9, {3.73988744818804*^9, 3.739887494964662*^9}, {
   3.739887585753549*^9, 3.739887591564273*^9}, 3.7398876640458865`*^9, {
   3.7398885869632287`*^9, 3.7398886504231553`*^9}, 3.7398887876558065`*^9, {
   3.7398888181038384`*^9, 3.7398888311868763`*^9}, {3.739889027163328*^9, 
   3.7398890319083347`*^9}, 3.7398890737313943`*^9, 3.739889164286744*^9, 
   3.739889232426257*^9, {3.7398893291507998`*^9, 3.7398893507897725`*^9}, 
   3.739889451798864*^9, {3.7398894932860613`*^9, 3.7398895087926006`*^9}, 
   3.739889544415865*^9, {3.739889576637546*^9, 3.73988962929426*^9}, {
   3.739889763836508*^9, 3.739889775548913*^9}, {3.739889840026825*^9, 
   3.739889885067809*^9}, {3.739890865160185*^9, 3.739890877839771*^9}, 
   3.739891534214939*^9, {3.740148859556032*^9, 3.7401488822376766`*^9}, {
   3.7402319152435036`*^9, 3.7402319301333427`*^9}, 3.7402320193802547`*^9, {
   3.740232065756505*^9, 3.7402320845749145`*^9}, 3.7403243131952343`*^9, 
   3.740324532155945*^9, 3.740324608010602*^9, 3.740325138437014*^9, 
   3.740402038074424*^9, {3.740402079752214*^9, 3.740402127105771*^9}, 
   3.7404022714058886`*^9, 3.740402433220332*^9, 3.7404025507640867`*^9, {
   3.74040690588799*^9, 3.740406920913294*^9}, 3.7404069741010294`*^9, {
   3.740407011875176*^9, 3.740407022514721*^9}, {3.7404070543976936`*^9, 
   3.7404071328400183`*^9}, {3.7404071768063245`*^9, 3.740407184106427*^9}, 
   3.7404072284424863`*^9, 3.7404072841680875`*^9, 3.7404073651283474`*^9, {
   3.740407413797538*^9, 3.7404074193532085`*^9}, 3.740407521495319*^9, {
   3.740407564496058*^9, 3.7404076062003074`*^9}, {3.740407669148201*^9, 
   3.740407678921219*^9}, {3.740407797355013*^9, 3.74040785001694*^9}, 
   3.740407880055278*^9, {3.740407960848115*^9, 3.7404079801036406`*^9}, 
   3.740408017702592*^9, 3.7404080835373116`*^9, {3.7404082613455224`*^9, 
   3.740408407919528*^9}, 3.7404085011619186`*^9, {3.7404085579711833`*^9, 
   3.740408570402384*^9}, 3.740408606440935*^9, {3.740408671137686*^9, 
   3.7404087013581004`*^9}, 3.7404088815481596`*^9, 3.7404089312500563`*^9, {
   3.740408964086361*^9, 3.7404090428261175`*^9}, {3.7404091077076983`*^9, 
   3.740409113214405*^9}, 3.7404091763107834`*^9, {3.740409395756132*^9, 
   3.740409410290596*^9}, 3.740409447545277*^9, {3.74040948894062*^9, 
   3.740409514322141*^9}, 3.740409609206399*^9, 3.7404097490441637`*^9, 
   3.7404097821415577`*^9, {3.7404098259163465`*^9, 3.7404098525567303`*^9}, {
   3.740836503951112*^9, 3.7408365076033792`*^9}, 3.7408366119673924`*^9, 
   3.7408366494910965`*^9, 3.7408367116998353`*^9, {3.740836788532451*^9, 
   3.7408368309680605`*^9}, {3.7408368735541954`*^9, 3.7408368946518035`*^9}, 
   3.740836927881982*^9, 3.7408370059847918`*^9, {3.7408370394892116`*^9, 
   3.740837043956318*^9}, {3.740837206639434*^9, 3.7408372459374037`*^9}, 
   3.740837401026853*^9, 3.7408374593399887`*^9, 3.74083769588974*^9, {
   3.74083773616409*^9, 3.7408377619421573`*^9}, 3.7409286669563985`*^9, 
   3.741357941592676*^9, 3.7413580006643686`*^9, {3.741358036864564*^9, 
   3.7413580726906443`*^9}, 3.741358117868055*^9, 3.7413581891667776`*^9, 
   3.741358226297928*^9, {3.7413582584931955`*^9, 3.7413582857469196`*^9}, {
   3.7413583527964287`*^9, 3.7413583625396976`*^9}, {3.74135847240891*^9, 
   3.7413585221611505`*^9}, {3.741358559180173*^9, 3.7413585707250476`*^9}, 
   3.741358638399571*^9, {3.7413586962768745`*^9, 3.7413587398339095`*^9}, {
   3.7413588671754*^9, 3.7413589059393425`*^9}, 3.7413589626271067`*^9, {
   3.7413590350459094`*^9, 3.7413590504507008`*^9}, {3.741359081977558*^9, 
   3.7413591010992413`*^9}, 3.741442460688792*^9, 3.741442564304969*^9, {
   3.7414426248443255`*^9, 3.7414426609882927`*^9}, 3.741963622427905*^9, {
   3.74196383958853*^9, 3.7419638758057423`*^9}, 3.7419639551540008`*^9, 
   3.7419639933322372`*^9, 3.742037400061171*^9, 3.7420498857668047`*^9, {
   3.7420502475890555`*^9, 3.7420502679845877`*^9}, {3.742050364723462*^9, 
   3.7420503813141265`*^9}, {3.742050472572467*^9, 3.742050513222066*^9}, {
   3.7421394213906827`*^9, 3.7421394563166723`*^9}, 3.742139503394026*^9, {
   3.7421409279107122`*^9, 3.7421409320337305`*^9}, {3.742910262719613*^9, 
   3.7429102912403393`*^9}, {3.7429103519680023`*^9, 3.742910398192316*^9}, {
   3.7429104455945454`*^9, 3.742910467529888*^9}, 3.742910503070835*^9, {
   3.742910566440365*^9, 3.74291060510197*^9}, 3.742910717930231*^9, {
   3.742910775563102*^9, 3.7429107769284534`*^9}, {3.742910823570717*^9, 
   3.7429108491642685`*^9}, {3.742910879645751*^9, 3.742910892664936*^9}, {
   3.742910967385107*^9, 3.7429110234681225`*^9}, 3.7429110840820227`*^9, {
   3.7433323497352824`*^9, 3.743332367037017*^9}, {3.7433474964746914`*^9, 
   3.743347530433815*^9}, 3.7434297903053527`*^9, {3.7434299277927923`*^9, 
   3.743429940749124*^9}, 3.74342998588046*^9, 3.743430030378488*^9, 
   3.7434300617605853`*^9, 3.7434302812783427`*^9, 3.7469057257475505`*^9, 
   3.7469057667316523`*^9, 3.7469058203331485`*^9, 3.7469058776018143`*^9, 
   3.7469059242880487`*^9, 3.746905979936598*^9, 3.746906049173217*^9, 
   3.746906095830412*^9, {3.7469061361509495`*^9, 3.7469061661261063`*^9}, {
   3.746906261824651*^9, 3.746906284155139*^9}, {3.746906351730229*^9, 
   3.746906424004863*^9}, {3.7469064711614723`*^9, 3.7469064841702595`*^9}, {
   3.746906716163183*^9, 3.746906732958398*^9}, {3.7469067970323687`*^9, 
   3.7469067989791355`*^9}, {3.746906837237792*^9, 3.746906906445565*^9}, {
   3.746907048997925*^9, 3.746907056189459*^9}, {3.746907159839006*^9, 
   3.746907166395967*^9}, {3.7469072149529524`*^9, 3.7469072495002937`*^9}, {
   3.746907307931864*^9, 3.746907314185636*^9}, 3.746907385288957*^9, {
   3.746907421984135*^9, 3.746907426733426*^9}, 3.7469075477259274`*^9, {
   3.746907581522535*^9, 3.746907616339115*^9}, 3.7469077178118763`*^9, {
   3.746907810965717*^9, 3.7469078365059886`*^9}, {3.746907962928939*^9, 
   3.746908071964071*^9}, {3.7469081254971685`*^9, 3.746908172874523*^9}, 
   3.747589945562894*^9, 3.7475900034390173`*^9, 3.7475900590522203`*^9, 
   3.747590123817062*^9, 3.747590161471408*^9, 3.747590194898007*^9, 
   3.747590271339799*^9, {3.747590403520733*^9, 3.7475904148445873`*^9}, 
   3.747590619138142*^9, 3.747590664121456*^9, {3.747590706524342*^9, 
   3.747590733623719*^9}, {3.74759078607934*^9, 3.747590813691744*^9}, {
   3.747590862688518*^9, 3.7475908924491873`*^9}, 3.747590971755274*^9, {
   3.747591032986807*^9, 3.747591051510364*^9}, 3.747595090142054*^9, 
   3.747595216912367*^9, 3.747595696661613*^9, 3.747595819950645*^9, {
   3.7475958573986187`*^9, 3.7475960260851927`*^9}, {3.7475960711250563`*^9, 
   3.747596125086741*^9}, {3.747596157601453*^9, 3.7475961794396772`*^9}, 
   3.747596222210511*^9, {3.747596260449317*^9, 3.7475962822634974`*^9}, 
   3.747596362912643*^9, 3.748039958868162*^9, 3.7480400534809227`*^9, {
   3.748040113583451*^9, 3.7480401529431443`*^9}, 3.748641576950674*^9, {
   3.748641668454906*^9, 3.748641691986275*^9}, {3.7486417377317405`*^9, 
   3.7486418290181093`*^9}, {3.748641885620783*^9, 3.748641939845162*^9}, {
   3.748642137651784*^9, 3.7486421463176746`*^9}, {3.7486422260880356`*^9, 
   3.748642230164755*^9}, {3.7486423740827694`*^9, 3.748642377978324*^9}, {
   3.7486424280567436`*^9, 3.748642431350751*^9}, {3.748642474251687*^9, 
   3.748642534715556*^9}, {3.7486425999517946`*^9, 3.7486426335971394`*^9}, {
   3.748642666745225*^9, 3.7486426697249465`*^9}, {3.7486427102897367`*^9, 
   3.7486428124235687`*^9}, {3.7486428715612607`*^9, 
   3.7486428739144125`*^9}, {3.748642905599134*^9, 3.7486429072466307`*^9}, {
   3.74864300149327*^9, 3.748643051500194*^9}, {3.748643110514918*^9, 
   3.7486431581902714`*^9}, {3.748643265467909*^9, 3.748643271699586*^9}, {
   3.7486433387465677`*^9, 3.7486433424609575`*^9}, {3.7486433846862097`*^9, 
   3.7486434654513955`*^9}, {3.748643501106807*^9, 3.748643519695693*^9}, 
   3.7499308221275973`*^9, 3.749930868951091*^9},
 CellLabel->"Out[1]=",
 CellID->245603726,ExpressionUUID->"fa914277-1117-434d-af63-597f6024e25f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`answer$$ = " E ", $CellContext`CS$$ = 
    2, $CellContext`hint$$ = False, $CellContext`LA$$ = 
    0.026, $CellContext`LB$$ = 0.026, $CellContext`LC$$ = 
    0.026, $CellContext`reset$$ = 3, $CellContext`solution$$ = True, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`reset$$], 1}, 1, 1000, 1}, {{
       Hold[$CellContext`answer$$], " A "}, 0}, {{
       Hold[$CellContext`CS$$], 1, ""}, {1, 2, 3, 4}}, {{
       Hold[$CellContext`hint$$], False, "hint"}, {True, False}}, {{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {
      Hold[$CellContext`LA$$], 0.021}, {
      Hold[$CellContext`LB$$], 0.025}, {
      Hold[$CellContext`LC$$], 0.025}, {
      Hold[
       Grid[{{
          Button[" new problem ", {
            
            If[$CellContext`reset$$ < 
             1000, $CellContext`reset$$ = $CellContext`reset$$ + 
              1, $CellContext`reset$$ = $CellContext`reset$$ - 
              1], $CellContext`CS$$ = 1, $CellContext`solution$$ = 
            False, $CellContext`answer$$ = " a "}], SpanFromLeft, 
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          
          PaneSelector[{
           1 -> "1. Wall A temperature profile.", 2 -> 
            "2. Wall B temperature profile.", 3 -> 
            "3. Wall C temperature profile.", 4 -> ""}, 
           Dynamic[$CellContext`CS$$]], 
          Manipulate`Place[3], 
          PaneSelector[{1 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
            2 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
            3 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]]}, 
           Dynamic[$CellContext`CS$$]], 
          PaneSelector[{1 -> Manipulate`Place[4], 3 -> Manipulate`Place[4]}, 
           Dynamic[$CellContext`CS$$]], 
          
          PaneSelector[{
           1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
            Manipulate`Place[5]}, 
           Dynamic[$CellContext`CS$$]], 
          Manipulate`Place[6], 
          Manipulate`Place[7], 
          Manipulate`Place[8]}}]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       PaneSelector[{1 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {
           " A ", " B ", " C ", " D ", " E "}, Enabled -> 
           If[$CellContext`solution$$, False, True]], 2 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {
           " A ", " B ", " C ", " D ", " E "}, Enabled -> 
           If[$CellContext`solution$$, False, True]], 3 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {" A ", " B ", " C ", " D "}, 
           Enabled -> If[$CellContext`solution$$, False, True]]}, 
        Dynamic[$CellContext`CS$$]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {197., 203.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`reset$105772$$ = 0, $CellContext`CS$105773$$ = 
    0, $CellContext`hint$105774$$ = False, $CellContext`solution$105775$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`answer$$ = " A ", $CellContext`CS$$ = 
        1, $CellContext`hint$$ = False, $CellContext`LA$$ = 
        0.021, $CellContext`LB$$ = 0.025, $CellContext`LC$$ = 
        0.025, $CellContext`reset$$ = 1, $CellContext`solution$$ = False}, 
      "ControllerVariables" :> {
        Hold[$CellContext`reset$$, $CellContext`reset$105772$$, 0], 
        Hold[$CellContext`CS$$, $CellContext`CS$105773$$, 0], 
        Hold[$CellContext`hint$$, $CellContext`hint$105774$$, False], 
        Hold[$CellContext`solution$$, $CellContext`solution$105775$$, False]},
       "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`wall$, $CellContext`kA$, $CellContext`kB$, \
$CellContext`kC$, $CellContext`Qdot$, $CellContext`Rtc$, $CellContext`T\
\[Infinity]$, $CellContext`h$, $CellContext`qflux$, $CellContext`sol$, \
$CellContext`T$, $CellContext`Ts1$, $CellContext`Ts2$, $CellContext`Ts3$, \
$CellContext`Ts4$, $CellContext`Ts5$, $CellContext`Ts6$, \
$CellContext`TProfile$, $CellContext`TA$, $CellContext`TB$, $CellContext`TC$, \
$CellContext`T1$, $CellContext`T2$, $CellContext`colA$, $CellContext`colB$, \
$CellContext`colC$, $CellContext`colS$, $CellContext`colAns$, \
$CellContext`pt$, $CellContext`list$, $CellContext`label$, \
$CellContext`plotlabel$}, 
        SeedRandom[$CellContext`reset$$]; $CellContext`wall$ = 
         RandomInteger[{1, 2}]; $CellContext`kA$ = RandomChoice[
           Range[0.26, 0.3, 0.01]]; $CellContext`kB$ = RandomChoice[
           Range[0.12, 0.13, 0.01]]; $CellContext`kC$ = RandomChoice[
           Range[0.13, 0.18, 0.01]]; $CellContext`LA$$ = 
         0.026; $CellContext`LB$$ = 0.026; $CellContext`LC$$ = 
         0.026; $CellContext`Qdot$ = 
         If[$CellContext`wall$ == 1, 10, 14]; $CellContext`Rtc$ = 
         0.08; $CellContext`T\[Infinity]$ = 20; $CellContext`h$ = 
         10; $CellContext`qflux$ = (1000 $CellContext`Qdot$) 
          If[$CellContext`wall$ == 
            1, $CellContext`LA$$, $CellContext`LB$$]; $CellContext`sol$ = Part[
           
           DSolve[{Derivative[
              2][$CellContext`t][$CellContext`z] == (-1000) \
($CellContext`Qdot$/
               If[$CellContext`wall$ == 
                1, $CellContext`kA$, $CellContext`kB$]), $CellContext`t[
               
               If[$CellContext`wall$ == 
                1, $CellContext`LA$$, $CellContext`LA$$ + $CellContext`LB$$]] == 
             If[$CellContext`wall$ == 
               1, $CellContext`Ts5$, $CellContext`Ts3$], 
             Derivative[1][$CellContext`t][
               If[$CellContext`wall$ == 1, 0, $CellContext`LA$$]] == 0}, 
            $CellContext`t[$CellContext`z], $CellContext`z], 
           1]; $CellContext`T$[
           Pattern[$CellContext`x$, 
            Blank[]]] := ReplaceAll[
           ReplaceAll[
            $CellContext`t[$CellContext`z], $CellContext`sol$], \
$CellContext`z -> $CellContext`x$]; $CellContext`Ts1$ = $CellContext`T\
\[Infinity]$ + $CellContext`qflux$/$CellContext`h$; $CellContext`Ts2$ = \
$CellContext`Ts1$ + $CellContext`qflux$ ($CellContext`LC$$/$CellContext`kC$); \
$CellContext`Ts3$ = $CellContext`Ts2$ + $CellContext`qflux$ $CellContext`Rtc$; \
$CellContext`Ts4$ = 
         If[$CellContext`wall$ == 1, {
           1000 $CellContext`LA$$, $CellContext`Ts3$ + $CellContext`qflux$ \
($CellContext`LB$$/$CellContext`kB$)}, 
           Table[{$CellContext`n, 
             $CellContext`T$[$CellContext`n/
              1000]}, {$CellContext`n, $CellContext`LA$$ 1000, 
             1000 ($CellContext`LA$$ + $CellContext`LB$$), 
             1}]]; $CellContext`Ts5$ = 
         If[$CellContext`wall$ == 1, 
           Part[$CellContext`Ts4$, 2] + $CellContext`qflux$ $CellContext`Rtc$, 
           $CellContext`T$[$CellContext`LA$$]]; $CellContext`Ts6$ = 
         If[$CellContext`wall$ == 1, 
           Table[{$CellContext`n, 
             $CellContext`T$[$CellContext`n/1000]}, {$CellContext`n, 
             0, $CellContext`LA$$ 1000, 1}], {0, 
            $CellContext`T$[$CellContext`LA$$]}]; $CellContext`TProfile$ = 
         Level[{$CellContext`Ts6$, {
            1000 $CellContext`LA$$, $CellContext`Ts5$}, $CellContext`Ts4$, {
            1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts3$}, \
{1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts2$}, {
            1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`Ts1$}}, {-2}]; $CellContext`TA$ = Join[
           
           If[$CellContext`wall$ == 
            1, $CellContext`Ts6$, {$CellContext`Ts6$}], {{
            1000 $CellContext`LA$$, $CellContext`Ts5$}}]; $CellContext`TB$ = 
         Join[
           
           If[$CellContext`wall$ == 
            1, {$CellContext`Ts4$}, $CellContext`Ts4$], {{
            1000 ($CellContext`LA$$ + $CellContext`LB$$), \
$CellContext`Ts3$}}]; $CellContext`TC$ = {{
           1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts2$}, {
           1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`Ts1$}}; $CellContext`T1$ = -5; $CellContext`T2$ = 
         275; $CellContext`colA$ = 
         RGBColor[0.25, 0.8, 0.9]; $CellContext`colB$ = 
         RGBColor[0.45, 0.9, 0]; $CellContext`colC$ = 
         RGBColor[1, 0.95, 0]; $CellContext`colS$ = 
         Purple; $CellContext`colAns$ = 
         Opacity[0.5, $CellContext`colS$]; $CellContext`pt$[
           Pattern[$CellContext`point, 
            Blank[]], 
           Pattern[$CellContext`col, 
            Blank[]]] := {$CellContext`col, 
           PointSize[0.025], 
           Point[$CellContext`point], White, 
           PointSize[0.015], 
           Point[$CellContext`point]}; $CellContext`list$ = 
         If[$CellContext`CS$$ == 3, 
           RandomSample[{" A ", " B ", " C ", " D "}], 
           
           RandomSample[{
            " A ", " B ", " C ", " D ", " E "}]]; $CellContext`label$[
           Pattern[$CellContext`part$, 
            Blank[]], 
           Pattern[$CellContext`color$, 
            Blank[]]] := Style[
           Part[$CellContext`list$, $CellContext`part$], 
           If[
           Part[$CellContext`list$, $CellContext`part$] == \
$CellContext`answer$$, {20, Bold}, 17], $CellContext`colS$, 
           Background -> $CellContext`color$]; $CellContext`plotlabel$ = 
         If[$CellContext`CS$$ == 4, 
           Column[{
             Row[{"Heat generation in wall ", 
               If[$CellContext`wall$ == 1, "A", "B"], 
               " = ", $CellContext`Qdot$, " kW/m."}], 
             Row[{"Contact resistance exists between walls ", 
               If[$CellContext`wall$ == 1, "A and B.", "B and C."]}]}], 
           If[$CellContext`hint$$, 
            
            Switch[$CellContext`CS$$, 1, 
             "There is no heat transfer from the left side", 2, "", 3, 
             "There is convective heat transfer from the right side."], 
            Column[{
              
              Row[{"Select the button that shows the correct temperature \
profile for wall ", 
                Switch[$CellContext`CS$$, 1, "A", 2, "B", 3, "C"], "."}], 
              Row[{"Heat generation in wall ", 
                If[$CellContext`wall$ == 1, "A", "B"], " = 10 kW/m.", 
                Spacer[30], 
                If[2 <= $CellContext`CS$$ <= 3, 
                 Row[{"Contact resistance = ", $CellContext`Rtc$, " W/[", 
                   Superscript["m", 2], " K]."}]]}]}]]]; Graphics[{
           Line[
            Table[{{-5, 25 + $CellContext`n}, {
              0, 30 + $CellContext`n}}, {$CellContext`n, -10, 235, 15}]], 
           Text[
            Rotate[
             Style["insulation ", 17, Background -> White], 90 Degree], {-2.5,
              145}], {
            EdgeForm[Black], 
            FaceForm[
             If[$CellContext`wall$ == 1, {
               Opacity[
                Dynamic[0.3 + 0.7 Abs[
                    Cos[
                    Pi Clock[
                    1, 3]]]]], $CellContext`colA$}, $CellContext`colA$]], 
            
            Rectangle[{
             0, $CellContext`T1$}, {$CellContext`LA$$ 
              1000, $CellContext`T2$}]}, {
            EdgeForm[Black], 
            FaceForm[
             If[$CellContext`wall$ == 2, {
               Opacity[
                Dynamic[0.2 + 0.8 Abs[
                    Cos[
                    Pi Clock[
                    1, 3]]]]], $CellContext`colB$}, $CellContext`colB$]], 
            
            Rectangle[{$CellContext`LA$$ 1000, $CellContext`T1$}, {
             1000 ($CellContext`LA$$ + $CellContext`LB$$), \
$CellContext`T2$}]}, {
            EdgeForm[Black], 
            FaceForm[$CellContext`colC$], 
            
            Rectangle[{
             1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`T1$}, \
{1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`T2$}]}, 
           Apply[Text[
             Style[
              Row[{
                Subscript[
                 Style["k", Italic], #], " = ", #2, " W/[m K]"}], 
              16], {#3, $CellContext`T1$ + 12}]& , {{
             "A", $CellContext`kA$, 500 $CellContext`LA$$}, {
             "B", $CellContext`kB$, 1000 $CellContext`LA$$ + 
              500 $CellContext`LB$$}, {
             "C", $CellContext`kC$, 
              1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
              500 $CellContext`LC$$}}, {1}], 
           If[$CellContext`CS$$ == 1, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TA$]}], {Thick, Dashed, 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[1, $CellContext`colA$], 
                BezierFunction[#][0.2]]}& )[{{
                0, 1.15 Part[$CellContext`TA$, 1, 2]}, {
                250 $CellContext`LA$$, 1.5 Part[$CellContext`TA$, 1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, 1, 2]}}], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[2, $CellContext`colA$], 
                BezierFunction[#][0.35]]}& )[{{
                0, 1.15 Part[$CellContext`TA$, 1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, 1, 2]}}], {$CellContext`colAns$, 
               Line[$CellContext`TA$]}, 
              Text[
               $CellContext`label$[3, $CellContext`colA$], 
               BezierFunction[$CellContext`TA$][0.5]], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[4, $CellContext`colA$], 
                BezierFunction[#][0.65]]}& )[{{
                0, 0.8 Part[$CellContext`TA$, -1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, -1, 2]}}], 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[5, $CellContext`colA$], 
                BezierFunction[#][0.8]]}& )[{{
                0, 0.7 Part[$CellContext`TA$, -1, 2]}, {
                500 $CellContext`LA$$, 0.7 Part[$CellContext`TA$, -1, 2]}, {
                1000 $CellContext`LA$$, 0.85 
                 Part[$CellContext`TA$, -1, 2]}}]}}], 
           If[$CellContext`CS$$ > 1, {
             Thickness[0.006], 
             Line[$CellContext`TA$]}], 
           If[$CellContext`CS$$ == 2, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TB$]}], 
             If[$CellContext`wall$ == 1, {Thick, Dashed, 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[1, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TA$, -1, 2]}}], {$CellContext`colAns$, 
                Line[$CellContext`TB$]}, 
               Text[
                $CellContext`label$[2, $CellContext`colB$], 
                BezierFunction[$CellContext`TB$][0.35]], 
               ({{$CellContext`colAns$, 
                 BezierCurve[#]}, 
                Text[
                 $CellContext`label$[3, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TB$, 1, 2]}, {
                 1000 ($CellContext`LA$$ + 0.4 $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[4, $CellContext`colB$], 
                 BezierFunction[#][0.2]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[5, $CellContext`colB$], 
                 BezierFunction[#][0.25]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}]}, {Thick, Dashed, 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[1, $CellContext`colB$], 
                 BezierFunction[#][0.2]]}& )[
                
                Apply[{#, 0.9 #2}& , $CellContext`TB$, {
                 1}]], {$CellContext`colAns$, 
                Line[$CellContext`TB$]}, 
               Text[
                $CellContext`label$[2, $CellContext`colB$], 
                BezierFunction[$CellContext`TB$][0.35]], 
               ({{$CellContext`colAns$, 
                 BezierCurve[#]}, 
                Text[
                 $CellContext`label$[3, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + 0.4 $CellContext`LB$$), 1.3 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[4, $CellContext`colB$], 
                 BezierFunction[#][0.65]]}& )[{{
                 1000 $CellContext`LA$$, 0.9 Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.8 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[5, $CellContext`colB$], 
                 BezierFunction[#][0.8]]}& )[{{
                 1000 $CellContext`LA$$, 0.8 Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.8 
                  Part[$CellContext`TB$, -1, 2]}}]}]}], 
           If[$CellContext`CS$$ > 2, {
             Thickness[0.006], 
             Line[$CellContext`TB$]}], 
           If[$CellContext`CS$$ == 3, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TC$]}], {Thick, Dashed, 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[1, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                 Part[$CellContext`TB$, -1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 
                 Part[$CellContext`TB$, -1, 2]}}], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[2, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                 Part[$CellContext`TB$, -1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 
                 Part[$CellContext`TC$, -1, 2] + (
                  Part[$CellContext`TB$, -1, 2] - 
                  Part[$CellContext`TC$, 1, 2])}}], {$CellContext`colAns$, 
               Line[$CellContext`TC$]}, 
              Text[
               $CellContext`label$[3, $CellContext`colC$], 
               BezierFunction[$CellContext`TC$][0.5]], 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[4, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.9 
                 Part[$CellContext`TC$, 1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + 
                  0.3 $CellContext`LC$$), 0.4 Part[$CellContext`TC$, 1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 0.5 Part[$CellContext`TC$, -1, 2]}}]}}], 
           If[$CellContext`CS$$ > 3, {
             Thickness[0.006], 
             Line[$CellContext`TC$]}], {LightGray, 
            EdgeForm[{Thin, Black}], 
            
            Rectangle[{1000 $CellContext`LA$$ - 0.3, $CellContext`T1$}, {
             1000 $CellContext`LA$$ + 0.3, $CellContext`T2$}], 
            
            Rectangle[{
             1000 ($CellContext`LA$$ + $CellContext`LB$$) - 
              0.3, $CellContext`T1$}, {
             1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
              0.3, $CellContext`T2$}], Black, 
            PointSize[0.001], 
            Point[
             RandomPoint[
              
              Rectangle[{1000 $CellContext`LA$$ - 0.3, $CellContext`T1$}, {
               1000 $CellContext`LA$$ + 0.3, $CellContext`T2$}], 300]], 
            Point[
             RandomPoint[
              
              Rectangle[{
               1000 ($CellContext`LA$$ + $CellContext`LB$$) - 
                0.3, $CellContext`T1$}, {
               1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
                0.3, $CellContext`T2$}], 300]]}, 
           Map[
           Arrow[{{1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$) + #, $CellContext`T1$ + 15}, {
              1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$) + #, $CellContext`T2$ - 60}}]& , {5, 11, 17}], 
           Text[
            Style[
             Column[{
               Row[{
                 Subscript[
                  Style["T", Italic], "air"], 
                 " = ", $CellContext`T\[Infinity]$, " \[Degree]C"}], 
               Row[{
                 Style["h", Italic], " = ", $CellContext`h$, " W/[", 
                 Superscript["m", 2], " K]"}]}, Center], 17], {
            1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$) + 
             11, $CellContext`T2$ - 30}], {
            Arrowheads[0.03], 
            
            Arrow[{{(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 
               25}, {(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 85}}], 
            
            Arrow[{{(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 
               25}, {(0.65 1000) $CellContext`LA$$, $CellContext`T1$ + 25}}]}, 
           Text[
            Rotate[
             Style["temperature", 16], 90 
             Degree], {(0.08 1000) $CellContext`LA$$, $CellContext`T1$ + 50}], 
           Text[
            Style[
            "distance", 16], {(0.4 1000) $CellContext`LA$$, $CellContext`T1$ + 
             35}]}, ImageSize -> {600, 400}, AspectRatio -> Full, 
          PlotRange -> {{-5, All}, {$CellContext`T1$ - 1, $CellContext`T2$ + 
             5}}, PlotLabel -> Style[$CellContext`plotlabel$, 17, Black]]], 
      "Specifications" :> {{{$CellContext`reset$$, 1}, 1, 1000, 1, 
         ControlType -> None, ControlPlacement -> 
         1}, {{$CellContext`answer$$, " A "}, 0, ControlType -> None, 
         ControlPlacement -> 2}, {{$CellContext`CS$$, 1, ""}, {1, 2, 3, 4}, 
         ControlType -> None, ControlPlacement -> 
         3}, {{$CellContext`hint$$, False, "hint"}, {True, False}, 
         ControlPlacement -> 
         4}, {{$CellContext`solution$$, False, "solution"}, {True, False}, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         5}, {$CellContext`LA$$, 0.021, ControlType -> None, ControlPlacement -> 
         6}, {$CellContext`LB$$, 0.025, ControlType -> None, ControlPlacement -> 
         7}, {$CellContext`LC$$, 0.025, ControlType -> None, ControlPlacement -> 
         8}, 
        Grid[{{
           Button[" new problem ", {
             
             If[$CellContext`reset$$ < 
              1000, $CellContext`reset$$ = $CellContext`reset$$ + 
               1, $CellContext`reset$$ = $CellContext`reset$$ - 
               1], $CellContext`CS$$ = 1, $CellContext`solution$$ = 
             False, $CellContext`answer$$ = " a "}], SpanFromLeft, 
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           
           PaneSelector[{
            1 -> "1. Wall A temperature profile.", 2 -> 
             "2. Wall B temperature profile.", 3 -> 
             "3. Wall C temperature profile.", 4 -> ""}, 
            Dynamic[$CellContext`CS$$]], 
           Manipulate`Place[3], 
           PaneSelector[{1 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
             2 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
             3 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]]}, 
            Dynamic[$CellContext`CS$$]], 
           PaneSelector[{1 -> Manipulate`Place[4], 3 -> Manipulate`Place[4]}, 
            Dynamic[$CellContext`CS$$]], 
           
           PaneSelector[{
            1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
             Manipulate`Place[5]}, 
            Dynamic[$CellContext`CS$$]], 
           Manipulate`Place[6], 
           Manipulate`Place[7], 
           Manipulate`Place[8]}}], 
        PaneSelector[{1 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {
            " A ", " B ", " C ", " D ", " E "}, Enabled -> 
            If[$CellContext`solution$$, False, True]], 2 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {
            " A ", " B ", " C ", " D ", " E "}, Enabled -> 
            If[$CellContext`solution$$, False, True]], 3 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {" A ", " B ", " C ", " D "}, 
            Enabled -> If[$CellContext`solution$$, False, True]]}, 
         Dynamic[$CellContext`CS$$]]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{649., {254., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7398861581361284`*^9, 3.7398861821921835`*^9}, 
   3.739886328515486*^9, {3.739886569229165*^9, 3.7398866384794292`*^9}, 
   3.7398866717181296`*^9, {3.739886725982482*^9, 3.739886764801118*^9}, {
   3.739886852379656*^9, 3.739886867350623*^9}, 3.739886904049053*^9, 
   3.7398869545490017`*^9, {3.7398871553483286`*^9, 3.7398871763179674`*^9}, 
   3.73988728572692*^9, {3.73988744818804*^9, 3.739887494964662*^9}, {
   3.739887585753549*^9, 3.739887591564273*^9}, 3.7398876640458865`*^9, {
   3.7398885869632287`*^9, 3.7398886504231553`*^9}, 3.7398887876558065`*^9, {
   3.7398888181038384`*^9, 3.7398888311868763`*^9}, {3.739889027163328*^9, 
   3.7398890319083347`*^9}, 3.7398890737313943`*^9, 3.739889164286744*^9, 
   3.739889232426257*^9, {3.7398893291507998`*^9, 3.7398893507897725`*^9}, 
   3.739889451798864*^9, {3.7398894932860613`*^9, 3.7398895087926006`*^9}, 
   3.739889544415865*^9, {3.739889576637546*^9, 3.73988962929426*^9}, {
   3.739889763836508*^9, 3.739889775548913*^9}, {3.739889840026825*^9, 
   3.739889885067809*^9}, {3.739890865160185*^9, 3.739890877839771*^9}, 
   3.739891534214939*^9, {3.740148859556032*^9, 3.7401488822376766`*^9}, {
   3.7402319152435036`*^9, 3.7402319301333427`*^9}, 3.7402320193802547`*^9, {
   3.740232065756505*^9, 3.7402320845749145`*^9}, 3.7403243131952343`*^9, 
   3.740324532155945*^9, 3.740324608010602*^9, 3.740325138437014*^9, 
   3.740402038074424*^9, {3.740402079752214*^9, 3.740402127105771*^9}, 
   3.7404022714058886`*^9, 3.740402433220332*^9, 3.7404025507640867`*^9, {
   3.74040690588799*^9, 3.740406920913294*^9}, 3.7404069741010294`*^9, {
   3.740407011875176*^9, 3.740407022514721*^9}, {3.7404070543976936`*^9, 
   3.7404071328400183`*^9}, {3.7404071768063245`*^9, 3.740407184106427*^9}, 
   3.7404072284424863`*^9, 3.7404072841680875`*^9, 3.7404073651283474`*^9, {
   3.740407413797538*^9, 3.7404074193532085`*^9}, 3.740407521495319*^9, {
   3.740407564496058*^9, 3.7404076062003074`*^9}, {3.740407669148201*^9, 
   3.740407678921219*^9}, {3.740407797355013*^9, 3.74040785001694*^9}, 
   3.740407880055278*^9, {3.740407960848115*^9, 3.7404079801036406`*^9}, 
   3.740408017702592*^9, 3.7404080835373116`*^9, {3.7404082613455224`*^9, 
   3.740408407919528*^9}, 3.7404085011619186`*^9, {3.7404085579711833`*^9, 
   3.740408570402384*^9}, 3.740408606440935*^9, {3.740408671137686*^9, 
   3.7404087013581004`*^9}, 3.7404088815481596`*^9, 3.7404089312500563`*^9, {
   3.740408964086361*^9, 3.7404090428261175`*^9}, {3.7404091077076983`*^9, 
   3.740409113214405*^9}, 3.7404091763107834`*^9, {3.740409395756132*^9, 
   3.740409410290596*^9}, 3.740409447545277*^9, {3.74040948894062*^9, 
   3.740409514322141*^9}, 3.740409609206399*^9, 3.7404097490441637`*^9, 
   3.7404097821415577`*^9, {3.7404098259163465`*^9, 3.7404098525567303`*^9}, {
   3.740836503951112*^9, 3.7408365076033792`*^9}, 3.7408366119673924`*^9, 
   3.7408366494910965`*^9, 3.7408367116998353`*^9, {3.740836788532451*^9, 
   3.7408368309680605`*^9}, {3.7408368735541954`*^9, 3.7408368946518035`*^9}, 
   3.740836927881982*^9, 3.7408370059847918`*^9, {3.7408370394892116`*^9, 
   3.740837043956318*^9}, {3.740837206639434*^9, 3.7408372459374037`*^9}, 
   3.740837401026853*^9, 3.7408374593399887`*^9, 3.74083769588974*^9, {
   3.74083773616409*^9, 3.7408377619421573`*^9}, 3.7409286669563985`*^9, 
   3.741357941592676*^9, 3.7413580006643686`*^9, {3.741358036864564*^9, 
   3.7413580726906443`*^9}, 3.741358117868055*^9, 3.7413581891667776`*^9, 
   3.741358226297928*^9, {3.7413582584931955`*^9, 3.7413582857469196`*^9}, {
   3.7413583527964287`*^9, 3.7413583625396976`*^9}, {3.74135847240891*^9, 
   3.7413585221611505`*^9}, {3.741358559180173*^9, 3.7413585707250476`*^9}, 
   3.741358638399571*^9, {3.7413586962768745`*^9, 3.7413587398339095`*^9}, {
   3.7413588671754*^9, 3.7413589059393425`*^9}, 3.7413589626271067`*^9, {
   3.7413590350459094`*^9, 3.7413590504507008`*^9}, {3.741359081977558*^9, 
   3.7413591010992413`*^9}, 3.741442460688792*^9, 3.741442564304969*^9, {
   3.7414426248443255`*^9, 3.7414426609882927`*^9}, 3.741963622427905*^9, {
   3.74196383958853*^9, 3.7419638758057423`*^9}, 3.7419639551540008`*^9, 
   3.7419639933322372`*^9, 3.742037400061171*^9, 3.7420498857668047`*^9, {
   3.7420502475890555`*^9, 3.7420502679845877`*^9}, {3.742050364723462*^9, 
   3.7420503813141265`*^9}, {3.742050472572467*^9, 3.742050513222066*^9}, {
   3.7421394213906827`*^9, 3.7421394563166723`*^9}, 3.742139503394026*^9, {
   3.7421409279107122`*^9, 3.7421409320337305`*^9}, {3.742910262719613*^9, 
   3.7429102912403393`*^9}, {3.7429103519680023`*^9, 3.742910398192316*^9}, {
   3.7429104455945454`*^9, 3.742910467529888*^9}, 3.742910503070835*^9, {
   3.742910566440365*^9, 3.74291060510197*^9}, 3.742910717930231*^9, {
   3.742910775563102*^9, 3.7429107769284534`*^9}, {3.742910823570717*^9, 
   3.7429108491642685`*^9}, {3.742910879645751*^9, 3.742910892664936*^9}, {
   3.742910967385107*^9, 3.7429110234681225`*^9}, 3.7429110840820227`*^9, {
   3.7433323497352824`*^9, 3.743332367037017*^9}, {3.7433474964746914`*^9, 
   3.743347530433815*^9}, 3.7434297903053527`*^9, {3.7434299277927923`*^9, 
   3.743429940749124*^9}, 3.74342998588046*^9, 3.743430030378488*^9, 
   3.7434300617605853`*^9, 3.7434302812783427`*^9, 3.7469057257475505`*^9, 
   3.7469057667316523`*^9, 3.7469058203331485`*^9, 3.7469058776018143`*^9, 
   3.7469059242880487`*^9, 3.746905979936598*^9, 3.746906049173217*^9, 
   3.746906095830412*^9, {3.7469061361509495`*^9, 3.7469061661261063`*^9}, {
   3.746906261824651*^9, 3.746906284155139*^9}, {3.746906351730229*^9, 
   3.746906424004863*^9}, {3.7469064711614723`*^9, 3.7469064841702595`*^9}, {
   3.746906716163183*^9, 3.746906732958398*^9}, {3.7469067970323687`*^9, 
   3.7469067989791355`*^9}, {3.746906837237792*^9, 3.746906906445565*^9}, {
   3.746907048997925*^9, 3.746907056189459*^9}, {3.746907159839006*^9, 
   3.746907166395967*^9}, {3.7469072149529524`*^9, 3.7469072495002937`*^9}, {
   3.746907307931864*^9, 3.746907314185636*^9}, 3.746907385288957*^9, {
   3.746907421984135*^9, 3.746907426733426*^9}, 3.7469075477259274`*^9, {
   3.746907581522535*^9, 3.746907616339115*^9}, 3.7469077178118763`*^9, {
   3.746907810965717*^9, 3.7469078365059886`*^9}, {3.746907962928939*^9, 
   3.746908071964071*^9}, {3.7469081254971685`*^9, 3.746908172874523*^9}, 
   3.747589945562894*^9, 3.7475900034390173`*^9, 3.7475900590522203`*^9, 
   3.747590123817062*^9, 3.747590161471408*^9, 3.747590194898007*^9, 
   3.747590271339799*^9, {3.747590403520733*^9, 3.7475904148445873`*^9}, 
   3.747590619138142*^9, 3.747590664121456*^9, {3.747590706524342*^9, 
   3.747590733623719*^9}, {3.74759078607934*^9, 3.747590813691744*^9}, {
   3.747590862688518*^9, 3.7475908924491873`*^9}, 3.747590971755274*^9, {
   3.747591032986807*^9, 3.747591051510364*^9}, 3.747595090142054*^9, 
   3.747595216912367*^9, 3.747595696661613*^9, 3.747595819950645*^9, {
   3.7475958573986187`*^9, 3.7475960260851927`*^9}, {3.7475960711250563`*^9, 
   3.747596125086741*^9}, {3.747596157601453*^9, 3.7475961794396772`*^9}, 
   3.747596222210511*^9, {3.747596260449317*^9, 3.7475962822634974`*^9}, 
   3.747596362912643*^9, 3.748039958868162*^9, 3.7480400534809227`*^9, {
   3.748040113583451*^9, 3.7480401529431443`*^9}, 3.748641576950674*^9, {
   3.748641668454906*^9, 3.748641691986275*^9}, {3.7486417377317405`*^9, 
   3.7486418290181093`*^9}, {3.748641885620783*^9, 3.748641939845162*^9}, {
   3.748642137651784*^9, 3.7486421463176746`*^9}, {3.7486422260880356`*^9, 
   3.748642230164755*^9}, {3.7486423740827694`*^9, 3.748642377978324*^9}, {
   3.7486424280567436`*^9, 3.748642431350751*^9}, {3.748642474251687*^9, 
   3.748642534715556*^9}, {3.7486425999517946`*^9, 3.7486426335971394`*^9}, {
   3.748642666745225*^9, 3.7486426697249465`*^9}, {3.7486427102897367`*^9, 
   3.7486428124235687`*^9}, {3.7486428715612607`*^9, 
   3.7486428739144125`*^9}, {3.748642905599134*^9, 3.7486429072466307`*^9}, {
   3.74864300149327*^9, 3.748643051500194*^9}, {3.748643110514918*^9, 
   3.7486431581902714`*^9}, {3.748643265467909*^9, 3.748643271699586*^9}, {
   3.7486433387465677`*^9, 3.7486433424609575`*^9}, {3.7486433846862097`*^9, 
   3.7486434654513955`*^9}, {3.748643501106807*^9, 3.748643519695693*^9}, 
   3.7499308221275973`*^9, {3.749930876615036*^9, 3.74993090765022*^9}},
 CellLabel->"Out[1]=",
 CellID->542956916,ExpressionUUID->"2d448080-c94f-4570-b1b5-172e51da973a"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`answer$$ = " a ", $CellContext`CS$$ = 
    3, $CellContext`hint$$ = True, $CellContext`LA$$ = 
    0.026, $CellContext`LB$$ = 0.026, $CellContext`LC$$ = 
    0.026, $CellContext`reset$$ = 3, $CellContext`solution$$ = False, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`reset$$], 1}, 1, 1000, 1}, {{
       Hold[$CellContext`answer$$], " A "}, 0}, {{
       Hold[$CellContext`CS$$], 1, ""}, {1, 2, 3, 4}}, {{
       Hold[$CellContext`hint$$], False, "hint"}, {True, False}}, {{
       Hold[$CellContext`solution$$], False, "solution"}, {True, False}}, {
      Hold[$CellContext`LA$$], 0.021}, {
      Hold[$CellContext`LB$$], 0.025}, {
      Hold[$CellContext`LC$$], 0.025}, {
      Hold[
       Grid[{{
          Button[" new problem ", {
            
            If[$CellContext`reset$$ < 
             1000, $CellContext`reset$$ = $CellContext`reset$$ + 
              1, $CellContext`reset$$ = $CellContext`reset$$ - 
              1], $CellContext`CS$$ = 1, $CellContext`solution$$ = 
            False, $CellContext`answer$$ = " a "}], SpanFromLeft, 
          Manipulate`Place[1], 
          Manipulate`Place[2], 
          
          PaneSelector[{
           1 -> "1. Wall A temperature profile.", 2 -> 
            "2. Wall B temperature profile.", 3 -> 
            "3. Wall C temperature profile.", 4 -> ""}, 
           Dynamic[$CellContext`CS$$]], 
          Manipulate`Place[3], 
          PaneSelector[{1 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
            2 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
            3 -> Button[
              Dynamic[
               If[
                And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                " show solution ", " next "]], {
               If[
                Inequality[
                1, LessEqual, $CellContext`CS$$, Less, 
                 4], $CellContext`CS$$ = $CellContext`CS$$ + 
                 1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
               False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
               " a "}, Enabled -> If[$CellContext`solution$$, True, False]]}, 
           Dynamic[$CellContext`CS$$]], 
          PaneSelector[{1 -> Manipulate`Place[4], 3 -> Manipulate`Place[4]}, 
           Dynamic[$CellContext`CS$$]], 
          
          PaneSelector[{
           1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
            Manipulate`Place[5]}, 
           Dynamic[$CellContext`CS$$]], 
          Manipulate`Place[6], 
          Manipulate`Place[7], 
          Manipulate`Place[8]}}]], Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       PaneSelector[{1 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {
           " A ", " B ", " C ", " D ", " E "}, Enabled -> 
           If[$CellContext`solution$$, False, True]], 2 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {
           " A ", " B ", " C ", " D ", " E "}, Enabled -> 
           If[$CellContext`solution$$, False, True]], 3 -> RadioButtonBar[
           Dynamic[$CellContext`answer$$], {" A ", " B ", " C ", " D "}, 
           Enabled -> If[$CellContext`solution$$, False, True]]}, 
        Dynamic[$CellContext`CS$$]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {600., {197., 203.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`reset$105772$$ = 0, $CellContext`CS$105773$$ = 
    0, $CellContext`hint$105774$$ = False, $CellContext`solution$105775$$ = 
    False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`answer$$ = " A ", $CellContext`CS$$ = 
        1, $CellContext`hint$$ = False, $CellContext`LA$$ = 
        0.021, $CellContext`LB$$ = 0.025, $CellContext`LC$$ = 
        0.025, $CellContext`reset$$ = 1, $CellContext`solution$$ = False}, 
      "ControllerVariables" :> {
        Hold[$CellContext`reset$$, $CellContext`reset$105772$$, 0], 
        Hold[$CellContext`CS$$, $CellContext`CS$105773$$, 0], 
        Hold[$CellContext`hint$$, $CellContext`hint$105774$$, False], 
        Hold[$CellContext`solution$$, $CellContext`solution$105775$$, False]},
       "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`wall$, $CellContext`kA$, $CellContext`kB$, \
$CellContext`kC$, $CellContext`Qdot$, $CellContext`Rtc$, $CellContext`T\
\[Infinity]$, $CellContext`h$, $CellContext`qflux$, $CellContext`sol$, \
$CellContext`T$, $CellContext`Ts1$, $CellContext`Ts2$, $CellContext`Ts3$, \
$CellContext`Ts4$, $CellContext`Ts5$, $CellContext`Ts6$, \
$CellContext`TProfile$, $CellContext`TA$, $CellContext`TB$, $CellContext`TC$, \
$CellContext`T1$, $CellContext`T2$, $CellContext`colA$, $CellContext`colB$, \
$CellContext`colC$, $CellContext`colS$, $CellContext`colAns$, \
$CellContext`pt$, $CellContext`list$, $CellContext`label$, \
$CellContext`plotlabel$}, 
        SeedRandom[$CellContext`reset$$]; $CellContext`wall$ = 
         RandomInteger[{1, 2}]; $CellContext`kA$ = RandomChoice[
           Range[0.26, 0.3, 0.01]]; $CellContext`kB$ = RandomChoice[
           Range[0.12, 0.13, 0.01]]; $CellContext`kC$ = RandomChoice[
           Range[0.13, 0.18, 0.01]]; $CellContext`LA$$ = 
         0.026; $CellContext`LB$$ = 0.026; $CellContext`LC$$ = 
         0.026; $CellContext`Qdot$ = 
         If[$CellContext`wall$ == 1, 10, 14]; $CellContext`Rtc$ = 
         0.08; $CellContext`T\[Infinity]$ = 20; $CellContext`h$ = 
         10; $CellContext`qflux$ = (1000 $CellContext`Qdot$) 
          If[$CellContext`wall$ == 
            1, $CellContext`LA$$, $CellContext`LB$$]; $CellContext`sol$ = Part[
           
           DSolve[{Derivative[
              2][$CellContext`t][$CellContext`z] == (-1000) \
($CellContext`Qdot$/
               If[$CellContext`wall$ == 
                1, $CellContext`kA$, $CellContext`kB$]), $CellContext`t[
               
               If[$CellContext`wall$ == 
                1, $CellContext`LA$$, $CellContext`LA$$ + $CellContext`LB$$]] == 
             If[$CellContext`wall$ == 
               1, $CellContext`Ts5$, $CellContext`Ts3$], 
             Derivative[1][$CellContext`t][
               If[$CellContext`wall$ == 1, 0, $CellContext`LA$$]] == 0}, 
            $CellContext`t[$CellContext`z], $CellContext`z], 
           1]; $CellContext`T$[
           Pattern[$CellContext`x$, 
            Blank[]]] := ReplaceAll[
           ReplaceAll[
            $CellContext`t[$CellContext`z], $CellContext`sol$], \
$CellContext`z -> $CellContext`x$]; $CellContext`Ts1$ = $CellContext`T\
\[Infinity]$ + $CellContext`qflux$/$CellContext`h$; $CellContext`Ts2$ = \
$CellContext`Ts1$ + $CellContext`qflux$ ($CellContext`LC$$/$CellContext`kC$); \
$CellContext`Ts3$ = $CellContext`Ts2$ + $CellContext`qflux$ $CellContext`Rtc$; \
$CellContext`Ts4$ = 
         If[$CellContext`wall$ == 1, {
           1000 $CellContext`LA$$, $CellContext`Ts3$ + $CellContext`qflux$ \
($CellContext`LB$$/$CellContext`kB$)}, 
           Table[{$CellContext`n, 
             $CellContext`T$[$CellContext`n/
              1000]}, {$CellContext`n, $CellContext`LA$$ 1000, 
             1000 ($CellContext`LA$$ + $CellContext`LB$$), 
             1}]]; $CellContext`Ts5$ = 
         If[$CellContext`wall$ == 1, 
           Part[$CellContext`Ts4$, 2] + $CellContext`qflux$ $CellContext`Rtc$, 
           $CellContext`T$[$CellContext`LA$$]]; $CellContext`Ts6$ = 
         If[$CellContext`wall$ == 1, 
           Table[{$CellContext`n, 
             $CellContext`T$[$CellContext`n/1000]}, {$CellContext`n, 
             0, $CellContext`LA$$ 1000, 1}], {0, 
            $CellContext`T$[$CellContext`LA$$]}]; $CellContext`TProfile$ = 
         Level[{$CellContext`Ts6$, {
            1000 $CellContext`LA$$, $CellContext`Ts5$}, $CellContext`Ts4$, {
            1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts3$}, \
{1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts2$}, {
            1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`Ts1$}}, {-2}]; $CellContext`TA$ = Join[
           
           If[$CellContext`wall$ == 
            1, $CellContext`Ts6$, {$CellContext`Ts6$}], {{
            1000 $CellContext`LA$$, $CellContext`Ts5$}}]; $CellContext`TB$ = 
         Join[
           
           If[$CellContext`wall$ == 
            1, {$CellContext`Ts4$}, $CellContext`Ts4$], {{
            1000 ($CellContext`LA$$ + $CellContext`LB$$), \
$CellContext`Ts3$}}]; $CellContext`TC$ = {{
           1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`Ts2$}, {
           1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`Ts1$}}; $CellContext`T1$ = -5; $CellContext`T2$ = 
         275; $CellContext`colA$ = 
         RGBColor[0.25, 0.8, 0.9]; $CellContext`colB$ = 
         RGBColor[0.45, 0.9, 0]; $CellContext`colC$ = 
         RGBColor[1, 0.95, 0]; $CellContext`colS$ = 
         Purple; $CellContext`colAns$ = 
         Opacity[0.5, $CellContext`colS$]; $CellContext`pt$[
           Pattern[$CellContext`point, 
            Blank[]], 
           Pattern[$CellContext`col, 
            Blank[]]] := {$CellContext`col, 
           PointSize[0.025], 
           Point[$CellContext`point], White, 
           PointSize[0.015], 
           Point[$CellContext`point]}; $CellContext`list$ = 
         If[$CellContext`CS$$ == 3, 
           RandomSample[{" A ", " B ", " C ", " D "}], 
           
           RandomSample[{
            " A ", " B ", " C ", " D ", " E "}]]; $CellContext`label$[
           Pattern[$CellContext`part$, 
            Blank[]], 
           Pattern[$CellContext`color$, 
            Blank[]]] := Style[
           Part[$CellContext`list$, $CellContext`part$], 
           If[
           Part[$CellContext`list$, $CellContext`part$] == \
$CellContext`answer$$, {20, Bold}, 17], $CellContext`colS$, 
           Background -> $CellContext`color$]; $CellContext`plotlabel$ = 
         If[$CellContext`CS$$ == 4, 
           Column[{
             Row[{"Heat generation in wall ", 
               If[$CellContext`wall$ == 1, "A", "B"], 
               " = ", $CellContext`Qdot$, " kW/m."}], 
             Row[{"Contact resistance exists between walls ", 
               If[$CellContext`wall$ == 1, "A and B.", "B and C."]}]}], 
           If[$CellContext`hint$$, 
            
            Switch[$CellContext`CS$$, 1, 
             "There is no heat transfer from the left side", 2, "", 3, 
             "There is convective heat transfer from the right side."], 
            Column[{
              
              Row[{"Select the button that shows the correct temperature \
profile for wall ", 
                Switch[$CellContext`CS$$, 1, "A", 2, "B", 3, "C"], "."}], 
              Row[{"Heat generation in wall ", 
                If[$CellContext`wall$ == 1, "A", "B"], " = 10 kW/m.", 
                Spacer[30], 
                If[2 <= $CellContext`CS$$ <= 3, 
                 Row[{"Contact resistance = ", $CellContext`Rtc$, " W/[", 
                   Superscript["m", 2], " K]."}]]}]}]]]; Graphics[{
           Line[
            Table[{{-5, 25 + $CellContext`n}, {
              0, 30 + $CellContext`n}}, {$CellContext`n, -10, 235, 15}]], 
           Text[
            Rotate[
             Style["insulation ", 17, Background -> White], 90 Degree], {-2.5,
              145}], {
            EdgeForm[Black], 
            FaceForm[
             If[$CellContext`wall$ == 1, {
               Opacity[
                Dynamic[0.3 + 0.7 Abs[
                    Cos[
                    Pi Clock[
                    1, 3]]]]], $CellContext`colA$}, $CellContext`colA$]], 
            
            Rectangle[{
             0, $CellContext`T1$}, {$CellContext`LA$$ 
              1000, $CellContext`T2$}]}, {
            EdgeForm[Black], 
            FaceForm[
             If[$CellContext`wall$ == 2, {
               Opacity[
                Dynamic[0.2 + 0.8 Abs[
                    Cos[
                    Pi Clock[
                    1, 3]]]]], $CellContext`colB$}, $CellContext`colB$]], 
            
            Rectangle[{$CellContext`LA$$ 1000, $CellContext`T1$}, {
             1000 ($CellContext`LA$$ + $CellContext`LB$$), \
$CellContext`T2$}]}, {
            EdgeForm[Black], 
            FaceForm[$CellContext`colC$], 
            
            Rectangle[{
             1000 ($CellContext`LA$$ + $CellContext`LB$$), $CellContext`T1$}, \
{1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$), \
$CellContext`T2$}]}, 
           Apply[Text[
             Style[
              Row[{
                Subscript[
                 Style["k", Italic], #], " = ", #2, " W/[m K]"}], 
              16], {#3, $CellContext`T1$ + 12}]& , {{
             "A", $CellContext`kA$, 500 $CellContext`LA$$}, {
             "B", $CellContext`kB$, 1000 $CellContext`LA$$ + 
              500 $CellContext`LB$$}, {
             "C", $CellContext`kC$, 
              1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
              500 $CellContext`LC$$}}, {1}], 
           If[$CellContext`CS$$ == 1, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TA$]}], {Thick, Dashed, 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[1, $CellContext`colA$], 
                BezierFunction[#][0.2]]}& )[{{
                0, 1.15 Part[$CellContext`TA$, 1, 2]}, {
                250 $CellContext`LA$$, 1.5 Part[$CellContext`TA$, 1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, 1, 2]}}], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[2, $CellContext`colA$], 
                BezierFunction[#][0.35]]}& )[{{
                0, 1.15 Part[$CellContext`TA$, 1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, 1, 2]}}], {$CellContext`colAns$, 
               Line[$CellContext`TA$]}, 
              Text[
               $CellContext`label$[3, $CellContext`colA$], 
               BezierFunction[$CellContext`TA$][0.5]], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[4, $CellContext`colA$], 
                BezierFunction[#][0.65]]}& )[{{
                0, 0.8 Part[$CellContext`TA$, -1, 2]}, {
                1000 $CellContext`LA$$, 
                 Part[$CellContext`TA$, -1, 2]}}], 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[5, $CellContext`colA$], 
                BezierFunction[#][0.8]]}& )[{{
                0, 0.7 Part[$CellContext`TA$, -1, 2]}, {
                500 $CellContext`LA$$, 0.7 Part[$CellContext`TA$, -1, 2]}, {
                1000 $CellContext`LA$$, 0.85 
                 Part[$CellContext`TA$, -1, 2]}}]}}], 
           If[$CellContext`CS$$ > 1, {
             Thickness[0.006], 
             Line[$CellContext`TA$]}], 
           If[$CellContext`CS$$ == 2, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TB$]}], 
             If[$CellContext`wall$ == 1, {Thick, Dashed, 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[1, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TA$, -1, 2]}}], {$CellContext`colAns$, 
                Line[$CellContext`TB$]}, 
               Text[
                $CellContext`label$[2, $CellContext`colB$], 
                BezierFunction[$CellContext`TB$][0.35]], 
               ({{$CellContext`colAns$, 
                 BezierCurve[#]}, 
                Text[
                 $CellContext`label$[3, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TB$, 1, 2]}, {
                 1000 ($CellContext`LA$$ + 0.4 $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[4, $CellContext`colB$], 
                 BezierFunction[#][0.2]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[5, $CellContext`colB$], 
                 BezierFunction[#][0.25]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}]}, {Thick, Dashed, 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[1, $CellContext`colB$], 
                 BezierFunction[#][0.2]]}& )[
                
                Apply[{#, 0.9 #2}& , $CellContext`TB$, {
                 1}]], {$CellContext`colAns$, 
                Line[$CellContext`TB$]}, 
               Text[
                $CellContext`label$[2, $CellContext`colB$], 
                BezierFunction[$CellContext`TB$][0.35]], 
               ({{$CellContext`colAns$, 
                 BezierCurve[#]}, 
                Text[
                 $CellContext`label$[3, $CellContext`colB$], 
                 BezierFunction[#][0.5]]}& )[{{1000 $CellContext`LA$$, 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + 0.4 $CellContext`LB$$), 1.3 
                  Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[4, $CellContext`colB$], 
                 BezierFunction[#][0.65]]}& )[{{
                 1000 $CellContext`LA$$, 0.9 Part[$CellContext`TA$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.8 
                  Part[$CellContext`TB$, -1, 2]}}], 
               ({{$CellContext`colAns$, 
                 Line[#]}, 
                Text[
                 $CellContext`label$[5, $CellContext`colB$], 
                 BezierFunction[#][0.8]]}& )[{{
                 1000 $CellContext`LA$$, 0.8 Part[$CellContext`TB$, -1, 2]}, {
                 1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.8 
                  Part[$CellContext`TB$, -1, 2]}}]}]}], 
           If[$CellContext`CS$$ > 2, {
             Thickness[0.006], 
             Line[$CellContext`TB$]}], 
           If[$CellContext`CS$$ == 3, {
             If[$CellContext`solution$$, {$CellContext`colS$, Thick, 
               Line[$CellContext`TC$]}], {Thick, Dashed, 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[1, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                 Part[$CellContext`TB$, -1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 
                 Part[$CellContext`TB$, -1, 2]}}], 
              ({{$CellContext`colAns$, 
                Line[#]}, 
               Text[
                $CellContext`label$[2, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 
                 Part[$CellContext`TB$, -1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 
                 Part[$CellContext`TC$, -1, 2] + (
                  Part[$CellContext`TB$, -1, 2] - 
                  Part[$CellContext`TC$, 1, 2])}}], {$CellContext`colAns$, 
               Line[$CellContext`TC$]}, 
              Text[
               $CellContext`label$[3, $CellContext`colC$], 
               BezierFunction[$CellContext`TC$][0.5]], 
              ({{$CellContext`colAns$, 
                BezierCurve[#]}, 
               Text[
                $CellContext`label$[4, $CellContext`colC$], 
                BezierFunction[#][0.5]]}& )[{{
                1000 ($CellContext`LA$$ + $CellContext`LB$$), 0.9 
                 Part[$CellContext`TC$, 1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + 
                  0.3 $CellContext`LC$$), 0.4 Part[$CellContext`TC$, 1, 2]}, {
                1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$), 0.5 Part[$CellContext`TC$, -1, 2]}}]}}], 
           If[$CellContext`CS$$ > 3, {
             Thickness[0.006], 
             Line[$CellContext`TC$]}], {LightGray, 
            EdgeForm[{Thin, Black}], 
            
            Rectangle[{1000 $CellContext`LA$$ - 0.3, $CellContext`T1$}, {
             1000 $CellContext`LA$$ + 0.3, $CellContext`T2$}], 
            
            Rectangle[{
             1000 ($CellContext`LA$$ + $CellContext`LB$$) - 
              0.3, $CellContext`T1$}, {
             1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
              0.3, $CellContext`T2$}], Black, 
            PointSize[0.001], 
            Point[
             RandomPoint[
              
              Rectangle[{1000 $CellContext`LA$$ - 0.3, $CellContext`T1$}, {
               1000 $CellContext`LA$$ + 0.3, $CellContext`T2$}], 300]], 
            Point[
             RandomPoint[
              
              Rectangle[{
               1000 ($CellContext`LA$$ + $CellContext`LB$$) - 
                0.3, $CellContext`T1$}, {
               1000 ($CellContext`LA$$ + $CellContext`LB$$) + 
                0.3, $CellContext`T2$}], 300]]}, 
           Map[
           Arrow[{{1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$) + #, $CellContext`T1$ + 15}, {
              1000 ($CellContext`LA$$ + $CellContext`LB$$ + \
$CellContext`LC$$) + #, $CellContext`T2$ - 60}}]& , {5, 11, 17}], 
           Text[
            Style[
             Column[{
               Row[{
                 Subscript[
                  Style["T", Italic], "air"], 
                 " = ", $CellContext`T\[Infinity]$, " \[Degree]C"}], 
               Row[{
                 Style["h", Italic], " = ", $CellContext`h$, " W/[", 
                 Superscript["m", 2], " K]"}]}, Center], 17], {
            1000 ($CellContext`LA$$ + $CellContext`LB$$ + $CellContext`LC$$) + 
             11, $CellContext`T2$ - 30}], {
            Arrowheads[0.03], 
            
            Arrow[{{(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 
               25}, {(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 85}}], 
            
            Arrow[{{(0.15 1000) $CellContext`LA$$, $CellContext`T1$ + 
               25}, {(0.65 1000) $CellContext`LA$$, $CellContext`T1$ + 25}}]}, 
           Text[
            Rotate[
             Style["temperature", 16], 90 
             Degree], {(0.08 1000) $CellContext`LA$$, $CellContext`T1$ + 50}], 
           Text[
            Style[
            "distance", 16], {(0.4 1000) $CellContext`LA$$, $CellContext`T1$ + 
             35}]}, ImageSize -> {600, 400}, AspectRatio -> Full, 
          PlotRange -> {{-5, All}, {$CellContext`T1$ - 1, $CellContext`T2$ + 
             5}}, PlotLabel -> Style[$CellContext`plotlabel$, 17, Black]]], 
      "Specifications" :> {{{$CellContext`reset$$, 1}, 1, 1000, 1, 
         ControlType -> None, ControlPlacement -> 
         1}, {{$CellContext`answer$$, " A "}, 0, ControlType -> None, 
         ControlPlacement -> 2}, {{$CellContext`CS$$, 1, ""}, {1, 2, 3, 4}, 
         ControlType -> None, ControlPlacement -> 
         3}, {{$CellContext`hint$$, False, "hint"}, {True, False}, 
         ControlPlacement -> 
         4}, {{$CellContext`solution$$, False, "solution"}, {True, False}, 
         Enabled -> Dynamic[
           If[$CellContext`solution$$, False, True]], ControlPlacement -> 
         5}, {$CellContext`LA$$, 0.021, ControlType -> None, ControlPlacement -> 
         6}, {$CellContext`LB$$, 0.025, ControlType -> None, ControlPlacement -> 
         7}, {$CellContext`LC$$, 0.025, ControlType -> None, ControlPlacement -> 
         8}, 
        Grid[{{
           Button[" new problem ", {
             
             If[$CellContext`reset$$ < 
              1000, $CellContext`reset$$ = $CellContext`reset$$ + 
               1, $CellContext`reset$$ = $CellContext`reset$$ - 
               1], $CellContext`CS$$ = 1, $CellContext`solution$$ = 
             False, $CellContext`answer$$ = " a "}], SpanFromLeft, 
           Manipulate`Place[1], 
           Manipulate`Place[2], 
           
           PaneSelector[{
            1 -> "1. Wall A temperature profile.", 2 -> 
             "2. Wall B temperature profile.", 3 -> 
             "3. Wall C temperature profile.", 4 -> ""}, 
            Dynamic[$CellContext`CS$$]], 
           Manipulate`Place[3], 
           PaneSelector[{1 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
             2 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]], 
             3 -> Button[
               Dynamic[
                If[
                 And[$CellContext`CS$$ == 3, $CellContext`solution$$], 
                 " show solution ", " next "]], {
                If[
                 Inequality[
                 1, LessEqual, $CellContext`CS$$, Less, 
                  4], $CellContext`CS$$ = $CellContext`CS$$ + 
                  1, $CellContext`CS$$ = 4], $CellContext`solution$$ = 
                False, $CellContext`hint$$ = False, $CellContext`answer$$ = 
                " a "}, Enabled -> If[$CellContext`solution$$, True, False]]}, 
            Dynamic[$CellContext`CS$$]], 
           PaneSelector[{1 -> Manipulate`Place[4], 3 -> Manipulate`Place[4]}, 
            Dynamic[$CellContext`CS$$]], 
           
           PaneSelector[{
            1 -> Manipulate`Place[5], 2 -> Manipulate`Place[5], 3 -> 
             Manipulate`Place[5]}, 
            Dynamic[$CellContext`CS$$]], 
           Manipulate`Place[6], 
           Manipulate`Place[7], 
           Manipulate`Place[8]}}], 
        PaneSelector[{1 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {
            " A ", " B ", " C ", " D ", " E "}, Enabled -> 
            If[$CellContext`solution$$, False, True]], 2 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {
            " A ", " B ", " C ", " D ", " E "}, Enabled -> 
            If[$CellContext`solution$$, False, True]], 3 -> RadioButtonBar[
            Dynamic[$CellContext`answer$$], {" A ", " B ", " C ", " D "}, 
            Enabled -> If[$CellContext`solution$$, False, True]]}, 
         Dynamic[$CellContext`CS$$]]}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{649., {254., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7398861581361284`*^9, 3.7398861821921835`*^9}, 
   3.739886328515486*^9, {3.739886569229165*^9, 3.7398866384794292`*^9}, 
   3.7398866717181296`*^9, {3.739886725982482*^9, 3.739886764801118*^9}, {
   3.739886852379656*^9, 3.739886867350623*^9}, 3.739886904049053*^9, 
   3.7398869545490017`*^9, {3.7398871553483286`*^9, 3.7398871763179674`*^9}, 
   3.73988728572692*^9, {3.73988744818804*^9, 3.739887494964662*^9}, {
   3.739887585753549*^9, 3.739887591564273*^9}, 3.7398876640458865`*^9, {
   3.7398885869632287`*^9, 3.7398886504231553`*^9}, 3.7398887876558065`*^9, {
   3.7398888181038384`*^9, 3.7398888311868763`*^9}, {3.739889027163328*^9, 
   3.7398890319083347`*^9}, 3.7398890737313943`*^9, 3.739889164286744*^9, 
   3.739889232426257*^9, {3.7398893291507998`*^9, 3.7398893507897725`*^9}, 
   3.739889451798864*^9, {3.7398894932860613`*^9, 3.7398895087926006`*^9}, 
   3.739889544415865*^9, {3.739889576637546*^9, 3.73988962929426*^9}, {
   3.739889763836508*^9, 3.739889775548913*^9}, {3.739889840026825*^9, 
   3.739889885067809*^9}, {3.739890865160185*^9, 3.739890877839771*^9}, 
   3.739891534214939*^9, {3.740148859556032*^9, 3.7401488822376766`*^9}, {
   3.7402319152435036`*^9, 3.7402319301333427`*^9}, 3.7402320193802547`*^9, {
   3.740232065756505*^9, 3.7402320845749145`*^9}, 3.7403243131952343`*^9, 
   3.740324532155945*^9, 3.740324608010602*^9, 3.740325138437014*^9, 
   3.740402038074424*^9, {3.740402079752214*^9, 3.740402127105771*^9}, 
   3.7404022714058886`*^9, 3.740402433220332*^9, 3.7404025507640867`*^9, {
   3.74040690588799*^9, 3.740406920913294*^9}, 3.7404069741010294`*^9, {
   3.740407011875176*^9, 3.740407022514721*^9}, {3.7404070543976936`*^9, 
   3.7404071328400183`*^9}, {3.7404071768063245`*^9, 3.740407184106427*^9}, 
   3.7404072284424863`*^9, 3.7404072841680875`*^9, 3.7404073651283474`*^9, {
   3.740407413797538*^9, 3.7404074193532085`*^9}, 3.740407521495319*^9, {
   3.740407564496058*^9, 3.7404076062003074`*^9}, {3.740407669148201*^9, 
   3.740407678921219*^9}, {3.740407797355013*^9, 3.74040785001694*^9}, 
   3.740407880055278*^9, {3.740407960848115*^9, 3.7404079801036406`*^9}, 
   3.740408017702592*^9, 3.7404080835373116`*^9, {3.7404082613455224`*^9, 
   3.740408407919528*^9}, 3.7404085011619186`*^9, {3.7404085579711833`*^9, 
   3.740408570402384*^9}, 3.740408606440935*^9, {3.740408671137686*^9, 
   3.7404087013581004`*^9}, 3.7404088815481596`*^9, 3.7404089312500563`*^9, {
   3.740408964086361*^9, 3.7404090428261175`*^9}, {3.7404091077076983`*^9, 
   3.740409113214405*^9}, 3.7404091763107834`*^9, {3.740409395756132*^9, 
   3.740409410290596*^9}, 3.740409447545277*^9, {3.74040948894062*^9, 
   3.740409514322141*^9}, 3.740409609206399*^9, 3.7404097490441637`*^9, 
   3.7404097821415577`*^9, {3.7404098259163465`*^9, 3.7404098525567303`*^9}, {
   3.740836503951112*^9, 3.7408365076033792`*^9}, 3.7408366119673924`*^9, 
   3.7408366494910965`*^9, 3.7408367116998353`*^9, {3.740836788532451*^9, 
   3.7408368309680605`*^9}, {3.7408368735541954`*^9, 3.7408368946518035`*^9}, 
   3.740836927881982*^9, 3.7408370059847918`*^9, {3.7408370394892116`*^9, 
   3.740837043956318*^9}, {3.740837206639434*^9, 3.7408372459374037`*^9}, 
   3.740837401026853*^9, 3.7408374593399887`*^9, 3.74083769588974*^9, {
   3.74083773616409*^9, 3.7408377619421573`*^9}, 3.7409286669563985`*^9, 
   3.741357941592676*^9, 3.7413580006643686`*^9, {3.741358036864564*^9, 
   3.7413580726906443`*^9}, 3.741358117868055*^9, 3.7413581891667776`*^9, 
   3.741358226297928*^9, {3.7413582584931955`*^9, 3.7413582857469196`*^9}, {
   3.7413583527964287`*^9, 3.7413583625396976`*^9}, {3.74135847240891*^9, 
   3.7413585221611505`*^9}, {3.741358559180173*^9, 3.7413585707250476`*^9}, 
   3.741358638399571*^9, {3.7413586962768745`*^9, 3.7413587398339095`*^9}, {
   3.7413588671754*^9, 3.7413589059393425`*^9}, 3.7413589626271067`*^9, {
   3.7413590350459094`*^9, 3.7413590504507008`*^9}, {3.741359081977558*^9, 
   3.7413591010992413`*^9}, 3.741442460688792*^9, 3.741442564304969*^9, {
   3.7414426248443255`*^9, 3.7414426609882927`*^9}, 3.741963622427905*^9, {
   3.74196383958853*^9, 3.7419638758057423`*^9}, 3.7419639551540008`*^9, 
   3.7419639933322372`*^9, 3.742037400061171*^9, 3.7420498857668047`*^9, {
   3.7420502475890555`*^9, 3.7420502679845877`*^9}, {3.742050364723462*^9, 
   3.7420503813141265`*^9}, {3.742050472572467*^9, 3.742050513222066*^9}, {
   3.7421394213906827`*^9, 3.7421394563166723`*^9}, 3.742139503394026*^9, {
   3.7421409279107122`*^9, 3.7421409320337305`*^9}, {3.742910262719613*^9, 
   3.7429102912403393`*^9}, {3.7429103519680023`*^9, 3.742910398192316*^9}, {
   3.7429104455945454`*^9, 3.742910467529888*^9}, 3.742910503070835*^9, {
   3.742910566440365*^9, 3.74291060510197*^9}, 3.742910717930231*^9, {
   3.742910775563102*^9, 3.7429107769284534`*^9}, {3.742910823570717*^9, 
   3.7429108491642685`*^9}, {3.742910879645751*^9, 3.742910892664936*^9}, {
   3.742910967385107*^9, 3.7429110234681225`*^9}, 3.7429110840820227`*^9, {
   3.7433323497352824`*^9, 3.743332367037017*^9}, {3.7433474964746914`*^9, 
   3.743347530433815*^9}, 3.7434297903053527`*^9, {3.7434299277927923`*^9, 
   3.743429940749124*^9}, 3.74342998588046*^9, 3.743430030378488*^9, 
   3.7434300617605853`*^9, 3.7434302812783427`*^9, 3.7469057257475505`*^9, 
   3.7469057667316523`*^9, 3.7469058203331485`*^9, 3.7469058776018143`*^9, 
   3.7469059242880487`*^9, 3.746905979936598*^9, 3.746906049173217*^9, 
   3.746906095830412*^9, {3.7469061361509495`*^9, 3.7469061661261063`*^9}, {
   3.746906261824651*^9, 3.746906284155139*^9}, {3.746906351730229*^9, 
   3.746906424004863*^9}, {3.7469064711614723`*^9, 3.7469064841702595`*^9}, {
   3.746906716163183*^9, 3.746906732958398*^9}, {3.7469067970323687`*^9, 
   3.7469067989791355`*^9}, {3.746906837237792*^9, 3.746906906445565*^9}, {
   3.746907048997925*^9, 3.746907056189459*^9}, {3.746907159839006*^9, 
   3.746907166395967*^9}, {3.7469072149529524`*^9, 3.7469072495002937`*^9}, {
   3.746907307931864*^9, 3.746907314185636*^9}, 3.746907385288957*^9, {
   3.746907421984135*^9, 3.746907426733426*^9}, 3.7469075477259274`*^9, {
   3.746907581522535*^9, 3.746907616339115*^9}, 3.7469077178118763`*^9, {
   3.746907810965717*^9, 3.7469078365059886`*^9}, {3.746907962928939*^9, 
   3.746908071964071*^9}, {3.7469081254971685`*^9, 3.746908172874523*^9}, 
   3.747589945562894*^9, 3.7475900034390173`*^9, 3.7475900590522203`*^9, 
   3.747590123817062*^9, 3.747590161471408*^9, 3.747590194898007*^9, 
   3.747590271339799*^9, {3.747590403520733*^9, 3.7475904148445873`*^9}, 
   3.747590619138142*^9, 3.747590664121456*^9, {3.747590706524342*^9, 
   3.747590733623719*^9}, {3.74759078607934*^9, 3.747590813691744*^9}, {
   3.747590862688518*^9, 3.7475908924491873`*^9}, 3.747590971755274*^9, {
   3.747591032986807*^9, 3.747591051510364*^9}, 3.747595090142054*^9, 
   3.747595216912367*^9, 3.747595696661613*^9, 3.747595819950645*^9, {
   3.7475958573986187`*^9, 3.7475960260851927`*^9}, {3.7475960711250563`*^9, 
   3.747596125086741*^9}, {3.747596157601453*^9, 3.7475961794396772`*^9}, 
   3.747596222210511*^9, {3.747596260449317*^9, 3.7475962822634974`*^9}, 
   3.747596362912643*^9, 3.748039958868162*^9, 3.7480400534809227`*^9, {
   3.748040113583451*^9, 3.7480401529431443`*^9}, 3.748641576950674*^9, {
   3.748641668454906*^9, 3.748641691986275*^9}, {3.7486417377317405`*^9, 
   3.7486418290181093`*^9}, {3.748641885620783*^9, 3.748641939845162*^9}, {
   3.748642137651784*^9, 3.7486421463176746`*^9}, {3.7486422260880356`*^9, 
   3.748642230164755*^9}, {3.7486423740827694`*^9, 3.748642377978324*^9}, {
   3.7486424280567436`*^9, 3.748642431350751*^9}, {3.748642474251687*^9, 
   3.748642534715556*^9}, {3.7486425999517946`*^9, 3.7486426335971394`*^9}, {
   3.748642666745225*^9, 3.7486426697249465`*^9}, {3.7486427102897367`*^9, 
   3.7486428124235687`*^9}, {3.7486428715612607`*^9, 
   3.7486428739144125`*^9}, {3.748642905599134*^9, 3.7486429072466307`*^9}, {
   3.74864300149327*^9, 3.748643051500194*^9}, {3.748643110514918*^9, 
   3.7486431581902714`*^9}, {3.748643265467909*^9, 3.748643271699586*^9}, {
   3.7486433387465677`*^9, 3.7486433424609575`*^9}, {3.7486433846862097`*^9, 
   3.7486434654513955`*^9}, {3.748643501106807*^9, 3.748643519695693*^9}, 
   3.7499308221275973`*^9, {3.7499309236237307`*^9, 3.7499309276673875`*^9}},
 CellLabel->"Out[1]=",
 CellID->794121366,ExpressionUUID->"8fac15b0-0276-43bf-9fef-08b97163ac0e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection",ExpressionUUID->"0261bfc7-51db-44b5-954d-03d8df2a909e"],

Cell[TextData[{
 "Heat is conducted through a composite wall with heat generation in either \
wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["A",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "9259d68d-aa9e-4361-850c-8ae6de71156b"],
 " or wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["B",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "67bfb9ee-d0b6-4959-9829-1298c29c2d7c"],
 ". Differential equations are used to calculate the temperatures profile of \
each wall. View figure 1 to see a labeled diagram of surface temperatures. \
When heat is generated in wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["A",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "1b6dc01a-4e3d-4fec-b3d7-8a9cb48bb634"],
 ":"
}], "DetailNotes",
 CellChangeTimes->{{3.7398915641897907`*^9, 3.739891664101097*^9}, {
  3.7439814300833426`*^9, 3.7439814393178225`*^9}, {3.7487786854894753`*^9, 
  3.748778691067264*^9}},
 CellID->84708773,ExpressionUUID->"bf46b719-3fa1-43e8-bcc8-ada53c56a01b"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[DifferentialD]", "2"], "T"}], 
     RowBox[{"\[DifferentialD]", 
      SuperscriptBox["z", "2"]}]], "=", 
    RowBox[{"-", 
     FractionBox["Q", 
      SubscriptBox["k", 
       StyleBox["A",
        FontSlant->"Plain"]]]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"abf4378b-02dd-4c0a-a4b7-9cd9d3ee68b6"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.7398915641897907`*^9, 3.739891692225878*^9}},
 CellID->354548413,ExpressionUUID->"969f73e5-d8db-486b-b23e-bd2fb151eee1"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", "T"}], 
       RowBox[{"\[DifferentialD]", "z"}]], "\[RightBracketingBar]"}], 
     RowBox[{"z", "=", "0"}]], "=", "0"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"1379f257-7daf-4bd3-8e8d-393c96aa9dc0"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891776636515*^9}},
 CellID->76362953,ExpressionUUID->"4442b08f-675a-4fc2-bb06-1e5730cf2497"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"T", "\[RightBracketingBar]"}], 
     RowBox[{"z", "=", 
      SubscriptBox["L", 
       StyleBox["A",
        FontSlant->"Plain"]]}]], "=", 
    SubscriptBox["T", 
     RowBox[{
      StyleBox["s",
       FontSlant->"Plain"], ",", "5"}]]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"2d1f057d-2758-4e19-80e1-86d6fffbd200"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.7398917988986664`*^9}, {3.740406408274604*^9, 
  3.740406425808093*^9}},
 CellID->12446115,ExpressionUUID->"8ed8a001-6255-48de-bd0b-05e79b25e24a"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]], "InlineMath",ExpressionUUID->
  "857d1255-2d56-477a-a24d-44b9c50ca889"],
 " is temperature (\[Degree]C), ",
 Cell[BoxData[
  FormBox["z", TraditionalForm]], "InlineMath",ExpressionUUID->
  "64e2ac28-e1c0-49ce-8940-f595b369e71c"],
 " is wall thickness (m), ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]], "InlineMath",ExpressionUUID->
  "b3fef983-6197-4710-83d8-76f9b6e8d64a"],
 " is the volumetric heat generation rate (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["W",
     FontSlant->"Plain"], "/", 
    SuperscriptBox[
     StyleBox["m",
      FontSlant->"Plain"], "3"]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"06191276-e44b-4d2b-a1de-072fa1c861a9"],
 "), ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", 
    StyleBox["A",
     FontSlant->"Plain"]], TraditionalForm]], "InlineMath",ExpressionUUID->
  "4ad5602d-948b-4104-ab23-4255e145d896"],
 " is the thermal conductivity in wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["A",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "a2d29cbc-3b87-437a-8ae2-a5195fbe4745"],
 " (W/[m K]), ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["L", 
    StyleBox["A",
     FontSlant->"Plain"]], TraditionalForm]], "InlineMath",ExpressionUUID->
  "f609f1ed-2047-4aed-860a-3ad8ee658156"],
 " is the thickness of wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["A",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "25992900-8fc7-4f40-92d2-0d6f45f9691d"],
 " (m), and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", 
    RowBox[{"s", ",", "5"}]], TraditionalForm]], "InlineMath",ExpressionUUID->
  "4a1cfadf-a676-4acf-9525-69e89c79052c"],
 " is the surface temperature of the right side of wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["A",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "571507c4-5f4a-4984-83c3-93e7909727f2"],
 " (\[Degree]C)."
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
   3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
   3.739891920575116*^9}, {3.739892024298147*^9, 3.7398921521117115`*^9}, 
   3.7398927539447637`*^9},
 CellID->308708852,ExpressionUUID->"ea0a81d3-dcdd-46aa-8df6-c735bf17202c"],

Cell[TextData[{
 "A thermal circuit is considered from the right side of the wall with heat \
transfer to the air by forced convection. If wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["A",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "15de236c-5b4f-4bfb-acce-70be412aa076"],
 " generates heat, then the heat flux is"
}], "DetailNotes",
 CellChangeTimes->{{3.683297547414773*^9, 3.683297571927381*^9}, {
  3.68330336657662*^9, 3.683303819328038*^9}, {3.683834722364045*^9, 
  3.6838347226634417`*^9}, {3.683846319204112*^9, 3.6838463682197104`*^9}, {
  3.6841606251020007`*^9, 3.684160670228884*^9}, {3.6841622257296095`*^9, 
  3.684162225745209*^9}, {3.684162652035261*^9, 3.6841626520976615`*^9}, {
  3.7449227177310205`*^9, 3.744922745441598*^9}, {3.748778733576973*^9, 
  3.7487787337355413`*^9}},
 CellID->948395546,ExpressionUUID->"75d22bcf-e1bb-4fb4-a6c5-eb84ce25855c"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["T", 
        RowBox[{
         StyleBox["s",
          FontSlant->"Plain"], ",", "1"}]], "-", 
       SubscriptBox["T", "\[Infinity]"]}], 
      RowBox[{"1", "/", "h"}]], "=", 
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["T", 
         RowBox[{
          StyleBox["s",
           FontSlant->"Plain"], ",", "2"}]], "-", 
        SubscriptBox["T", 
         RowBox[{
          StyleBox["s",
           FontSlant->"Plain"], ",", "1"}]]}], 
       RowBox[{
        SubscriptBox["L", 
         StyleBox["C",
          FontSlant->"Plain"]], "/", 
        SubscriptBox["k", 
         StyleBox["C",
          FontSlant->"Plain"]]}]], "=", 
      RowBox[{
       FractionBox[
        RowBox[{
         SubscriptBox["T", 
          RowBox[{
           StyleBox["s",
            FontSlant->"Plain"], ",", "3"}]], "-", 
         SubscriptBox["T", 
          RowBox[{
           StyleBox["s",
            FontSlant->"Plain"], ",", "2"}]]}], 
        SuperscriptBox["R", "\[DoublePrime]"]], "=", 
       RowBox[{
        FractionBox[
         RowBox[{
          SubscriptBox["T", 
           RowBox[{
            StyleBox["s",
             FontSlant->"Plain"], ",", "4"}]], "-", 
          SubscriptBox["T", 
           RowBox[{
            StyleBox["s",
             FontSlant->"Plain"], ",", "3"}]]}], 
         RowBox[{
          SubscriptBox["L", 
           StyleBox["B",
            FontSlant->"Plain"]], "/", 
          SubscriptBox["k", 
           StyleBox["B",
            FontSlant->"Plain"]]}]], "=", 
        FractionBox[
         RowBox[{
          SubscriptBox["T", 
           RowBox[{
            StyleBox["s",
             FontSlant->"Plain"], ",", "5"}]], "-", 
          SubscriptBox["T", 
           RowBox[{
            StyleBox["s",
             FontSlant->"Plain"], ",", "4"}]]}], 
         SuperscriptBox["R", "\[DoublePrime]"]]}]}]}]}]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"5a846e6f-e24f-4095-a0ab-fe94b2bfedb6"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.683303841083424*^9, 3.683303941110602*^9}, {
  3.6833039790773697`*^9, 3.6833042528162947`*^9}, {3.683304321653351*^9, 
  3.6833043478746147`*^9}, {3.684162364634879*^9, 3.6841623652120795`*^9}, {
  3.684266995688055*^9, 3.6842669976488533`*^9}, {3.684271329255766*^9, 
  3.684271351767625*^9}, {3.739892763303774*^9, 3.7398927871357718`*^9}, {
  3.74040614183424*^9, 3.74040614183424*^9}, {3.7404065596117964`*^9, 
  3.740406569360257*^9}},
 CellID->228715552,ExpressionUUID->"31d11d61-d801-4896-9331-919796bd1403"],

Cell[TextData[{
 "The heat flux when wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["A",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "c71266de-ad66-4181-acb0-74fcaaaaaa53"],
 " generates heat is:"
}], "DetailNotes",
 CellChangeTimes->{{3.683303841083424*^9, 3.683303941110602*^9}, {
  3.6833039790773697`*^9, 3.6833042528162947`*^9}, {3.683304321653351*^9, 
  3.6833043478746147`*^9}, {3.684162364634879*^9, 3.6841623652120795`*^9}, {
  3.684266995688055*^9, 3.6842669976488533`*^9}, {3.684271329255766*^9, 
  3.684271351767625*^9}, {3.739892763303774*^9, 3.7398927871357718`*^9}, {
  3.740406142499689*^9, 3.740406158421692*^9}, {3.7439814838955226`*^9, 
  3.743981492853431*^9}, {3.7449227527989807`*^9, 3.7449227766117444`*^9}},
 CellID->463046552,ExpressionUUID->"333af4b3-b782-441d-93aa-b864609f4eba"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", 
    RowBox[{"Q", " ", 
     SubscriptBox["L", 
      StyleBox["A",
       FontSlant->"Plain"]]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"dec54e08-b178-458e-bf28-7d0982860c2a"],
 ","
}], "DetailNotes",
 CellChangeTimes->{{3.683303841083424*^9, 3.683303941110602*^9}, {
  3.6833039790773697`*^9, 3.6833042528162947`*^9}, {3.683304321653351*^9, 
  3.6833043478746147`*^9}, {3.684162364634879*^9, 3.6841623652120795`*^9}, {
  3.684266995688055*^9, 3.6842669976488533`*^9}, {3.684271329255766*^9, 
  3.684271351767625*^9}, {3.739892763303774*^9, 3.7398927871357718`*^9}, {
  3.740406142499689*^9, 3.740406169435855*^9}},
 CellID->6660895,ExpressionUUID->"54ca9a74-6355-4661-bf91-0614e2fc423e"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["q", TraditionalForm]], "InlineMath",ExpressionUUID->
  "f6a74463-5d1e-4753-95f9-8f1a8b56f829"],
 " is heat flux (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["W",
     FontSlant->"Plain"], "/", 
    SuperscriptBox[
     StyleBox["m",
      FontSlant->"Plain"], "2"]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"d9f61558-4f3a-455c-92b3-a2f1314f5ddc"],
 ")."
}], "DetailNotes",
 CellChangeTimes->{{3.683303841083424*^9, 3.683303941110602*^9}, {
  3.6833039790773697`*^9, 3.6833042528162947`*^9}, {3.683304321653351*^9, 
  3.6833043478746147`*^9}, {3.684162364634879*^9, 3.6841623652120795`*^9}, {
  3.684266995688055*^9, 3.6842669976488533`*^9}, {3.684271329255766*^9, 
  3.684271351767625*^9}, {3.739892763303774*^9, 3.7398927871357718`*^9}, {
  3.740406142499689*^9, 3.7404061941004066`*^9}},
 CellID->237220554,ExpressionUUID->"4eaded0c-3062-4424-8c6e-9c8bf6f2b33d"],

Cell["For generation in either wall, the surface temperatures are:", \
"DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.739891920575116*^9}, {3.739892024298147*^9, 3.7398921478332963`*^9}, {
  3.7398921848017397`*^9, 3.7398921970681953`*^9}},
 CellID->11186204,ExpressionUUID->"3d79ba84-16ce-4a59-8556-ccd156cf045f"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", 
     RowBox[{
      StyleBox["s",
       FontSlant->"Plain"], ",", "1"}]], "=", 
    RowBox[{
     SubscriptBox["T", "\[Infinity]"], "+", 
     FractionBox["q", "h"]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"f2e69e28-bf06-4b86-9d24-707d0e2937dd"],
 ","
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.739891920575116*^9}, {3.739892024298147*^9, 3.7398921478332963`*^9}, {
  3.7398921848017397`*^9, 3.7398922151262197`*^9}},
 CellID->156721650,ExpressionUUID->"81d32dc3-e20e-4a68-9e8b-4a56f3e946c5"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", 
     RowBox[{
      StyleBox["s",
       FontSlant->"Plain"], ",", "2"}]], "=", 
    RowBox[{
     SubscriptBox["T", 
      RowBox[{
       StyleBox["s",
        FontSlant->"Plain"], ",", "1"}]], "+", 
     RowBox[{"q", " ", 
      FractionBox[
       SubscriptBox["L", 
        StyleBox["C",
         FontSlant->"Plain"]], 
       SubscriptBox["k", 
        StyleBox["C",
         FontSlant->"Plain"]]]}]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"b87c043c-1320-44af-ab46-25775570c3ff"],
 ","
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.739891920575116*^9}, {3.739892024298147*^9, 3.7398921478332963`*^9}, {
  3.7398921848017397`*^9, 3.7398922381482944`*^9}},
 CellID->100070280,ExpressionUUID->"d6554ea4-6dfa-46cd-a7fc-00a12b8dbf00"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", 
     RowBox[{
      StyleBox["s",
       FontSlant->"Plain"], ",", "3"}]], "=", 
    RowBox[{
     SubscriptBox["T", 
      RowBox[{
       StyleBox["s",
        FontSlant->"Plain"], ",", "2"}]], "+", 
     RowBox[{"q", " ", 
      SuperscriptBox["R", "\[DoublePrime]"]}]}]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"e7d757a0-b79b-4788-aa36-b8daf8b089e4"],
 ","
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.739891920575116*^9}, {3.739892024298147*^9, 3.7398921478332963`*^9}, {
  3.7398921848017397`*^9, 3.739892266101924*^9}, {3.740406575534753*^9, 
  3.7404065787504005`*^9}},
 CellID->141254418,ExpressionUUID->"2a1a0c54-a567-4126-b056-353b46abfd33"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["h", TraditionalForm]], "InlineMath",ExpressionUUID->
  "864f5320-7364-4823-a092-3e41a95c3567"],
 " is the heat transfer coefficient (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["W",
     FontSlant->"Plain"], "/", 
    RowBox[{"[", 
     RowBox[{
      SuperscriptBox[
       StyleBox["m",
        FontSlant->"Plain"], "2"], " ", 
      StyleBox["K",
       FontSlant->"Plain"]}]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"4059efb3-3173-4976-966c-3994c71ee343"],
 "), and ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["R", "\[DoublePrime]"], TraditionalForm]], "InlineMath",
  ExpressionUUID->"0488c5a9-0001-4b80-b050-a78e129bcf18"],
 " is the contact resistance (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"[", 
     RowBox[{
      SuperscriptBox[
       StyleBox["m",
        FontSlant->"Plain"], "2"], " ", 
      StyleBox["K",
       FontSlant->"Plain"]}], "]"}], "/", 
    StyleBox["W",
     FontSlant->"Plain"]}], TraditionalForm]], "InlineMath",ExpressionUUID->
  "eac54fb2-843f-4866-b662-77ecf61b9bd7"],
 ")."
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.739891933602536*^9}, {3.7398926442272034`*^9, 3.7398926487920027`*^9}, {
  3.7404062012010593`*^9, 3.740406201830531*^9}, {3.740406582207173*^9, 
  3.7404065848659267`*^9}, {3.7499323032185793`*^9, 3.7499323032296023`*^9}},
 CellID->67166341,ExpressionUUID->"f40237d2-a908-436e-a8a2-4766f203eacf"],

Cell["Figure 1:", "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.739891933602536*^9}, {3.7398926442272034`*^9, 3.7398926487920027`*^9}, {
  3.7404062012010593`*^9, 3.740406201830531*^9}, {3.740406582207173*^9, 
  3.7404065848659267`*^9}, {3.7499323036389594`*^9, 3.749932306006114*^9}},
 CellID->865556794,ExpressionUUID->"1a7d016d-2dc4-47e0-a654-a76e397e0cdf"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
k9qkzqhnP7uV/1oK1gFYm9+Q1yGTyfLz86uqqjoWPDdtdOKHWq2ma5Y+ZsTD
aB1aHQl0tCnHT9ah01OqFiwed+/e+Y/KQTYGo+fsOT3nLugxZ26POfN7zp3X
58XFAxYuGfHqmyNffWvU6++M+cM7Y9/869g3/zzmD38Z/cbbo9/48y/HUW/8
Zfxfl7t/yJzrHfwiM3yBX9h839CFrIiXeWsXsMLn+obM8wt9OWDdn6J3/H3L
wX9sPfSXTw7+cfuXb+748q2dR9/ef/LvR+I+PJO2/ML1FcnffBR/7ePkm6vS
77C/yw7IyA/OKQnMKQnKKo3IlK/NrF3/ULn2YV1EZnVIRmVQZlXQg2p+ZiU/
u46fq2RmVftkKnyzqnyya72zq8i8jLCam1PtL67jimp9sxReWZW+uTXeObXe
wjovkdJLUu+d1+Rb0OJd2OJX1Lgqt8RLWOQtKvYRSbE2+OaV+RRU+BbKsV0Y
BaOCkKfArMhX4H2jY5QaNaO0zTGIXcj8xDKWqA22kKYM83NV+Fmi7KPP6/ZY
itfPoTNpf0EFnV5rCev4LZizDv+Ceqa4PLygfKogcuzsl5PiknNzHly6duaF
KSSvI1LsypYh73LkUwrWAViOzlbOMqUopBxtLhn5UnDvQdMcOAKv/2fvPOCj
qNaHfbal99B7J0AIvXewgAoKIk1QSN3esptK6B1FUUFFVETphBog9CYqSknZ
nrKpW5LdVCA9+50zswkBSQT/bMj1O/N77jg7Oxtyud6cJ+95y+Vz57F1YJqb
fxXrIKMZDWMa5eXl5ESVZxrI8x+1hHhUNwh01NbdhdZRVVwErWPTxg3PZR3w
oDEA3REw7K1nhhNwcEXNcagENCdAd0bAC6rjs6E5A0cv0KoLo1s/x14D7XsM
gBfw7NTbz6nvIPtevg69B3oMHNFxzJSeU2b0mvpW18kzer75frfpc7vP+KDX
rEX95y0bspQ9Mlg8khM6jBU6gh8+NmzF1NWbZmz5/J1Pv3zr0y+nb/1q+sZv
Zn3y0wdfHlzwbeyC3ScX/Hhywc9nF+6PX3DowuLjV5ecubno7K3F8b8HXLvP
/EPB+Svlo/N/+V+4x/1VFZ6Uu1xpCkvSixJ0oclGkQylp6LcD5mRnWxkJhkg
IUk6YapRmKoTpORC+BodR2MNd6BdEhTZeKwc/qn58IJJPEDCVpHouUoEubXE
UxgFdZAbIuynNQNtizSsQ6mHqTIFaUwBKehcRz4JuadjPVv3dMi6nldvGs9j
HcvuZfFSDCG3k3qGCF269L8cf/XC+TPRq9huXVANS5Sis0AHOHmAqwMROTRs
HRjb0FSXMG4OiDKAVZp2wzm0nhO9Dx7bk52mxdaBaW5eUuXsU/fhS7IRuqWu
Wyk59O2Zw1meyzpqiKlwD0stNZVcNvN5rQPQqMABAAYF2JNnCnpp/wJQGYBB
B472wMUJuDoDF0fgZA8cGMCe/gSOdug+BD5JtQcUAiphO/bOwN4VODgDhiPC
zhE4OAEXV4QTVBpn4NUOdO4J+g2yHzraefREl/GT3aa87v7a9H5LA3yZrME8
vp9ANEwSNn7V6jc//XTmlzuW7j3m/8sp3olrK28kbbyTuvYvzdo7aRuTs1ff
y1h1H+0ErUjMjknSLU9GRMt04vsZgoQMYWImPwmSxZdl82S5qC4GiYQ1sbMu
/oCSQtlEcgXJk7W01pqX+noWa1WLkiwzaagWBfV1KMFqRJDmacj7BCYS+BEU
9yDP1gCINUP1lZvG81gHfBmWUyxVZoxbuan7sEnHDp3gcZmADhzagXFseqS8
k8hA5ZsB34DyOnANC8Y2NDVzVqAHMfkgRtkaWkebIXbHzxxQJ8uxdWCamxe3
DnhAnSCzOKBC1M9YqR/l9tQGyt9NgzSQxsWjhtxYeYZ1VFW8oHUwAMUFUJwA
cAbA0XqmOSOoToDiiIAXEHiHfPkU0BzsoXgAK9BZHCnADliBL51p6A6DeEme
AVxqIBQGhWpHpdEoVAoAEDqdTqVSia0fAOA9CIXQImg1DvbA24vWvi0EtG+D
6NjWrnc3p/69HQb0pvfrwejX23nYgNbjR3WYOsVz7GTnkZPcxk7r8MbsLjPn
d3pnQbc5S/osChrODhvBjxwrWTV5+cY31m1/55Nv5nzxw5ydPy89FL809nJQ
3E3uxT/FN2WRd1KhlqyQ66IScyKTcsKTcsOScyXJ+lAZQoQgin0I4HoqkBfw
EFbfIOpZSln1KEvqupoQylFXe1IvFfWpJiTwmqUsslbE1NXFNKC+R0o9r14z
ntM6OCrT0nspYapMH64U0D2mT3tLwGdHrmB6dANThE7LVV2hdfBMgKfHsQ6M
7WjUOtjZQJyHrGO5otWkMLdWg+hnLx3TqtXIOnywdWCaEdtPf3vRo946kHLU
1m2voM5gVVXFhdA6Ptm6+Tmdw7lXf48RE71GTWo1ZmqrMVPch09w9Rvl3n+E
Z9/hHn2Gufce6tZrSD2uPQf/HY8evq169Pbo0NHe04vm6sZw93D0buXUqjXE
zsPTwcsbQndzB3YOgEYHVDqg06w6QbHaBZVOo1AooO4GtBEaakUMoJDYASqN
/EapgG5HozGodZ8iX1qvAfkBKoE9/CPsUcDE3gnYOaNAioMr8GgF2nRw9R1i
7zPQsf8Q75Hju055q+f09/q/O99v3kcjAoQjQ6Rj+dFTpGumx2ydteHL97fu
+uDzHxbt2PfR7iPL9hz/aM+xj/eeCjoYzz1+lRN3K/D8XcHvaSE3lAFXZeLE
3HClmZeQy0nUo40bWR5TnsdUmFnqQmZKESu1GMJRmflqs0BTwFWb4TWKdSjz
Q9CKbLWOYE1xYEpxUGpJYOoDpuYBL6kI5cpCEgtEyUViWTGEvBAlFwiSCvlJ
JkGyWSgrgAjkJvIrE1+8RUhI09YhlqX15UiAQ6sp46ft+OrzY6e/7z6E+lqo
K7QOThbg5gNJAU2aCaRaCrYOjA1oKtYRmo9qWDZndx/OobUezBCGMeNPnaq3
DtyvA9NMtEjrIHgyqYOwDqgcltpKXW7W8ygHhUqdt+OHRd/v//CHAx/9dHjJ
nkMLd++bv/PH0fyo0dzIMeyIkezwUcywEaywJs5jmOJBsxf5zni3x6TXO42Z
1HH0REiHURPajRjXeexkeKfdsLEuff1A+27AtRVwcAcOLsDJFTi7IBydgD2x
pcIgskqgHji6AIYzip/U78JQGIDhAOjQWKhWKISFUCl0Or1eXmj1UKiARgMM
OwT0HKgmKHeFAezsgJMTkh+IkzP6NsjdHLS/4wbsPYBDPV4oUwXS289h4EjP
UZM7T3vHd+7iCUG86cKo16Wr39ny7Qe7Ds/7IXbJ/nOSawkr76WtTNSu0xhX
q/Uxal2UUieRZQkTM3mJGdykDF5yJj8xR5isg3ATs1n3slgJ2QKFMTS1kC03
MhF5pISEKM1B0EkUZqm6NFxREiYvlcqKJMmF0DSESWZBokksKxTJUfasWFUc
qnoAz0JFIU9hYskM8OuwFHlwlYcrez0tzTrgdyhMzw9TZZL9Os6cOKdUJJ2O
39umD5gscFyZ0oOfi/I6RFA8MgDeYcHYhkatg5kJJCaKSIvyOqZGegL408id
IhWI8A4LprlpedZhqbOO2ieto7r0AWqPXllWW1sdwuH8o3X4LfzI/9qfy67e
Drj+V9DNu4E37sDrJRdvLb7w64fnr38Yf23huauLzl1dcPbKQsi5q/BMXjc8
L467svjw2Q/3nfjgx8Nzdh+Yu/vgB98fguc5u/bP3bX/g+8OQGZ//fM7n38/
49Nd0z/59q1t376x9Yu3Pv3y7U++mLZuy+jwFUP5YcO40tECqDGSkcFCv8Ws
3rMXd3trXvcZH3SbPrfr6+91mzajzZgJLgOHokiFz0BnH1+Hnv3tu/RCDgMV
he4C7FwBw826MYTu2CFLgTAYwN4eAZUDXpM3yft2dtYLBwckPw5QP6CQ2CM/
oVmhenjSPL0Y3t4Obdq4dencunev1r17u/bo7TFkNFQR91GTvCa80XnGnE5v
v99p5tyeC5b6BrAHsYWjJcsnr94445MvPtj147L9R4KPn2XF3xLeTI6+lx6T
nBWVkBl2Nz3sfmZ4Uk6kwhAm10sVRrHcIFIYhHIjRCAzQPhEd1Zr9ojKxCMs
IkSGOpAQfpIP/SRIlR+ohhfWvA74QMOIBykhLco6AhNzQzMLePdVPlypS5f+
1y7e+HrnF+OnDHDuiPp1rE7rJTJQoXXwDSBUCyKzGdg6MDagqUn3nGyw0mzt
iO7SFywNXnA69ji2Dkxz0+Kso8ZCzpR9yjpQ7KPaUltVXlZaUVv5sKamXeem
uoR1GD5KmGoUpBj4Gj08E3UcRnjNUeZw1Do2UQfKUmUzlVkQeFF//RRsRZZQ
kStIzuYnZcGzRK4LUxogUoU+XGGIUBojVXlRSmO4TBeWnAvPEXKdOClDIssI
k2Xw/1QGXPrzw9NXF5+6uvT09WWQY1cW7T/73rcH3/ripxnbf5yx7YfpW797
+9Nvp639dHTY6qHC6BGi6BGCqGEs6aAAYbc5S7rMWtR15qLuMxd1fvODtpPe
9hr7hvfoKe1Hjm87eLhnfz93H1+3vgNcevWx79qd2qETvVMXWruOwLsVcHVD
gkHiQGz90KhW6DRApwIGDdjR0QWEWrd3w6CgfBQaQImvdk5IbxzcgLMHsYnj
Arxa07r2cPTp32rYyE4TJ/d6c4bv+3NGLl4yJog5gh8+LnrjW1t2vr/jpwW7
Dy3ac3TJ3pNLDsR9dDh+6bGLgadvsC7ehloS8VdKTELGcnl2aHKmEP2tZgng
/xZy+DecDWEpUR9XlsYQkpIXqDH4I/IC0kzB6QX/K9mkTLmRl2IIlacPC1/l
3n1g/OkLGzesmfLGYJdOj62DbUTWIckAUTl22DowNqBR6wgvcubmoJmzUTKv
gYGg+3jP+Csn9JnZ2DowzU1LtI5KghrLU9ZRi7qEoYJdi+WBxRK8fAUdLq/P
OrpPnR50O5WvNsNfoskO5CSojwT8vVuVL1LkQcjfvkmeelkPqg9VFfAVhTx5
AVdm5hNwk/I5iXmPcw8STfyEfO49I4STaOCmFPDSixCphRx1Hktp4CqNfJVB
rM4L1eSLlUbSYUJlOZLkXHFSllShEydnCxMyRPe0oQlaaWJG2H1t2N30qARt
5J3UyL/UkX8oRdfuB568vnD/2YU/HV+086e5W76aHrN+gjhqFEs8eBnTZ/7H
3d6d7z5+quvoSQy/4aBrH+DZBjh5IByhObihShky1oFgIFA8hI4SWRlUAjJd
loLuUOmAgpJhG0AkkxBnip0jBL2k0VCBD7x2cgeu3sCjDWjXBfQd6DBqQpvX
Z3aa9cE4YcSU8NVvr/ts0Vc/svefjDh7fd2Nu+v/So66LwtLVoUrNGHKNIky
VaxKk2i0krRstjyNq87gpuVy0vQhqblBmpwAdXagKjdYrguRGUKe3Gfhqs0t
zTp4moJgWWaEJnuIdEUnv7E3r9z68/atk2f3tO79eIeFnP4mzcSxDoyNaKpf
hzgPiLRgdUr7iVJXsiN6qkKFrQPT3LRQ6ygnJ9zXNpz+Vl1VUf6g1lID3yuw
WEJWrXMbNPxNtqjXpNccPLygbDh6ekPfmPHZDzyluTH4SrNQQfR0IrpbkDz1
siF8tJoUczXFHHUJR43mpqFCUXkhU25iJZvZMhNXVgidRKAsEaqKxZqHopTS
QBlqdb5MkRegQDsF1rJQdX6ATBesRNWgISrUjZybmkeOk2Mq81gqE0dTwNMU
wpVLQCDSFArVJihI0FWkGpNIYWDe1fr/pvC/kRR2J010I5kV/7v/yWvLjl9a
dvj8R/vjFu899sG3+xd+d+DD7w4s3LFn7rZds7fsmLlh+9srt0zkR4znhI4O
4gxZHNBv7qKe77zX+Y23Ok573WnwMNfBQx36+4LOXYGnN3B2JjZi7IGHB5GF
4gScXdFuDpQQhgOR90ola29oxAs6USBEBTSiEQrpM47AxR206UDt0p3WrRet
R2963wEOA4e5j5zQdvIbnafP6jnrgx7vL/BhsgeIQkcsXzVx09Y3v/j63e9/
WngwdsmJs6wrt3i/3ZMkqiMUGWHKDLFMK0xK4yZloBEzT+6wQPeABtLSrANt
EsmzwlSZXfw5nj0HxR0/q1bJrtyM7eIHXgt1hdbBzUZ5HWITJSyLgmtYMLah
UetgZVk7om/J6TFB4tJplMup+MNpSjW2Dkxz0xKtA2rFIzLc8YR1WJul15RZ
LMUWS9Dqda6DR3L3nYhIzuWozH/n8Sh2RT4JvCbeeiIXkXxJLmd/h602hajy
gtQG1M5CY2RpTCxNHupknmripxXxUtE6iNqAy43M5NzgxNyghByByozCI0pz
wxgLfIap0JPD4JgqNB4OTZVV5wTJs9E3qSgih8By5MhkUBvSpLzgBF3Q/Vxm
sp4I1+QRY90M8KsFJxsCEg0BCbnwAY7MKFaYJUpTuCJPkpgdLdPFyPSoX8c9
7cp72qjf1aFXEoNOXvc/duXjg+cX/HRq9rcH39m+Z/rW797YtHOQIHqYIGow
W9p3Kav7/GUdZ3/Y+q053q/N8BgzznHwINchQ1wHDbbr3dexb1/3vv1o7drb
t2lP9fBGBkIhwyJ2VHSm0ihUtHtDo9AYdAjKJ0Gv6UhgHBxQPq01r5VIbXVw
Bh260Xr1cx88qsP413tMnz3wgyWj/DkTuGHTpKvejNn87uYd87b/+OG3B/1/
OsU8fCEk7reFl+7P/1W19G4mNA1SPKB1hMgMLc06gpP1Iq0pQpPtw5V28B19
7tT59DT1qXM/Qet4XeK2KrUnLwfFOkT5KNaBrQNjG5raYREZUZewNakd+i0F
HgNAxAohzuvAvAJaqHWgWEetpebJ+1WV1WXVtVWlFRUPLZbAmNUM32H82LNh
yTlPdnh4mqeso37GOtQJ8hqqBdKJJ2avPz6HpOSFpKB8AzRPVmVAk+7VUD8M
UD9YxOwz6BJcTT4vJQ+e+ep8bpIBxUmIWfbkXHtySmyIHI2shR8JUeZC8WCn
6jkp6CUafUsoBzwL1MVCTQmKrqiLhGkPuGqiARcUGzX69uCZl1YcnFYamPog
MKUUEpJSwlIXoyGwRGamSGkWyo38RF2oTB+hzI+ATnIvO0xuhEhleeHJhohk
XXhSbmRSDmrWcT8jJiFjxf2MlffSVt9LX3VHE3krWXzp94CDsQt2fz93x9fT
N20ZKQ4dxhMMDghpP2Om5/ip9n4jQMfuwK0NKoGx9wR2bijZlcogCoIbQLdD
hb1UIm0VtUpzQOIB70CgddAcEfCzdq7o4wg34OAJ7L2ASzvg3QV09nHzHdV9
yqwxC4Mn8aImbd455dt9H8SeD7l2L+x+WpQiN1qJ8meINiO5dW1GjCQCNOpF
D/+eG0B2QkOxESJFxNpXhKRBnxBTY31CyMQScsgdOWWGHFcHL8i3rNaRmC3V
moT3FAOFEd6+w44cO61JVZ6I/6nDAPCa2H11am9yDovAiPI6kHXkUpB16Kki
PcDWgXlJNDr9jZMDyMrZGGXr15e3Aq4oiWt5WAS2Dkxz0zKso0EbMWLEW21l
ZW1NZX3NbC2xv2KpqqgtR9kdNZbyMkvouq0uoyYEHT0lkeW86K+rdevIc50J
jM88WwefNTw/ayLJ427hqoaj3uuum1KmZ3znzAbz5cleoOST9X8WURti5D1u
Wm6d6Cpo0MmcyFrRQ0TWzmBw7c4lyAn6PSHgtztLr//x0aVfF567uuDUxQ9i
z80/cmbWniPv/XD43e8OvvXVT9M2fT0qassA/ooBQaGD5gYOfGtBz0kzO4x8
zXvgWOeegyhtewH3DsDOCzDcAR3iWgfRfB6lqtojM0H7MkSpL5Vh1RUqg2rn
aO/s4ubu2ap1246durTr1ct9yGCXsaM9J03yfv2NDjNn9/pw6VCedELkumlr
ts/ZsX/xz+eWHLzMjPsr6g/t6sS8iIQcriyNk5rBTctkqrXBSi1bk8tNRXmq
8K8uWJGHRuYpitnqhxzNI5bqUQgxVo+vRPAUpRx5IVtWgLbPFPmE7yFQl1Sl
IViZC50T6iJfnS1SZQpVuUKljq/M4ytNQgXatmPdy5DIslbJU4dJItxHjdp7
Nu7LH3cMm9TXvh0Yz3ZYk+Yj0FE4evSTPzybGp3LkOQC6BtCPQVbB+bl0dTM
2YgiRoQOVc6OD3V26wdYgmXnT5/59eKlfj1AVAQoKOxLWkeFEVsHxpa0DOt4
UkHQZop17pu1Uwfyjgo0Eq6ypqzMUl5tqbIIlq8DvfotO3oy9MWtA9MYRMKJ
gZOm56ToWESZD1uRxZZlcpJRaw5BMurUIbiv5fyhDryetCT+z49O3lz0/Yn5
X+2fuWnXazHbxkvWDmeGDVjM7jN3WZfpcztOeafN6KnewyZ6DR7r7jvcoacv
vXMPh87dqG3bARcie4TeoJjX2qsEHWRzEjqwNlZDHV+d7FBHencP0L6zs4+f
9/AJbca+0fOthX4L2cMDpJOF695d+82Hn+2bv/PAu3sPzok9Nv/MuYXnzi+5
dCPot7ucuypuYppYpRcrjSIit4erKGLJC1nyYraiJDghj5lkgrLBUpjZygKO
qpCnKeSnFQfJDEEKKBtoKExISh4rzcRON/PSTVxlJl+hFShz+CqDQFUgUBah
CJW6MCqtJFqWE/V7Yv8QNm2g745jh7fu3DZ0bG+XzmAix2V1al/Ur6POOqJy
6Ng6MDagqViHQA/4qSAiyWNyuHvn0a6n4g/rM7PPHI0d2AesWQUKi3yQdVTb
W4qwdWBsyauzjsrKSnJ+XG3dQbZbt1RbC1Uqa4lxLPAfVSjWUVxVarUOorI2
auNnwGeg8OI1bB0v1zqCFTnBquwQZTbaBlLl8tQ6vkongku2Si9RGaRqY7jK
iGqHZTpJYrYoMVOKimG1oYlpkqTUCJl2uSw9Oill+X1l1J+Jgks3lh46/v6u
PW9+sn1MzKq+HH73xUvdx09xGjIS9OgPWncEbq1QCYyDG3B0RR7iSEyrIRNT
HYiiGxrdqiJUok+rtbjGHjBcAM0FdT9z9AIO3oDhBey9gXN74N3FfdSkdjNm
DVgSODE0es7Wr9j7T0Rf+X3tHXnMbcXKeykxyRmRSRni++mChAxUB52aL07P
F2gR3FS0ZRakyCHQcVJNzBRziMYUqM4LVOcHqPKWKQzLZDoU5lIaWAo055cp
KwqRFTNlxaxkM+++Ifxe1ro7mrGC8NYjx13+605OdubZuH1te4IpfPdVKX3I
vA6xmZw5S8XWgbEBjVpHqMk+vJAekw/WaztPCnNz6QsuXDuV8Oedi6dODx8I
VsYAk7l3Zam7pZxWW0AsDdg6MDbify3WgU4PyqtKa7mRq0Ff36ATZ7B1vExU
RqZKh5JdVTrCOvRQPIhps7k8GSSbn5wrkBPNSGU5oqRcvgz5SYAqK1CRGaTM
ZKlzOJpsvhpFA8TqDF6yKuSP+/7Xf//o4o35ceffO3Ji1k8Hlv58dOnu/Qu/
/GHO1p1vrdoyNWz1OF7YyGBhj9kLO06f5TFuqsOQURSfQaBLLzQXz8EFpYWg
LRg7a09XmgOV4USzc64bjUOvg0FnOLl4tnX07uTYoZd79wFefYZ4+o5oNWJi
+0nTO02f7bMoYAhbNGnVhhnbdry7a8/Cg7HcizfC/koQ3EviJin4MpVAkSJQ
pAmUGcKUXGGqgaPMYSmRY7BTzOy0Iq62hKt9AOGkFHJSijkppWiPRlPO0lRy
1JVc1UOxomiFLP+TxMzRrHBq5z57DsQq7iZdPnO4Sz/KNKHnSk1vaB2ohsUM
wrIo4ZkUbB0YG9BUDQs3B4Rmgmi593AOzdUHnL96MjtNe+HkqRF+IDIc5Jt6
1Tzyqi4BlXk41oGxJS3AOshhcOREWvT1G1oHqqOtra2oqayuKKl+YCjUm/V6
XYo24Y/kJWyx3bDRH+4/gq3j5cJLNfPS8nkpJq7GyFHncdSo3wgUD6HaJNTk
oW4nKiN5DlWZ4E1uRmEwJL0gODUvKMUYpDagWIE8O1iWyVZkQ10RqXVijV6a
oo9IMy5PzVuelLkyUbvqfvrKe2nRtxXiK3fYcdcDjpz/4LsDM7fvnrL2s1Hh
qwdywrp/zG49e7Hn6+91mvJWp1GTvQYOd/cZ5NKzn32n7sCzNXBworh7oXgI
g44aj6CKXrQdw2AwaMSQYBoa9ueIBv8xXICzF/BqCz9F6dnbc9ToTtNn9Jo7
189/6WSJ+M21q2d/vWP299/N++WXxUdj/U+fDblwjXPjNu/3BGmyNlSeJZLn
8OU6drKOmawPTjYEy/L9ZaYAeaG/vChAUeqveuSvLgvUlIeoH7AS8wR/pK25
nTKet7zVoLFxF29mKtKvnjnaw9f+NZHXCnUvaB3cfGQd0kyArQNjG/5hDsvy
PFQ5Oznc3dOXwpcEf/vlDgmH26MjinUUFvlA60DZpOiHP7YOjM14ddZRRRyk
bDzxRt0Oy1Oxjge1j/5MvH388IHNK9awAzjd/UaC/oP8Y09h63i5hCj0ECY8
y3UkLBkC9c2Q6+tBZbwKI0dl8k/SLZXr/eWGAIUxSGVmEkU3HE0B/FJcYioc
X2liJelZCdnsBB0vSSeWGyBSBdqmiVAaI+Q6SWKW+K42RpYbnZQdlaBdfl+7
IiE95n5a9J/q5bdkvCMXAr47OGfjjqlha0cGC3u9/6HXhNcYvkOAVxvg5IJ6
jDg6oqG90D1QLS/DydHdnuJMA/YUYA9IqHXTahgM4OwEXOBH7IAjvLYHHq6g
U0fg09d9woTe8xeMF0vmfPJ54J6DnGPnVv6evPquZnVy5gpZdhTReDZSZYpO
LxWqUWcVjrqIpS4OUpcEKIonbvi649jJds4uAAAHF1f3rj3tO/aIPXs1TZF+
6UxsN1+7qQIPaB38XGQdIhNZw4J3WDC2oKmZs5xsFOtYk9phCBMAV1RJRgfA
08HRiQY2rEPWUVbkYimjWipolgJsHRib0QJiHY91o7q6srLSUlvz6NGD9Kzs
3/7869SJM9/t3LV2xRqBiL8ocPGSwMVhIv6G6JWfbtg2bvp7wHcIzia1HfWd
TEgae0ucUizWlIrUqE8aX1HMl5l5ySZ+EkIoK0Az3ZILIKFJBZLkYjHRkyRY
bgwieo3CL8VXEyNrVfncZB0/WS9M1j0uqEnKkSRmi+9m8H/TBF9OXHrm9uLY
K/N+Pj3rm30zPvtuzhc/vLXh8wlhK4ezBP0/XNrx7Xedx02w8xsMOnRBvVIZ
zsDOBaWL2Dtbc1ahojg6WnNFrC3iAaBSKXZOdGdPR6+2Lu27enT38eo3pPXQ
sd6jp3R/e37/xSEj+dGTYra8sWnn7J37lh2KZ5/7XXo3RZiA0kL4suxlV+91
Gj3hmQ1yh40ed++e4vz5kx370ybz3GJUPQU6Cs8EBHlkR3ScTYqxBY1aR1ih
E8pkzgUrVG1GC+y9BlKDuR+9P/NdlKlNA2tXoxqWR4XO1fAn/yOArQNjQ16p
ddTW1kLNKCkp0el0SqXyzz//vHHjRnzc6SNHDu364cdtX3y5acPW5eHRnGD2
osUL5y1dwJNwP9+66fgvB29e+nVBEA9aR/DJs9g6Xi5M66xYI9mBvB6OxkxW
kpLNQ6wo8tnJRqQZRK94eAERJBUKk4vE8hJ45iei4fXi5FKx/AE8c2WFbE1J
sKY4UG2GhGgKIUyVKQT+uehPRyZDtrLnKAxEt5O84AQDMymPKzMLFWaxwiyV
50fK85bL9cuTsqW/KTnxf3x85PzCn46/u+OnCas/GSyMHMLk9Z63qO30d1pP
fbP1xKnuI0Y7Dhho37svpX1H4OVNNAxhoOgHCoDYQecgp+UxrJsyToBK9A+x
9wQMD+DdxcFnmNfoae2mvdN79uJRwcJp4Wve3bZj1o7v3t/987wfD3h179nE
MKABvgNDw3jt+lAnclygdQj1VGgdfCOa/oYrZzG2oVHrCNYCvg7E5KO8jmFs
aseRzmcvHfvik0+mjB7T1hPERIOS0gGWitZlZmApJsQDWwfGRvwr6yDrTZ4K
U8DjmWrx1JNk0Ur9y4cPH2ZkZFy+fHnbtm3Lli2bNm1a986devbsPmTEyJmz
54iF0m+/+ubG5eup6SnllkqUTVpdgapaqi2S1ZvBgMGBx+Owdbxs/tZmTfUY
5t+oaxjS4Mm6HlyPm3EpiljKIvIcrCoK0hSQBKutMFUFT7YfsXYgQV9Taf0s
hKso4MkLhDKTKNkUmpwflmQMTzRGJuqjEvTRCbkx93NjErJWJKWuSFZF3L7L
PHNx3o/73tj82ShJ5AD/kDavv+08fCzo1ANFQuxdEQwXQHUGAEGlulDoroDq
hl5SnNF9+JJsZQYfoxOREwc3VGjj5gE6d3EbPsK1a9d/GHuMQikAOICxIQ6r
U/tK8u3YRsDOBRE5NJzXgbENTcU6mBlAkoViHZPD3dsOtT8VfzhVoTh37Lhv
H7BuDYp1oBqWWkfUJawEWwfGZry4dVShnAuraZSWlpaUlDT0DWgU1XUHfBLt
mBCmUVFRUVxcnJWV9ddff506dWrPnj2bN2+WSqUfffTRggULgoKCoqKitm7d
+sUXX+zf+9OBA/tOxJ259uutxPuydHVagdFcVvGozFKBraMFWgdTnY/6aKlR
e/A6TE+CvKKhY9S/9beOZ/nkuWGHNPIPRfZS5yRkT3KewiSQI0gJITzEJJIZ
ubJMrlLLl6cz78qDf70TdOW3ZXGXlhw+tezA8cW798397OuZa7a8EbZqPFPk
t3Cpz8x5nce81nrgKEbnvsC9DdIM6BgO7igBFfVQJapmGA51dTR0NHmGSqE6
2NFdXf9ROay9R9zAmGD7KHk3sZHOMwGeAUTm0iOzadg6MDagUesQGGgCPcom
XZ3SfrTA3tuPdvnmGVWS7OKp08N8UazDXNCntszbUkatNuEaFowteRk7LPBm
WVlZJXHUOwm8MJlMGRkZCQkJt27dOn/+/IkTJw4ePLhr167169dD3wgODl5G
HHw+f9OmTQcOHLhx4wZ8uNhsKi0tLq+usWaTVtbWlFdX1VRi63hV1vF393gs
IYRyBGv0wRojCSpj0eQ/iQkSkGIiLqyt5hvy+I+u6/JKNFlFLcdRE1d1LupX
hs716InesMa6PrGPv3P4LaFG95o8dko+fIynMoRqjBKNQarMCZNlRCanRyWm
RNxRhN68F3T68ryfY2d989OYNZuGRcT0YQk6LvrYa+Zsp0nTGENH0AYMdBng
Z9+tF5qLx7C3Kgcxjtce1cagXNXnPJw8wPBlVN4f3pwsICig8I0o1oGtA2Mb
GrUOTg4IK6BB61iT2mEEl95qEP3Kr2ePHzoSKRT17QaWRyHrICtnUZewUmwd
GJvx4tYBBaPePZ5RgVK3b6LRaKBp7N27VyKRvP/++z4+Ph4eHh07dpw2bZpY
LP78888vX76cnJxcUFBAtggjS1rQ3k1FeXV15RP9OqpRDYvVOlDTDtQ3DFvH
K7QO8iVxJprD12kAEfR4ivyGYRB4p2FbeBJSMJ4JmlyjyWKmZJAEp2QFp+QQ
5BKqo0eSk9JQdUzBKYUIdUGgMi9YgUb6MpUGpkLPkuVwFTkCtV6k1gmUWbxk
LTshlXlfxU1W8ZKVoiRVaIJc8Ptt/5Nn3t35zetr1g9YGtjtnXddBg0D7ToB
Zw9g54x6l9Ht6FQGnZi/+5yHixcYtBgsu2QflAr4ZhTrkGaCsAyArQNjAxq1
Dp6OAq0jNBN1RB8rcmw/3PHkuUOhPAFZw7JmFdphqShxq4FLQAWtwSYLtg7M
y+b/HOuAqpCXl6dWq8+ePfvLL79s2rRJIBD4+/sHBgbyeDypVLpy5cqtW7d+
//33sbGxFy5c+OOPP+RyeXp6emZmZnFxcf3XqaiosO7U1PXrQEGTmseVs9g6
Wg7cunODsS/5DTA2Rp1O6P9Ow2Ftj6fVqPXQMYJSs+qA1zkBVnIh/qn6OoyQ
gJT8YIUpRF4AYSrMkBC5KVhuhPpBzAtGwZlAlT5AqQtS61hpeZxMc0i6Ljgt
m5mSxVZn8BSp7LvJy67c+uj0hZC4S4GHTiz+bu+8T7+atXLDNGHYiKUhg+Yu
6jbptdZ+w6gu7s9pHR5tKEM/RtYRmIJiHdA6JBm4XwfGRjRqHXw9VWqmirRg
pbrtBIlLhxFOsaf3sQODyRoWaB0lpQMqS92rioGlnIoSSrF1YGzEi1sHmdph
NpsVCsX169dPnjy5d+/eHTt2bNmyBQoGn8//+OOPlyxZwuVy161bt3Pnzvj4
+Lt37xoMBtIrysvLy4iD3JqpD3E0yEytIq0DykUtGfKogsJRjq2jJcB9esxc
fn1+BTFmlzwTk+bkT8ybq+fvslGvHE9unRjr4id6MqzxN+o2dBqARs8r0fg2
jrwQDfNVl7KVSD/YqkKW2gwJVpsClURvc4U+QJXnr8kLSjP7awxLFTn+yZlB
8kyWPIsry+QlpUuTtRFJaVGJKcvvaaL+kAku/RYQG79w75GpG7eNiVjZafIb
z2kdbbrSxoY4cH7zZGcCURGNb0Qd0fEOC8Y2NGod3Fw0AyhCh3ZYxooc2wyx
O3vp2Pdffztv5ixvFxAdSdSwlLeqKAQo0IFrWDC2419ZB1SD9PT0DRs2+Pr6
Ojo6du3adfLkyWw2G945ceIEtJGCggJoF5WVldA04AXpFX+vfHnqgE7y8OFD
wjie0REdW0fzwGo4D/dvOyANAxfEQNt8ruLxvHh4TaZ6Ii0hzk/FQMhAR8NJ
9NA02I8F44l9GSIDxIRKV+QlJDxEUR2onkVgxWo+UIFEmiKUayov4KsgRWxZ
HoSnNEPIO0JNCUERvOYpC7kyMwQ9rzSjaW7wGWv1bh6EVCOWUsdUoG6rQckZ
LE0WW5keeO328yiHvb19Z1/6VIFHWGInoZ4qLKTyDHj6G8Z2NLXDwteBaKPV
OrwGUuOvnEj4886hPT/174msg+xNWlMKqvKxdWBsyb+yDugPRqPx2rVrP/74
4w8//ABNA17fuXNHqVTqdLrS0tKnwxdPzLK37svU3yFt5PEDdTssZVXV1ZVW
66ixVGPraAnW8ZR4EFstdRWyKNOj4KlsEO4T4RFrgmjdTsrTkY1nWgeSDVkp
iSC5VCArIREmFyFkBRBRMllOi85CdSFHjrqIkHUuUDm48nykIvJ8DjSQZCM8
I2NRmDjJJnaCkZ9kEiSbRfJCoaIQCgySEOhRajNTVRCiMUOCU8wBKSb/FFNA
ekGgtmBphvnjNGOgRjdwif8/Wsf8RbPb9wdvSLxiVD1D8xh8M+DkojksuDcp
xjY0Ov1NnG/HygTkpPsJEhdoHSfPHcpMSbt2Ln5If9QlLC+/58MCJ0uVXe3j
FmHYOjA24N/263j48KGBOODFU0bxfz0amf5m7deBreNV01AkiDuPO2w0rHht
irpalafuP1XbUlecQoZQ6jH9HZ41rmLiNsg5YT+Zf/IE9dGYZ0H+t6ir5EXU
W1ADHcpnyXVtBw1rQjn8/AZGrWS5dgavid1XanoKdIBnBOI8EKVjhKYBSS5c
IChCPRVbB+bl8Q+T7qMMYG1ax6mRnu79wYmzB6F1nD9x0rc3inU8fORXXuyK
dlge4jksGFvy4tZR7xhkqewzQxm2sA4c68C0BOq3kOD1x39quk1585nKMX7s
BD6PZecMGK3BODY9StEZzWExED/5dYyILDpaDqB16OjwjK0D85JoKtYhMVGk
2SAswW2c2KntUPvzV09q1SnXzsWP8EP9OoqK+6EuYZUMSxmlyoitA2Mz/g9d
whoez7yJrQPz36OhdQQTQY+3P/2+57S3nFu3pTIYLm3bufX2cWzT5XL81XNn
T/HEiz26gSlCpxWa7pJ8Bs8EWNlohyUym4GtA2MDGrUOUR4DGm9YDohRtp4o
dfX2o8VdOKpOlscdOTq4H7KO0ge+1Q894VqAVoEibB0Ym/Fvs0ktT3ZBf5nz
WbB1YFowf7cOlEwiy2cp8gKTtFJlxhDpCrduvufjLmrTNReuHuriB94M84DW
ITXZCQqQdUgyALYOjG1oqnI2RIv+NduU1W1KhIerDzh9/khmStrVs+eGDwRR
Ecg6ah55lZkByuuoomHrwNiK/0O/joYG8jIPbB2YFkxj1sHTFDAV2cKklAGC
iDY+w+NPX1AqkvYd/qrzQDBV5CxNbMfPRV3CuDrUmzQ61x5bB8YGNGod4nw7
Tjb612yluu0YoUOrQfSL10/L7yce338AWkd0JMg39ap+6Gl5REHNOkpxrANj
M/5tDcsTmvBPJbEv0zpwR3TMK6Ux6+CqzaGZBdA6ugZw2/UfefHsZb0u6/KN
o518wesSt0h5J2gdaOasAVkHzuvA2Iam5rCI89DM2Ygkj5E8Rtex7sfPHNi9
85tZr7/h6YS6hBUW+VQ98LBU2aFUUjO2DozNeHHrIDdWGta9NjFwFlsH5j9G
Y9bx0V9acYY5MiVnoCjKrZuvkCPesnl91EqWVw/whtR9VWpPsZHGzQc8PbIO
STp4TusYF/E8fUHQwLpFZ175kod55TTVr4OXC1aYUKxjtMC+40jnwyf27vhs
+9QxY10YyDrIHRZrrAPXsGBsx7/dYaltcLw038DWgWnxNBHr4KcaBYkaP3E0
sPd2YrhQAKA7AuAMxrJoKzTdhXoKy4B2WKJ0jPBMGrYOjA1o1DqkBY4BKWjS
/br0TtA6vAZSr/x6Vn7//pmjseNGMKIigDGvh6WyDVwLUJewCgq2DoyteBkz
Z5vHOqz9OrB1YF4pTeR1hMizQuXpwyNWO3bsGxOxcu2aFSvW8jr5gglcuxh1
N5GByjYCUT6adB+VY/fvdlj4aaDLeEB3AFPWvvIFDtMC+Yds0igDWK5oNS3K
i9oZDBnVb+abb04dM7adF1i/1prXAdcCNOm+mo6tA2Mr/nesA8c6MC2BxqyD
ozKJtCaJQtszRNiqz9CLZy8r5IlXbsZ2HoisY4WmO2kdwjxsHRjb0VReh8RE
gdaxIaOLXxAArmD2/BmvT5ry5sRJLgw06R7NYbF0slTb15gBnjmLsSHYOjCY
F6Ex6whIyAnPLYlO00HraOMz/HL8VWgdR07s6uIHJvEdGlrH/yWbFFsHpkka
tQ52NuqLK0xHHdEnh7t3GuVy/MwB2b2E2F/2jR9hT8Y6Hpgd0aT7h8BSjq0D
YzP+56wDV85iXimNWQd8+dEdNT9BPTxiNXBqM+O1t7du2XDrz7iug5B1rEzp
Aa2DZQACYubs8+d1PAW2DkyTNGodQiNdYqJEG4HknssEiQtwBWMmDfl6+5dX
z54je5MWFvk8KnRG1vF49Bu2DowNwNaBwbwIjVmHWFvKUevEsrR+vDDg0Oqd
N2dt2bx+3+Gvug2mTBY4NrSOsCwKtg6MbWjUOlhZQGiw1rDMWNUOtALjpw6H
1nHq0OHeXUC4FDwqG1Rb5o0CHXBFMGHrwNgMbB0YzIvQdOVsVGruAEFEn9Gv
Hd53NEObcun6ka6DALYOTHPRqHWEmuwlJgo/FWWTjuLbeQwAh47/pE6W3752
feQgCpnX8ajQ2Tr97QG2DozNwNaBwbwITcQ6QuRZvPsqFOtwbD162Nhtn24+
d2l/wx0WttG6w4LzOjC2oam8Dm4OEGeA9drO48ROHUc6X7h2SqtOOXXo8IBe
KNYBraO2zBvNYSkmwNaBsRHYOjCYF6ER6zBxVCaWMkei0A4URQGvLtMmvr5z
x/aTZ/eQ2aQt0zq4ajBpBXBqDd787JUvl5iXQlPT3zjZYKUZxTqgdTj1BnxJ
8NXzFy+djhs1mLo8ChSX9LdUtLZ2CcN5HRjbYUvrINuWPrOJ+t+/DjnNtqKi
ot46yqqqa6qs1lGDaleqrNZRZal5aBHGrKcOGh588iy2Dkxz0ph18DQFy+6n
h8rTB0tiPHsOunDmkkqZHH/5ABnrIGtYuAYgMgJpJnj+3qRP8XKtw/834NoB
W8d/iUatg5uLalgi9SAy2fP15a2AK2A4A1ZA0MVTp4cOQHNYior7lRe7VpLT
ZnFvUoztsIF1PLNbab2BNNSMZ3Y3ra2sQM82iHWUl5YZ8w2/3vvtyKnD+378
cdvajVJexMCxU+lDRn58+Di2Dkxz0ph1sBR5oZlFMVpDP15Yqz5D409fSNEo
DsZ+3cUPTOTZk71JOXpkHS2khoWrBlPWYev4j9GodfB0lOhSB5EWTbofFAwo
nUDkSlHcsRPkpHtoHcUl/VE2aQUdrgJVRmwdGJvxsq2DtIsq4qiuOxoKxt+d
BN6pqKgoKysrLy+vrKysqSg3m/NTtBn3kpJv3fzjfFx87MGjv+z/+asfdm74
dP36lSsFgcyP5/t39xsJ+vl9uP8Itg5Mc9LEDguZ19GfH+7WzTciNOp8fNyV
m7H1/TrIjugCI+rX8a8n3f+jdTCTgFsna5t0ezcwbVOjX2rpDeDSDu+w/Mdo
1DqCtYCZgWId67WdZ6xq13aofRBnye2bt86fODlqMHXVClQ5W17sinZYHgJL
AbYOjM14edYBheGZM+Ce+ki9dTzzefiwWi67ePH8jm93iaRh7816f4jv4O6d
unXq0nHqO6+xhMyvt2+/ce5idoqOG7maOmg499wlbB2Y5qSxbNLgZD1LmROu
zhoUuhzQPdwcPTjs4CMndjWsYWHqrTNnbdSbNOQ+YDiBkTx0LcgAcw83ah1B
d0G3yWDgIvDxNWwd/yUazSaNKHZhZaKZs8sVrUZw6cAVUOxB4EdLzxyNHeYL
VsagWIe1huUBnsOCsSUvzzoaRjPIXI6nZtHC60riIL8IfFlQUKBSqa5evbpv
377NmzfzeLzFixezggLZbKYkInLdps3bP/vq26++ObB3/+kzp67/dfPPxNuy
e/fyM3KqH1igdYBe/ThnL2LrwDQnTfQm5acaRcmp/fnhbfuNEPMk8edOk3kd
U4ROq9N6iY00aB08PaqctVE2KXQMp1Yg6K9/WJu4GjBpFfDoBoLuYOv4j9FU
R3S+Doi0YGNmV2gdrj5g7ebo07HH444c7d8TRIShfh2WitbV8Cd/Ec7rwNgS
2+R1NNxGKS8vf/ToUUlJiclkyszMlMlkt27dunTpUlxc3MGDB3fu3Llhw4ao
qCg+n+/v779w4UIxn7dq1Ypvdn9/5vyFhHvJuszcqkeVtZaaCktVSUWxpRZl
k1qqLVEbP3MZM3HxgaPYOjDNSWPWEZrxQJxhDrmd1H5JcI/hk8+cOJeZkRp7
ancnX7TDAq0jNI8OrYMLV4QMYKO8jnd/BHauYNqGphYmYSaKgTi3BbN/Ri+x
dfy3aKo3KcopykVdwkbyGA49AVvof+PSlT+uXhvhhypni4r7Pa6cxXNYMLbj
5VnHU8mipH6QdyorKzMyMq5fv757926JRDJz5swRI0a0bdu2V69ekyZNCggI
+PTTT8+dO6fRaMxmc3V5GQqK1KIalurKx5Wz0DoqLRWWGniqeWB+GLpqk/Po
CcuOnsTWgWlOGrOOJX+ms5Q5y9P1gyUxbXyGnzx6WqOWn7u0v00fMI5NX5Xa
E1oHOelemmkr6+CoQP8PiMH3HuDdPc/+CoG3Qat+YEyo9SW2jv8WTc2c5eWi
HZb6GhZAA2Iu/8APP/r1RTsshUU+DwucrHNYcL8OjO142bEOKBgFBQXQH6Bj
HDp0aNeuXaGhoWw2G6pFSEhIWFjYhg0btm/f/tVXX+3bt+/EiRNXrlz566+/
FApFTk7OgwcPCFmxVs5W1NTW9+soq3hUUv3AOv2tosY6/a17H/aZC9g6MM1J
013CRMmp/XhhrfsOO3sy/vvd34yfMsCrBxgdQlmh6U5ah013WEiYidaEUqgT
i84+8VbwfdB5POgy4fEdbB3/LRq1Dm4uCCugCdLA6pT2k8LcoHU4ulP6dOs2
e/oMJzpYtwZUVA61zmEpo1iKsHVgbMa/so76hI3a2tri4mKtViuTye7cuXP5
8uVjx47t37//u+++27p1a3R0tFgsXrJkib+/P5fLjYmJ2blz5+nTp+/evZue
nl7fx+PpqpZGuoSVWyrxzFnMK6cx6xCmFQckpgsSNb7CyC6Dx58+duaL7Z+O
Gt/HrQvaYYlSdBboACcPcHKRdUi1FFtXzgbdAXR70H9ug89qwdtfg8YOj25g
8YVXvmhi/o80ldfByQZRBlQ5i6a/uaFYR/9evWa+9jq0jvVrUV5HqckBBToq
aLiGBWNDXtw6Kisr6xM2srOzf/vttx9++GH58uXz588fN25c9+7de/ToMWHC
hICAgPXr10P9UKlUOTk5JSUlVVVV9Ymm5MUzC2nxpHtMS6aJbFJyh8WHK/Xo
4Xfzyq30NPXp+L1wNZ8mdlmV2lNqshMUoBqWyFy6jWpYGsJWggHzQafR//AY
jnX8t2jUOkR5DL4OWccKVZtRfDvgCqgOYNmHS/bt/n6QD1i9EpgL+jwwOyLr
wLEOjE15ceuA8gB1ID09/ZtvvgkJCWGxWDExMRs3bvz888+//vrrvXv3xsbG
njlz5tq1awkJCVqt1mQyPXr0qN4pSOtoapMGWwemBdPEDgu0DrEsDVpHB9/R
Z0/Gf/XlZ8PH9HTuaO3XEZpH55tRXge0jn/dr6Np3v4aJZSS10F3rP06hFlg
3jFU2/LeT8/4CLaO/xZNxTp4uSAsB6xJ7TBO7ITyOhhgzfIVt69dHzWYGhlu
zSZF/TpKcDYpxpb827yOjIwM6BhBQUFcLnfbtm2//PLL1atXlUrlw4cP61NJ
/y4U0FgqKysba15qDX3gOSyYFkxj1sFPKQyRZ4Wrs4aGrew4cMyxQye+2P7p
pNf8XDqBCVy7CFlHfi7g5qO8Dmgd/zqvo2mgY9QfDp7WhFJeKgqMuHd99kew
dfy3aMo6BHpUObs2rePUSE8ym5QbzDwbe8y3N4DW8UTlLJ45i7Ed/4cdloqK
ivprMgBiadD5HJ7hA/US0jDWYZ23gq0D8z9IY9bBUZmCkjOgdQwURXn1Gnw+
7qJCnnjp+pH2/cBroa5Ris7QOvhmIMoH0Xq7f13D8i9gycHAD0H/ea98QcQ0
A41aB09HkZqpkiy0w4LyOjyBWys7AYsDraNhl7AyM/HDvxxbB8Zm/NtYR8Nd
EqgKZP/zZ/Y8JzWjXksaO7B1YP4naKJfR2CSVpCo8eFKW/UZejn+anLSvRNn
fuw8EEwP94xRd0NzWHRAmId6k/7r6W//AmYi6P32s7dXMP85GrWOkAwArSNS
j3qTjhU5OvYCTP7SsydOXTh5aoQfWLHc2hEd9euAq4AZWwfGZvyrWEe9YJA7
Jk95CHz34cOHT0Uz6h+un8/SmHhg68C0ZBqzDpYij6nIjkzJ8RVGtvEZfj7u
4vn4uOhVbI9uwOd1u26jHeiOaOOD4QK6TwJvf/Yva1j+BYG30Yi3oDuvfEHE
NAONWgcrCwgNIEJnjXW0GWJ3+vyRXG3mmaOxfn3RDkvpA1806b6cBn/41+Rj
68DYjBe3jvpQRsOYRsNQRsP7jx49IhM5agmDeFIyLIRP1JBiQT5APPP4pdU6
kIHUVFgqqqF1VFaR2aSha5B1BB3D1oFpVhqb/sZVm6F1hMrT+7BD2/Ufefzw
yfAwMaCjnL1nHt1fAywVRahHawRUjogcuEZQJTlIQuDqINIjCAOhSHIbQiwu
xLsiA/kMBlNPo9Pfwgqd+NBGslBvUmgd7v3Btd/i5fcTL8edGdwPWUdJ6YCq
Bx4VZB4pnsOCsR026Ij+txAGoSUEpEjUWUsNajRaXYnOKIRR/fgZIrpBRjkI
5YD3a1Cgg7QOVIBrEa5F1hFyLE6CrQPTjDRmHcK0Yl5KniBRA62DjHUcPrSv
VRvvRhtkANBxFCXM7BCaA8JzwEo9WJFLDU1Hv5By8gDPCIR6tIJAD5Fm24Vn
2UVk0cOzqWgd0SHfEOYBfj7g52HxwDSkUevg66nwX63QTJRNOkboQMY60pTq
S6fj/PqiHZbikv7QOlANSyHOJsXYkma0joq6aIbVOqrKLZWQMkt1maW2krSO
CsIxaqFt1NTvrZCframurai3DviMYN1m0H8wMxZbB6ZZacw6lt7NZKv0kSk5
A0VRrfsOO3fq/Ny5c5pQDvIYygRSPYg2gmg9iMqmSrIp/MfWAUjrCM9GNS8E
1PBsCrQOsR4IjUg5sHVgnuTfW0dRcT9sHZjmoBmsw2LN06iyGkX91kmNparC
UlWG2o5aqqrrzARbB6Yl05h1CFKLWMoc1l+y7kH89gNGHdp35B+VAx5UOhpJ
L8kH3CzATAecbAbPQOEbgbBu9wQ6hjQXBUNIpDkUYiOGKs6li1BOCPWl54Fg
/pfB1oFp8djcOmrI3ZXaugTR6obWUVOFxAPtsNSQdlFm3WTB1oFpoTSRTSrO
MEen6XyFkR0HjhFwhc9jHfCYuRsI9AANhjM7Sku94eoggmtHnXLUA90DQawj
khw7SbaDJNsJnsW51Fe90mFaDk1Nf8PWgWkRNId1lBNU1T6Z3WGpqkE7LFWI
2uoaqB0VtZZHtdg6MC2axqxj0e8pwbJMfoK6Z4iwk9/YD96f95zWMW2Vo0BH
YeWBQDMIyqcIdXZIKnJQGzFJLhHH0DcALii5EBTxILE+g8EgsHVgWjw2tw6o
DI8slgeEeNTUZ3eg/1RWW6qrrTUsNegO+e4/WUcFtg7MK6Qx64jSV0myCoVJ
KT5cae9R096fPfc5rWN6dOuwLC9Bnl1QHvg4E4hR51KUPipF2yhUkR7tttQj
ItyjftsFLSu5r3ylw7QcsHVgWjzNYR1QOUoJ96iqIOSDLJm1VNda6r9YJUru
qKghYiLYOjAtmMasw/9+NlORHabK7MMOBXZeg3wHP2+sI7QV/9e20lR3aR4j
opASkQ0is+CZIs1BZbNCPcov5RkBx4jOfMI96sUDInn1Kx2m5YCtA9PiaQ7r
gMpRbKmB7lFZTmRuWK2jopasoq2usVQWlZfkPTQVVZkf1WDrwLRkmuiIHizL
hNYxNGwlcG47bNCI51EOChWMXub+/mfeH8c6Mn+liGRghdZueQY1OpMakYV2
T0R6QFa1sPMR1vIWA1pirCkfONaBecyLWocSWYcPtg5MM2Jz66hEymEprCky
WGoqCysfFaEYR5111FgzPUoMRRdPXrr5pyyn8GFlvXUQRS+kdTysraix9uuo
sFTWVNZYOKvWAx8/1rEz2DowzUlj1oHeVeVC6+gexO85Ysrxwyf9/Zc+h3YA
YA9AF9BxOnh7PRDFe2xQdYhRu0SnOCzPdFxusJcagcgIeHmAA63DBDgmwDMB
UR4j1Ogo1jmKbdDLFPO/TKPWwclBScviDDRzdgSXDq3j2m/xGpms3jpwvw5M
M2F763j0INdiMVsKDRkKWdiaFXOCAhYs/GjJvI+Wzf94/px578z74N0F8z98
b8E7U2d+tnOP1lRSXFlRVVNJbME8jnU8grZR9chSW4G6elSjd8QbP6H4DmUf
P4utA9OcNDFz9qM76ghN9mBJDHBqM2nslM2b1vXt17tp5XC0c3ewdwVOgNoK
tBkG+swFw6Xg3e+B4GbryOT2oXIXYQoN5Y6aUGsOjhEwDYCVC7g6wNfbhRpc
pUYXXMOCaUCj1iEtcJSYKCtMIFruPVpgD1qD0RMHb9/6Kd5hwTQ3zRTrMKfe
vvnDl9unzZk5cc57s2bPe/+duQvfnf/erPffmjf33YULoHW8PWnG9m/26B6U
VdTHOipqoGXU77AQ2aaVlvIyS0V16aOq4OhVoP9g7sl4bB2Y5qQx6+Cqzf4J
adA6/MTRwLH1W6+/8+UX2/bGfk33eLZx0F0BFb1FBcAFvkL/tAPAA9gNAd0W
gsmrPN7f1Sb4bPsoWefVOe0ic+kR+UBqBqFmIIYGYkTiwc4BnCwgwrEOzGMa
tY6gdMDMANJsEJnsOSnMjd4VjBg3cPfOb7B1YJqb5rGOckPc7m/CmCGf/bj7
tjatrJJIKi1DNS2lFktBZblOnXXi56MXb/yhNReUVldU11Y1zOsor60trS57
VF5a8agYtRMjYh3C9VuoA4cFHjqBrQPTnDTRr4Oj1kkUWh+utIPv6P0/HVTI
E09c+cV9DOj9rr3va+5ubah0e4p7O3rvCfYT2Y4+C0C7sYDeFgAHQHOg0h0Z
SDwYADgD0AqAnsBlMhghpC/9pWP4re6RSa3C1Q5hWhCWjRYUsRGI8oA4D4Tm
496kmIY0ah2iPEZ4IT0sB2zM7DpB4tJ+uOORkz8rEpKwdWCam+axjsr8I19s
W/DGGwfOxcnMeahzR5mlqriytsZSYrE8JJ4qSDcYikrNNdWPYx3VT2STWmMd
0DoqawqKy1kr1joMG4PzOjDNTBN5HVyNXpSc6iuM7DliSvzpC+lp6uOX9rqP
AsPFtLWJPVdpHNZmu24ydYhOac39zf3DQ/bvfeEyhuPScTKgdAHAFQBHeKYB
BgPY0dF1a8DwAe1fA6N5lPe/dA6/3iP8r9bhcuewdIY0C4hziEJag7WJBwZD
0Kh1sLMBXwf4qWjS/aBg4NgL3Lx9UZUkw9aBaW5sbx1VFaaaUv2Zb79hfjD/
0p2/MsrL0Qh7wiCgUhRZLAU15YSbVFQQRbYPairLK8vQYFki1lFeUWUoKEjT
ZaamqxPu/nHr4qWzsSf2Hzoxdf5iXMOCaX4as44QmUGkNUHr6MuRtO477PSx
Mxq1PPbCHq8RYHSo/SZlr1VaRlgmkBrpYp2jIMNppaFDpLILM77jO585DwkB
Hd4AjAEAtCPcg0ZFQQ8X4toZULqB1hPBJLHzrE+dA0+2DrvfcUVG22idk0QH
BDmvfJnDtCiainVATV1dSF2v7fzmijbOfUBoJOfyufPYOjDNTXPEOkotFeak
uLjvNm4+evVykikfWccDa7+wYgsUDzROtsb0AN4oIW7XoMn21h0Wnd54/fff
D52K3bh5HYcZ8OaEiX27dO/bfwjwaA069ZCcv4atA9OcNGYdgYm5kqxCaB29
WWLv3kMux1/Nzko/efHndiPp44XOm+R9V6Q78NMBKwew8uiCUiemEfD0ICzH
cYW2TUxCJ/8j3sOEwH0scGwPqAxAoUH3IJI+6GgLBnhYUz58loEZ2z3949sK
ktpGZHpHGd1wNimmAU1VznKyUV5HjLL1MDYVxdbsgJDNxdaBaW6awzpMlhpz
RYpaffO3PUeP3lJrUOksOewNaUZNSW1lbXG55q5ClqlPLyl9ZLEkyRL37t6z
MjKGzxKEMNkhPB47lB+1PHzLxjV7dn79867v9/x8eFYA02HYmA/3HMDWgWlO
Gpv+xlLk8VONgkTNsPBVHXxHHz98MinxbtylfZ1HMMZxHNYl9Vqhc5bm2XGM
lCAdCM4HIWbANgO+HoizQFQGLVLuEXShzcLv27wpdBj7PmjvB6heRFEthEYD
NDqKfngBeh/gORn0XgomrQeLD7myb3pGpLeTZrpLs5yk2XZoNlxd6zAScv9F
pK8DrUpoYSIvyKVK8ndyH/Oql1HMC9Ho9Ddxvp3EROFqwNbcnr4BAHQAFHvA
DgzG1oFpbl7cOurFo7a29u+SUUUc8K3y8nLiASgROosl56FKdn3/kXBp1Gc7
dx89dvHo0bPHTxw5fubQvpMHjp46Fnf4VKR07e5jN3JqLUVVNefOn10RsTx4
aeBHCz9euGgxWyjc8NmWA4d+uXY5Xn0/odiQX1FtEW3YSvEdindYMM1MY9bB
lBtD5Dnh6qxeTJFHD78o6fKzZ07Gnf+5yxDaNJFb+P32wmwgyqdyoQPkUEJ1
NKGBaDRKWAHRj5QaofWKTunKu95q4V6n0VGg2wfAcwyw7wWAOxH3oNBRTzEa
2nZx6AA6DwPjF9q/u9Jz/j7vpddaSZSdojNbhWupEi2IyAHL85B7iLJBqA6E
mVHHj5BMwMwCfCONp7fj6R34ejshMWZOXD/TNhd9kKRuvi0acdvQQJ6HV73s
/n9Oo9YhNNIFehCpB+vSO43g0oE3mDp97LZNW+KPnxjkA6IigMncu9TkANcC
SzkViQe2DoyNeHHrqK6uhmdoFPACCka9hDx8+LChitTdL68s11oepVz4fseC
cRPauHpRKI7w9zeP1u0AFTi40dGvchTgQnd3dekSEvNVoqmmzGL5887tw78c
vHT2QnZ6zoOHZWU1NRWWmodlJahfR2VVfQ0L6Dco5OhpbB2Y5qQx65BkPvz4
bmpkSs6IyDWA7uHp4s1iBl65GdtxAHhD6r5c1VVkoApNKKMvPJsanklDy4GO
IkTT6ilwxYegvZIcp7Bslyht6/CkjoFxbV9b59j1PUDrg3I8qM5o5wX+n4VC
ISSEDhguwKEr8J4BRiwHzLhuaxW+67Wdo1MY0hQgTgPrSkF4Hkr8gGIjNVPD
CmihZqrYROMZqNZOlXrrZFsyPBKe8xirb6Dhtqg/KraO/x2amnQP5VOkRb1J
oXW0HWp/LG5/ukoDrWPoALAyBlRWDbNUt6uBSwBUjmJsHRib8VJ3WKByQA+B
F6SQIBV5UIgSNyymlGtntkdItq3f8sWXX3/5zfY9B3786ZdD+w7G/nLo58OH
D+7/7sjyyG3fnbyaXWspqKxM06YqE+WGLF19v45HlkprR/TyCkt5VUW1hbdm
I8V3KO/UeWwdmOakMesITMzlpxojNNndAnnOnfuJeZJQMX/IyG4uncBUkfOq
1J5iI42bj3I5InJoYRnUZ1tHLj00F0Tkguhsp5UprSL+aB9w0PPt1YxxQZRW
w4FdV6Kultx2cWQAe3t4Qe0EXAaDbjPBaDF4/xt79iWPKHX7tfkdhFo6NxOw
CYRwAcpDcQ+uFu34P6Z+I4ZYsNCwOfT90IU6O6HOga9zgBdoCcPW8T9Do9bB
g28ZAS8FfKLrNVHq2moQPf7KiZ2ff/HWlKlONBAdiWIdjwqdUayDXBqwdWBs
xItbB9SJcuKAF2Tco946ysrKCgsL8/LyZDJZWloaueWClKHcXJGpTDh/WpF4
t6DUXGV5VG4pQ5kdtRZU0FJtqTDV3v8z/YYiTVtRWfbkHJZK1KgUVc5W1ZRb
K2eJWAe0DuDjh2MdmGam6cpZYVJKX46kjc9wqTB8/rw5KBfUFYxj01em9BAZ
qGwigzRKx2gs1gGXDKgHohwgSAOhqWBFquMqhWfULe/QuHYzN9DGMEHHqQB0
B8CNKG+xZ6DGYo7WdFOHfqDrTDAm3GHOD20/Pt+eda+dNLN9tKlVmNFBnA1X
HyKIkQ3CdQgpsSqRiR9orK2eAn8XJn4jtiMhNmKIfABsHf9LNJpNKjE7SEwU
aB0r1W3Hihzd+4Nzl49/tnnr9EmTW7uBDetAQWHfsiIXy0Mi1lGArQNjM15G
rAPerKiogBJSVFSk1WqvX7/+5Zdf7t69G4pHefkjVDz7oMBSXm5BcQ/zgxpD
laWKGLFSg+IYlZbKh8RMuGqL2WLJQ45SU0tUsTzVm9Qa66iuIa1DtGEr6Dco
+MgpbB2Y5qQx65BkPvx/7J0HfFP1/v4/2aOb0hYoeyMbRBQEJ8iQJSpLZEmh
I3s1XUABua573V43KsreeyqCF1BUChS6m727R3bO/3zPSUtBWxUp9Of/5PUY
0zRN27Qvvu9+xvOsvKaX5Zag9DdmJBPYdBr8depgCvQgs0J6GS3dDio9KIsh
vRDWFISm/xwtOxW/4NO4kSk03hiAjgBRBH6wgcUEXiiwooh7ukPEY/ReL7Gf
+7p7wul4VV6MspQnL6Gn6tgZxvB0Iw+xR0NSbSNvCCz0ZAsTF+q/WGi4xGbC
D4RowVDU8X9HzVLHCg3ylMuwIUd0nDqihzBOnjl4PefKzk1f3z8Y1Co0TYph
nfGzwGUBrJ6iDkqtpr9OHbW1tYFAAL9hs9muXLly6tSpr7/++s0335TJZAKB
ICEhITk5Gb/9+eef2+12jChcBDxOrN6Neeqdbv2nm//z4vIX57744rPznps2
/ZnkxKyDO3+oM9TiJFGJYXbM5/q99DcX5qutr8J8TsxZj7l9ZOYsbdCI5D2H
KeqgdDfVHHU8f+Z6Up5RcV0zVJbB79x/dXr2W2++LpK/+Jc6LBIjN7kUhHqQ
WkBpB6UDUh2QboMMC6wx81cVRyt+7rj8QKeZ77UfpeDEzATOcEQadHbDmi1a
daFDNHAGQdxUGJgEk96GpYd4ikvRmcUd04tjZQVhCj1XbiDbKExUeMdhw4rj
ED3JRku20tCAK+E8Jm+Y95BT1PF/Sc1SR0Ip+smuLqdlF3V6XB3VYSR307ZP
SvIKju/bP2IgiIVgtnQPOKMRWpQD5qKog1Kr6bY6LDhLVFZW4rzx7rvvrlu3
Lj09XSQSLVq0aOnSpUuWLElLS/voo49OnjxpNptr6mqR9UbAg9lttryrW7Z8
lihPmDDjyaemPzX3hUWTJ8+a+/ySl7Ne2/3pTs01rbaiAgePmoCnqSM66Ul6
w5u0If0tZc3LVIeF0t1Xc9QhKChPNdUIL+X3WiGO6Tfy4J7D13Jz9h/5suk0
qbAM5ae0ME0qMfLTy2Nk5tAUDQ1lrFhB5gCRBc1mqBwg04H4Ol12JSz1UseU
U+0mvY+4osdkCBtAVDlCgREODD4dFVhw8YHRFeKfgNFC9ox3Qhftjkz5IVqS
Gy3XthcbooTGCIEpJNnCTbIyE+20RDsk4URkRWanOGakGiBdB1layNCik+te
n6SU/ryapY7UqlCZHXXusvJix0r53cdG7tz/tVmr37N5y0MjmBvWo1pHXTk/
QJwIWBlFHZRaTX+dOgKBgNvtvnDhAg4bzzzzzMqVK99+++2tW7fm5OQ4HA6n
03nTSgvm92Fej6e6Vley/cMPhw8fviRpxf8unXPUOKrqXAEMs1msr2Wvf2b8
lP++/tG53LxyIqEFNVHc/sYcFiK2xYcyZ8mke4I6ROtegYHDqcxZSndZzVFH
whWzpNQh+DVvsCQtfvBDB3YfwqnjxOnt3YfRnpCGKnI6CI2AU0eyEZQ6mlrP
aq7WkVLCRJssthC5nS0wQ5IJxdxLymGFDv2tmmplpBs5WdrQ1SXh6ddC1Rc6
JG7v97g6OvZx1FtBdqYcVPRgMdG2C7lmC3EAQ6DT8zDlzRDx2f6phQOkpT0k
2nixPhaxh5mbbKUn29BnEVpRlUNhBLUesjSwqpSWpaGp9FS63P8htZR0j1pm
pfAfa78RibSYYazdBzeX5ud/e+jw4H6QqoSa2kHe2kgf+pefEEUdlFpJtzXX
4fF4yPbK999/f/bs2dzcXJPJVF9fj9PILYMfAczrwqrc3rJfvzv+ijrjk4++
Pv79Ra3NWutBY6TI+Ryr1eTnHNi4dd+m/Wd/yasgqKPpNGnjXIcf0QdBHd5A
kDooR3RKd13NUcfKXGvCVa0yTztckQWsqImPTXr9tQ3Hvt0aPxCelIWlXesi
NtMEDhQUq9BCqo7ZzA4LG+XaE+UFiRkZegiskExk3OMSWnAAwN9LV2uZGRrm
qhLmqqII4Y9RSw+3n7Mxasr6iBELme2HowEPBgc1W2iktWkoinSBHtBuLPSc
B2PWwuztHNFP3RXXu0sL2ks1YfgnFZtQlpzEAmIjmjtVG5kZBl6WLjxNG6Iy
MeUWGi6JEUR6JPyGjAp/aaNqyRE9SYf8Ol7WdB0nDyWnSXHq+O7wkYF9QCkH
t2cE5on1VBLTpDUUdVBqNd1WraPpqqzP5yPvwVGE9Ae7adAUc3uxinq36dDm
TW9kvJx/3egmPM+JkQ1vndvu85dhvkrMUX5sx9Gj3+fo65qljuA0KUUdlO6p
mqMOYWHFilyd9GrxUFkG8GOnT56JU8feQxs7Dwp2WKRWRmOHpblah9TIVBDL
JuS0J+kkRiKHgBjyxM8U/APRM+joGRpc7FXWuHR9Z+XV+KSTMfM/C3syjT5k
NnQZDZHdgRFGhNiyGpZtucjdNPZJ6PUijF8F87+MlJ7pviq/Z2ZxnLSQpTKy
FcQIhxj/o1iDJNPxlEY+fgMnDfxOHDYkxNgGjhxyC1UAaZtqljpEFgYOljh1
pF6OfFgW0n1s5O6Dmzd/8VWaRDqgJ2SvBou1h6cmAvNx0Cgp5U1KqfV0Wy5h
jaTRFD9+9x4fVl/l1mKYPff7s/s/22mz1Dj9mK0CgYQXqwlgDgyr8tWVYa76
o7sOfftjkbaaog5KbVotJN1LNWWy3JI+idIuQ8fu3ra3qPD6t2d3xfVDtY5G
6hCYUSUhzcBurtaBpj70qNyBA4DEHAQPgTVoZIo/GFGHjp2qY6druGpNiLQw
VKlrl24IS9WwMos56VdCkg7z5rzP6zYDwoYBRBO8wQz2W2hkzyUcGD2g91SY
mhmavLlH1g/91l3vo7wartLw0+0h6kqutAySrLDCgq5lVuL8MoHSTFNZ6Pg1
/oXJDNQ0adtUs9QhMNFkdkQdykvh4+ShPce127Ttk9fWbwhnsfkMWJ0FNnsv
zB2DU4fPAZQ3KaVW1O1uznq9Xrfb7fF4fA2XW3iDvPgxpxuzev0WnDqOb95v
0DpQrSM4IFrjway+QCWG1dsKCt7IfvWjrw/bvH9IHV6KOijdQ7WQObvyml6V
rxupWg0R8Y+OffypiY+PfLBneFcYL+CoczuLTEDusKSZWM1Sh4Gr0OPgwVTo
UQsGHSIEeJAK7rEa6Ph7EXhoualavhyXniszIhMwtQMyHSAvAsF53qLt0VNe
iRu+MLLjaBa/I9DYKMmWwwQOl2i7cIDdAaKHQK8p8JiMPv+/EalneysvdZTn
R4lKWCt1sAL/aitBWgsKO+Cw0QgeJHUgAxCKOtqiWkp/ExghzQLZRZ3GK8Ki
hzC+2fHZvh270iTSIf1gw3rkEuasDK13gNsKmJdBUQel1tKdTn9r5I3GuQ4f
VlNXYyi6cOb73fvPfvdLeTWih/LaynqP1+2tx6mjtPDSx6++/Ub221/sPmFv
fq6Dog5KbUHNUUdyniPxukGWWzJQlAr82CcfmfjMrGmPTRwW2hkeEXLTrnXB
qSPZhjosaiOzubkOiRFHiBBCfJxApEYmCR6kyCg3cpUVBb0RynRwyMh7sRlt
uyQbIFkLEg0r29RD+Uv3ZTs6T/tXuweWsLqNg7CeaOSDTgya0ljADCWcTsOA
1w+6PQWPKNhP/5u9aG+E9FJcmr69wsYWWGClASQmxBgSHRJZ4iAJhKKONqlm
qUNsZSbrEXWsK+n8sCwkciAc/XavpqDo4I6dA3qCRIRcwjBfB9RhqaVcwii1
pv46dbjd7sbKxi2NlVuQg5zsCGAuv7eivPDqD3v3vPHam4dPfFftq/FiHh/x
vjNnT704f07f2F5vrn//hytFLUyTUtRBqS2ohVqHpNQhvVrcM0FEdlh+/eXH
r7a8HdENdVga/TrIuQ55CTS3w4KfEUGZmIg6UNsFFT0I/eZkN4NYB4kliDRk
dpDY0Y6M0ALpVTwUoVLMkV+NVP/cTXmiz8KPOjyQBJ2fBGiPjMWC8x4s4nYI
MOOR7VjEWBglggVftpef65aW31FZEiYqxg8vuspCb+yt4ATSQnuFoo57rZam
SdEOFA69V6IeFHE6jw49fe5o7q85pw4eGjOStX4t2pytsrFRDouX1YAcFHVQ
agX9jVoH6d3RtLfyexeCFrx1WIWjqqTgiy/eS8tWLHzphWmzZ8x67vlnn5s/
c+Z8SbL641c/uv5rkaa6tpyiDkptWy1Qx/IrGmWednT6Onr77k+MnzB92uQn
Jo0IiYcnpKG3uIQ1Rx1iM11oBSGxxNrQUqHh7CE3sOXI3YstNeJCH3JT58UK
MhtTbkPEItDSBRpUl1CZkTIs7GxHZLalgyw38rn98PjbMF7CHziDEzGI2KgN
IaiD9PfgoiEQdh9oPx4GLoGprzGEB+NX53aXFDBxzFDbmGl2Fg4eOHW00F6h
qONeq6VaB/57glNH6uXIMRJeh5Hcr7Z+/OkHHz724EN8BqxdA3X1Q1xVYWhz
tpKqdVBqTf39DksAKeD3YoFb7kPyB6+8mNOJ1VV+d3p39iuq6bOfnjH7mekz
ZyyYv3jmtBffef0zh6bcVecrwwK4KOqg1JbVXPqbuLhqRa5OfLlwiDQdQuLG
jHp4wpOPPjS+P7M9jEthZ+R1E5mAdERXG5nNeZMif3IcOewIPMTW31CHnttA
HXRxA3WkGFCVQ25ni/RMkZaltISqrSE4J8iImHupEcR6EOjQ+onczM7QxwpP
dJj3QeSoZOg4CUKGAL0LarIQdQ8aIhAu8WZn6DwOHlnBnv1a6OL9IcvOsaTX
I1TaCIWeKzHQZGZQOujBpg/R8VEZIFUPah1NRez8krwUFFmlMdKbJNjSmubY
Nh6Xv7mmdNvU8TvpbyILA/9VUZtR5uwjynB2D8jIlgtXJk0cNz42Ak2TWqw9
vLWR+FngtVPepJRaU7dBHQHsN0JcEfC4SVAgOCFAmGtgngDmwzkB/yi/BwcK
p9vhxaoCmMfprHMhj3TM70SFEPzjqutQHgsRyeJFLmHN+nVQ1EHpXqo56sDf
FBU7MkrMPZYLuwwdu+3rHSXF+XsPbew6BM11kDksKRZki6HS05ud68DfNCPf
jMYzveEUpt3carkx7HHL4d7wmIYD/SZjDbQaoyqB1aWsVddiVh5q9+gaiJkK
0LMhTo6NROOh0VOcQzhhENINes6Gia/Fyr4bsaZghFobLzHyU0ywwgyJdmQs
JrVDqgUyDbRVpbTsQkZGCUitkOwIeo6JkNkpQ2bi4LykIKTSoVlZtKdjaHBc
JyGEBJKm103hxHRLPC6lv0wdygq+0ITi/1439R6+klhuYkBKwsq9W7YO6Qdr
VkFV9X2uqjDkTVpJiKIOSq2kO0AdRCmDkMddV11Vgb/tI5DDSQADkahCPADz
+AP1fnS3B1EJkTaLEYGy+NPUun1O4kPczVAHVeug1BbUHHUICyuWX9EtP3dp
gEDZ+4HHD+09UpCfu//IlyR1ZBX0+FPUYWS36l/6+KmttIJcD5ICEF1irTgV
8fwXkY9khQ5fFhrxACpxIPZgIZMxDgd1XfD/QnpD1Bjo8Tw8qGbM/io0+cfY
VH2cuiwcZ48UMwiNINGDshTSSmFVKX0V+qYgBbmLEO81gRhV+5lqK09BLOYg
GegKQ9NyRwN1NBVFHXeaOlZq0Y8j045cwoYmQEhfUGWKvj9x6vSRo8MGIG/S
6pqBmCcWc9IRclB+HZRaT3eOOjz1NQG/m6x1+IKogG5gPr/f6UQepYS1eQAj
bxA9FII6/E4UJFusMxqrKso99RR1UGrLao46lv6qV+gr5ddKh0jTY/qNPHbw
RFHh9QNHv2pKHUlWEN9T6sCfXGnlS7VcSSFHVRqZreu8pqC74mzHpN2xD6fC
gPkQibNHJ8LOlA10Ho0bwUF2Hzzkbtp+JAydz39qVbt5X0QtPcRV5UWoNBy1
haWyMxV25ECFOj6oxkJTmZip+B/XFpDh35SByJIjvNYlDYMoQlxmOrHOiZZ0
brDHrQKKOu4UdeAvuMiMfs0yr8eMFrLbD2UePrl7+9eb1WJJn65oc7aisn+V
jY3mOlx0ijootaJue64jQFQxAv4btQ4/wRLEe7w+zOXDnLi8AYJM0AO8vnqf
H7/PhQLs8Ud6gxal+M2y8ppDx0/9kJNjrqkimikUdVBqo2rBJUxUbBPlFNwn
VMX2v3/P9n0F+blHT21pU9RB7MVESg3RMkOkUh+q1vHSSllpeayMKyFrc+JT
j3eZ/07k8CXAHQYQSbAHlxAjaPGBEuU6Q7cJMF4M8oO9ZGfaK6+GK0p5EjMr
xQaJ5SAoB6kWUjWMND093URPtaCxRhxFBEY0piIk0l4aPN5pyVa6wIJehN+M
pP7mHoo6/hp1/M40qbyMi1OHuARRx6OqiOghjL2Ht2alpnWMjCKnSV3u4cFp
0lrw2SjqoNRquv1p0gYswILtFVTl8CNH9Krq2iNHT2a//MqHn31ZUFga8Hjd
tVXnz55et3718oQlCxfNnzf/ufnz5iya/+K8Z+a98NwLS15YNmfuwnGPT/zX
O+/pKyoo6qDUltWCI/qinwvIpHsI6zh14rR33v73LR2WNkAd9GQ9V2AIFZu4
YiNNQhhxpOohC1cxR/VriOB45KLNMTPf7PCAOLTdUwD90MgHjYlcPjhsYNBQ
tktoFHQbxh7wFIxNhrmfsoXnIxXaKJGVv8zEXKIBBf6EJaAsRnEzSvzgs4HU
gmZocdgI8oYteBsZrlrRVyW/Rcabb1M7MneCOhJ1gFOHQg/rS7uMk4fGDmcf
OLZj345dKcte6hKLOix19UMwT2y9gxjqqKeog1Kr6XaogyCN4LU3SB2Yt662
Gm2yYFhlZfXWbbukSvW/33o/5/I1VAzxuY8e3Ldo8YJHHx3/1OSJM2ZMm/Pc
83Offe6Zp2fOnjZrzjNzZ856HqeONz/+tMLr/SPqoBzRKd1LtZz+tt5ciXZY
mJFjHxj37zde2XPw8zZGHTSxnZVipiXq0fKL1IqsR5VWUBogu4y32hiRWRiT
kdtD/cvAlw71euw/nP4J0GsCRPVCdQ86D3h84LIIZ3VALRhWV+g2BcaoYfpG
eOEUJ+FqhFgTsdYenm1mZOhBqUUDJDIzXWpFa5sCC11goRFpMg1LLhai+fJb
6jBR1HHnqWOlFm1Y49TxsqbraCE7bgRnx75NJw8fXZ+R+dAIZmY6mC3dXVVh
rnKiw0JRB6XW0+1Qh5cYzPD+Rv5ghyWAZjsCxISH14P5XXWYz3Xt8q/btm05
duxYYXFRdXU1/m5nTa3f6UZc4fabLY7dB44c/9+P+QYTRR2U2rKaow5BQXly
vkmUU9B7paTrsId3b9tbUpx/5OTmtkUdZpCWg8AOyWZAo61o5Ra5jwq0kFwI
Ug0rVReeqolKLY1Vl3ZSFcSrfu2x6Mv246QQORagQ4O/B4EdPD4LNV84AFHA
GgYDX4K5n3EU59vLcnjyQrZaF5pmDFMYQsQGjsjIElk4yDLCTCd2bdDqisoA
aj2kEpssUnPzuvlIpZZq/0gtpb/JHTSpBjmik9Sxadsnq9My8J8nnwHpauSI
7quLQtOkPnadnqIOSq2m26EOTxPdRB1NA1m8voZxU68TC7jKbea8vLyKiiqf
H3O7iFHSQJArPPVO/MEao91W560JYMTMB0UdlNqomqOOl3KMwiIrTh3D5Jmd
Bj14cM/ha7k5+w5/0daoI9mAWhsyB5LEhnzUpRaQ2/BPDSobR2XjSQwMgQbE
errcwFRqQpPP8VcciZ7zecQjacyesyBkIOFuyiPZg4ms1dlAbwdR90HviTB4
EUx5D+bs4Qp/ik8r6pWmiZdroiQ6vswS/L7kBHIQ5h6QrqWpdTRFY/mCoo47
oGapA/+549Sh0MOawo44dcQ/EHLyzMHEZcv4NDqfCasyoaZ2kLc2stYGmJOG
VVHUQanVdDvU4cKCeyieW6ocpGEp6YiOX+Fw4Pchm46AuwYLeP0EaXi8hKsY
ySTIx8NfYXcUFWttFXWVnuCybYDgjluoA0XG+V2Yz+upqi0o1r2kzgodPW7R
pu0UdVC6m2qh1pFwVZulsfZPUUT2HIJTR3FR3i1+HfecOm5Vk/MdmYRY4BYb
EKmRmZzPVOtiM0rikn8IeWYjPJgGXXH2GA70eII9mEBnAYMNDAYSJw46TYK+
KxhPvhq7eGcv6bne6de7ppWEKzSotq+ygtqCbih0kGZgphtCVDqu0sSUW2i4
FFa06iIxEckvv0MdtEYrEkrNq6UOi7Kcgf+aZVxr/5CY2/Wh8I3f/HfjRx9N
e3ICTh3r10K9c2iNg4vVAeZmUN6klFpRf5s6Akg4Evg9Hk/T9BWf1x10JcXq
kQL+ujon4o0G01J3HX6n1+eszc25dPTYqYPHvsvXl6GH+nxev4do4yDQIKnD
SXwij7O6zm4ryLm6/9DxJ+e9SBs0InHXQYo6KN1NNUcdcm3dspwSyZWiIdL0
ToMePHbwRGHBtUPHv25TtQ60U2lgKvRsMtNWbgzWH5qCh/hmKWxslY2jNDPk
pQxlfpjkxw4Lt3ea/ErHLtOBP4RYdSGWXMgdFwYd7blAe6APhe7PwYS13ITd
casuxW/Qx2aWQpYJ0omBRqkOZHqaRM8RaoJZMxIjck8V6UFsBJkFVI5bqIPW
hDoo8Lgd6hCa6VIbSDWwKj9urJSPU8f+o9t/Of/j1598OrQ/cgkrK+9bW8ZD
1OGkUS5hlFpRt99h8WINvEEadHh8Xq/fFwg0FCl87oDH6XfVYv4av7vSqNX8
fDGntjo4jhrwYg0btZ6Sguv7DxxSpq3dd+L8jVoH/jC3v9JedeXqtT2HDr33
2Yevvr4hPVUmWZGQvHS5WJbad+yj0HeQ5NBJijoo3U01Rx34m4nXDdKrxUNl
GdF9hh/aeyTv+pWDxza1KerAP6lCx1dpUZEhyB5G1OMgwSNY7mioeJAzn+hd
OhAWgbiYpTZGr7Z2URS0W3mW99w3MOFVGPAihN9PGF2yAIBOZ3DRrguP2Hzp
DJGjYNA8mJwNL3xOS/sxOi03NK0U2YXh37LQBsl2epKFJrdyVGae0sTGvzYU
8mIgrMwst8yU3vAvpajj9qhDXsZFP9BS5Ij+oIjTbjAdpw6TRnfhu9Ojh9HV
KpT+FnBGY/U09I9/BUUdlFpNtzlN2hQ5/KTJKBm44vN5PN56HDkIA1IXUeWo
ddc5zp35fvM3O8zG6kDDwIbX6cL8bvwxfk/dr5cuz56z+PX3NpU50VMXlxad
OnJi15YdX2/85p1331+1fr0sQ7Vs+eJFL8xZvuAFebJww6tv3T95OvTot3zb
Xoo6KN1NNUcdyy4Z5LoKWW7JAIEyqtfQb4+d1pQWtrW5DvyT4ryhwsEDXbNJ
8FAEvUCDj7mpw4JThwHSzJBuRn7mUi3OBmyUOauFDC1HndtuxcH2UzaED1rA
7zCGw+5GR+OmjVlyfMLxIw7ChkP8ZHgqmz77E9aKk+0UeR3TLR0VZVEpdvZK
/NMZuQpDiMLAQ0UYI0NppsmMINL+dpOFoo6/RR1iK5PcnP2XrjtOHaH9YPve
rzQFRYd27hrUB3DqqHcOxdwxwfQ3yiWMUuvpNjdngyUOssrhC5qRouWV4IaL
H4eNOsxXFXCWYVgNfvvKr7/s3XOkoswbIA3TyWlS5Ite43XV4NQx89mFa179
uMhYW1nn+uDD98eNHtupfYf+vQZMmjxVnpb24Zeffnv6xPWrv9ba7JjLW1Pv
F2Rv4I8aKz54gqIOSndTzVFHSn6ZVFOW/PM1nDpi+9+/a+uea7k5ba3Dgh/f
CgOtQXTCojyYK0cE2jKJLkYDe5CbrRpaupGXZQtJNTORv4ceFGZQ25EXR6qO
rszjyX6KER3vN+ejvgOWhTKGEXWPEGLkg9dgMhaKrE1ZvaHjRBir5C74unPy
/7pL8jqKSiNEOp5YGyLThko0XFEJS6ZnqK0clYWOfxaKOu4sdazUAulNilPH
WCk/djh7/9HtJXkFOHWMHISmSauq76uvCHGWEf/4U+lvlFpPt08dNyFHQ6aK
FxU60NRHvbPG8uPZI5+8/68Xnp+0fMnzUyZOGDJ41IK5iQvmp8yeueSFeUtf
nL9g8YLnFsyZvmDurGUvJcx6bvHm3d+THZZzF/73xcefb/nymxOHT3773fdn
Llz4+VqOVl9SW+VA5uk+9Llw6oD+Q5Z8s5OiDkp3Uy10WFZe04svFw5XZEG7
rrOenv3B+28fPvFNm6IOacM5TsSuAapyGIhAW0IN1EFrBA90Q8OSlDLFpSDR
ovZHMMdWh9oucgMCD7UmJKO4s/SXHnN3xT35Bv9xGbfvFGD2JLJriVQXoBML
L/iNCODdB12nw/0yePoj7spvO6QV9FCWxKmM7ZWGKBw8pFq2yoxTB1Nm+D3X
jv+z1DEuA/7kZc6e1qKOFCPKJlYagjssHe/nHTqxqzD3+rG9+0YNgawM5Ige
TH/DT4EyijootZpu15u0KXU0Wpu7/M56Z5XfX4dhta5ay5mTu/+9QTV72riZ
Tz82euSI3r0GPjNj6exZCdOmLHh21vw5s599buaUZ6ZPmPH0BJw6Xnnjvz9e
NpLUUVbhsOhMNWVV5DSpp3GHBfP4a2oxpwf/XLJ/vUEfPJLanKV0l9UcdSRc
MS/LKUkrMo5UrQZmJANYCcuXtLW5jqbs0Xh9i8gEW0L4V0hXOvgSM0tM9F9S
bUgqou2iNjIzzCHppnCllicqpguL0MyAuigi5WSn2W9HDFkGHR6H0H5Aj8Sp
g0aDUBYtEpEHE9EIqw/ET4CHReyZ74Y8f5C27BJDrotSGiJkOh4OPwojQ/o7
tQ6KOv4WdUhsLLmDJtehadL7kxkxw1j7jmwruHrt4I6dQ/qhDktN7SDMHYO5
GPg//n47RR2UWk1/jzpuKXeQHRacOvyeKhw8kLwVrmpTUe7P+3bt3rxpp15b
UVuD1dVgrjqf11lfV+kIuGsCfpfLjTZe6snM2UDDNCnptt50cxZVU3xkrSNl
zcvQf0jS7kMUdVC6m2ou/U1cXPXS5VJVvm6gKBWnDjaNK0hZ2WapI6jf+GME
JzqCyIF/bUyBAVJMyNaDuB+VO5QmSLOyUw0seSlLWspRGDkqO1NJGIDgJ11a
cWTGld7p/xucsm3gk4qOcWMA2hHeYsjPlI7qHmyiBhIK0BEYg6FPMkz4GATn
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
3oUTy5cbv8j5+aLf6XTW1P504eKW7fv2HPr+UpHjT8x1UJmzlO6lWnAJS7iq
Tfzpat8kGelN+svPF/Ye2hjbF3VY1hT3FhqB3GHBqUNeAv9Q6qDhcIUAwMYQ
29D0LBplcYCijC7Qg6gURAV0yXVORlHsek2P7Lxu6ef6LXiv94PLI8OHE/Zi
HKLbAnQasBgsOnozEqA38CbBACXM2hYp+LV7yrVIpSE6zR4nt0YJTXwcPwRm
dpIRBBai7kFMwCoMtFQ9CrTFr/FXVYxmNtDYBo4fpG4Bj/8fqENqZ+PUoTaj
uY77kxkdRnL3H91u0Rm+O3xk9DB6ZjqUV/RzV4cjR/R6oDJnKbWibrfW0cIF
hxDyYaR9ut9d6XOVnf/h1Kef/Ndut7u9HrPZfGDf/ovnz9WUleFUYTFZvzvz
41sffLX98Lk/UeugqIPSvVRz1CEsrBAV25R52hHKVR3ue+DI/mPvvP3vKTMe
Cu0M4wWc7JI+IhMkWhB1KNDaBeOfSR1mEFmQEG9YIcUCOA8kGRgCI0duC1VY
+SobT23lZNpYKAauFMTXYOW5kCWHop/5KPIhGavbJOD3JuzFGIS3GD1Y9IDO
EDISuk1jDl4BT/8XFh1mSH+JVl5vLy0Mk2p5IgM9WUdk1VmRSEtVRcN8KRko
I0aLLTQhMWIqNLMJAmEStZEb1EGOmP5foY6pH9xk9IG/2TJ1iCyMFAOa61hb
HP+QmBs3grN55+eXfry4b+u2kYNQ+ltN7SBPTUSAOBGo9DdKrajbog6yvtHI
GB6Pp2kNpPFC3ENmztZevPD9Z59/VFtbjXNERUXFLxd/PvPtqZyffvLUOyvL
q86fv7xgiWDta59VeZqkv1HUQantqeUOS2MOy4nDp15/bcOoMb1ZMTAmkbGm
uHcjdSh1NLWe9Y+kDvzsltlBagOJDV2jcoeZLrJwJDZeMs4eBjQUigOAiEiY
VVohvQIdlAp9pCQ3evGR0ClvsUauhK5PQsR9wI6FYKoLg7hmEzTSGWKfhPtF
MO/DsKQDcbIfOqRdj0nXRaiNTDQdarkpwC4IQmSQrjUYoSu0BNnjJuowNVDH
3Xqh/j514M/QeHvOnsZna4k6kvWIOtaVdB4tZHN7wdpX0j/94IM31q3vHIv8
OmrrBntrI4PepFStg1Lr6Y7WOvD3+ny+m2+jWoffXf7zj2e+2vS5waAjpz28
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
/mTG/06nah23Sx00Cc5sOobKyFabuUorX2ZG1QaRkSGxsaQOQlYaGps0oNVX
ZDhWRks20ZNLOIqijll5A5XfDVzwQZcnJOFhg4HZmZj3YBPmHnSi8kHiR1eI
GQOjEmDRxzGrfuy3vihenc9INRClFQvyacd/iOLGDBcCJ5D3iCVoV0KwR1A3
ZjnMN2213H3qSNKDspwhKIQ3bf3vT2Z0fSh8887Pi65d+/bQ4cH9kF9HTe0g
b22kr5owJqW8SSm1nm6XOhoMz2+6uIkLfsPpdJI36mqrMb/TXWk/uHP76oz0
9955f+vW7V9u/OLLLz7/6vPPvvnisy8+/WTNqtViWeqHX27/Od9MUseWbZsT
l63AlaVetWp19tpXXnnnkw82fvnpjq2bTh3Yf/nCxbxCzYuyVNqgEcL9xyjq
oHQ31Rx1pOSXrbyml1wp6p+i4HbqO2bUw7NmPv3ohKHM9rfOdaSb2ZLCf6xf
R2ufqg1hLsT0poHocdyYr+CS85zkcisu/KzHX/MEKySYIBm5pIbLi6IFP0Un
He8w613Ok+nsgbOh3SBA9uAsoNFQnAsiEB5wO0L0UOg2AYYsgymvwuKdnNSc
GFVeqLKEIdMRlh02NE+CguQMkGqGVCs66CX4V0hWRazIIU188wRpo8nYPaGO
lVpIq+bItJBxrf2kVXEQA8NHD/ji44+/O3xk2H0gk6Bp0oAzGm3OVjY5BSjq
oHTH9depw+VykWMbtyAHmcPym3qHH/O7cOkL8y6eP2cxmdHHoelRPxEH5/U6
669fzz9x+tze42cva8pqcVDxY1u3b0lenihcmfL2G+/s3LXn3M8/l1r0XuJ5
MLcL8wbq3YGkVeuozVlKd1/NUceKqxZBoSWz1IJTB/BiJj0xpV/fnsAEWhSM
S2GT3qT4CSi0gNrI/Ae7hLW2GldQg6MUxBYJjh+45HquQs9UGOipesCl1iPw
kDjQOE2iDeGHuAKnPobIQBfkc7JKuwtPx896jz8qGbpPgsjBwOmANlzYPFT3
QLMfXBRlS+sN3abCQxLmrHejlu6KVV7sllXcJbU0VFYM0lI0nJlmhAwzpJvR
TxANuxIVjxTDjWi5YB4NyUutbrfeLHVI7Wy5g5ZqgvTc6LFSPk4dM557auGc
eYoUwaA+8K+Xwe7o7awM9VUTcx1U+hul1tPf67D4fD4PcWm6Nut0OskbFRUV
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
snM3d4x1YOvAdDFOrUNQD3FNIKqGlVVDpse6uAdCROzcg5n7261DqRrXpdZB
50oq8u7ueCI/cGRATx+RmD+du7cOs9ms1+vbgx7twY32+zabjZYQOtyh1WpJ
x6ivryc149dffz158uT+/fu//vrrzz//fM2aNampqQKBYP78+e+8887bb7+d
kpiwcuV7W3bs/OHiz5LqepVMaTNa7YRNRxioeR02unM2fun7MG4iribFdDPO
rCOmTDHvakVKWV1QjJi0DhZwIsIX4GpSTPfSmXXEt4CwElnHvdEcnxD28bMH
i6/nd5t10FGLuyr5iFiAAx1/U+7SOqzU1S4YpFTckmcxU1f7Q/LVpqamK1eu
ZGVlrV27dt68eQ888MCIESOmTJkye/bshQsXrlq1aufOnRcuXJBIJBqN5tYe
FisaFEZah54wOjpnjVbCRIiWrMYZFkz346yaVFihWnC9Kq2iISQ+HdjedKzj
xNk92Dow3YjTatLIWmQdibWwrMx/WgzXPRC+++lEd1oH0WYR5HVLyehtoStA
sHL8PflDGRbaPWw2W8e8CfmMWq2urq6+dOlSdnb2J598kp6eLqCu6OjouLi4
tLS01atXk89/+eWX27dvP3jw4Pnz5/Py8iorK0kz0ev16EOMBr1eqzOZzfab
JqI7rKNtSlji8rUQPBlbB6ab6aSHJbK4Xni9DNV19B0aNi9i965tR07uwNaB
6UY665wVNqLtb2kF/R5N6eMVBNlHdlcWl3anddC0F5Q6Mwo6KkJePX84YrqI
P2QddCGoTqeTy+VlZWWXqOvUqVOZmZmbNm0ivWLZsmVCoXDhwoWvvvrqnDlz
4uPj165dS5rGuXPnKioqWltbO2Zn6IyMQ2B+M6/DbrIZTHrHzll6D4vVUdeB
MyyYbqaT2aTCypaoy4XjopOGhs64cO6n+rpq3MOC6V4665yNa4J08tfvmtdj
af18Qzk7Mr9uqJZ0v3XQOBvEQZd/4OFgf3Pu0jpI2aBVQaFQXLlyZf/+/atW
rVq0aNGMGTPGjRs3fPjwyZMnv/LKKykpKTt27Pjxxx/r6upaWlq0Wq3JZLql
3JS8c5NvOJ51zOsw2ex0oIOOdbRNRHdsukcZFlzXgel2Otn+Ru+cnSBMGRB0
7/7dWYUF17B1YLqXzvawxLegHpa0gn4PJriT1rE3e2uPxDpoSK+4bZkoVo5/
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
xQdzsB1qqtbx36eORtKyw0Ine0qbz9ObtIAc1y2umImJ5kdQAYTeYKQ1WdCg
a73Z027ysRm6GNT+VaUeMmG3vTv9oyNg8EDwcAUXFpFliwZsOQxwZQDdnQV+
XtAnGGbOgLXr4NyFrmrdcK0h2GjoYTMEOEy+mMkTM7kg/GihDuQrgvxaSQC4
9xb/zaijrU0T/AzZoYFf0el0ubm5Z86c2bdv3xdffIFjRmRkJI/HS09PX716
9dq1azdu3PjVV19t3759//79J0+ezMrKksvlKpWqLZcw5+Ts/ZmzIZnHoyUV
78uqF4rLIqUlAkVZqrRIcDMv5vTVUWkbghcnBb7D7TU3vvdcXt/3uP3mRfV8
O8JnZrjfm4nTvzgkKFDHFxrDRDU8qY4v1ZNWG7EydbRUGSNVxokrF569/ezn
O3xeX4hTh0BUFCmviFaoY0Tq5HxjYoEep4sIeU2ooiZMoSQCZ9UUdfwvqC3q
iBbW8AtV8TnS0UnLAoaMP3nkdHlZ0a59X5EzLKsU/QXVdNIRHacOypuUUseo
TeqILkV9HakVsEzUBacOj8Ewd+EbZ48fP3/sOE4dGWngaBiP1XZB/Y12GjU5
+1+njkfrgRxbY4vHF5pdbTIjl1SHBRebtCartXjKZYzz52HrT7B6Bbw7Gwb1
BU8XVPqgAQp2QTmlDDT8EhgAE8bBa68CTwBbfmRc+72fTDpIVdGrztAds3re
y7BDtQ4WZvDEdP6YLggz9cAs7i29psgDxEpc1j6MHLRH+sl3BHK0HkghO0Id
DofBYKioqKisrMSx4c6dO5cuXTp69OiuXbu+/fbbzz77DMeMmJiYuXPnvv32
2+Hh4Thv7Nix4/jx4zk5OUVFRXq9Hr8HkmGcfad/Juk+NPNYgkzJLdHxFEq+
rCxNVrxMrEjLuht34qL7y/NdZrzjNXOe/7/me02f4/3sm97Pvsae8nL/OSnP
rtwWdiwXpw6eXB9SoIzIU1LUQekPqp1uUq6kMk1aNiw+zbP38N079pQUyy9e
PRg80jnDwiuHlm5SijoodYzapI4InHVNnOQy5NfxpMA1cJzLb1mnzx4/uW7p
stFDYEk6VFQG2/TuDSZicraORlHHX0QdLVbqD7R6trJhJzxRkRxWWoOdZTW6
1VQE5N8JPrQ3aHmG+ysvw4gRENgDPLzAxQXc3cCF49x28XYHHx+YNh3Sl3j+
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
+OGHAwcOBAYGMhgMJpPp7+8fFha2Y8eOY7bj3Llz8fHxL1++hH1DJpOZzeai
oiLYN361NYMcSJzjA5PuC6uLK+rLG6yjpqEj+qZLN9giPZ5vZvILEOsQaklS
DR7K80rOmr7vxLSwQ9MjvnHbfmj1zRhmimDht+fcgg51Xkl2ZR9dcyUJ/0qJ
z9QQsrQ0noGapUeGlYuMJBlqHSjN0ZR1EIR6vDCPwZO5soJA+95tndpTKYTb
UT/a+3XA1mHviE7XozNnUVqO5qa/2a1jd87AKWSnLmNBZOzVPHn2k9i4ccOB
LxvpiF5f1bthX74ctQ6U3wa+H2qsztWFzjWFTrVFtlygEluso9CWWVpoazdX
0tBnrLIQlCCJys71pR3qK7tVl3QuMLYViZz9ub+9xWLfTDGZTEKhMCEh4fz5
8wcPHoTtgkqlenh4rF69eu3atWQyef/+/VeuXImLi4MgqKSkxF69Yg+J/CoP
5NfiYYt1NFpHnW3qys8zZ9/GOvx3HWzlNt37VhRXioyOhX/zM0UGIqSB3cBT
KN+YlOK27/iqczcJ8Ulue49+eSvKVyQnJ6Z43no0gXXQaSl+mP9xapqaoygm
8nQsEWIsv7IO+gf6daDWgdKcdTCyjSyBYjTF17n30OGDRh4+tO9R4s3+LsjM
2TDZUIbWAbYOmg6wlSBI3Qa1DpQWoEnrYBpa0bWAKgMHtSOmUVv1n94Rtg65
SBR/J9LNBeyKQGbOFhnb1MALR5Uz0o0BtQ6U30OZc12pY02hLZu0serWPtQe
9pBip3qLQ20BqCt0rC9tXV/qXG+wqUghMn6lsgxUVDjn5XSzlbQ0d9jLUvh8
PovFcnNzmzt3Lg6HCwwMvHjx4sOHD2UyGSwkVttRWlr6/nbMbx/vdQmzxzoq
6qsQ66iptM+c5WzfC8ZN9I6MpvJzyVIjS2KiCfOJknxittpTJN308vWMwyc2
X73HTHi58JtTX129yU3n7RHI6dFJc7efBp9s+oi+j5oJ24IJk6bykxXTMn8d
60CtA+WDNGUdHqk5FKnWT5IHW0eHAWNuX4vk89LjHl4eMB6JdTRaB1ULWNlo
rAOlhWjSOug6J6Yeuc3CpR/NYrbrO6Xd9cjzsHXcj7zrOhrpiF5SOr6quAvS
k6EMoNPfUH4njfNqkR+RG8YB6YBa2Kre2hrpS2Zpb2uL2rHeaqe97cVWyDXF
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
AzLpfmd2/xn0Nt1cHK7dOSfMyEKtA+Xv5u/aYWkUD/iABaOkpAR2jDdv3kRF
RZ09e/brr7/mcDg0Go3NZnNZzNDQ4K8PHDx87PjJ709fPnfpfnT885dJianP
hXJBsdmM1LBUIjUsThOnEiOjg3lKjlCHbE8IithQIVukx2fwsE+ejtiMH76W
MJi8Y+yOHybsPjd514+ztn87PfDgKPqeTlu5M0/cJMOrubKYJi+mwcqRVUDn
WWD9IEnM8DoCL/dsgRofl/75wT9uHbbpKu9aB0OoCMiEAp+9WHPo6DD3zWDY
qOFemA1nznOep6y4dHfG4evu9wTMVCM708ISWGD/IfH1JL6OISkg8tSwdXAl
pq0P02d9f23B6dsejzNJfA1eoLOLh30dRGtY/g3WwVIWw9ZBzRBPD9rZffjE
mMi4q1cukOjunQYgk+7DZEMpKkDQIrEOP5Ujah0oLUNzeR1MPTJzNlz6EWwd
TgPBynVLrpy7gFoHyt9Ny1sHLBuFhYVqtVoul4tEorS0tKdPn8bGxl6+fPnQ
oUPBwcGwaWzZsmXx4sVr16718/M7fuTwuXNn7z96LJYrSosr7JWzVTWV9srZ
2vJyxDqqbZWzYyeQI2PCeTn+PAODZ2EKSrjiUpbI7JXK23L/cbtF66cz93rF
8piSMoKgkJhl8hcYQ3ja4OS81ecTNsSmYjJUnpn5eMhME1uRkfQ8W7hDbLMO
SMvhq3Hxab+0jt8x/c3W7gNejHDSQpzMTJTkUyVyX4EoOJO39zVvZ8JT94N7
wdQJ3TdsWXz8VIRIGspThGeYgzIKqWkacrrKV6Dx5eWzsrSB0qJAeSkpQ8UR
5YbK8taev919G6U3Pnj5+XgyT40VaLEiHUGkZQiRHqosSM9EGnogU+dso+WQ
aheGUAs/2lDbsTUJQSp5cVI9QaqmiJHOIQ2nxPkUsZoqMr5Fb38j4y3wc/jv
BH7d1jPkn1/6/33WYYIlECfIZQkULoyAHiMmPYp/kqOURcac7TcWLOZ03pE9
gpyHWAfL5OCf74TmdaC0DE1Of6NpHela5DYLFfeexWwHOgPgBFgUGmodKH83
f9w6qqqq3t0csW+gvFui8ivrsFgsQqHw9u3bu3bt8vb2/uyzzyZOnDh8+PBP
P/0Ulo2QkJAzZ848e/YsNzcXlpOioqLq8rKKirLy6pqKmtq6mp+7hFXUV70/
hwV7OzpYqEbGxQpLyaIKqqCYKbXihPKtDxMHbCYt230KnwiRxRZvnoEAGf0U
Jvji8Ddq/6QcdpaBJNTDYkDOKcIJ9RShERYPqshElpptc1i0TKHa+37qH505
6yPTb85Tu6s0WxRFWwT5AXnZ9IykMChlNy/zm9fS7XcTthwLB3PGOGz2mX7q
eqBQHJwBRSTrw1MLiPxculwZLoFCUjJ2ZapCUg3BvFJYk4LFwvD0Z9xLZztN
m/PxBubKM4+wyQqsSIPJNpJl+pCM/N1ZmmCeip2p9JWrvXkiQnY2WaagJ4u2
C/J3yPTkVzx2liRImsMVSugiJV5u3SDSblbm41W5LLnYXwxRXqeHKnJJvCy6
WM4WGTkCM0toYAvy2VkKf57ML1MUxJME8iX+Qjk1TRKkLCDzVCyZlcDX0sTw
d9ZTof+5GEtT1gH/SJbo7DssH42ddvPKbdg64h5eHjQBqZwNlw9j6Z0oOgD/
e5Ob58DNcUStA6UF+A3r8Ncg2aQz6G1AD8Q6aATSs/j7buNAUABiHWWWDrXw
ElDp1DDvHrUOlJbg/xDreDdPo7EYVqVSpaWlxcTEnD59eufOnb6+vnQ6ncPh
BAYG7tixY+/evYcPH/7uu+9OnjwZGRn55MmT9PR0iUSi0+kqKirgD0cyS6th
q6mymUWDcjQz/c3emxTZa5CUEMUlJEEBQ2JCpq48f7Fy7/H1+3/cdjeJKdCy
JCZyVg47TRT4WrQrWeVx7eWGqNQtrxU+YgNeacVDRngNteVjGMnInojWbh1e
D1I/O3z+nWzS37YOrEzvnQ8rRx5eVsQQ6gMzUpd/t3c0h9R305Zx7oxxq736
L5kM+rd13kBcfvExLeHZ6m/PzOGc3Hgm0TNFSJEJ11z8cRKbNcyb02tTQLsN
oSMCvvWIjfzim9Bpa5eCnh+B8Z93WMnpjAudfvq2Z6pk6dX4T4KODl5LGeLJ
+hjDbrcVP+3YiRVxcaTUjIO83LWHz40kBnhdi1v+/TnXoIhu2zADOKGLrj/b
mqn2UeRhRQJ2+uu158+P5YQMpnM74jB9OQGTdvzofjOV9kbJ4mX7ZUlJj5IW
Hf3uYxyxs/u2Pjjy+O0HvroWR03P9ZUVkoVGZnYxWVoAC9s/rgH/EuugySw4
gYrBk7kwAvqMmfo0ITErM/Xm3VPv9ia1WwfamxSlxWjSOgi5gGUA2y2O9ulv
Dv0BmekTfy866vqNUYOBny8oK5+ATLovd4R/+VfrUetAaTH+rHXAmlFYWAjb
Qn5+PqwNKSkpjx49ioqKunDhwrFjxyIiIthsto+Pj7u7+5IlS7Zu3RoWFnbu
3LnHjx/DF1utVvgTqqur37cX289/YOYsJjKSLoRwkhyiwtYXlK9iSXI4cqHf
m8TAK9eXM4JG4dlz9n2/6szt1aevbT19gXQx8vO958ewjyy58BAZL5tt9YB0
npn5FJty/N+tgyTWc8RadnpueKrJL17kefzs2K2e3b74qs8K986TVrQZPAV0
aw3aOw5aQcN+9wSz//SENT5gxMqp7NNf3Xuy9XnSeD//ge5eXZZ5gBnuYB6+
1WrGhsvXF4T7DZ4zEbTtBPp9AiZ7OCz0mbv7DDX29QTK9sELfTqM+Kz37HVg
3Px2M5a3W7hq1s5v/BKS/c9EuSz1BENnjV5NGreVM2IjtdOcL8CUZf23hW+5
muyfIvN/mRkY+3RZyP6BK/CtZq8Bk+eBqYud53gs2n0tENLDf4fYxNdLT/7o
FhDSe90Wx7lLwdT5XVb79MMHrL/9HJusxGRpCDKrj9wMOxv81/6Pm8C/wTpg
9SWIVFxx7liaX9ehrmnJGUJB5sNnN2DrmEttEyIZzNA6EHWArgf++U5oDQtK
y9CkdbCMrTkmB18V4GZ2XuDftdVg4B/KuB8V8yz+/vSJjtvDEOuoLOpcbrZN
ukdnzqK0HH/cOhoLXeVyOawZR44coVAoK1euHDly5IQJExYsWLBly5agoKDT
p0/HxcW9evXKYrGUlZXZN18qKirg51VVVe8nmv5p62CIxASJkiC3CQA/lylW
ssU89vNHHvsPDVq0AgwYB4ZPBmNng8ETQd+h4KPhYOgcMGRuP+7hLa8V3pDe
E2lgbmYrin+Hdfx2Nin8CX4Zqp0ZmgOvdV7H77q6kwas2DAzeBfp1qNdMame
249OXDSz05BB/T/BLcIdH7XgK9ChLxiwdG7wpZV3EpbevN7XA78s4hvO3Zeh
T2RrTydO33me9CCJE3PXa4dfr0lu/VfQvjx4n3GPx45J2/jN+U5zvpqyjut3
PPaHxwLOyRufkQLBiKkDPOiff/3D4AWrQYeBoO0Q0GPCRI8Aj2+ubtlzos8i
dzB17aojdwIeZbKiE4duwE/28vc+Fs29lUq69Xg6UsO7ofc6f4/Y15vvP/v0
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
Z+a/ur3sq0O3bH6t+KM9T51Rsb/cO4dTB1feNWwBd+5LX7KbbExtYIXMztaG
STcCAgm62kcjpUTpXvED9nVkPlz0z6der5UbeOoWqsG+woBDG8vVrjIVElAP
R4bMTVdi5FipsxbprDSlE2n339SYCndJs5Oli1LVIZoiwEat2uxe8MH3yXc+
AaOmwLAJMHV2/j/nTX2i6Ja6dfe9/K+ib36okJiEMptA6eJrPVy9l6nzImwr
UbmoOj9qIqrMRW92c5o8giavqN4nqHfzlf7zeOM8AvmL2+9EWMplpmqt9TKG
EFKGDs8rFAo4e/d/NG46Xv1tjXaiwJVMzhI2uNL9oP1pNkgdg/aXt78gdfSt
OXsedXSQKR3t7aSvQ7h2C1w5m7pzn6gJUUdUKA8KpS6h1CKWtlQ06oW/qB79
+Ls5a18ZXVRJuWtp9gNFY5dzcu57PHnugqz5K+dt/fiJ3WeYCiejJbRUhtgj
xFD6OYoAS4YjFFhZlB6B3F38fePc5wnqeOa1GqWBqdCVak0rDNYSs6fY4C4n
pqogclBxHki51lZksBbrrTSNDX1kKR1/xy3SUKoyQNO2lqkiZbIAtdlTpQgU
7zo5ahENpl0DmQWQlQsjR2VOmVJ4/XVj599x+bKiabTqWZXP3vb8hw9v37fs
+1PlJ1QsqZWn9bHUPo7Kz1MHRIpQhTRc0xSqa4igrVAdxMuzKtxknAWnrPx9
kOPC1OEpk9gRdVSoTJdzKhF1ZCRncdj0A0e+uHgG3MLJ6KcOrmtwRvRB+/Ps
92YJG6SOQftL2F+QOogICyKLjp7e7k4cXkGs0dXT2R7vbO2JxTs6SOoQr38q
edY1xV9/x5Wi//mjeAlUhYMpt/BUFoHSJJAYeGe0V219m/IIDe5cAnMXwtwF
MP+hMSX8eU99WHFUz5U46Bp3eUtwmcJB0wZpciKPQoYzHJCgcOUescxd9l3j
7c99lH7fkps3v1Qr0fJlGrqqBYEHzeCk6cgkUgdfhke7cJVWlspM05rLsVmR
0TR/yy1NjReTpSvDNEWIoQjSGmyVEkflUendG54fc9vdMKQAUlIgGbClAKQm
QVo2DJ+SO+XWS+Y+MfsJ3s28J+/d8tbSD7+j7T31+NdHVh5oZJ02CaUeodTL
a3LxGj3cZjdX9X/S14E/iswBnkSLqSNn1D+uuWnN6poPPnlx/Ey4lZu5Vjdp
kDoG7c+3QeoYtL+8/VWp49cRFtLXEe/tQsjRGenirXoyaebVS3bsZCs8pZpo
qdpXorTTVFaOBmd3cKT6aiSgPytL9zdwjiqFx5Scww3sAycrjjWzvmuoabAL
lB6azlOs963UehB1UGUe3m9Rx/xnPhrzGO3uDS9uOKlcXa+pU2CeEUjMwiZz
VZO1rsG6ph6Zpa7RVN3cIpa2CAkTyP6+ZuI1W/Fy9hK7WOVBjyk+rVl3opm7
/YtLbrsTsnMhCVJTICUZ0lKTIYkClDSAHEgdkZwzDvLGQ/5EysUzhlwzf9Sd
i2+ve/bBlz4s/uog94iMf0rHbzAKZTaxxkuX/Z/MJsWrv/EMHsYZ+Uxh3biZ
N25/72NJc/0vDd8j6hj0dQza/5YNUseg/eXtL0gd5+V1ENmkHV3tiDpi3dG2
cMBntmtlupVscepV1xV/s5eldBVpg0Vad4naQtdZWDojXaYpPS15aNdB2s+y
aom1sqFlldS8qllXW69i7Du+8oujD398cOXPaqrWvVLtLtH5GJogS+HnyxPU
wSDiJmSE5a6nP8qYdffk25fcx3/6duFTt9e+dEPlc9dXPH+D+MVbKl65TfzK
HcJX7hC9dLvopVsrXvhn1Qs3VT93S+Vzt1b8Xe2m6mdm126Zue6Zaau2zNzw
7KwNT0+vWXtD1arraawxN9wIGRmQlJyVlp6CXR2pFEgFZGlpkIY+pQIlCX+k
ZKTmFGYVTsybOGv47FsuvuuxycvpMwSr/rHlpbve2/HQ1/vK6w3lUgdL7WNr
/Ag5qDIn2qKP/3Wc+A+pAw870rm4zZpJVN7wy67as/M7mbRx5573fh1hGVzp
ftD+NBukjkH7y9tfkDr6fB0dPb2t0Q6/y2czWrV6zRlFw7HTRw/u2/vlBx+/
/69tN939EEy+vOir3Ry5tUzlJgZNmDhaI0+tZ9RLig6duOb5N5ftOlLXaKr6
RbdRal7bqFvXqC7eeeC2Z7dPqX7x/m+PU1XO5QpHuSHAVAd5qhBJHUwVziZF
gsJRupfuxxGWEbcvGfvPRdMf5Yy9r+Tix9iFj9BGPsK86DHe2IXccY9wJzyE
bfzD7HGPsMcuZCIb/wh9wsN/Vxu3kFa4uHhkMTXj0SVZi5cXrCwdvmTFxU8s
mbhgQc7UaTi8AkkZKalpeA9tcyhJ6USohYi5EBSShoEkhQLpANmQPASyC2Hs
ZLj+n4UrS+Zsemreth3Fv6jKJHaEHBxi0g9EIDS56/8AdeBnkZlq9fbLGMLR
V1x34PtDBr16zw/bEXX8Opt0kDoG7c+xf5c6lJg6pg5Sx6D9L9q/Tx29vb3k
9iwmEPvd3cRQ156ezs5Ocp/8iP46OjrQQfJje3s7+W0v8XcObvT2dnV1kdTR
2RuPtnfYLM6ffjz88nMvcXjsBxc/dOWcK664bNItV1+/ZOHSSbOuh6nTqTv3
1qkcXImN12yqlLfUKQwVDRLBz6cFh0/NffqN4s/2rT+ufqbR/FS9Yetp7aaT
srVHpSs++HHIEvGY2hdLJRa6IbhS7uDpozxFgCfzc5VBpjZA0/upOl+50kFt
NrFPaee/su2el96/+9UP5r+xfd7bO25799Pb3v0c2bx3vrzj7S/nJ+xzZHe8
8ymyu97+5O63/q5271sf3/va24+8++Gdr7113zvbHt720f2vv/noSy8ve/rp
K+68C7FGUnJqVlo6oo40SKdAJo6wpBCokU74OZIQeiBLwZ+TsiFtKIyckDTn
HyMfX3r1+o0Ldny2/NDPbKXtv04OfwZ18PShFfUabrPmqoo1eZdMP/7TSamk
Ye/+j0ZNxXOTIuog12ER+pIqzJTBMSyD9ufYH6eOwfk6Bu1/yf4QdfwaGM6D
h36uwBTxqz+SQ/o/ojLRaNRms0ml0hMnTnz12advvPFa3dp1TC6PSeeIeaI1
NavXbVj75PObNz+36YN33vz+y2/27/7xkZW0lNnX0r7eU93cUiW3V8vN7OMN
D3y444q6tYUl9IIlpdkPLh3xGG30E5zCRczRjzPGL+dOLOaMXc4ZsoABty+b
sultpsLJNISKZA62MkBrcHClPrbcT9X4Sg2+Yr23WOMsk1sYzcblP55ceeDn
lQdPrvjp1LJj9U/8TFojsqXHGpcd7bNj9YSd/lvbyqO/lB86wT1aX37gBPXw
SebhE4x9B7k7d5e++q/p9z2AgymUJArh2MhIzkSckZadB+kpGEBSk7ClpCYX
jBg5dealN95+9aPLbyhl31a1/p5nX13w/idP7Pmh5PhphlSNx8v8t8nhz6AO
psrL1btFipYpTFHBpbO+3/XDe+++Oe/uOfmXYF/HWt0knoPC8iRmRB9ch2XQ
/hwbjLAM2l/e/rMISz+BoOMIHn4TRdra2hCEoG8RaZAFUGGfz2c0GrVarUwm
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
Mw/jO0bWOHOr5UPLPi28XZh70VyAaTBvawH1yHiWZkS5LP/RzwtGPgypF8OU
ezIWfT2lRD6G15Iu0MA64/BVkvH3vJE+oghueh5KD+ats45cZU/j60DYAjWW
3EprDjkbSa0xDT1vpbGAbx7OsRbyrPmVqJ4WLOV8RB0u7HIhx7PgNE57Bs8x
YNiyLQ2xCh8n1qadnfAEjx5CXJfGawFRc9q6H6YvW3f5yGtz82/NmvvayOKG
icskw9d55mxsvubeLXDZUvhHFTzx9QRqwxSqYgTPklPhoIjNUGnIXmu6eL3x
8jrdpKqWQpxCTE7lMWDGjwvNEsZ3p5YbEhGWO+qGI+r49OttZp3uwO49V10J
a1ZBrHVGeyi3ixyZcqH5OqI4QxKzRAy6vBD3D4uHLg9qZjT8MObd5+GDf8Hx
oymh0LienmGtUWgLE2GLAe/dhI+dQI4EdeQSoy1SiddwOB88fp86Bgx16cEJ
mUjLkno9EPfkK38q3FQNN90KH3wKWvmUY7tyy++DVXT45HMwe8e2tmb0xBJp
IXg4TCI3NTneMfzzl+GJaXDdELjsUrj5Pjh4fJQ/MKq3dXTYCvHuobqTULEI
XhODu/kG3fGrGvf/s6oM7rkW1gmxh6e3Oz3eNgQ/lG943F+Ih8eGsnqCQ/SN
w19anYvk+5pLYXPdMIVsit871aqcdmTH+NWPUWbmw9IllPe+mGb0zPRFhoUj
SfFIQXfj2NMf5z28CNa/DvWKkaFIYVssBUesAgXx0Kj2aB7OmyXrH8rrDI9o
j4zoChNjUgIENoSyEId0RXJwI6MOCubhpFMi64OgFJzUQcaVegncQihCOEOy
iNgQwsIxcfuYLtc4r3baJy8VPDgX7rwfnn1tesOJWVHrzLh/ZnvLFbteTuE8
BuvWw9f7RulaLnY68iPBvK7okJ5wTk8wpydQ0BMc0RUa1h7NaW8lXCsxIvUX
dXcg538kwvI///f783X8x9TB1viRtHGl5jVae9UZxYPv7ZjIq3l8xy7WkeYa
uUOscNEbbeS7bbnUwdUFWVo/WxdAWzwZqdxJChyej/S3r+9lKwM0mb9c5qMq
feVaX6kOZ18U6xxFWmeR2lGscZZrvXQNoZjEyJQiZQRRB11lYdY3bZbIl7y5
bdjDRdPFG29768M6pWb1maYFL791LW/1yEW8eW/8SGvE03khsaPiNVMcfKSz
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
L9C5Jeoe2VH5pZufT76z6sqnP35ol7b4oLGyvVOq6lij1GBRsg5Pc2cfuZFM
b26UG+rbjfU6X6XCU3TUIdP4G+S2FoVptdYqlHeXaPqKTcMPGpA6sLevruch
VU95t0PcY67UKCv16lJTz116652mvnt6vA92u0r0XRUquVirkeiNAr29XG4h
V1ur7cNw0OPm4qNy4YEfrmjcMO22gquROrqFal+V2lWhMxGpVJLH13cy6mCi
SWvVpuV1bTPO/M3unXv1OtWuvW/OPAMzZ1s08wRmrMMp+aeZswQ5JI50iTNZ
QluUtvqTBDqisFKbzNmNxql1hqy1rmn1ppR6c3KzPZVgyXrjnNW7Fi8vhhse
h5YDs59Tn7v5yBklO7Jz7sd2LTd+CtWGtCYXv5E2G5X6eEUWTCoR0d6yUheL
0IXEzJaYubW2JGkPV2rhEeSosSCWYPP0Xnx9rnGx0TjvTmlwp1ZoYI0nTaqH
JnNKc3dGmzmvwThljTNfZkyuNrCaetPryHK6ME+22cmSWWnddTc0u7Gm6Do7
NGjgYVP+GsOMRl0W5qHYsBC6hFZOIxqz3kWGseu6od7AbulObrWkNJrZNQZo
cEN5D0iDUOnFJrayXuwag6W3rMlia5rYlkpWUctETfRAo5HfQPFJZGMJyfw9
WA2+xcurMXPIyHp3psjCrummthErq7oDLnoeQ1lKj/Gk1kyRA9crtmGHXOme
7GXlcH4z3PvJlFXHUsr0UCWHx5z8h7sy1utzW00z6nuyGszs1SbYqId1Wmj2
ZpSbWXXO9Nae1E2GtEe0vBYTt9bOrrJg95M6AgAEckzIBlIyH2dKaxdntQY2
21LW9rCwWa0b6j34jJoNsA7zkfltXWkNPXkN1nl1XXPrutBNJjOkydRpxV9w
FxbChS1wz/dQ3MOqtcaog9yCrBSNPyeJ6yDUwdQmbdVM+001P3Ux3P3gLV98
8snXuz4/53RoaYplzkaHedjW7SRVwgh1jLqwz9coU790LIcMIKp/bAilPwhD
/oxo//SAiz3oT4mOzh5y5vRrczt3Z93+ZygTwlvvpHpsF0Xd5wzbZluN6URd
fnkQTE4YCaWOerGxGkaMBGHMx9g6WGi+wAYoSUQPjgd4GC8R4SFXEDIZiLeE
G2YhM/TTCqKYacIe8WE+S3R0Sr+bP9yXN+CZNhaaPtY/hUyPsMqIH8YCSVhl
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
lz/8aM1jj5xzxekwF86W8Frbz2lSZ9QZqeXfzZW6UoSOVEyr9GBKJlN1U+BI
FdqzaBQinJJT8itkIoKX8UZN4s9y/MOb0ta9cEP7JVfXZWefDW999NJjG9Zc
c9F5WSxYXQ/h8CVDIzljY1hps7+XvK6mRT1ZaK73UjOFPyZjAbRRnDqeOv6a
YwBGAtyRAAf/ySAHYwTzwVgfQsgoIZNBrteVNhg4p/PQst+eB2tW3z8+Pv6f
oI7xyeYOSh0IHhjsER4bDUSjvmi0cv2j6UvPa3nvsyZ5T6XOeUpOyX9AqjX2
WqWlXtkjo717hJreSi0RT7XG2WLwtBzv2nRUdX5hRerSM9//8ssj7ce3vvlE
ynK4Zk3m09rfbDLkreuGJgM097DrTakN5im1VmxyWutCqbNDnSWzoSen0ZzS
ZOGcklPy66QxJkkNRKy8Ohun1g5SWs21xZbVop65+uBZV0m4S66Bj/e9qNF8
/far68gb5dp14PKd7fJz+4dgeIj8l58fDU6JBnKiwZRomB3rihJmj0e42MZr
gH3qeOr4a4793JFIykh/0sgADUSJ96Yhgkm1gzBCZIQXDGUPDJ53cP+cC86D
h9c/9D+OHCenjpHhQXJihHpYwtGooHVD5uKz6//27pp2rVRpPCWn5D8g9QoD
+XvbcEy79ri+td3Y3GFu6rASWd1ubvpe9fBB5XOH5FeUCOdecPGn+77q6en+
ZM8bGWfBH2rSH/3mwk1H5/5Flb1BmfqwesY69YI16iVt2vlthpy2rrS2rtQ1
+ux16vnr1IvWq+es18w4JafkV8g67Yw1uhltuhlrtLOItOmIzGg1TGs1TG3r
ym9Rzni486zHD191eSUPZsL1d573/Ivrvvvy9XPPgIZGrsNznTeyLDQ0p88z
PeJdNOQ9b6Rv+Yhv6UjgtJHAnKHg3CH/4kH/soHg4oHgolNySn6FREKLI8Fl
RAZCCwZCpw0FFoz4F4/4lhEZi5w+HF4Q9E0LBk8LhS+MDNz0xednnH8+rFtb
+J+jjvGfUsfoyBD5cmhsnPxPcCwqXrMxZ+GZK1oeKXl5xwOvvn1KTsl/QFZs
f6to2+ulL79etO2twm1vr3zlvZXbPiBS+PJ7kh2fVW99S/TMtgtuui1v4ZLm
tjU7Xtu+6S+tc85J/+3d04XPniN4cYbojdyqN7Iq/jan5G8Li187vZgcd+QX
v5lZ8mZ6yY7c0tdOK31tYenf5pa+PvOUnJJfISWvzyzYgVL4xuzCN+YWvz4X
P+zIL3gzr/CtaStem1ax40zZG1f89r6pkAbsNLjm2iseXffInGnclQ/M+uTT
m3Z9sfzLvWft/MfSne+dvfuD3+59/+K9/zhr90dLdn+88IuPTv/iHxd88Y8L
P//o3M8/OvuUnJJfK+d+hn9CZ33x0Vm7Pzx77wfn7/3gQiL7Pjp/98dnfvqP
0z78x8JPP7no8103bn7swvPPgZbmisHBwf8EeEywx1iCOgbDISa3ZZSwRzTa
sPZR/L9N1jSYsRBmEVl06njq+D9+nLkQZs6HWfPjJ0+HWWfAzLNg5hkwbTGk
z+DPXMibOgPYvLy8vOlTszNSOcAB8l/43NOBOw94SwEWApwGMI8e59N/LqLC
nGdOnpJT8uuE+XNaTI8L4sKcPJ0eyZiZAJkASQBs9szpS+ZMP4cLvNwsOG0e
5GbDaXNhCZFZsHQGldmweA7KIiIzqcyCRbNPySn5lbJwDgrzeXHiz2wGzJ8K
S+bA0tNg7iyYPRMWnAbTcoHLhuee+8vQ0NB/ADdOoA4GPMboh/FoOBjpjwwT
8PjxmPqxp158/pUdT2/56zNbtj/z3KnjqeP/+PHJ57dvfmnbo1u3b9z6141b
X9v40g4qbxF5YcfHT2x9c/NzL29+9vmnnn72qaee2PLM46+89OIzT728afNT
z7+yeeOzNU++Ktn8ivSJ7eufeu3JTdue2PTKps3b12z+a+Pjr9Y/sb3pyZfX
P7Ht4cdfWf/4K+tOySn5FbJp+7qNf13zyGtrHn11/Wb8QyJ/UeS4ZvOrLY+9
2rj59bbNr69ft2XtU6++uGX7jqeeffPpJ97Z/MgbLz339itbtzz/3Ootz4hf
eFb04tP1Lz3RtO3p1dueqd/2XM3W5yu2bhG89JzspWfWvPTMuq3PNG99tu6U
nJJfJy89h0I/1297unnb023bnlpDji8+UbvtWdn2F2UvbKl57lnZ88+3btny
2PZXXty3by/Bgf8Hgqbllg==
    "], {{0, 535}, {722, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{460., Automatic},
  ImageSizeRaw->{722, 535},
  PlotRange->{{0, 722}, {0, 535}}]], "DetailNotes",
 CellChangeTimes->{
  3.743431319118385*^9, 3.749931306886094*^9, 3.749931988647188*^9, {
   3.7499329856926513`*^9, 3.7499329918642364`*^9}},
 CellID->347284425,ExpressionUUID->"2fde9830-e710-4b2f-8a82-51778f6047f7"],

Cell[TextData[{
 "For heat generation in wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["A",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "0ef33edc-bc8f-4f0b-bdfc-bd56d303fa2a"],
 ", the rest of the surface temperatures are:"
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.739891933602536*^9}, {3.7398926442272034`*^9, 3.7398926719537907`*^9}},
 CellID->430274188,ExpressionUUID->"12b4e014-3edf-4d91-8477-bfcace4f2e0f"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", 
     RowBox[{
      StyleBox["s",
       FontSlant->"Plain"], ",", "4"}]], "=", 
    RowBox[{
     SubscriptBox["T", 
      RowBox[{
       StyleBox["s",
        FontSlant->"Plain"], ",", "3"}]], "+", 
     RowBox[{"q", " ", 
      FractionBox[
       SubscriptBox["L", 
        StyleBox["B",
         FontSlant->"Plain"]], 
       SubscriptBox["k", 
        StyleBox["B",
         FontSlant->"Plain"]]]}]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"ad2b5ba7-251d-4db9-9774-39e5661e8582"],
 ","
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.739891933602536*^9}, {3.7398926442272034`*^9, 3.739892697029738*^9}},
 CellID->632557312,ExpressionUUID->"02510f1f-045f-4c91-ac92-8b0cbe64f57a"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", 
     RowBox[{
      StyleBox["s",
       FontSlant->"Plain"], ",", "5"}]], "=", 
    RowBox[{
     SubscriptBox["T", 
      RowBox[{
       StyleBox["s",
        FontSlant->"Plain"], ",", "4"}]], "+", 
     RowBox[{"q", " ", 
      SuperscriptBox["R", "\[DoublePrime]"]}]}]}], TraditionalForm]], 
  "InlineMath",ExpressionUUID->"d1e01c8e-5473-45c8-9e0f-93e8df04f1e3"],
 ","
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.739891933602536*^9}, {3.7398926442272034`*^9, 3.739892717586054*^9}, {
  3.7404065888729897`*^9, 3.740406591843808*^9}},
 CellID->108152909,ExpressionUUID->"7c660777-d551-4904-95d1-524db57f8d63"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", 
     RowBox[{
      StyleBox["s",
       FontSlant->"Plain"], ",", "6"}]], "=", 
    RowBox[{"T", "(", "z", ")"}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"9ce48596-605b-4e19-a5fc-3fc499a60861"],
 " the solution to the differential equations."
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.739891933602536*^9}, {3.7398926442272034`*^9, 3.7398927389145613`*^9}, {
  3.740406504436658*^9, 3.740406504946227*^9}},
 CellID->767566158,ExpressionUUID->"5f198171-f29d-4e1e-a231-c285f8c6b8b3"],

Cell[TextData[{
 "The heat flux when wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["B",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "88e8db63-5a9c-49d7-834c-817877d6c507"],
 " generates heat is:"
}], "DetailNotes",
 CellChangeTimes->{{3.740406235421397*^9, 3.740406238332162*^9}, {
  3.743981513336296*^9, 3.7439815194273844`*^9}, {3.7449227985821905`*^9, 
  3.744922808129217*^9}, {3.748778754856515*^9, 3.7487787553822136`*^9}},
 CellID->31082979,ExpressionUUID->"76bb9ebe-c791-482b-b9a4-5675d9fd5b50"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "=", 
    RowBox[{"Q", " ", 
     SubscriptBox["L", 
      StyleBox["B",
       FontSlant->"Plain"]]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"6aab205c-4010-41a0-b2a6-5f1bad550b10"],
 "."
}], "DetailNotes",
 CellChangeTimes->{{3.740406235421397*^9, 3.7404062454312983`*^9}},
 CellID->106822949,ExpressionUUID->"916fe24c-5994-4335-8e38-ec23ba0d9f66"],

Cell["and", "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.739891933602536*^9}, {3.7398926442272034`*^9, 3.739892646509977*^9}, {
  3.740406212291616*^9, 3.740406216647238*^9}, {3.74398154139263*^9, 
  3.7439815417999945`*^9}},
 CellID->169169661,ExpressionUUID->"9074fd79-2c73-4eb6-943d-80e56e1af850"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[DifferentialD]", "2"], "T"}], 
     RowBox[{"\[DifferentialD]", 
      SuperscriptBox["z", "2"]}]], "=", 
    RowBox[{"-", 
     FractionBox["Q", 
      SubscriptBox["k", 
       StyleBox["B",
        FontSlant->"Plain"]]]}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"c089a0ca-d1a3-4146-a321-30afc421af73"],
 ","
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.7398919566622286`*^9}},
 CellID->323666852,ExpressionUUID->"571d9e1a-b4c8-44db-9ad7-1f151d64b5b7"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{
      FractionBox[
       RowBox[{"\[DifferentialD]", "T"}], 
       RowBox[{"\[DifferentialD]", "z"}]], "\[RightBracketingBar]"}], 
     RowBox[{"z", "=", 
      SubscriptBox["L", 
       StyleBox["A",
        FontSlant->"Plain"]]}]], "=", "0"}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"f8591127-b39e-4f24-9269-8db328ead0cc"],
 ","
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.7398919953110266`*^9}},
 CellID->64975237,ExpressionUUID->"bb6775b1-f5a5-4607-a6a4-ca417dfd9a85"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     RowBox[{"T", "\[RightBracketingBar]"}], 
     RowBox[{"z", "=", 
      RowBox[{
       SubscriptBox["L", 
        StyleBox["A",
         FontSlant->"Plain"]], "+", 
       SubscriptBox["L", 
        StyleBox["B",
         FontSlant->"Plain"]]}]}]], "=", 
    SubscriptBox["T", 
     RowBox[{"s", ",", "3"}]]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"b7550587-1bd4-423d-a95e-4cb27432d79f"],
 "."
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.7398920173456445`*^9}, {3.740405980336344*^9, 3.7404059806701145`*^9}, {
  3.740406455069417*^9, 3.740406470865859*^9}, {3.7499311275925093`*^9, 
  3.749931127692587*^9}},
 CellID->824488843,ExpressionUUID->"f36cd19f-8d67-494a-bdbd-3f6d26c5436a"],

Cell[TextData[{
 "For heat generation in wall ",
 Cell[BoxData[
  FormBox[
   StyleBox["B",
    FontSlant->"Plain"], TraditionalForm]], "InlineMath",ExpressionUUID->
  "0d564663-48a6-4f69-9d00-b2c49001f698"],
 ", the remaining surface temperatures are:"
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
   3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
   3.7398920173456445`*^9}, {3.740405980336344*^9, 3.7404059989614115`*^9}, 
   3.7404061168347497`*^9},
 CellID->236475564,ExpressionUUID->"684ef65c-e1c4-43b7-8cb6-ca4b8110424a"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", 
     RowBox[{
      StyleBox["s",
       FontSlant->"Plain"], ",", "4"}]], "=", 
    RowBox[{"T", "(", "z", ")"}]}], TraditionalForm]], "InlineMath",
  ExpressionUUID->"c2a4d7f5-fb1e-4010-ab19-7ae6a6de7f3c"],
 " the solution to the differential equations,"
}], "DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.7398920173456445`*^9}, {3.740405980336344*^9, 3.7404060317252345`*^9}, {
  3.7404064886224957`*^9, 3.740406489195736*^9}},
 CellID->802766362,ExpressionUUID->"c25a44fc-5d8a-48df-9c97-65ba6f08810e"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["T", 
    RowBox[{
     StyleBox["s",
      FontSlant->"Plain"], ",", "6"}]], "=", 
   RowBox[{
    SubscriptBox["T", 
     RowBox[{
      StyleBox["s",
       FontSlant->"Plain"], ",", "5"}]], "=", 
    SubscriptBox["T", 
     RowBox[{"s", ",", "4"}]]}]}], 
  TraditionalForm]], \
"InlineMath",ExpressionUUID->"736ba27a-7ef9-4e52-862d-8a5a64b66d65"]], \
"DetailNotes",
 InitializationCell->True,
 CellChangeTimes->{{3.7398915641897907`*^9, 3.7398917009453583`*^9}, {
  3.7398917450146255`*^9, 3.739891829348768*^9}, {3.739891877299616*^9, 
  3.7398920173456445`*^9}, {3.740405980336344*^9, 3.7404060941847982`*^9}, {
  3.7499320153898115`*^9, 3.74993205791354*^9}},
 CellID->4932786,ExpressionUUID->"bcd3c302-437a-4afc-8e4b-5d8d11845af1"],

Cell["Figure 2:", "DetailNotes",
 CellChangeTimes->{{3.739891539485346*^9, 3.739891541454632*^9}, {
  3.749932296899849*^9, 3.7499322970780115`*^9}},
 CellID->279402392,ExpressionUUID->"f5413ab5-afe4-424a-8324-d3acd39516b1"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
9KuR3vjnn39iYmLu3bt36dIlb29vNzc3khPcEMm2sot7w9ra2sXF5ejRo+fO
nQsODiZ/L9LT09+8ecN/HKxPqc9qqjdGngmp8c+tbs5PqdneWP/36GZtlNEb
9QR6A+j3Ub1RUlJSXFycn5+fnZ396tWrhISEFy9eREREBAYGHj9+nLTEhg0b
Fi5cOHnyZB0dHYFAsGDBAktLyyNHjly/fj0+Pr6oqIh8hCo+Pg29QV6tsH2H
VFT/K9jfzq2mbmhUIHPzRZ2fGUzf1Bu9UX+QJ2SFI37QG0Cbj+oNEhtpaWmh
oaGnTp1ydXVdv379V199NXz48PHjx8+ZM+f777+3t7f38PA4d+7crVu3nj17
Fhsbm5SUlJ6enpubKzY2aOgNbhsxvjHI6xd6o86I/QqqdOzKd2ClD/vse8P2
jkCtgwr3/0Dzdg2/PTj4Qx9q7V8jO2o0xXhK/UGekBWO+EFvAG0+1Btv374t
KChITEzkJnmePHny0KFDu3btsrKy4peT8G84OTn9+uuvZ8+evXnz5tOnT1NS
UvLz8yUJGKp6g7uzgcCQlqq/guSP2s9awL1NvkaVPoz8JmmS2vjcaFifYhWs
o9pCccbmPuRt14SJq09ofag3tl3X1tBrZby6J3kMeqOewPoUoF/53iguLs7O
ziaNERMT8+TJk1u3bp0+fdrNzc3S0nLJkiVTp07V1tY2MDCYP3/+5s2bXV1d
fX19Hz16RLLkE9Ki7ntD7E/H5OWMfBCpv+zWW1V8BbkbF2InZpCvYPmxML5P
qo/vDfIU5TaLrvvemGPVr00PVcdH+lV/kD3PDb4gn+zIFk4RBuiN+gPzN4B+
5XsjLS3t7NmzGzduJJGsq6urpaU1bdq0ZcuW7dix49ChQ6QuSIFERESQGiFN
8urVKxInJDbevn1Lf29I8tMxeQx5XZP6y269VcVXkJsI+lE3r7h3qanbHXxv
hISEcIdh1X1vLHYb0qy18qL9g6r4CG7Jk8wODWnft8kPZ0aRf0Rv1B/oDaBf
+d4gFXHq1CluiIQ0hr29/eHDh318fAICAh4+fJiUlJSfn1+DdVFnvSHJT8fc
yxP5lfs4mCxa96ouRv7eheRNyH1Na6QhaZi/4RRhMGJGe/JfpN5JZc2fWpV+
hM1XxnbVbD7Xrj/3j+iN+oM/PwXjKUCtCvc3yI9vp0+fvn//fnp6eu11RR33
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
nRppumuAvllXDd2W6h1VlFTkKxtrYZNDuZF8YzV2bUunAU0HTWg9aVWPJe6a
9XMnMQmhN4B+ddAbIpEoKyvrxYsXd+7cuXjxopeX1/79+62trcm/dHvZxb8h
EAjQG0Chz2+/r7p3KM2YtIftHYHF2dHLjgz9eqeG8ZqeY+Z27DNWvXU3dl/T
SrdSV1CUa9xCsWP/JgMntNZZ2HmmZd/FPw350XeUw30915dGUv+Poge/PgXn
pwC1arY3SkpK3rx58/r1axIYqamp8fHxkZGR4eHhfn5+3t7ezs7OFhYW33zz
jaGhoZaW1qRJk5YtW7Zz505SIEFBQQkJCT/++CN6AyiE8ZTa4BI5YcuVsfMc
B5CQ6DNOrX2fxi06NGyspqTUSF6uss095BUaNG2l1GtUC73vuizaP3jD+TE7
w3SdnxkciDciMVNPVrV8CL8+xdLSEr0BdKrZ3igsLHz16tXdu3dPnjy5e/fu
5cuXk6gYMWKEnp7e3Llz16xZ4+DgcOzYscuXLz948ICkSFxcXEpKSmZmZl5e
XlFR0datW9EbQCGMp9QGdmOxhIl7nk9wCNfbETR+7Umtr2z6j5nbscuQZo3V
lSodaiHJoawq36SlUsvOKt2HNdea2eEr6/4/+o52fjaBJIfU/4ukiF+fQpIY
vQF0qk5v/PPPPzExMffu3bt06ZK3t7ebmxvJCX6IhBslIb9aW1u7uLgcPXr0
3Llz5O/C8+fP09PT37x58/4HxPoUoBPpDX4zJYyn1Ab3V8b7Ygytgsev+VNr
0f5BM7b00TPrOvSLtp0HNSXtUentDiUV+RbtG/YcqTZyZvtJq3qY7NIw/304
6Zb9sYb1sD0wfwPoJ0lvlJSUFBcX5+fnZ2dnv3r1KiEh4cWLFxEREYGBgceP
HyctsWHDhoULF06ePFlHR0cgECxYsID8GHjkyJHr16/Hx8cXFRWRjyBJwKA3
gE78fub8zWr0Rq1il9Y+0FvlPWLKj70GGbbu0L+JWkcVEh7/bSP23qWoLNem
p+rw6e1mbe+77q+R1iE6ThEG+2ON6slWHj+jN0AWSNIbJDbS0tJCQ0NPnTrl
6uq6fv36r776avjw4ePHj58zZ873339vb2/v4eFx7ty5W7duPXv2LDY2Nikp
KT09PTc3V/LYQG8Atfjz2vib1eiNWnU43Zhd2xJruPuJPomHH31Hm+4aoD2v
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
kXh4hb+/ERISgt4AOlXojcTExBs3bhw/ftzR0ZF8a50yZYpAINDV1TUxMVm9
enUlvVGcXZrs62O7ZKaGxrD/Jm6M1tBYs941QJJtRdEbIBPQG1BN/C5htncE
3/8xwmhl986DmpHkeGc7dPkGJDnUO6n0HqM2fVPvTZfGHEo1ljA5+Pkb5Lso
egPoVL43SGycOnWKX0XCvWFra+vi4uLp6Xn27Nnbt2+XH08pzXyeduv3A9vW
rjVfu2LNts1buYUpVtu2Oe7ctvPAHteT9149z0RvgMzDfl9QU9zTjF0iJ2y8
MGa+00DdxV16j1Zr2kqZ3ayj3LyOhk0Uumk20573vwUsYj8seUKqq6ubmppi
fQpQq3xvPHr0yNXVdenSpTt27PDw8PDz84uOjs7Nza0sDdj5ovkPTt1xWqyr
M3+hrY9vcmn2f/NA80tLQwNc11vqfvHjoXvnnxYUlz0avQGyC/NFocZxJ91/
ba8xhD36TbVR84pbhCmpyLfpoaq3uMuKX4c5PNDbH2tUxbJZfv4Gf8QPegNo
U743CgoKXr16FRcXl5ycnJ6eTkqjsLBQJBJVlgbsethw79+OLtl06NqdwOQs
Ehui/6riLUmO3FeJUXfunT3658274cllj0ZvgOxCb0CN+++k++cG2wO1F+0f
NGJ6u6atlN690dFAUVmuSUulbkOb6yzs/P3xEVXc6OB7gz/iB70BtPnU9bAF
paUPQ3zPHdl2Oiwpu9Ixk4KMjIeenrdCQh6WPRq9AbILvQG156eUSfZhuqu8
h0/f1HvY1Lbt+jSuMJVUWVW+dbdG5I+mb+qzynuE4yN9t6SKNzpwfgrQrzrn
w4aE3PL0jM7IKKzsAUUFr16Gux0NDAgJKXs0egNkF86jhzqwL8ZQ6DXcYGm3
bprNm7drqNRIvsE761eYll0ajZjefom75vYb48vvD0bewHgK0O9Te4M0RnRZ
b4RkZFRaE3GpcZddlv7k/VtIdNmj0Rsgu3AePdQBbldSu3uCNSe1jMy7d9Vs
Jq/YoHxyKCjJqbZQbNtTdfRX7P5gs3f06zdeXVlVgd2tVFmuUaNG69evx3gK
UKta56eEXws4/ovn9Rdh5Tf8KsotjfP399m5ZduqlZvOH7+SkFP2aPQGyC6s
h4U6cyjNeG+04caLY+Y5DdBZ0LnrkOaN1ZTKn/smJ9+gRYeGJDyYyq6hQ4fO
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
t1FeCsrCT11r8jLaFfJnSl7hDfwlZKC7pejVI/T2HrqX8+Gp9vu5f2W+gVde
I7sx8iPV+xiMGLAqaChlmpESsuFqrTyVyZ/5MnDeNlWfcrygN/uuFEbQIVUO
e+B/k2I++i7yS+a/pv/U9XKu1/Bq+7ET5rBCg3TmjZCmkaNnmGKMJSqHQ7Xs
7VRGqItpfphK8+FzRUeYHt4kz6CL4cc16aIjNik7R5h+ag5vmzPcw2mopXp/
XYG5ObSfJeYd08fK8WHITku+Ca2hDX0DL0wbnQeN/bGPgqmk4RZTq5gxHbky
NoXbZcPft0jpmPaT1ugzhDtolBd3bXpL3jjGLdPUdpkkZ7qCzjLa75mj3eo9
O/ZIFXPtTuVR+JwafT51Zrz+jtx0TH3mD33UhxEvltbAFyPF2ThsYYTpwt8k
OWz+g/XPUzH6SBbN6k95Q40+Cvgp9kcvo90hf6bkFUoPk5D+QWvqcfau0lEe
UTqWywaTT7XTz70N56fghSnNFf0+BRky0bTtKDCxQ1fGpqhJRDHb0XgmsWDR
zdDK4yg6q0VvxLJxbgVaMgONX4FiclBNoxfwXNBKfE7NFp053Re5TkIcPeLF
fH7dhHwuIx8btITz4cEP56lG/7uNAv9C0zSRIX6K0+RltCvkz5S8wqH4S5iE
nE6i8nvoVSzav/LDU+33c//KfIMTk0n32Ka5aLT0KPrA30O1/Ao6ck1skshY
08NuyhNnDp788+AltgpLZsrN/EXWYpvm0UzjyI++pRS7ganvab0/7NWsf1de
slph7iI5M80BZqPFLbapC7yLERhgsHWZ7JxZMnN+UVxiq7hkpvRki0ETfldx
jTEMbfy1F7B58TTnLarT6BLKXbv2kOylPU1qqYdOQLKBl6/u8nmyJhKiA/p0
6afZb9wiRccAvZByVmI5Nz6NGXhM+7fpg0y4ohrTB9sc0/ZNY3W4b+Cv1NDJ
SmXBuAHaij17D+jNmi+5cJ/qzgiTqHx2ZDj9gJ20npSYHl1s0mq5BauHOPpi
1WS2XSvaNvSNQ8WjdpzTXrRmEGeyhNEO5pKYsR25Mn6Eu2OOpNOXb1Mz+0Ha
dNkQ898VJ6yQ5c4e8tOe4XhBb3ovYtyRqhFbzun98quMiVZ3SY2BktP1ll8d
vefDC0btv4VlQ/eX3zV++l118u+qY+cMYo4SU52iM/U4dwf+PjQ8IfaNMc48
4+WbFMy53WWluvbs30/1J41px03/uG72x9Ghs+dL6Kp/16tnD0nDQSbrtH8J
G7Ulb8KR+2OPFLLtj2tMmz1QQX2g1gyNH4+xHfPHHuzY7yH/Z2rlJDdyurhs
/y5SWhLq8zRHbzNZzjN3uzvaM522aLWUlkp3pQkKxotVp2we+vMZrn1mG//c
8Q3ZIOTXat94eRcVX0C+69DSaegnF+QndN+oQv/LQqE7kfUkNG8lsl2PNqxG
VnPQrv3Egt78LsetUHTcClkMRSoaSHUGCs1EVQLP1hYQsnFsPdq1HjmsR7/P
QwvHIOY0tO0kKsbfh4+dsDQO/euIbM2QjhTqLY6YM9H2kyjxJko8gfb+giZo
oH49kYoRsvgDHeehWyXofzXof3fQ1ZNomyUy0ECjZiFHX5Rdip517PeQ/zMN
3IGWz0Q6/ZHGUMRdgFbvRKFxqKYK1WUhn9/RSFVkPBHNXoq2bEXu59DVnLa/
jK/MN7ipd7ipxaaervorZiq5JeuGdOia2NT1sP8+aLh8Wl8tW5lVAUap+ezU
i3qr5slr6Q9afl7r74/FJlIKzeIuGzq6q1tuG/Zv5nBieySV4bpEcZRaLzlV
8ZWhWqeKuVdKuUk5Rk6rh4zX6rNgv4pHCjc13+zdmWVVh/abdkjlYFpT03Lp
7vaaUwaLiKlL/LRD42w5I4F4kBUWa7SGLq2v2FNugpxLon64wFsSbpidddFY
u23QjGMG53PqnTa5hBWeSczb5X+ll28wLl4xjchhxBSwkorbuLNH4k2z827q
M7liUuqD1vO0z7x/nHM5nu7jqj6NqWTr1HD/J7mUm1DIis1mhGWY/pvJiCth
fyKG1e6+wV9bXc7prnGQm+w/YmWLthHaj/GeBWZuvsqTZivKcXUWpYzaUTVi
d4qeJbcvd5bqSN/R2wqaik2827twHjJSVVRxcFdR1UENfeO+mWui0ayxmvN3
0jdWTcAC4Bajv2ajlOJgWcYao9UVE/Y/+PglHczhbnSSYA8XlVCSGnPSzC73
/eM7gjQXze05WKKPzkKd+WkT9pQLvOuW6Y5gLebcYbM92buqJnjUM4Ex+2+N
2n9v/CH8ld4b63bL3DVnpGv+2H13xh2639aRrDzGdn+V4co99KerTjo/YVcJ
8eDhe2MP3jJds1t5quWgH0/U39vB34GK8YfKxuwrGOWaPtL19hi3igmeTXxb
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
SiwyAmQJM6Scgok5b6nVQmdrY5QU6M3TkbaeM9njpPGlpyhXdNjcvW0U7k3Q
lJ6g6a0QWmhe/9aqkT3+ilFeZ+C3zSAtv7/BpK6KdjGXuP6sHns9d1/ZsHkj
YrsGa57Ggfq+Yx1JHmk2L7pjUdlqWfPc8hKaHcP5Ltr78mWG8u308YambPgV
3aPVFodTteYJc6PwaYCFfSXeyOm2P1Cv7501k7bdIuoagzftYmc9c+dDh7RO
5y8EGx8RT0T8SQ1jVVkGr80BCcI0WrmWQFGVc+PxaAjVgLzBKyyLpMli62l9
2x1ma4ptRa4Ks/+ozbEXk5il43LYKotjsrDf02Ti7SZG1pOScdNfU2+f0oO9
2GnHKdO1oTqbW1m7eef5wTG3yyww39R9Bz35CRstHNKbqT4L5L+PNug71n9w
yUWSR2xjG+1SXzulP+NmxzTZ7XrqlP3BuS9fhjMi0gXDwxtu5x1i6qmbkoW5
UfpL2MJGwBu9f6LD5o3/+QH+1QSHDsLyKLhXzZd28agJHrVBz7s/mDF41QEv
zsB8Evjw2hzQ3915ATCLBBE8Hg2hGpA3eIVlkTyAunOwLhYKygZfWHMu7HQA
BXcIP8Yxj7AHf3gAh9zBXh/UZsG5JnjHJZZHBVC4Fa4/Q5xBfZP8Df7zAYrP
QnQsdL9ERn58CMcXwR7eYx19zYc2aLsP79/Dj6+42TEP4Hk7/ONnnnwZ7sgQ
eSOiFB43wZU0YW4UAQlZGM4bSJxDg2XiMu2d0QrbT2nOZ/IkYmiJGViJeWRr
HGj8oryBeiJIrp6TMCq4wx1vqKadilNWJcnzejRECfUTRfuq22rIhZWRz7zi
8obrBOXFRF6SGRJvdFldqTYPc1GgOX9nEKFzroWKDL6wuVtq4L9wxndi474z
k16eqVfxll7/FkmTKT+r5pern1bV3ztTkk/L3kZMrNNjr2egYx1JHlkvbb5Y
ISCNfOw82QPNjkG/C80D1/ryZYby7fTxBkk2/IzquhA2bBBChblRxjBvHHhp
m5ynvGI/2WaPmae3DG/ahYKptMJaQ49BjuNRVbNZTDpRhUCg8sZU/OiY+948
YLOiJWGaDY9HY/i8gWWR7DGw9aX4X7dNGByoXFKK9db4ScqoqlhGmWPhH7kf
bVLqDObOnKQ6SUxCV3nOBdvIDlcsjGTjKdP5oWbxrY58MahdrNzrOoFnTN0L
nJI7XIQf6132uUjyCFGLpbr4Et0ng5sdM0eNkkTb9dSmL18GGaGzkWNovKHK
yqEuWyk9P0SYG2XM88a/uuDtScjLAf9M2O/Dl3ahawa662Bf+RfkjYfwOAuM
lWEZb0wFigfnQ2GFMgTweDSGzxtYFsleWLcGzt+CjreDL+xdOZxbC2okWLGT
E/7BHnx7F3ZRwHwSKOjBzlJo5jpEKgtg91Z4+Yw/BvUD/OcWFBdB9Hno7h7g
WEdfk7kRrB0gtRKOZ3GzY+bC7FQEMPryZbgjQ+SNoCNwwBcSwoS5UXDeGJLa
GeXXDX29daJ2qeee1p5nrsiyknD3JawIYp8XxMBoYkI5pbD1i/IGhwo8vyMF
a/J6Pe7W0goSiCQleVFUwCPML7NlkxLLU/NAg8k17PBN11o8S1zSZLrnQa1D
XPcH4k/xnq6oLTUnWj3/La1W+ITW1fcYOZtITiwxRReF2MqZZe3WNS2M/Gjd
zV6ydKdpU9SknMKIOW206i42wNBOJBO3X9Y70n/r6EeOmmwP1jpxDz3EBY71
Oy+ZN66axGxUZehOnEKYpOc6w3M7KSBEzWOOop3JeANXCcfVqmu2q6/HRizG
G6yQDz6DuJAGIgcub0ydIiFOnydBMZTSUZcKKh4sC2k0eaO32fdwecMps9Vq
SwhxZabekksWK7wlbWZLay1VddiowZ7QPZLsftgy5I79sGYelhpNd6aoKCip
mG8xDf3omskZd8z9SA3comClJG6VYhXYOCLeyHpIjztLXrJZgcKUUSAr0lZT
VhULzU/hf1ejybZkRS0lSQNP3cXVjqlvXLIemsecIbn5KRmQp6srSVGT6YGN
Trnv7HNbKIgRY59t8nM+jMl+ztq9T3N9vunKFtc974Qd6912GbUm/gGyFPKU
idOnqi9Qsw3WWhxOmuMppWUrI25JsPHXmr+td0ReehbZ9wYrSYR3icsbqmQJ
VVdFsvoEgyVqdicdEztEB6aOGm9ISkouXbp05PkpvzyD6jA4lg3pl+HISgiY
C8xlELwZ2BNG7YCoY1DV/AV54z48SgddAniEQ/Vn+Mxzqzgc/Ajglw7F90fE
G7+2wbPzkB4K7rZAJoP3WjhRNmB+St+77kPDHmASwMUL0uoQRw97nseFELEW
3HTBkgCee9CFock1xecg+gB0d/Zf2KsDUHoOjj7mHOL9j/Ue+KkBCteDuy5M
mY7kwqzbAqnbIcYLmCyQoYN/ICRE9o2ousOpGugS4YXh8oaZLpKKwtIANw8I
LIDXbwb5FnDeEHYo36cXFmg6rdPcEE0+mqm1crFaaILG8Xu0mgGs9GilLNrl
odWGQvNBGFebqRfrLYSJWt5KE5xnIN64U007FaOsqig3RN6ofWiVH6+9KUbO
I8/4EpYhgmajhKxUVFGfqLFMbs0+SkGVSUGVWfou/VXOk6StpJbu0eUYKISJ
E27qLElQEf/+oMbBJsbV22YRnuTYMOWYDIIGQZq2TDrsptmVDqszRy0Sg0nZ
9/iTfZDYVNO0I7p+YTPL71sIPdbRj9Bbu0BKXnLC+G+/naIz2ThA7WCT6ckT
ZhHzxOUl+EeWisvTpRenkAeKOeHhjSnjJkyQJk6QkvpOSUlsXgIptVrkNzia
vMH+E8WC8YbJGz2stDsWnvPVPXaQfa8YLt+ktDBR3+M6K60LO5L6F8gSUuFq
wJmdDnTZpz2wTWy2SRDQ7vt2SU+dMgVrTAnlDY59Q4GmJM4YMW9kVHMqe8ip
fCclNXHcuBmG643WtbtkDBS/ganDKvGith3lOy07FaMk69injkllM0MSFOef
NXZaqcRUnazhZ+xRzMruYO0r0Fx/xnThddfULt4ZnPe22gSFagWeMtv60XWf
0GO9wyqpVMeZOVVl+rcTx4+bLDfDPNQ48C4r45L23MUSAiPy0iRFlwKbrS8G
XjOXN2SnTZiiIDZd8hs5a0XKDuqWOw4iq3uNGm9g/drYyDGi/JRP0NMM+xfC
vlg4dQMObobkFNh3Cz58EPLiPmP+PXj2BD5/gF964OcP8NvfhM/87w/w4Ql0
PoR2AXW0wpsO5O1D4g2ufcObAL4j5o3eyh7aRFCRggnjYE4QXHwDP4tOD+mG
zksQaATW9jAvDZ50wJsrcCMJEi7AFl9YQwLLtYgh6B/d8F/noaQIkm7BO/49
/PQMyrdCSQHUfYb/Enqsd0NXBYTagNF0EBsPEnJImm1xC/x8GWKXChkhqkF4
EdQJhIgI8obmNJBSBCVJ0LIB9zi4eW+Q6l44bwjRjUrqoVgF1ipZSyt5FxOx
OZGqiZVs2BjoJMIqZalvHlptKPT0pERuUnaeJ+c8b4aAFH3TNFLv0frNMxBv
IPEbQXLKstJD4w3G5QaTzct0IpM0j7XRarAMETQb5fxxo63LpFTUJ8soT8bc
RgTFSdKK34xznrHqMKX+LaNRFD6Z7PIn2cpOsgxRjjlnVnFVN2CnQUq+YWGZ
3hKNGdYOU+blUkqemGYepawP1rt4jz/ZB6GdmWn7VP1SjMofWQo91tGPoBfm
GYYvYSOHBGOV4q4m08udVpUXLFL8ZAgy/CMbZAhMuaHxxjRpovSqI8rLvYj0
8WzkmOK6ReQ3OJq8UVdXh/0zHyZvdDB2l+tZzyZRWTJWi6YrLtOZk0dnw8aB
H7AX9C+QJaTC1cAHdNpVfY+1ynYLFC0ERPdSdUmihwjWmBLKG5z4jRl6SuK0
EfNGb+XSsIOanp7ibOSQc1W3O8lKbBf5q7/HKaOZtm7tFBMnWSUvo+D71pvP
mK7aqhfSZBuUrb5o1ncz7LUcsxm7nrC27tDckG8a1OW69wfeGWxTW80Whuqt
OkXbxbGlCBzrbEJ7yWQjx/wFkiQ5MUqI2crLDhmv7Q/enbnMR1pghKBNUnQf
Gm/oOarQdposXCJmaDR+qp40GzlEVvcaZd6QlJQcUX5KN7y6CqvnwnJ78P0e
9L2QehFs2Pi3MIToM+Zbg8s6qL4J1fVQfAtBDqEzf7gJ+9ZB4CLwENCKFRCe
BjcEa30I5Q1u/IYTAbxHzBu9lUtrD8N+LwQ5tGYhv/o7Rf/q/wQ/P4SLAbDQ
BQxWwLVWqCqEExFw4wFU5CLbou4AIblIoc66WCg7C+Uf4BP/Hr57Bklb4UQB
vPgM/xB6rH9CfFts5IhfDGZyMDsMqenx83v4rQWyfYWMMNUgemi84eQM3rsg
2RPmGIOsPoIcoqt74bwhKKuiPOOIxRJ6rhKWLNlFrtOMQkhbS6gDVqZqZZSf
0/dzUpq7ZoZvkUn5cyvR8ze0M29cNTuUpxeRoh2RoiUgcupFSn4bo1+NKSSL
JEZ9joc40Uf98F3TXu8GEmURJEvQnSHS68F5rrJKi+xU7a2puvsreTJWsPmb
6OfP6IZEqvkFE/2CiH6+8laGEgS5SSZhKjFXLNjvFflQ9COJBitNJ2nOl/WJ
0jt2nLThuP7+GstrdRY7ZimxWN8Zr9M6VqKTcEzLL92knD/Z506bzY08/T05
KpuLzC5jWzfAsS4YTyJ8hLMbGiJ2gz8/RXvPOaNILyWa1DRDQzZykISXOBtl
3hhh/AbiJkgnaBnJa9vLUlfJq9M056XSeJwLvUW0lM3JkkZOCpZbNFy2aLiv
JzivVDRdTPEQXikLVbdd5n1qyGGKX7qBt4BWZhsFFNvGCtaYemQRl6Omo6Jg
ud4wsMN1L2ZzeOeQ20Lx9lPQVZFm5TCDH42IN/qe/SEt+jCJYTpRew7RIssu
4cUgURzZz9kzK9jNlpW0IHkWGi07bLY4nhrX5phUob9hk+QMPUXzbTP96+ge
mw3Wn6L135ZuRnKjoXus6erzzAw28wx0rHOeVEa7l6wGHFEgD7obPPGiLmfs
t+brLQ+QYiOHnLUiNdKYjRwDWDlGjTewel/r1q0bSX4K4ibIBKYJ2DjA8tVA
t4T4DCHOhb93IbCRtRX8V8H2EIiKhOhISFgHMUmIF+aD0IDSHvilFW4cg/xM
yBVQXg6cL4engjWmnsLTI2BHBO+NUIymkyCD7CPvCeSuAXsiEodw7emIeKPv
2dug5RisMgObeeCRA+2doqblzHwQAueCMhUpkJV9HFIT4Vk7vLkGZSGgoQ8e
kXD+LuwLhdICJFKUbw97oPs+RMfDmVIkn/e3gY517pPaEMArneugGWBk8N3g
id/YyiaTs5ATiCCHlg0s24Egx0BWDpw3+IWV+UrU96BOJc+S8tygsnOnEnGx
mu8Bg5q3dKHxAHXV9OIs8qYtik5Bck7xMwsf0gapBIV8hHVdO1LbSqhqOxn1
7B/1/O+qf2JTkauz3FNGzZWYxlNEq6LQPDFAmuSisHyvngivR8NrZs1Di5xU
g61+pMy7lBKO0cCqtp0uGCGJ1ejYspJAN5HdfI48lFrupfnmO5ZPVTCdTp+j
HL5TKeKq/ok2Zk2LzfEItVnOk+TpCuHRhK15qpsraJdf8nPUI+bZFP3046qJ
vSadEfLGoDGuQupvYBYqNnKIdKyMHd5wSSnWD1grpWoobxCg4Zaty9IkLAgx
Evhtzj6ALH0WaPikc20OyEGmY0FSdeaLsug/ec4PzlldTpmvHYXJKfOtS7ag
C6ODsfuCjrWuNHN1XxEtLIPGw1dZR1d5IScscxR4I/ejY/o989VLxWx9VOm5
rN0vByu3hQZ8zl8qJyMnaR1CckgznZvHSmG/q8U8JktFTVmSvEDFKY/C2ma+
4Xz/CNuDj2mJFfpzD1htqOo1LIyQN3hGhsAbWP2N3cV6fn5iaqqiHSujxhuj
0j/lXTlcWAfmRuC2HiJyIUgLksIEfpt/hPcNkLoAVq+FTZj3n2v59/aF6FLo
HiDe8v//Df7+AT6/E6b38PlHYRWuuuFVKazWgzX+fUW0sAyafavBVg8SecIy
R8gbbH18BKc9YZ0frMiDDhGGAkxoMGfCMlCTA78wCN6LlgfvQgI2nhwEqgqw
FsOWE7AhEspK+r/3txfQeQ3iDiEVPkUd67+HN/pGhsAbWD5sZznkrwEaaRDH
Cs4b/MLKfEVpOc8ixpzXL7hpdvqQFlOP6L2NNFCmZEkZPTeVfPicmt9WEmuZ
1qEGk0EqQSEfQS25ZphzXrjyG00q3jL6kUNjh039TcPQFUSqgVJMXxEtxom9
lA0uU0wDlPrSToWp5qHN8Xjd+D2K0WXGl14g1cVRt45p/lX942/p/M/FqUH6
vae4QxT5ZJPFUKp511XRjkYrqaqKT9EQo3gqp9w2rOhiNjy1qTmpu2KO5Hgp
NnLIeKVr57+0rH3D/1n3LRPDDNKPap/ttKzt/lq8gUXgGEWKdqyMEd7A0jzJ
ngvkZ2VTA2qtY26ZLHOdNitIWyD2YHi84ZjVZRNxnRZaShWiSnpok9NuQXLo
YaXVG3u6iTsH9hXRwjJoHL2UFdz013LSTkeFN1wyHzGCN06ZF6Hhct4lqXOw
HUMTWtdsVNAfP4GNHIYbZnrXu+zpZgOAVeJVHXtNMdXp4gp0NnJYhz3sbyrJ
qDKLPqC9rMI27HHv+f4VeCO70z6pyoSNHCIdK6PGG6PSP6U5B/YvgshcON8A
j+vhgBtEBgvEHjyGthNg7QaBydDwBq1TwbX8HzsM0XnQPcBJzYaNpltQfVmY
qqD6gbAKV5+gpwn2z4LQoL4iWlgGTcgK0J0FhTxppyPnjV+ewrVgiN8B4aXw
ZtAsFTRZtWAzuIxHkGPuRjjUBD/8gADA6xuwUQvMpoMuA0GOGgG7zacaeHAI
sq9BzYuvyRv/fAddtxDkEO1YwXmDT5z0jSiCwybdk83mte1W5WVGvjTCiiCZ
yFqLi7VmRbWU/EZGbd9JRM8vMUtOo5TWGcTH6XrMJuy6rF80eJqDeVGpQfoJ
4cqrNSxFG47wvQvthJK1U8+LJeV1CC2i9Yp5t8EkJkidaTJ96UHeslr9de2W
5aFUzSU20jZOYja+SsvRLJtVwcSlQRoxBfolb+l1fR9BPXFi5qZ1RPs58h6R
hMSrZtdfDuIe4qiVfvGENktVkqj/nfEmraPsrUPIinm3kb1CkonGRMIcWawi
Ga8T524743KN4eZogz0FPLe+Bm+g40gTGVGOlbHBG1iZr91kh7kaq2/YxXU7
ZbbSt4RIOQapm+xlxjczYxuZIdW2mW+cuQeQnNOiXn+Khru/tmuI0WpRmR0O
ma+tQ0vNN5wxFaLz1A23HeOExB44ZbUxomPl3TZocIto2WfcNw/wkmQuIbFH
ItoG6UWS1caMjpdmzFcYnDe67VJrTBf7KC1MpAS0uGYMfrCiBbtSiU5646cq
y5tvM9nS4ZqJwI99RguyQkMDKSlLDc/+FcmQPixx5003xOpuaLTnufUVeCOX
21pFpGNl9P0pWArV7+YNrIxVMgTPh9O1SBGtz2iiyuZgWLgfXj6Ep/eR+Ipf
euDXOqhNBe0lsOVIny8Aezv7NVV1wsI+UX1+h6BFWZEwlUJZIzwTBiq/tkNL
AkRs6iui9XMrXFiB1DOfFw/NLwfpRcJ++4NEWLVwCLzRA+/vQKovJKfChcfw
89AO1tsZsEUf5FQQ70l1N/yCws/Pj+HiSphDARU67L8hpCLZM/bzxkPZfb5b
X543/sNtrSLasYLzBp/QMl9aQdEy83KNSp4wuIU4lL1XiS1ImbnniG56gXpq
Ba0KcwogkZZmR0pn7sw1v/aEejLTaOtCmYCTmgfvi+xBhto3SkXYNxqE2Dcw
lRaaJwVLuWxW2niAUlBmWpChvfJ7BQNH5bjbiIsE6zxy/R7t4i2zi2i3d6x5
fU6i/irmJGlx4L2+mQ5TFssH5ps0dlnVt9ErGswLrpgVnNHb5EMwmzlN01c5
9NxAZcyFCmubojRnwbRFeYY8vVEYJzMpm9zF7aNVYir7V1y/c59eWqztn2mQ
wXtL8FhHI1qLjhth8aJ0L8XYW8bFLdR8bgSpkBFuBKmAbwvpR3/xonn2VlVn
M3FpotSqIxr7uP3o775iXCoz8NCQIcE3EkqT5yQQY4tNz94yvYBu5ijxBmas
ZsPG8OJFMSfF8h26pl7GYfeRIuEcM0KQqtIKg02nTdaeNv/+JD21HatMZe6z
YJrZzEnS2uLy2uIKpBmaVI25py1DnzgM3GJjWPaNj5waFEu2aWos0fU+Twur
Nd1yWsuFKumwRs/jumsaYngR2nSek0oTe9FklY+YgZWklIOO51l6dO8K3zlm
v7Tb1WDdl2Vz1TTkmJ7NKsryvP5dTkRo93kdX/+pxNk6bjy9UbCtc/EnEb2M
N9/nr7j+o3Pue2ZYvtmy7cbRj3lvCR7rzgde26RdIi9ciMWLmniX2iaxH7NY
Z/6AI2gEqcBXwOlHX2W4MUV5JmGCjoOKTTYz5Bbaj/6jS85Hpx2H1RfawnRx
mGauODPCfGM5Y2dD72aOcv0NNm9g/yp+L29gToqDcbBoBdS2IiDBMSMEg4EP
XD4H5wphTwG8fwM9V+BiBKivhqiC3/cRg9o3Xgn1jKBui4wosPKAQyVQ2wA3
CyHcEoID+hJnBmo6/0s7tJXBCV9wswYVR9h/AVpecJuAfIR/dMFz3mpmN+H6
KQjwg5wT/buciFBnKZwKBNO5sJ2nNwq2deGBYLICrrfyV1xHk2tqzkJ2FDx4
wXdL8Fj/93v4UAlJ3HjRQ5Xw5il0lPVFkAqOIBGkAl1OOP3oa6BiD7gRwNYJ
/HOhqh7tR4/WV390DJLtQGkqyFHBbQdUXEFzjribifMGrzC6UN8UOQNN4bTm
EojmEkdxJWOZBSkae26YVr20asCcAkhuhcmRS7o7b1pe67CuLDTfGzbDLUFd
8GDl06DxG6+ExG9wfpg/Z5SUG4YuUWIZTyZpiJEIku7r2bBhUvYKtYegPVYS
w9SdqRLOSLd3alUTNTWANMuQDRvfjPuGjzemKAA1UiWhig0bzIo8vQBPaZKm
OIk01d5HLvjszMP11MvPhg4bKKohbVMM9uSpp7RReXujVBZa5EQrbSoiC2LY
jUrL05mq4cX6h3hvCR7raMbu5pWK8pITkXxYqUlkqmJQtOKc3gxZwRFuhqyA
bwvpR79UfTpZbuI0sW/HTRgnTZxI4fajv9tgeS5DzYAwdSLAt+PZyDFBUV1M
hypmi2ymJWJQGgXewIzV7H/pw8uHxY7IRbE65knMuKfOB3vDJNbIkYgSJisM
luRbRbU7ZfVglaloPguISyP1fGqttrFP6jMzN2xT1qQqWkYYD9xiY1jxGx85
NTZ3Fep5+0trmE6V0xYjUiUttpn6ltuzYQNNnBHadJ6TSsNSFyNIfzNZ/Ntx
UydLqckyelfYQt11iERhTu/LsrFUIq+i+FbY7HrZv8uJCGU/Mk8o1VmUywzi
6Y2CbZ1frhEriRmPbmbfW5DkGuMNp83mpjMTn/HeEjzWbdMaKR4sCfL0cRPH
fzNZTkxvqYpLjA7dbKqK8BFuhqzAV8DpR+82WZYwYdKE//fd1AnimlJyrmg/
+o/sZdM3RirRxGHKt/Ct2PhJ8mKyGlMUrHo3c6zwBnZEpibA0jR42oGcMpww
CX8wV4UFPpBxFlrewK+foL0QDq0G4srfzRvDid/4zHFbPL8IhwLByhy0dcDU
Ejyj4NTVvsSZgZrOV6XABg2YKQ0S4jBhKqiow6pobhOQx/D8KMy24almxgCW
H+Rfgxdd/buciNA/n0J7BSTnQQVPbxRs6/LzICgNXnbwd5RDk2vKCiFuH3S+
4rsleKx/uA/7HMBekpP96uQJ4fGwwhyMBx5BMmQFupxw+tG7gwYBpk0A8akg
owVabmjACcpIlTvAeypIfQvjxWCaAmhoojlH3M3EeYOPN2qfMPJzDY9c7OtC
jqaTmGTs1QqM1kooNyxs7XNb1LXalKSTN2+UsfFVXh5E9FqqNMtejLRIeCuT
URK2QoOYaMQn4hesmcjt9o7c5TpEIiLVIk4bnGii1z6h87yYT71Vy7gPqOkX
rOo3gg7s6DxIr5aSt1a8zqDaJkZlJeXkfTOBpA+rogKL9Gj19BpKkWi3BeKX
MTuQS/YLJqGLJ22IJGedJsdw1ixsJFptc+7MoidUgRQVpB99QrB6IM9WbOT2
o7/byrhSQQnbocm7Uf6RxHBkMxmjxBv9gv9/L28cfOOQUW0cVknzv8k1p2O9
1M9QvCPJ3octw+7Y82RS9IvfYOwu1LG2mGaJdTkR2dBkeMp6SN9VpL9kpxb7
uebH6q25inZ759x1ymq3iT6quyqdsiTPKo7T7R1LpTFew379FrRY2Rb2e/VX
naFzeqO8YKZdM/KI03bn3NVwj+V9+5DVbZf1zCq62SmJ1xmEbh3igbrp2K+o
yMFO+4xS3fWnTZeUOqZ2inZb2Gc+o4ckkZdxV7gsmxJQZL5yp85i4SP8D8gL
RVg/+lSNvofdpuOejPaj/8hmnn4b1W83Rpk3ht0/5bcepBJF7XXEnP4TZk7H
eqkXQe4OyD0Gtc0c78nHa1AWARoL+f0pf7B+bYPnJZARh3BUQgIU3ES7vffe
7YKWk3A8E9JPwDOebu9Py6CA/fpwtFgZquNF3N4or6GnGvYl9N2Kiu//9iGp
B37tgJaH0MXrDBrYu/TbO/hUCaWFkF7ZP5FH8Fj/pQNpcXuAu8IDuXC+BPLi
IHXgkb4H5IUirB99Bs/DRkLUHrQfPfoNCm4U727gvDF83bxvtT9M/Xv7yb2l
zok6k2cYyXgmavZFP+ISKjQP6NBR4/Aw8un7/BG2XN6wm6u275ZhZZf1QNae
L6ouZuNzZn2t4bataqMRv9Hb7Htk/ehFS4A3eqM61wu0RsXFJ5f9z2x3pmtv
OG3m398KwTnWF0Xoe911Ye/hQdEFx77Ugg/2sFLumHvNl180ZuqZD67H8OQY
UFmwJp4bL/qZY4X46Q10vYF/jXoj9T+R/vsVPN6H2DcKn8NP/FYI7FhPjobc
FiQy9rexsY3sZbxthtyFkILzxu8X4/ojk10plPRDWEFO9seZHDpNWedGXB+l
kHjPYtDCX39poXlAGcfJ/inGpY9ofEGkHN5Qs55FiLtIPtlGq3hrPVCe75dT
Gxs2LCvOkzduILDmqY2YN3qbfX9R3ujNWl3Tl7WKS5gcMx5b+W/X35BP2/ne
dT9flAWHN2ZtIrtfYkXcdckQmef7RYSkLGV0MCLKDd1ny876P8QbH+F1NWyc
CQvmcfNhP3OiLAoLILQAQY6vfkqOWf30AgqjkApgj3+C/+aPssB4IzIECeZs
boFPo96PflhiL6P5KkTPhSicN36HOG4Lg00BSvbOhHVJ2vltlrVdaNeVMkNf
qqK9lZh9kNKmU6gRXkQgx19Z6B4W1pgcuEq72S8FBs3EOXTGMDSBvL+Skt9K
LX1rPVCl0C+nVuu6amppOSUtm7w91fDCI0FPzVDE2z9leP6UoWnAel+OK+R1
nTVnp9FEdXLH9dEpq5MVXcyIu2PHdU7x3HpuE73XYP0h09XX7KLuOO8RUSn0
C4n9ddvteWEVdcNiTYre+qIRfblflDe4dv4dXrAYzVRFzO/bISoOUo/zuGNw
CdOv76ClHClnKuiK+rUTWrKg9CgUVENLM3wctADIFxF7GS01cDYdSkuEeGp+
l/5KvIGGZSaFq9tqSehoScwL49ZqaOvrUooFGSZeFRk4imtg3WhjljZaljZS
S8eOfaPRsoK9nkZaxT3r+mEar76UPwUNwkxSE6xnrkKbYRyLxH587SPy/7Le
u+Q+ZmW02O1uYe1uGTv2DfZ6EGV0jOjL/cK8gYmNHBt1gMrTOjZzCJ3ccQ0o
NJT00xPoRDV27BujtZ6/Em+gaadV92kXqszOVpmV3OPWouyyrn9OL6u1KKri
JFFef4nDxjDV0MWse2WNaOzEb7yyrkeXxIaNxmEG53wpfwqaZPpMWL+2O8z4
NieRbb9wDaYfEeQ4+M45+51L9ruxE7/BXg+igz0j+nK/Cm/80gGvG+AJlkza
BI/a4MMQOrnjGlBoquxvH+GfqMZO/MZoreevxBu4cA1TX8qfggvXMDWK/ehx
4fqDhPMGLlyDarT6teHC9Qept555ZGQkzhu4xqZw3sCFa1DhvIFrjKu3X9vt
27dx3sA1NoXzBi5cgwrnDVxjXF8lfgMXrt8lnDdw4RpUvf1Tept947yBa0wJ
5w1cY184b+DCNah6+6f0NvvGeQPXmBLOG7jGvnDewIVrULF5A+uBZWZmhjX7
xnkD15gSb/+UYfajx4XrDxbOG7hwDaqR94fFhesPVS9vsP+LYn+iOG/gGmvC
eQMXrkHVG7/B/n/+x/drw4Xrd6uXN+rq6rA/UZw3cI01jTXeGD9dSmGBl5A+
7LhwfT1JGFOxYkrr1q3DjNVallLuvO3FceH6qmL/Qfb7E2UyeHqL48I1BhTg
BzNkxgpv7Nu3Txe/8Au/8Au/8Au//qRXZmbm12YN5Orp6XmEX/iFX/iFX/iF
X3/S68OHD1+bNfALv/ALv/ALv/DrL3H9L8NWLeA=
    "], {{0, 531}, {720, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{455., Automatic},
  ImageSizeRaw->{720, 531},
  PlotRange->{{0, 720}, {0, 531}}]], "DetailNotes",
 CellChangeTimes->{3.743431319118385*^9, 3.749931306886094*^9, 
  3.749931988647188*^9},
 CellID->31466940,ExpressionUUID->"9c116cc9-baea-4532-8cb9-bc69bfdfa756"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection",ExpressionUUID->"6f56c2f8-382e-4f83-ab56-083d0919ce61"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Resize Images",ExpressionUUID->"ecaa1bb4-6341-44f0-ab9a-fcc10c1e9510"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{{3.7404062581333103`*^9, 3.7404062582678857`*^9}},
 FontFamily->"Verdana",
 CellTags->
  "ResizeImages",ExpressionUUID->"54e21532-af29-498c-af6b-21701475d32a"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Rotate and Zoom in 3D",ExpressionUUID->
    "64e8170e-2d30-429c-a3c7-43667350662f"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "RotateAndZoomIn3D",ExpressionUUID->"5d20c528-c794-4202-917c-c178dff5eadb"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Drag Locators",ExpressionUUID->"0a4b40ed-7aee-4c31-9129-f2cc4c1ce653"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "DragLocators",ExpressionUUID->"1ad83a93-6374-4cd3-943b-a25e2ac455e1"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Create and Delete Locators",ExpressionUUID->
    "bc67a67e-cb40-40d8-a1e7-a37e54fc58e9"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "CreateAndDeleteLocators",ExpressionUUID->"6df94e7e-d230-4cd7-8b5d-\
839062a393ee"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Slider Zoom",ExpressionUUID->"688856f2-6be4-4624-a747-fdfca2ca8392"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{{3.740406259636371*^9, 3.7404062597990913`*^9}},
 FontFamily->"Verdana",
 CellTags->
  "SliderZoom",ExpressionUUID->"eaac6def-e234-4836-a5d3-95c32330838d"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Gamepad Controls",ExpressionUUID->
    "9a919dcc-1512-4f6c-b81e-d7be4dff3f01"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{
  3.35696210375764*^9, 3.3895522232313623`*^9, {3.740406260162279*^9, 
   3.7404062603052197`*^9}},
 FontFamily->"Verdana",
 CellTags->
  "GamepadControls",ExpressionUUID->"f55c4529-b160-4743-8344-b29964421295"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[
   " Automatic Animation",ExpressionUUID->
    "5b8dc658-d5c7-4a87-adad-e6b817e18cd3"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{{3.7404062606849422`*^9, 3.7404062608170166`*^9}},
 FontFamily->"Verdana",
 CellTags->
  "AutomaticAnimation",ExpressionUUID->"f72b3486-239c-4641-bbc1-8f6133a578e2"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[
   " Bookmark Animation",ExpressionUUID->
    "7d229cf2-b9c7-402d-a957-0ade2fdb75e0"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->
  "BookmarkAnimation",ExpressionUUID->"27feda0b-c24a-40c5-aa6a-45a2a3d05a06"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection",ExpressionUUID->"726e69d9-34da-4b10-bd4a-89311e28c67a"],

Cell["chemical engineering", "SearchTerms",
 CellChangeTimes->{{3.6820102128918657`*^9, 3.6820102181383104`*^9}},
 CellID->407895636,ExpressionUUID->"500bd29c-adf2-4e5b-aa52-4619a8ca1dfc"],

Cell["heat transfer", "SearchTerms",
 CellChangeTimes->{{3.6820102128918657`*^9, 3.6820102264661164`*^9}},
 CellID->604770507,ExpressionUUID->"d6a1c786-425a-49d3-8bc7-e8a71fe2d643"],

Cell["mechanical engineering", "SearchTerms",
 CellChangeTimes->{{3.6820102128918657`*^9, 3.6820102335951033`*^9}},
 CellID->65112033,ExpressionUUID->"e3fa0d06-b729-4cd8-b06f-a3b32e8d0586"],

Cell["conduction", "SearchTerms",
 CellChangeTimes->{{3.6820102128918657`*^9, 3.682010233593059*^9}, {
  3.6827075212708783`*^9, 3.6827075354121504`*^9}},
 CellID->576187380,ExpressionUUID->"ef72cac4-3893-445a-98d2-fdd67769fd44"],

Cell["heat generation", "SearchTerms",
 CellChangeTimes->{{3.6820102128918657`*^9, 3.682010233593059*^9}, {
  3.6827075212708783`*^9, 3.682707540633961*^9}, {3.6838461890271425`*^9, 
  3.683846189029651*^9}},
 CellID->97068303,ExpressionUUID->"bcd5f7bf-ea2c-4a63-9572-1c77df45df14"],

Cell["contact resistance", "SearchTerms",
 CellChangeTimes->{{3.6820102128918657`*^9, 3.682010233593059*^9}, {
  3.6827075212708783`*^9, 3.682707540633961*^9}, {3.6838461890271425`*^9, 
  3.6838461937320423`*^9}},
 CellID->105785804,ExpressionUUID->"5fbdc7e0-f35f-4793-ad33-d57c13b20440"],

Cell["walls in series", "SearchTerms",
 CellChangeTimes->{{3.6841635879761953`*^9, 3.684163590452815*^9}, {
  3.744922831588335*^9, 3.744922831588335*^9}},
 CellID->70527562,ExpressionUUID->"f448615e-d6d6-45a1-88b1-e664af7a2452"],

Cell["materials", "SearchTerms",
 CellChangeTimes->{{3.6841635879761953`*^9, 3.684163590452815*^9}, {
  3.7449228327012424`*^9, 3.744922834156869*^9}},
 CellID->25581944,ExpressionUUID->"03449f6a-11a5-407a-93c1-be4f3af5dbb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection",ExpressionUUID->"7b3e81a4-8dd4-4cc7-bf7b-045fbfae9fd7"],

Cell[TextData[ButtonBox["Heat Generation and Conduction through Composite \
Walls",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/\
HeatGenerationAndConductionThroughCompositeWalls/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/\
HeatGenerationAndConductionThroughCompositeWalls/"]], "RelatedLinks",
 CellChangeTimes->{{3.740406350362519*^9, 3.7404063707245226`*^9}},
 CellID->302227728,ExpressionUUID->"637d26da-e2b7-4a08-a444-cf1bf7d1c50f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection",ExpressionUUID->"c1aa408b-8df8-4eee-b96a-4bfbd7f01159"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Rachael L. Baumann and Neil Hendren",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Rachael+L.+\
Baumann"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Rachael+L.+Baumann"]
}], "Author",
 CellChangeTimes->{{3.7487787740702033`*^9, 3.74877877842627*^9}},
 CellID->52184429,ExpressionUUID->"237e6bb5-4caf-4fa2-b761-600be6de5fa3"],

Cell[TextData[{
 "Additional contributions by: ",
 ButtonBox["John L. Falconer",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=John+L.+\
Falconer"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=John+L.+Falconer"]
}], "Author",
 CellChangeTimes->{{3.730127829878193*^9, 3.7301278795860357`*^9}, {
  3.7371221284978175`*^9, 3.7371221350049314`*^9}, {3.7372965430825043`*^9, 
  3.7372965441027994`*^9}, {3.7398900355463524`*^9, 3.739890035916686*^9}},
 CellID->373235529,ExpressionUUID->"dc8f07e2-9950-40a3-afc9-b3cee9dd1777"],

Cell["\<\
(University of Colorado Boulder, Department of Chemical and Biological \
Engineering)\
\>", "Author",
 CellID->77347031,ExpressionUUID->"4c5c5c55-2b35-4e51-9888-c473a056c306"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1278, 1021},
WindowMargins->{{343, Automatic}, {Automatic, 80}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[651440, 12233, 498, 11, 22, "ControlSuggestions",ExpressionUUID->"54e21532-af29-498c-af6b-21701475d32a",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[651941, 12246, 800, 19, 22, "ControlSuggestions",ExpressionUUID->"5d20c528-c794-4202-917c-c178dff5eadb",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[652744, 12267, 457, 13, 22, "ControlSuggestions",ExpressionUUID->"1ad83a93-6374-4cd3-943b-a25e2ac455e1",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[653204, 12282, 761, 19, 22, "ControlSuggestions",ExpressionUUID->"6df94e7e-d230-4cd7-8b5d-839062a393ee",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[653968, 12303, 1028, 24, 22, "ControlSuggestions",ExpressionUUID->"eaac6def-e234-4836-a5d3-95c32330838d",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[654999, 12329, 545, 14, 22, "ControlSuggestions",ExpressionUUID->"f55c4529-b160-4743-8344-b29964421295",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[655547, 12345, 1655, 35, 22, "ControlSuggestions",ExpressionUUID->"f72b3486-239c-4641-bbc1-8f6133a578e2",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[657205, 12382, 1030, 24, 22, "ControlSuggestions",ExpressionUUID->"27feda0b-c24a-40c5-aa6a-45a2a3d05a06",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 662604, 12521},
 {"RotateAndZoomIn3D", 662771, 12524},
 {"DragLocators", 662938, 12527},
 {"CreateAndDeleteLocators", 663111, 12530},
 {"SliderZoom", 663282, 12533},
 {"GamepadControls", 663446, 12536},
 {"AutomaticAnimation", 663617, 12539},
 {"BookmarkAnimation", 663791, 12542}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 320, 8, 104, "DemoTitle",ExpressionUUID->"94eb3805-c037-44a8-a460-3e1728052e61"],
Cell[903, 32, 88, 0, 275, "InitializationSection",ExpressionUUID->"bccee37e-7439-4545-9aee-18c1e59279af"],
Cell[CellGroupData[{
Cell[1016, 36, 84, 0, 189, "ManipulateSection",ExpressionUUID->"f4901b0b-9f12-4aa9-8a9a-96570bcd32ca"],
Cell[CellGroupData[{
Cell[1125, 40, 80712, 1865, 2672, "Input",ExpressionUUID->"d9deae28-a8d1-47ff-8bb2-bfe393590a8e"],
Cell[81840, 1907, 38680, 739, 526, "Output",ExpressionUUID->"4dc214cd-c8c6-49ae-8f91-c1237bd9fe49",
 CellID->129107899]
}, Open  ]],
Cell[120535, 2649, 200, 3, 25, "Input",ExpressionUUID->"0a56cc4b-2a06-44e2-91e2-78c90310f16c",
 CellID->1980587025]
}, Open  ]],
Cell[CellGroupData[{
Cell[120772, 2657, 91, 0, 169, "ManipulateCaptionSection",ExpressionUUID->"4e668a58-7ac2-4429-878e-3b2b690e3429"],
Cell[120866, 2659, 2207, 44, 85, "ManipulateCaption",ExpressionUUID->"bdfa55d2-ad3a-4e8f-8b27-09f5c4f34d82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123110, 2708, 83, 0, 172, "ThumbnailSection",ExpressionUUID->"b591cb25-1e72-4582-978c-8d3d2bd8e67c"],
Cell[123196, 2710, 38577, 738, 526, "Output",ExpressionUUID->"ef3f41e5-1284-4b2e-afdc-9e92b12b67bf",
 CellID->17050048]
}, Open  ]],
Cell[CellGroupData[{
Cell[161810, 3453, 83, 0, 142, "SnapshotsSection",ExpressionUUID->"7492f191-2e3e-4e93-a213-716c69fcbc0a"],
Cell[161896, 3455, 38578, 738, 526, "Output",ExpressionUUID->"9f49b70d-d381-40fb-9e6f-188e4ff4874f",
 CellID->187560187],
Cell[200477, 4195, 38599, 738, 526, "Output",ExpressionUUID->"fa914277-1117-434d-af63-597f6024e25f",
 CellID->245603726],
Cell[239079, 4935, 38622, 738, 526, "Output",ExpressionUUID->"2d448080-c94f-4570-b1b5-172e51da973a",
 CellID->542956916],
Cell[277704, 5675, 38627, 738, 526, "Output",ExpressionUUID->"8fac15b0-0276-43bf-9fef-08b97163ac0e",
 CellID->794121366]
}, Open  ]],
Cell[CellGroupData[{
Cell[316368, 6418, 81, 0, 339, "DetailsSection",ExpressionUUID->"0261bfc7-51db-44b5-954d-03d8df2a909e"],
Cell[316452, 6420, 1055, 27, 39, "DetailNotes",ExpressionUUID->"bf46b719-3fa1-43e8-bcc8-ada53c56a01b",
 CellID->84708773],
Cell[317510, 6449, 595, 18, 43, "DetailNotes",ExpressionUUID->"969f73e5-d8db-486b-b23e-bd2fb151eee1",
 CellID->354548413],
Cell[318108, 6469, 572, 15, 37, "DetailNotes",ExpressionUUID->"4442b08f-675a-4fc2-bb06-1e5730cf2497",
 CellID->76362953],
Cell[318683, 6486, 688, 20, 27, "DetailNotes",ExpressionUUID->"8ed8a001-6255-48de-bd0b-05e79b25e24a",
 CellID->12446115],
Cell[319374, 6508, 2335, 68, 43, "DetailNotes",ExpressionUUID->"ea0a81d3-dcdd-46aa-8df6-c735bf17202c",
 InitializationCell->True,
 CellID->308708852],
Cell[321712, 6578, 907, 17, 23, "DetailNotes",ExpressionUUID->"75d22bcf-e1bb-4fb4-a6c5-eb84ce25855c",
 CellID->948395546],
Cell[322622, 6597, 2662, 82, 41, "DetailNotes",ExpressionUUID->"31d11d61-d801-4896-9331-919796bd1403",
 CellID->228715552],
Cell[325287, 6681, 837, 16, 23, "DetailNotes",ExpressionUUID->"333af4b3-b782-441d-93aa-b864609f4eba",
 CellID->463046552],
Cell[326127, 6699, 767, 17, 23, "DetailNotes",ExpressionUUID->"54ca9a74-6355-4661-bf91-0614e2fc423e",
 CellID->6660895],
Cell[326897, 6718, 939, 23, 25, "DetailNotes",ExpressionUUID->"4eaded0c-3062-4424-8c6e-9c8bf6f2b33d",
 CellID->237220554],
Cell[327839, 6743, 457, 7, 22, "DetailNotes",ExpressionUUID->"3d79ba84-16ce-4a59-8556-ccd156cf045f",
 InitializationCell->True,
 CellID->11186204],
Cell[328299, 6752, 736, 19, 34, "DetailNotes",ExpressionUUID->"81d32dc3-e20e-4a68-9e8b-4a56f3e946c5",
 InitializationCell->True,
 CellID->156721650],
Cell[329038, 6773, 976, 29, 40, "DetailNotes",ExpressionUUID->"d6554ea4-6dfa-46cd-a7fc-00a12b8dbf00",
 InitializationCell->True,
 CellID->100070280],
Cell[330017, 6804, 891, 24, 25, "DetailNotes",ExpressionUUID->"2a1a0c54-a567-4126-b056-353b46abfd33",
 InitializationCell->True,
 CellID->141254418],
Cell[330911, 6830, 1596, 46, 25, "DetailNotes",ExpressionUUID->"f40237d2-a908-436e-a8a2-4766f203eacf",
 InitializationCell->True,
 CellID->67166341],
Cell[332510, 6878, 504, 7, 22, "DetailNotes",ExpressionUUID->"1a7d016d-2dc4-47e0-a654-a76e397e0cdf",
 InitializationCell->True,
 CellID->865556794],
Cell[333017, 6887, 235899, 3872, 349, "DetailNotes",ExpressionUUID->"2fde9830-e710-4b2f-8a82-51778f6047f7",
 CellID->347284425],
Cell[568919, 10761, 596, 13, 23, "DetailNotes",ExpressionUUID->"12b4e014-3edf-4d91-8477-bfcace4f2e0f",
 InitializationCell->True,
 CellID->430274188],
Cell[569518, 10776, 923, 28, 40, "DetailNotes",ExpressionUUID->"02510f1f-045f-4c91-ac92-8b0cbe64f57a",
 InitializationCell->True,
 CellID->632557312],
Cell[570444, 10806, 840, 23, 25, "DetailNotes",ExpressionUUID->"7c660777-d551-4904-95d1-524db57f8d63",
 InitializationCell->True,
 CellID->108152909],
Cell[571287, 10831, 723, 17, 25, "DetailNotes",ExpressionUUID->"5f198171-f29d-4e1e-a231-c285f8c6b8b3",
 InitializationCell->True,
 CellID->767566158],
Cell[572013, 10850, 536, 12, 23, "DetailNotes",ExpressionUUID->"76bb9ebe-c791-482b-b9a4-5675d9fd5b50",
 CellID->31082979],
Cell[572552, 10864, 422, 12, 23, "DetailNotes",ExpressionUUID->"916fe24c-5994-4335-8e38-ec23ba0d9f66",
 CellID->106822949],
Cell[572977, 10878, 445, 7, 22, "DetailNotes",ExpressionUUID->"9074fd79-2c73-4eb6-943d-80e56e1af850",
 InitializationCell->True,
 CellID->169169661],
Cell[573425, 10887, 726, 21, 43, "DetailNotes",ExpressionUUID->"571d9e1a-b4c8-44db-9ad7-1f151d64b5b7",
 InitializationCell->True,
 CellID->323666852],
Cell[574154, 10910, 722, 20, 40, "DetailNotes",ExpressionUUID->"bb6775b1-f5a5-4607-a6a4-ca417dfd9a85",
 InitializationCell->True,
 CellID->64975237],
Cell[574879, 10932, 925, 25, 27, "DetailNotes",ExpressionUUID->"f36cd19f-8d67-494a-bdbd-3f6d26c5436a",
 InitializationCell->True,
 CellID->824488843],
Cell[575807, 10959, 624, 14, 23, "DetailNotes",ExpressionUUID->"684ef65c-e1c4-43b7-8cb6-ca4b8110424a",
 InitializationCell->True,
 CellID->236475564],
Cell[576434, 10975, 725, 17, 25, "DetailNotes",ExpressionUUID->"c25a44fc-5d8a-48df-9c97-65ba6f08810e",
 InitializationCell->True,
 CellID->802766362],
Cell[577162, 10994, 804, 22, 25, "DetailNotes",ExpressionUUID->"bcd3c302-437a-4afc-8e4b-5d8d11845af1",
 InitializationCell->True,
 CellID->4932786],
Cell[577969, 11018, 224, 3, 22, "DetailNotes",ExpressionUUID->"f5413ab5-afe4-424a-8324-d3acd39516b1",
 CellID->279402392],
Cell[578196, 11023, 73112, 1203, 344, "DetailNotes",ExpressionUUID->"9c116cc9-baea-4532-8cb9-bc69bfdfa756",
 CellID->31466940]
}, Open  ]],
Cell[CellGroupData[{
Cell[651345, 12231, 92, 0, 126, "ControlSuggestionsSection",ExpressionUUID->"6f56c2f8-382e-4f83-ab56-083d0919ce61"],
Cell[651440, 12233, 498, 11, 22, "ControlSuggestions",ExpressionUUID->"54e21532-af29-498c-af6b-21701475d32a",
 CellTags->"ResizeImages"],
Cell[651941, 12246, 800, 19, 22, "ControlSuggestions",ExpressionUUID->"5d20c528-c794-4202-917c-c178dff5eadb",
 CellTags->"RotateAndZoomIn3D"],
Cell[652744, 12267, 457, 13, 22, "ControlSuggestions",ExpressionUUID->"1ad83a93-6374-4cd3-943b-a25e2ac455e1",
 CellTags->"DragLocators"],
Cell[653204, 12282, 761, 19, 22, "ControlSuggestions",ExpressionUUID->"6df94e7e-d230-4cd7-8b5d-839062a393ee",
 CellTags->"CreateAndDeleteLocators"],
Cell[653968, 12303, 1028, 24, 22, "ControlSuggestions",ExpressionUUID->"eaac6def-e234-4836-a5d3-95c32330838d",
 CellTags->"SliderZoom"],
Cell[654999, 12329, 545, 14, 22, "ControlSuggestions",ExpressionUUID->"f55c4529-b160-4743-8344-b29964421295",
 CellTags->"GamepadControls"],
Cell[655547, 12345, 1655, 35, 22, "ControlSuggestions",ExpressionUUID->"f72b3486-239c-4641-bbc1-8f6133a578e2",
 CellTags->"AutomaticAnimation"],
Cell[657205, 12382, 1030, 24, 22, "ControlSuggestions",ExpressionUUID->"27feda0b-c24a-40c5-aa6a-45a2a3d05a06",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[658272, 12411, 85, 0, 158, "SearchTermsSection",ExpressionUUID->"726e69d9-34da-4b10-bd4a-89311e28c67a"],
Cell[658360, 12413, 188, 2, 22, "SearchTerms",ExpressionUUID->"500bd29c-adf2-4e5b-aa52-4619a8ca1dfc",
 CellID->407895636],
Cell[658551, 12417, 181, 2, 22, "SearchTerms",ExpressionUUID->"d6a1c786-425a-49d3-8bc7-e8a71fe2d643",
 CellID->604770507],
Cell[658735, 12421, 189, 2, 22, "SearchTerms",ExpressionUUID->"e3fa0d06-b729-4cd8-b06f-a3b32e8d0586",
 CellID->65112033],
Cell[658927, 12425, 229, 3, 22, "SearchTerms",ExpressionUUID->"ef72cac4-3893-445a-98d2-fdd67769fd44",
 CellID->576187380],
Cell[659159, 12430, 282, 4, 22, "SearchTerms",ExpressionUUID->"bcd5f7bf-ea2c-4a63-9572-1c77df45df14",
 CellID->97068303],
Cell[659444, 12436, 288, 4, 22, "SearchTerms",ExpressionUUID->"5fbdc7e0-f35f-4793-ad33-d57c13b20440",
 CellID->105785804],
Cell[659735, 12442, 229, 3, 22, "SearchTerms",ExpressionUUID->"f448615e-d6d6-45a1-88b1-e664af7a2452",
 CellID->70527562],
Cell[659967, 12447, 225, 3, 22, "SearchTerms",ExpressionUUID->"03449f6a-11a5-407a-93c1-be4f3af5dbb4",
 CellID->25581944]
}, Open  ]],
Cell[CellGroupData[{
Cell[660229, 12455, 86, 0, 143, "RelatedLinksSection",ExpressionUUID->"7b3e81a4-8dd4-4cc7-bf7b-045fbfae9fd7"],
Cell[660318, 12457, 493, 10, 22, "RelatedLinks",ExpressionUUID->"637d26da-e2b7-4a08-a444-cf1bf7d1c50f",
 CellID->302227728]
}, Open  ]],
Cell[CellGroupData[{
Cell[660848, 12472, 80, 0, 141, "AuthorSection",ExpressionUUID->"c1aa408b-8df8-4eee-b96a-4bfbd7f01159"],
Cell[660931, 12474, 469, 11, 22, "Author",ExpressionUUID->"237e6bb5-4caf-4fa2-b761-600be6de5fa3",
 CellID->52184429],
Cell[661403, 12487, 615, 13, 22, "Author",ExpressionUUID->"dc8f07e2-9950-40a3-afc9-b3cee9dd1777",
 CellID->373235529],
Cell[662021, 12502, 185, 4, 22, "Author",ExpressionUUID->"4c5c5c55-2b35-4e51-9888-c473a056c306",
 CellID->77347031]
}, Open  ]]
}, Open  ]]
}
]
*)

