(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    126353,       3248]
NotebookOptionsPosition[    121849,       3106]
NotebookOutlinePosition[    123465,       3156]
CellTagsIndexPosition[    123129,       3144]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Your Title Here", "DemoTitle"],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PVdata", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.00104", ",", "0.09733"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00105", ",", "0.13793"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00106", ",", "0.19154"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00107", ",", "0.26111"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00108", ",", "0.36001"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00109", ",", "0.47425"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0011", ",", "0.61588"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00111", ",", "0.78932"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00113", ",", "0.99936"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00114", ",", "1.2510"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00116", ",", "1.55"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00117", ",", "1.9020"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00119", ",", "2.313"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00121", ",", "2.789"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00123", ",", "3.338"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00125", ",", "3.966"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00128", ",", "4.681"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00130", ",", "5.49"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00133", ",", "6.402"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00137", ",", "7.426"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00140", ",", "8.57"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00145", ",", "9.845"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0015", ",", "11.260"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00156", ",", "12.830"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00164", ",", "14.570"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00174", ",", "16.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00189", ",", "18.63"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00216", ",", "20.76"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00248", ",", "21.77"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0028", ",", "22.04"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00311", ",", "22.060"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00311", ",", "22.060"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0034900", ",", "22.04"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00445", ",", "21.52"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00642", ",", "19.32"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.00826", ",", "17.12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.0102", ",", "15.13"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.01233", ",", "13.340"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.014730", ",", "11.72"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.017480", ",", "10.25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.02066", ",", "8.938"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.024380", ",", "7.756"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.02876", ",", "6.697"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.03397", ",", "5.753"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.04018", ",", "4.913"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.04766", ",", "4.171"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.05675", ",", "3.5180"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.06789", ",", "2.946"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.08163", ",", "2.449"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.09872", ",", "2.019"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.12012", ",", "1.65"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.14732", ",", "1.336"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.18215", ",", "1.07"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.22732", ",", "0.84826"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.28662", ",", "0.66436"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.36536", ",", "0.51367"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.47170", ",", "0.39165"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.6169", ",", "0.29413"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.84388", ",", "0.2106"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.14142", ",", "0.15252"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.57233", ",", "0.10830"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1.73732", ",", "0.09733"}], "}"}]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6938470310981855`*^9, 3.6938470349828076`*^9}, {
  3.693847148110371*^9, 3.693847148203971*^9}},
 CellID->78047930],

Cell[BoxData[
 RowBox[{
  RowBox[{"color", "=", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0., 1.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0., 0.6666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0., 1.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0., 1.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0., 1.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.1, 0.9], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.06666666666666668, 0.6000000000000001],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.1, 0.9]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.1, 0.9]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.1, 0.9],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.2, 0.8], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.13333333333333336`, 0.5333333333333334],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.2, 0.8]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.2, 0.8]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.2, 0.8],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.30000000000000004`, 0.7], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.20000000000000004`, 0.4666666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.30000000000000004, 0.7]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.30000000000000004`, 0.7]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.30000000000000004`, 0.7],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.4, 0.6], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.2666666666666667, 0.4],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.4, 0.6]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.4, 0.6]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.4, 0.6],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.5, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.33333333333333337`, 0.33333333333333337`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.5, 0.5]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0.5, 0.5]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.5, 0.5],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.6000000000000001, 0.3999999999999999], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.4000000000000001, 0.2666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.6000000000000001, 0.3999999999999999]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.6000000000000001, 0.3999999999999999]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.6000000000000001, 0.3999999999999999],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.7000000000000001, 0.29999999999999993`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.46666666666666673`, 0.19999999999999996`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.7000000000000001, 0.29999999999999993]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.7000000000000001, 0.29999999999999993`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.7000000000000001, 0.29999999999999993`],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.8, 0.19999999999999996`], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.5333333333333334, 0.1333333333333333],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.8, 0.19999999999999996]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.8, 0.19999999999999996`]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.8, 0.19999999999999996`],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 0.9, 0.09999999999999998], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6000000000000001, 0.06666666666666665],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 0.9, 0.09999999999999998]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0, 0.9, 0.09999999999999998]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 0.9, 0.09999999999999998],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0, 1., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666667, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0, 1., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0, 1., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0., 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0., 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0., 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.06666666666666668, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.1, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.1, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.1, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.2, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.13333333333333336`, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.2, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.2, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.2, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.30000000000000004`, 1, 0], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.20000000000000004`, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.30000000000000004, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.30000000000000004`, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.30000000000000004`, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.4, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.2666666666666667, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.4, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.4, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.4, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.5, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.33333333333333337`, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.5, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.5, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.6000000000000001, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.4000000000000001, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.6000000000000001, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.6000000000000001, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.6000000000000001, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.7000000000000001, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.46666666666666673`, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.7000000000000001, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.7000000000000001, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.7000000000000001, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.8, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.5333333333333334, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.8, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.8, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.8, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.9, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6000000000000001, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.9, 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.9, 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.9, 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666667, 0.6666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1., 1, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 1, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 1, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 1., 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666667, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 1., 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1., 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 1., 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.9, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.6000000000000001, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.9, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.9, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.9, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.8, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.5333333333333334, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.8, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.8, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.8, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.7, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.4666666666666667, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.7, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.7, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.7, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.6, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.4, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.6, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.6, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.6, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.5, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.5, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.3999999999999999, 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.2666666666666666, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.3999999999999999, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.3999999999999999, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.3999999999999999, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.29999999999999993`, 0], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.19999999999999996`, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.29999999999999993, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.29999999999999993`, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.29999999999999993`, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.19999999999999996`, 0], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.1333333333333333, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.19999999999999996, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.19999999999999996`, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.19999999999999996`, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0.09999999999999998, 0], 
           RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0.06666666666666665, 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0.09999999999999998, 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[1, 0.09999999999999998, 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0.09999999999999998, 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1, 0., 0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1, 0., 0]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0., 0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1, 0., 0],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[1., 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6666666666666667, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[1., 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[1., 0., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.9, 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.6000000000000001, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.9, 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.9, 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.9, 0., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.8, 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.5333333333333334, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.8, 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.8, 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.8, 0., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.7, 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.4666666666666667, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.7, 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.7, 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.7, 0., 0.],
      Editable->False,
      Selectable->False], ",", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.6, 0., 0.], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         Frame->True,
         FrameStyle->RGBColor[0.4, 0., 0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        "RGBColor[0.6, 0., 0.]"],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.6, 0., 0.]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.6, 0., 0.],
      Editable->False,
      Selectable->False]}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellID->337926263],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00104", ",", "1.73732"}], "}"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.694271890310446*^9, 3.6942718965078726`*^9}},
 CellID->5285521],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "PVdata"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6942780975042233`*^9, 3.6942781013666463`*^9}},
 CellID->68642452],

Cell[BoxData["62"], "Output",
 CellChangeTimes->{3.694278101913647*^9},
 CellID->804380679]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PVdata2", "=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"PVdata", "[", 
        RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "33", ",", "3"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"PVdata", "[", 
        RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"35", ",", 
        RowBox[{"Length", "@", "PVdata"}]}], "]"}]}]}], "\[IndentingNewLine]",
     "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.694278437317754*^9, 3.6942785040098763`*^9}},
 CellID->233796946]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "col", ",", "p1", ",", "p2", ",", "p3", ",", "p4", ",", "scale"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"col", "[", "v_", "]"}], ":=", 
       RowBox[{"Blend", "[", 
        RowBox[{"color", ",", 
         RowBox[{"Rescale", "[", 
          RowBox[{"v", ",", 
           RowBox[{"(*", 
            RowBox[{"Log", "@"}], "*)"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"PVdata", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"PVdata", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"PVdata", ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Thick", ",", "Black"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "@", "0.01"}], ",", 
            RowBox[{"Point", "@", "PVdata"}], ",", "Red", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"PVdata", "[", 
              RowBox[{"[", "pos", "]"}], "]"}]}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"ListLogLogPlot", "[", 
        RowBox[{"PVdata", ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Thickness", "@", "0.05"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"ColorFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[",
                "#1", "]"}], "&"}], ")"}]}], ","}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"ColorFunction", "\[Rule]", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], ",", 
              RowBox[{"col", "[", "x", "]"}]}], "]"}]}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ","}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"ColorFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"col", "[", "#1", "]"}], "&"}], ")"}]}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ","}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "@", "0.01"}], ",", 
            RowBox[{"Point", "@", 
             RowBox[{"Log", "@", "PVdata"}]}], ",", "Red", ",", 
            RowBox[{"Point", "@", 
             RowBox[{"Log", "@", 
              RowBox[{"PVdata", "[", 
               RowBox[{"[", "pos", "]"}], "]"}]}]}]}], "}"}]}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"ListLogLogPlot", "[", 
        RowBox[{"PVdata2", ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Thickness", "@", "0.05"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"ColorFunction", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"ColorData", "[", "\"\<TemperatureMap\>\"", "]"}], "[", 
             RowBox[{"Exp", "@", "#1"}], "]"}], "&"}], ")"}]}], ",", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ","}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"ColorFunction", "\[Rule]", 
            RowBox[{"Function", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}], ",", 
              RowBox[{"col", "[", "x", "]"}]}], "]"}]}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ","}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"ColorFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"col", "[", "#1", "]"}], "&"}], ")"}]}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ","}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Epilog", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "@", "0.01"}], ",", 
            RowBox[{"Point", "@", 
             RowBox[{"Log", "@", "PVdata2"}]}]}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"Switch", "[", 
         RowBox[{
         "opt", ",", "1", ",", "p1", ",", "2", ",", "p2", ",", "3", ",", 
          "p3"}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<volume (\!\(\*SuperscriptBox[\(m\), \(3\)]\)/kg)\>\"", ",", 
           "\"\<pressure (MPa)\>\""}], "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"17", ",", "Black"}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"600", ",", "400"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"PVdata", "[", 
          RowBox[{"[", "pos", "]"}], "]"}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"col", "@", 
         RowBox[{"PVdata", "[", 
          RowBox[{"[", 
           RowBox[{"#", ",", "1"}], "]"}], "]"}]}], "&"}], "/@", 
       RowBox[{"Range", "@", 
        RowBox[{"Length", "@", "PVdata"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"scale", "[", "n_", "]"}], ":=", 
       RowBox[{"Rescale", "[", 
        RowBox[{
         RowBox[{"PVdata", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"PVdata", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"PVdata", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"scale", "[", "#", "]"}], ",", 
            RowBox[{"scale", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
         RowBox[{"Range", "@", 
          RowBox[{"Length", "@", "PVdata"}]}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"600", ",", "450"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}]}], "*)"}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"opt", ",", "3", ",", "\"\<\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[Rule]", "\"\< linear \>\""}], ",", 
        RowBox[{"2", "\[Rule]", "\"\< log-log \>\""}], ",", 
        RowBox[{"3", "\[Rule]", "\"\< new log-log \>\""}]}], "}"}], ",", 
      "Setter"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"heatadded", ",", "0", ",", "\"\<added heat (kJ)\>\""}], "}"}],
       ",", "0", ",", "2500", ",", "10", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vol", ",", "1", ",", 
        RowBox[{"Row", "@", 
         RowBox[{"{", 
          RowBox[{"\"\<initial volume (\>\"", ",", 
           RowBox[{"Superscript", "[", 
            RowBox[{"\"\<m\>\"", ",", "3"}], "]"}], ",", "\"\</kg)\>\""}], 
          "}"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.0015", ",", "0.002", ",", "0.0031", ",", "0.005", ",", "0.01", ",", 
        "0.02", ",", "0.05", ",", "0.1", ",", "0.2", ",", "0.5", ",", "1"}], 
       "}"}], ",", "Slider", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pos", ",", "1", ",", "\"\<position\>\""}], "}"}], ",", "1", 
      ",", "62", ",", "1", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.693847067583576*^9, 3.6938472991041546`*^9}, {
  3.693847431909439*^9, 3.693847708841448*^9}, {3.6938477686653595`*^9, 
  3.693847846891549*^9}, {3.6938479987533216`*^9, 3.6938480132619944`*^9}, {
  3.6938480561749973`*^9, 3.693848199733926*^9}, {3.693848251835388*^9, 
  3.6938483942003307`*^9}, {3.6938484274946995`*^9, 3.693848446663396*^9}, {
  3.693848480531582*^9, 3.693848586814698*^9}, {3.6942696108323236`*^9, 
  3.6942696808568726`*^9}, {3.6942697746407385`*^9, 3.6942699268877373`*^9}, {
  3.6942709423479085`*^9, 3.694270996569781*^9}, {3.694271073066442*^9, 
  3.694271076050065*^9}, {3.6942712810658903`*^9, 3.6942713091402197`*^9}, {
  3.694271493133945*^9, 3.6942718628455005`*^9}, {3.6942719580651717`*^9, 
  3.6942719648004007`*^9}, {3.694278125502169*^9, 3.694278295120239*^9}, {
  3.6942783268969903`*^9, 3.694278361388962*^9}, {3.6942785122899213`*^9, 
  3.694278617721671*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`heatadded$$ = 0, $CellContext`opt$$ = 
    3, $CellContext`pos$$ = 1, $CellContext`vol$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`opt$$], 3, ""}, {
      1 -> " linear ", 2 -> " log-log ", 3 -> " new log-log "}}, {{
       Hold[$CellContext`heatadded$$], 0, "added heat (kJ)"}, 0, 2500, 10}, {{
       Hold[$CellContext`vol$$], 1, 
       Row[{"initial volume (", 
         Superscript["m", 3], "/kg)"}]}, {
      0.0015, 0.002, 0.0031, 0.005, 0.01, 0.02, 0.05, 0.1, 0.2, 0.5, 1}}, {{
       Hold[$CellContext`pos$$], 1, "position"}, 1, 62, 1}}, 
    Typeset`size$$ = {600., {197., 203.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`opt$102659$$ = 
    False, $CellContext`heatadded$102660$$ = 0, $CellContext`vol$102661$$ = 
    0, $CellContext`pos$102662$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`heatadded$$ = 0, $CellContext`opt$$ = 
        3, $CellContext`pos$$ = 1, $CellContext`vol$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`opt$$, $CellContext`opt$102659$$, False], 
        Hold[$CellContext`heatadded$$, $CellContext`heatadded$102660$$, 0], 
        Hold[$CellContext`vol$$, $CellContext`vol$102661$$, 0], 
        Hold[$CellContext`pos$$, $CellContext`pos$102662$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`col$, $CellContext`p1$, $CellContext`p2$, \
$CellContext`p3$, $CellContext`p4$, $CellContext`scale$}, $CellContext`col$[
           Pattern[$CellContext`v, 
            Blank[]]] := Blend[$CellContext`color, 
           Rescale[$CellContext`v, {
             Part[$CellContext`PVdata, 1, 1], 
             Part[$CellContext`PVdata, -1, 1]}]]; $CellContext`p1$ = 
         ListPlot[$CellContext`PVdata, Joined -> True, 
           PlotStyle -> {Thick, Black}, PlotRange -> All, Epilog -> {
             PointSize[0.01], 
             Point[$CellContext`PVdata], Red, 
             Point[
              
              Part[$CellContext`PVdata, $CellContext`pos$$]]}]; \
$CellContext`p2$ = 
         ListLogLogPlot[$CellContext`PVdata, Joined -> True, PlotStyle -> 
           Thickness[0.05], Epilog -> {
             PointSize[0.01], 
             Point[
              Log[$CellContext`PVdata]], Red, 
             Point[
              Log[
               
               Part[$CellContext`PVdata, $CellContext`pos$$]]]}]; \
$CellContext`p3$ = 
         ListLogLogPlot[$CellContext`PVdata2, Joined -> True, PlotStyle -> 
           Thickness[0.05], ColorFunction -> (ColorData["TemperatureMap"][
             Exp[#]]& ), Epilog -> {
             PointSize[0.01], 
             Point[
              Log[$CellContext`PVdata2]]}]; Show[
          
          Switch[$CellContext`opt$$, 1, $CellContext`p1$, 2, $CellContext`p2$,
            3, $CellContext`p3$], Frame -> True, 
          FrameLabel -> {
           "volume (\!\(\*SuperscriptBox[\(m\), \(3\)]\)/kg)", 
            "pressure (MPa)"}, LabelStyle -> {17, Black}, 
          ImageSize -> {600, 400}, AspectRatio -> Full, PlotLabel -> 
          Part[$CellContext`PVdata, $CellContext`pos$$]]], 
      "Specifications" :> {{{$CellContext`opt$$, 3, ""}, {
         1 -> " linear ", 2 -> " log-log ", 3 -> " new log-log "}, 
         ControlType -> 
         Setter}, {{$CellContext`heatadded$$, 0, "added heat (kJ)"}, 0, 2500, 
         10, Appearance -> "Labeled"}, {{$CellContext`vol$$, 1, 
          Row[{"initial volume (", 
            Superscript["m", 3], "/kg)"}]}, {
         0.0015, 0.002, 0.0031, 0.005, 0.01, 0.02, 0.05, 0.1, 0.2, 0.5, 1}, 
         ControlType -> Slider, Appearance -> 
         "Labeled"}, {{$CellContext`pos$$, 1, "position"}, 1, 62, 1, 
         Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{649., {281., 288.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`color = {
         RGBColor[0, 0., 1.], 
         RGBColor[0, 0.1, 0.9], 
         RGBColor[0, 0.2, 0.8], 
         RGBColor[0, 0.30000000000000004`, 0.7], 
         RGBColor[0, 0.4, 0.6], 
         RGBColor[0, 0.5, 0.5], 
         RGBColor[0, 0.6000000000000001, 0.3999999999999999], 
         RGBColor[0, 0.7000000000000001, 0.29999999999999993`], 
         RGBColor[0, 0.8, 0.19999999999999996`], 
         RGBColor[0, 0.9, 0.09999999999999998], 
         RGBColor[0, 1., 0.], 
         RGBColor[0., 1, 0], 
         RGBColor[0.1, 1, 0], 
         RGBColor[0.2, 1, 0], 
         RGBColor[0.30000000000000004`, 1, 0], 
         RGBColor[0.4, 1, 0], 
         RGBColor[0.5, 1, 0], 
         RGBColor[0.6000000000000001, 1, 0], 
         RGBColor[0.7000000000000001, 1, 0], 
         RGBColor[0.8, 1, 0], 
         RGBColor[0.9, 1, 0], 
         RGBColor[1., 1, 0], 
         RGBColor[1, 1., 0], 
         RGBColor[1, 0.9, 0], 
         RGBColor[1, 0.8, 0], 
         RGBColor[1, 0.7, 0], 
         RGBColor[1, 0.6, 0], 
         RGBColor[1, 0.5, 0], 
         RGBColor[1, 0.3999999999999999, 0], 
         RGBColor[1, 0.29999999999999993`, 0], 
         RGBColor[1, 0.19999999999999996`, 0], 
         RGBColor[1, 0.09999999999999998, 0], 
         RGBColor[1, 0., 0], 
         RGBColor[1., 0., 0.], 
         RGBColor[0.9, 0., 0.], 
         RGBColor[0.8, 0., 0.], 
         RGBColor[0.7, 0., 0.], 
         RGBColor[0.6, 0., 0.]}, $CellContext`PVdata = CompressedData["
1:eJxTTMoPSmViYGCwA2IQ7XzUol6YK9BereB13rxXO+xFe7xesZgE2qdMmrh5
w/KD9s+DYkK/xQbat0l/+JnYcsJ+p2TegeftgfY3VVdtZ9t2wb77Qb32zY2B
9hdf8CWlc123j10+cdqp24H26oYca2Si7tnr5y1m3MMaZH8r1OOn59bH9oym
W3PW6gfZP2hxYpFxemm/5NANpwnNQfZqx+deOvjrvX1Z56u1jWuD7LP2lEyW
YPliLyXO15LCGGx/9gwI/LB/c1f+fah2sL31ff/e6Xn/7Cdkg3wQbC+tf1eF
rZHJwfhn2mzpy8H2slEpQCVsDtfbugr/qYXY+yUJRFhu4XKoFlnn/rAqxP5d
jb1p3C5+h48Zjzu2/gixv+wLVLBTyGHKN7b4GT6h9t80YvoPfRV14PK2WZBz
KtT+/Pfgx0tnSzoEpjX7GBWFQc2TdTi+a0cv24cw+yUFtlzXlRUdHswRXLr3
YLh9IZC7eIOyw686kE8i7FtfB+6Qa1VzeKp+1U62P9JeE2T8Ck2Hkrjk6Svu
RUH16zosVxI9JtYUY88AAg0GDp9PyPPYfI+zf1gFdPhCIwdIeCfaH/4KcqCJ
w0rfOXfeB6RAzD9qCnVPmj3QdqCJZg41Lj6dKlWZ9kDbNGL4MfkCbPOq+afn
wNVvXVZ5XNOqCOpeU4dpaksX3Pausg8C8l4HGjtA0kmDvTxYgaFDR2vU5T2P
WyDucdJzkLksPK3CodMeFMoi67QctshrKh3W6oOER4G6g6Bk2Ee3ZxOh/lNx
mJsRrvhUfar9cW/zTscHig4627dICX2fYb9AChSh8g73Ine/dSqea18Liq6T
Ug4/JEEJYqF9ADD2hZjFHQJFXghXTlpi/+XvlYqXy4Qdds9ebvUkbYX9ybJ9
86XWCziUAlNRGN9aeyAPaCCPQ8G2nYa2iRvtjypsKMqYyO5wMypeZcvTLfYp
4ATF7PCNu+zwNtedEPPUGBwYSmbo6x/YZ58GBr/s3/xi3Z14+xDEvQlf7f9v
qv60IeA4NDw+2muy3o27JHHWfpHGBfVPKq/t+bxmZP4Ov2Sfu0Lieb7TU/sg
flBOuW4PzFSCf/If2MvUJBqFGtyzl54Xp3la4KZ9GTgBPbYPKNi4iO3yJfue
z+YLBRhf24tccLnx4csp+wBGg3mOzp/sFxj9qz3Weth+TkBHg7PGT3tuFY26
np277c/9yeITOPMbnp8BUnC8yA==
        "], $CellContext`PVdata2 = CompressedData["
1:eJxTTMoPSmViYGBQB2IQ7XzUol6YK9BereB13rxXO+x3SuYdeN4eaH9TddV2
tm0X7PXzFjPuYQ2yvxXq8dNz62P7ss5XaxvXBtln7SmZLMHyxX5CNsiEYHtp
/bsqbI1MDtUi69wfVoXYv6uxN43bxe/A5W2zIOdUqP3578GPl86WdHgwR3Dp
3oPh9oW2XNcXb1B2KIlLnr7iXpT9kgKggLKuQ/eDeu2bGxPtD3/ViOk/ZOJQ
4+LTqVKVad9/CCjAb+YwTW3pgtveVfZBO+RaXwcaO0Dc3WAvD+TtkDN06GiN
urzncQtEv5Oeg8xl4WkVDp32IFeJrNNy2CKvqXRYqw9if4G6g6Bk2Ee3ZxPt
GUCgQcVhbka44lP1qfbHvc07HR8oOuhs3yIl9H2G/QIpkAflHe5F7n7rVDzX
vhbkvZNSDj8kxflaUhbaB/ROzxNiFncIFHkhXDlpif2Xv1cqXi4Tdtg9e7nV
k7QV9ifL9s2XWi/gUAoMtTC+tfZAHtBAHoeCbTsNbRM32h9V2FCUMZHd4WZU
vMqWp1vsU6zv+/dOZ3b4xl12eJvrToh5agwODCUz9PUP7LNPA4Nf9m9+se5O
vH0I4t6Er/b/N1V/2hBwHBoeH+01We/GXZI4a79I44L6J5XX9nxeMzJ/h1+y
z10h8Tzf6al9EP/FF3xJ1+1Dv8UK/sl/YC9Tk2gUanDPXnpenOZpgZv2ZeAI
e2wfULBxEdvlS/Y9n80XCjC+the54HLjw5dT9gGMBvMcnT/ZLzD6V3us9bD9
nICOBmeNn/bcKhp1PTt325/7k8UncOY3PH0BAMWZGzk=
        "], Attributes[Superscript] = {NHoldRest, ReadProtected}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.694278194936728*^9, 3.6942782018647566`*^9}, {
   3.694278237398546*^9, 3.6942782955570393`*^9}, 3.6942783635573654`*^9, {
   3.6942785686248107`*^9, 3.6942786179868717`*^9}},
 CellID->202582571]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}]], "Input",
 CellID->159456466],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ColorDataFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Rainbow\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Gradient: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               GraphicsBox[RasterBox[CompressedData["
1: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
f2N26fc=
                 "], {{0, 0}, {1, 1}}],
                AspectRatio->NCache[
                  Rational[1, 8], 0.125],
                BaselinePosition->Bottom,
                ImageSize->65,
                PlotRange->{{0, 1}, {0, 1}}],
               Selectable->False,
               StripOnInput->False],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Rainbow\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Gradient: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               GraphicsBox[RasterBox[CompressedData["
1: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
f2N26fc=
                 "], {{0, 0}, {1, 1}}],
                AspectRatio->NCache[
                  Rational[1, 8], 0.125],
                BaselinePosition->Bottom,
                ImageSize->65,
                PlotRange->{{0, 1}, {0, 1}}],
               Selectable->False,
               StripOnInput->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Domain: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Gradients\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  ColorDataFunction["Rainbow", "Gradients", {0, 1}, Blend["Rainbow", #]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6938477347689734`*^9},
 CellID->451862496]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorData", "[", "\"\<DeepSeaColors\>\"", "]"}]], "Input",
 CellID->325036302],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ColorDataFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False}, 
    PanelBox[
     PaneSelectorBox[{False->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquarePlusIconMedium"],
            ImageSizeCache->{12., {0., 12.}}],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = True),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"DeepSeaColors\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Gradient: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               GraphicsBox[RasterBox[CompressedData["
1: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
G8PKQg==
                 "], {{0, 0}, {1, 1}}],
                AspectRatio->NCache[
                  Rational[1, 8], 0.125],
                BaselinePosition->Bottom,
                ImageSize->65,
                PlotRange->{{0, 1}, {0, 1}}],
               Selectable->False,
               StripOnInput->False],
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->GridBox[{
        {
         PaneBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEBitmaps", "SquareMinusIconMedium"]],
           Appearance->None,
           ButtonFunction:>(Typeset`open$$ = False),
           Evaluator->Automatic,
           Method->"Preemptive"],
          Alignment->{Center, Center},
          
          ImageSize->
           Dynamic[{
            Automatic, 3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification]}]], GridBox[{
           {
            RowBox[{
             TagBox["\<\"Name: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"DeepSeaColors\"\>",
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Gradient: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              StyleBox[
               GraphicsBox[RasterBox[CompressedData["
1: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
G8PKQg==
                 "], {{0, 0}, {1, 1}}],
                AspectRatio->NCache[
                  Rational[1, 8], 0.125],
                BaselinePosition->Bottom,
                ImageSize->65,
                PlotRange->{{0, 1}, {0, 1}}],
               Selectable->False,
               StripOnInput->False],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Domain: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox[
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}],
              "SummaryItem"]}]},
           {
            RowBox[{
             TagBox["\<\"Class: \"\>",
              "SummaryItemAnnotation"], "\[InvisibleSpace]", 
             TagBox["\<\"Gradients\"\>",
              "SummaryItem"]}]}
          },
          AutoDelete->False,
          
          BaseStyle->{
           ShowStringCharacters -> False, NumberMarks -> False, 
            PrintPrecision -> 3, ShowSyntaxStyles -> False},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
       },
       AutoDelete->False,
       BaselinePosition->{1, 1},
       GridBoxAlignment->{"Rows" -> {{Top}}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
      Typeset`open$$],
      ImageSize->Automatic],
     BaselinePosition->Baseline],
    DynamicModuleValues:>{}], "]"}],
  ColorDataFunction[
  "DeepSeaColors", "Gradients", {0, 1}, Blend["DeepSeaColors", #]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.693847823751044*^9},
 CellID->35589977]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vol", ",", "1", ",", 
        RowBox[{"Row", "@", 
         RowBox[{"{", 
          RowBox[{"\"\<initial volume (\>\"", ",", 
           RowBox[{"Superscript", "[", 
            RowBox[{"\"\<m\>\"", ",", "3"}], "]"}], ",", "\"\</kg)\>\""}], 
          "}"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.0015", ",", "0.002", ",", "0.0031", ",", "0.005", ",", "0.01", ",", 
        "0.02", ",", "0.05", ",", "0.1", ",", "0.2", ",", "0.5", ",", "1"}], 
       "}"}], ",", "Slider", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}], 
   ","}], "*)"}]], "Input",
 CellID->324648102],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vol", ",", "1", ",", 
        RowBox[{"Row", "@", 
         RowBox[{"{", 
          RowBox[{"\"\<initial volume (\>\"", ",", 
           RowBox[{"Superscript", "[", 
            RowBox[{"\"\<m\>\"", ",", "3"}], "]"}], ",", "\"\</kg)\>\""}], 
          "}"}]}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"N", "@", 
        RowBox[{"{", 
         RowBox[{
         "0.15", ",", "0.2", ",", "0.31", ",", "0.5", ",", "1", ",", "2", ",",
           "5", ",", "10", ",", "20", ",", "50", ",", "100"}], "}"}]}], "/", 
       "100"}], ",", "Slider", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}], 
   ","}], "*)"}]], "Input",
 CellChangeTimes->{{3.6942699143752823`*^9, 3.694269917712305*^9}},
 CellID->307916006],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vol", ",", "1", ",", 
        RowBox[{"Row", "@", 
         RowBox[{"{", 
          RowBox[{"\"\<initial volume (\>\"", ",", 
           RowBox[{"Superscript", "[", 
            RowBox[{"\"\<m\>\"", ",", "3"}], "]"}], ",", "\"\</kg)\>\""}], 
          "}"}]}]}], "}"}], ",", "0.00104", ",", "1.7", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}], 
   ","}], "*)"}]], "Input",
 CellID->149531636],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"L0", ",", "L1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"L0", "=", 
     RowBox[{"{", 
      RowBox[{
      "0.0015", ",", "0.002", ",", "0.0031", ",", "0.005", ",", "0.01", ",", 
       "0.02", ",", "0.05", ",", "0.1", ",", "0.2", ",", "0.5", ",", "1"}], 
      "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"L0", "*", "100"}], ";", "\[IndentingNewLine]", 
    RowBox[{"L1", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.15", ",", "0.2", ",", "0.31", ",", "0.5", ",", "1.", ",", "2.", ",",
         "5.", ",", "10.", ",", "20.", ",", "50.", ",", "100"}], "}"}], "/", 
      "100"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"L1", "\[Equal]", "L0"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6942697118210225`*^9, 3.6942697653034906`*^9}},
 CellID->607281351],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.694269699045768*^9, 3.6942697285435147`*^9}, 
   3.694269765709091*^9},
 CellID->559771918]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["XXXX", "ManipulateCaption"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[1]], RectangleBox[{0, 0}], 
   InsetBox[
    StyleBox["\<\"Thumbnail Placeholder\"\>",
     StripOnInput->False,
     FontFamily->"Verdana",
     FontSize->14], {0.5, 0.6}], InsetBox[
    StyleBox["\<\"Replace this with your\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.45}], InsetBox[
    StyleBox["\<\"Manipulate at a particular setting.\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.39}], InsetBox[
    StyleBox["\<\"(Do not use a bitmap.)\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.315}]},
  ImageMargins->0.,
  ImageSize->220]], "Output",
 CellEditDuplicate->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[1]], RectangleBox[{0, 0}], 
   InsetBox[
    StyleBox["\<\"Snapshot Placeholder\"\>",
     StripOnInput->False,
     FontFamily->"Verdana",
     FontSize->14], {0.5, 0.6}], InsetBox[
    StyleBox["\<\"Replace this with your\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.45}], InsetBox[
    StyleBox["\<\"Manipulate at a particular setting.\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.39}], InsetBox[
    StyleBox["\<\"(Do not use a bitmap.)\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.315}]},
  ImageMargins->0.,
  ImageSize->220]], "Output",
 CellEditDuplicate->False]
}, Open  ]],

Cell["", "DetailsSection"],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell["", "SearchTermsSection"],

Cell["", "RelatedLinksSection"],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell["Contributed by: XXXX", "Author"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[116078, 2945, 312, 8, 70, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[116393, 2955, 678, 16, 70, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[117074, 2973, 340, 11, 70, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[117417, 2986, 637, 15, 70, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[118057, 3003, 844, 21, 70, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[118904, 3026, 369, 9, 70, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[119276, 3037, 1464, 31, 70, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[120743, 3070, 908, 21, 70, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 122222, 3117},
 {"RotateAndZoomIn3D", 122332, 3120},
 {"DragLocators", 122443, 3123},
 {"CreateAndDeleteLocators", 122560, 3126},
 {"SliderZoom", 122675, 3129},
 {"GamepadControls", 122782, 3132},
 {"AutomaticAnimation", 122896, 3135},
 {"BookmarkAnimation", 123014, 3138}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 36, 0, 74, "DemoTitle"],
Cell[CellGroupData[{
Cell[641, 26, 33, 0, 275, "InitializationSection"],
Cell[677, 28, 4830, 132, 142, "Input",
 InitializationCell->True,
 CellID->78047930],
Cell[5510, 162, 60880, 1585, 33, "Input",
 InitializationCell->True,
 CellID->337926263],
Cell[66393, 1749, 197, 5, 33, "Input",
 InitializationCell->True,
 CellID->5285521],
Cell[CellGroupData[{
Cell[66615, 1758, 175, 4, 33, "Input",
 InitializationCell->True,
 CellID->68642452],
Cell[66793, 1764, 91, 2, 24, "Output",
 CellID->804380679]
}, Open  ]],
Cell[66899, 1769, 736, 22, 88, "Input",
 InitializationCell->True,
 CellID->233796946]
}, Open  ]],
Cell[CellGroupData[{
Cell[67672, 1796, 29, 0, 231, "ManipulateSection"],
Cell[CellGroupData[{
Cell[67726, 1800, 10465, 254, 598, "Input"],
Cell[78194, 2056, 8735, 177, 581, "Output",
 CellID->202582571]
}, Open  ]],
Cell[CellGroupData[{
Cell[86966, 2238, 96, 2, 25, "Input",
 CellID->159456466],
Cell[87065, 2242, 11402, 248, 67, "Output",
 CellID->451862496]
}, Open  ]],
Cell[CellGroupData[{
Cell[98504, 2495, 102, 2, 25, "Input",
 CellID->325036302],
Cell[98609, 2499, 11304, 247, 67, "Output",
 CellID->35589977]
}, Open  ]],
Cell[109928, 2749, 765, 21, 25, "Input",
 CellID->324648102],
Cell[110696, 2772, 880, 24, 25, "Input",
 CellID->307916006],
Cell[111579, 2798, 565, 16, 25, "Input",
 CellID->149531636],
Cell[CellGroupData[{
Cell[112169, 2818, 915, 23, 116, "Input",
 CellID->607281351],
Cell[113087, 2843, 145, 3, 24, "Output",
 CellID->559771918]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113281, 2852, 36, 0, 169, "ManipulateCaptionSection"],
Cell[113320, 2854, 33, 0, 22, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113390, 2859, 28, 0, 172, "ThumbnailSection"],
Cell[113421, 2861, 1242, 34, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114700, 2900, 28, 0, 142, "SnapshotsSection"],
Cell[114731, 2902, 1241, 34, 70, "Output"]
}, Open  ]],
Cell[115987, 2939, 26, 0, 70, "DetailsSection"],
Cell[CellGroupData[{
Cell[116038, 2943, 37, 0, 70, "ControlSuggestionsSection"],
Cell[116078, 2945, 312, 8, 70, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[116393, 2955, 678, 16, 70, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[117074, 2973, 340, 11, 70, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[117417, 2986, 637, 15, 70, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[118057, 3003, 844, 21, 70, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[118904, 3026, 369, 9, 70, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[119276, 3037, 1464, 31, 70, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[120743, 3070, 908, 21, 70, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[121666, 3094, 30, 0, 70, "SearchTermsSection"],
Cell[121699, 3096, 31, 0, 70, "RelatedLinksSection"],
Cell[CellGroupData[{
Cell[121755, 3100, 25, 0, 70, "AuthorSection"],
Cell[121783, 3102, 38, 0, 70, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

