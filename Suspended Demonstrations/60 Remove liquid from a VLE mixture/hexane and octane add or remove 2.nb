(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    110343,       2893]
NotebookOptionsPosition[    105973,       2754]
NotebookOutlinePosition[    107592,       2804]
CellTagsIndexPosition[    107256,       2792]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Add or Remove a Component from a VLE Mixture", "DemoTitle",
 CellChangeTimes->{{3.660933427208889*^9, 3.6609334396441107`*^9}}],

Cell["", "InitializationSection"],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Psat1", ",", "Psat2", ",", "Px", ",", "Py", ",", "n1", ",", "n2", ",", 
       "nT", ",", "V", ",", "R", ",", "z1", ",", "\[Rho]", ",", "Pigl", ",", 
       "sol", ",", "x1", ",", "y1", ",", "P", ",", "nL", ",", "nV", ",", "c1",
        ",", "c2", ",", "c3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Psat1", "=", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"4.00266", "-", 
          RowBox[{"1171.53", "/", 
           RowBox[{"(", 
            RowBox[{"T", "+", "224.216"}], ")"}]}]}], ")"}]}]}], ";", 
      RowBox[{"(*", "hexane", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Psat2", "=", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"4.04867", "-", 
          RowBox[{"1355.126", "/", 
           RowBox[{"(", 
            RowBox[{"T", "+", "209.367"}], ")"}]}]}], ")"}]}]}], ";", 
      RowBox[{"(*", "octane", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Px", "[", "z_", "]"}], ":=", 
       RowBox[{
        RowBox[{"z", "*", "Psat1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "z"}], ")"}], "*", "Psat2"}]}]}], ";", 
      RowBox[{"(*", "bubble", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Py", "[", "z_", "]"}], ":=", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox["z", "Psat1"], "+", 
          FractionBox[
           RowBox[{"1", "-", "z"}], "Psat2"]}], ")"}], 
        RowBox[{"-", "1"}]]}], ";", 
      RowBox[{"(*", "dew", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"npr", "\[Equal]", "1"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"n1", "=", "2"}], ";", 
          RowBox[{"n2", "=", "mol2"}], ";"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"n1", "=", "mol1"}], ";", 
          RowBox[{"n2", "=", "0.5"}], ";"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"mp", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"npr", "\[Equal]", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"n1", "=", "2"}], ";", 
              RowBox[{"n2", "=", "mol2ADD"}], ";"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"n1", "=", "mol1ADD"}], ";", 
              RowBox[{"n2", "=", "0.5"}], ";"}], "}"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"nT", "=", 
            RowBox[{"n1", "+", "n2"}]}], ";", 
           RowBox[{"z1", "=", 
            RowBox[{"n1", "/", "nT"}]}], ";"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"npr", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n1", "=", "2"}], ";", 
            RowBox[{"n2", "=", "mol2REM"}], ";", 
            RowBox[{"nT", "=", 
             RowBox[{"n1", "+", "10", "+", "n2"}]}], ";", 
            RowBox[{"z1", "=", 
             RowBox[{"n1", "/", "nT"}]}], ";"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n1", "=", "mol1REM"}], ";", 
            RowBox[{"n2", "=", "0.5"}], ";", 
            RowBox[{"nT", "=", 
             RowBox[{"n2", "+", "10", "+", "n1"}]}], ";", 
            RowBox[{"z1", "=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"10", "+", "n1"}], ")"}], "/", "nT"}]}], ";"}], 
           "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"V", "=", "500"}], ";", 
      RowBox[{"(*", "L", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"R", "=", "8.314*^-2"}], ";", 
      RowBox[{"(*", 
       RowBox[{"L", " ", 
        RowBox[{
         RowBox[{"bar", "/", "mol"}], "/", "K"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"\[Rho]", "=", 
       RowBox[{
        RowBox[{"7.6", "*", "z1"}], "+", 
        RowBox[{"6.154", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "z1"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Pigl", "=", 
       RowBox[{"nT", "*", "R", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"T", "+", "273"}], ")"}], "/", "V"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"sol", "=", 
       RowBox[{"Quiet", "@", 
        RowBox[{
         RowBox[{"Solve", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"X1", "*", "Psat1"}], "\[Equal]", 
             RowBox[{"Y1", "*", "p"}]}], "&&", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "X1"}], ")"}], "*", "Psat2"}], "\[Equal]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "Y1"}], ")"}], "*", "p"}]}], "&&", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"liq", "+", "vap"}], "\[Equal]", "nT"}], "&&", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"liq", "/", "\[Rho]"}], "+", 
              RowBox[{"vap", "*", "R", "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"T", "+", "273"}], ")"}], "/", "p"}]}]}], "\[Equal]",
              "V"}], "&&", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"X1", "*", "liq"}], "+", 
              RowBox[{"Y1", "*", "vap"}]}], "\[Equal]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"npr", "\[Equal]", "1"}], ",", "n1", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"mp", "\[Equal]", "1"}], ",", "n1", ",", 
                 RowBox[{"10", "+", "n1"}]}], "]"}]}], "]"}]}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"X1", ",", "Y1", ",", "p", ",", "liq", ",", "vap"}], 
            "}"}]}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"Pigl", "<", 
         RowBox[{"Py", "[", "z1", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"P", "=", "Pigl"}], ",", 
          RowBox[{"nL", "=", "0"}], ",", 
          RowBox[{
           RowBox[{"nV", "=", "nT"}], ";", 
           RowBox[{"x1", "=", "0"}], ";", 
           RowBox[{"y1", "=", "z1"}], ";"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "=", 
           RowBox[{"X1", "/.", "sol"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"y1", "=", 
           RowBox[{"Y1", "/.", "sol"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"P", "=", 
           RowBox[{"p", "/.", "sol"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"nL", "=", 
           RowBox[{"liq", "/.", "sol"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"nV", "=", 
           RowBox[{"vap", "/.", "sol"}]}], ";"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"c1", "=", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.6", ",", "0", ",", "0.3"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c2", "=", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0.76", ",", "0.32"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"c3", "=", "Orange"}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0.6", ",", "0"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Px", "[", "x", "]"}], ",", 
              RowBox[{"Py", "[", "x", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"Thick", ",", "c3"}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<n\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<-hexane mole fraction\>\""}], "}"}], "]"}], ",", 
                 "17"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<pressure  (bar)\>\"", ",", "17"}], "]"}]}], 
              "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "14"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "1.0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0.4"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"PlotRangePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0.05", ",", 
               RowBox[{"{", 
                RowBox[{"0.04", ",", "None"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"395", ",", "395"}], "}"}]}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Epilog", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"PointSize", "[", "0.023", "]"}], ",", 
               RowBox[{"Point", "[", 
                RowBox[{"{", 
                 RowBox[{"z1", ",", "P"}], "}"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"Pigl", "<", 
                  RowBox[{"Py", "[", "z1", "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"Thick", ",", "Dashed", ",", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"z1", ",", 
                    RowBox[{"-", "0.1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"z1", ",", "P"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"Thick", ",", "Dashed", ",", 
                   RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"x1", ",", 
                    RowBox[{"-", "0.1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x1", ",", "P"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y1", ",", "P"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y1", ",", 
                    RowBox[{"-", "0.1"}]}], "}"}]}], "}"}], "]"}], ",", 
                   "\[IndentingNewLine]", "Blue", ",", 
                   RowBox[{"Point", "[", 
                    RowBox[{"{", 
                    RowBox[{"x1", ",", "P"}], "}"}], "]"}], ",", "c3", ",", 
                   RowBox[{"Point", "[", 
                    RowBox[{"{", 
                    RowBox[{"y1", ",", "P"}], "}"}], "]"}]}], "}"}]}], 
                "]"}]}], "\[IndentingNewLine]", "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", "***)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"BarChart", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x1", "*", "nL"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "x1"}], ")"}], "*", "nL"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"y1", "*", "nV"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "y1"}], ")"}], "*", "nV"}]}], "}"}]}], 
              "}"}], ",", 
             RowBox[{"ChartLayout", "\[Rule]", "\"\<Stacked\>\""}], ",", 
             RowBox[{"ChartStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Hue", "@", "0.4"}], ",", 
                RowBox[{"Hue", "@", "0.85"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"160", ",", "395"}], "}"}]}], ",", 
             RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0", ",", "11"}], "}"}]}], ",", 
             RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"True", ",", "None"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"True", ",", "None"}], "}"}]}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Row", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<moles of \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<n\>\"", ",", "Italic", ",", 
                    RowBox[{"Hue", "@", "0.4"}]}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<-hexane\>\"", ",", 
                    RowBox[{"Hue", "@", "0.4"}]}], "]"}], ",", 
                    "\"\<  and \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<n\>\"", ",", "Italic", ",", 
                    RowBox[{"Hue", "@", "0.85"}]}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<-octane\>\"", ",", 
                    RowBox[{"Hue", "@", "0.85"}]}], "]"}]}], "}"}], "]"}], 
                  ",", "17"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Black", ",", "14"}], "}"}]}], ",", 
             RowBox[{"ChartLabels", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<liquid\>\"", ",", "17"}], "]"}], ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<vapor\>\"", ",", "17"}], "]"}]}], "}"}], ",", 
                "None"}], "}"}]}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"BarChart", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x1", "*", "nL"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "x1"}], ")"}], "*", "nL"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"y1", "*", "nV"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "y1"}], ")"}], "*", "nV"}]}], "}"}]}], 
              "}"}], ",", 
             RowBox[{"ChartLayout", "\[Rule]", "\"\<Stacked\>\""}], ",", 
             RowBox[{"ChartStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"RGBColor", "[", 
                 RowBox[{"0", ",", "0.6", ",", "0"}], "]"}], ",", 
                RowBox[{"Hue", "@", "0.85"}]}], "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"160", ",", "395"}], "}"}]}], ",", 
             RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"0", ",", "11.5"}], "}"}]}], ",", 
             RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
             RowBox[{"Frame", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"True", ",", "None"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"True", ",", "None"}], "}"}]}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"None", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<moles \>\"", ",", "17"}], "]"}]}], "}"}]}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Black", ",", "14"}], "}"}]}], ",", 
             RowBox[{"ChartLabels", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<liquid\>\"", ",", "17"}], "]"}], ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\<vapor\>\"", ",", "17"}], "]"}]}], "}"}], ",", 
                "None"}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Column", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<n\>\"", ",", "Italic", ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.6", ",", "0"}], "]"}]}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<-hexane\>\"", ",", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0.6", ",", "0"}], "]"}]}], "]"}], ",", 
                    "\"\< and\>\""}], "}"}], "]"}], ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<n\>\"", ",", "Italic", ",", 
                    RowBox[{"Hue", "@", "0.85"}]}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<-octane\>\"", ",", 
                    RowBox[{"Hue", "@", "0.85"}]}], "]"}]}], "}"}], "]"}]}], 
                   "}"}], ",", "Center"}], "]"}], ",", "17"}], "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"BarChart", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"x1", "*", "nL"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "x1"}], ")"}], "*", "nL"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"y1", "*", "nV"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", "-", "y1"}], ")"}], "*", "nV"}]}], "}"}]}], 
             "}"}], ",", 
            RowBox[{"ChartLayout", "\[Rule]", "\"\<Stacked\>\""}], ",", 
            RowBox[{"ChartStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"c1", ",", "c2"}], "}"}]}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"160", ",", "395"}], "}"}]}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", "Full"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "11.5"}], "}"}]}], ",", 
            RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"True", ",", "None"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "None"}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"None", ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<moles \>\"", ",", "17"}], "]"}]}], "}"}]}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Black", ",", "14"}], "}"}]}], ",", 
            RowBox[{"ChartLabels", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<liquid\>\"", ",", "17"}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<vapor\>\"", ",", "17"}], "]"}]}], "}"}], ",", 
               "None"}], "}"}]}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"Column", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<n\>\"", ",", "Italic", ",", "c1"}], "]"}], 
                    ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<-hexane\>\"", ",", "c1"}], "]"}], ",", 
                    "\"\< and\>\""}], "}"}], "]"}], ",", 
                   RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<n\>\"", ",", "Italic", ",", "c2"}], "]"}], 
                    ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<-octane\>\"", ",", "c2"}], "]"}]}], "}"}], 
                    "]"}]}], "}"}], ",", "Center"}], "]"}], ",", "17"}], 
              "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "}"}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"mp", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "\[Rule]", "\"\< add \>\""}], ",", 
              RowBox[{"2", "\[Rule]", "\"\< remove \>\""}]}], "}"}], ",", 
            "RadioButton"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"npr", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\< n\>\"", ",", "Italic"}], "]"}], ",", 
                  "\"\<-octane \>\""}], "}"}], "]"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"Row", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{"\"\< n\>\"", ",", "Italic"}], "]"}], ",", 
                  "\"\<-hexane \>\""}], "}"}], "]"}]}]}], "}"}], ",", 
            "Setter"}], "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "T", ",", "35", ",", "\"\<temperature (\[Degree]C)\>\""}], "}"}],
             ",", "20", ",", "40", ",", "1", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PaneSelector", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"1", "\[Rule]", 
              RowBox[{"PaneSelector", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"1", "\[Rule]", 
                   RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"mol2ADD", ",", "0", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<moles \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<n\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<-octane\>\""}], "}"}], "]"}]}], "}"}], ",", "0", ",",
                     "10", ",", "0.01", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"2", "\[Rule]", 
                   RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"mol1ADD", ",", "0", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<moles \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<n\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<-hexane\>\""}], "}"}], "]"}]}], "}"}], ",", "0", ",",
                     "10", ",", "0.01", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
                RowBox[{"Dynamic", "@", "npr"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"2", "\[Rule]", 
              RowBox[{"PaneSelector", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"1", "\[Rule]", 
                   RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"mol2REM", ",", "0", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<moles \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<n\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<-octane\>\""}], "}"}], "]"}]}], "}"}], ",", "0", ",", 
                    RowBox[{"-", "10"}], ",", "0.01", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                  RowBox[{"2", "\[Rule]", 
                   RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"mol1REM", ",", "0", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<moles \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<n\>\"", ",", "Italic"}], "]"}], ",", 
                    "\"\<-hexane\>\""}], "}"}], "]"}]}], "}"}], ",", "0", ",", 
                    RowBox[{"-", "10"}], ",", "0.01", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "}"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
                RowBox[{"Dynamic", "@", "npr"}]}], "]"}]}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"Dynamic", "@", "mp"}]}], "]"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{
  3.6609284935296073`*^9, {3.660928588785776*^9, 3.660928764496894*^9}, {
   3.660928802178564*^9, 3.6609288299370127`*^9}, {3.660928904893545*^9, 
   3.6609289798284774`*^9}, {3.6609298153272123`*^9, 
   3.6609298214912233`*^9}, {3.6609314763575964`*^9, 
   3.6609315740043707`*^9}, {3.660931620246253*^9, 3.660931660210325*^9}, 
   3.660931697810792*^9, {3.6609320021561365`*^9, 3.660932004979741*^9}, {
   3.6609320531650276`*^9, 3.6609320745470657`*^9}, {3.660932395753841*^9, 
   3.660932395956641*^9}, {3.6609324491641364`*^9, 3.660932462759761*^9}, {
   3.6609325040282345`*^9, 3.660932505245036*^9}, {3.660932559094534*^9, 
   3.6609326329840655`*^9}, 3.6609326652497244`*^9, 3.6609333155608892`*^9, 
   3.660933471550969*^9, {3.660935525003912*^9, 3.6609355493725557`*^9}, {
   3.660935616534277*^9, 3.6609356640039625`*^9}, {3.6609359787996664`*^9, 
   3.6609359804376698`*^9}, {3.660936011124725*^9, 3.6609360628374195`*^9}, {
   3.660936312025669*^9, 3.6609363131644707`*^9}, {3.6610086505309887`*^9, 
   3.6610087845422244`*^9}, {3.6610088382583103`*^9, 3.661008857624342*^9}, {
   3.661008913158429*^9, 3.661008933176461*^9}, {3.6610089769966717`*^9, 
   3.6610089873937407`*^9}, {3.661009149978015*^9, 3.6610091760480566`*^9}, {
   3.661009207397706*^9, 3.6610092972480764`*^9}, {3.6610093926853046`*^9, 
   3.661009452459401*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`mol1ADD$$ = 0, $CellContext`mol1REM$$ = 
    0, $CellContext`mol2ADD$$ = 6.15, $CellContext`mol2REM$$ = 
    0, $CellContext`mp$$ = 1, $CellContext`npr$$ = 1, $CellContext`T$$ = 35, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mp$$], 1, ""}, {1 -> " add ", 2 -> " remove "}}, {{
       Hold[$CellContext`npr$$], 1, ""}, {1 -> Row[{
          Style[" n", Italic], "-octane "}], 2 -> Row[{
          Style[" n", Italic], "-hexane "}]}}, {{
       Hold[$CellContext`T$$], 35, "temperature (\[Degree]C)"}, 20, 40, 1}, {{
       Hold[$CellContext`mol2ADD$$], 0, 
       Row[{"moles ", 
         Style["n", Italic], "-octane"}]}, 0, 10, 0.01}, {{
       Hold[$CellContext`mol1ADD$$], 0, 
       Row[{"moles ", 
         Style["n", Italic], "-hexane"}]}, 0, 10, 0.01}, {{
       Hold[$CellContext`mol2REM$$], 0, 
       Row[{"moles ", 
         Style["n", Italic], "-octane"}]}, 0, -10, 0.01}, {{
       Hold[$CellContext`mol1REM$$], 0, 
       Row[{"moles ", 
         Style["n", Italic], "-hexane"}]}, 0, -10, 0.01}, {
      Hold[
       Grid[{{
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          
          PaneSelector[{
           1 -> PaneSelector[{
              1 -> Manipulate`Place[4], 2 -> Manipulate`Place[5]}, 
              Dynamic[$CellContext`npr$$]], 2 -> 
            PaneSelector[{1 -> Manipulate`Place[6], 2 -> Manipulate`Place[7]}, 
              Dynamic[$CellContext`npr$$]]}, 
           Dynamic[$CellContext`mp$$]]}}, Alignment -> Left]], 
      Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = {
    563., {194., 201.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`mp$54712$$ = 
    False, $CellContext`npr$54713$$ = False, $CellContext`T$54714$$ = 
    0, $CellContext`mol2ADD$54715$$ = 0, $CellContext`mol1ADD$54716$$ = 
    0, $CellContext`mol2REM$54717$$ = 0, $CellContext`mol1REM$54718$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`mol1ADD$$ = 0, $CellContext`mol1REM$$ = 
        0, $CellContext`mol2ADD$$ = 0, $CellContext`mol2REM$$ = 
        0, $CellContext`mp$$ = 1, $CellContext`npr$$ = 1, $CellContext`T$$ = 
        35}, "ControllerVariables" :> {
        Hold[$CellContext`mp$$, $CellContext`mp$54712$$, False], 
        Hold[$CellContext`npr$$, $CellContext`npr$54713$$, False], 
        Hold[$CellContext`T$$, $CellContext`T$54714$$, 0], 
        Hold[$CellContext`mol2ADD$$, $CellContext`mol2ADD$54715$$, 0], 
        Hold[$CellContext`mol1ADD$$, $CellContext`mol1ADD$54716$$, 0], 
        Hold[$CellContext`mol2REM$$, $CellContext`mol2REM$54717$$, 0], 
        Hold[$CellContext`mol1REM$$, $CellContext`mol1REM$54718$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`Psat1$, $CellContext`Psat2$, $CellContext`Px$, \
$CellContext`Py$, $CellContext`n1$, $CellContext`n2$, $CellContext`nT$, \
$CellContext`V$, $CellContext`R$, $CellContext`z1$, $CellContext`\[Rho]$, \
$CellContext`Pigl$, $CellContext`sol$, $CellContext`x1$, $CellContext`y1$, \
$CellContext`P$, $CellContext`nL$, $CellContext`nV$, $CellContext`c1$, \
$CellContext`c2$, $CellContext`c3$}, $CellContext`Psat1$ = 
         10^(4.00266 - 1171.53/($CellContext`T$$ + 
           224.216)); $CellContext`Psat2$ = 
         10^(4.04867 - 1355.126/($CellContext`T$$ + 
           209.367)); $CellContext`Px$[
           Pattern[$CellContext`z$, 
            Blank[]]] := $CellContext`z$ $CellContext`Psat1$ + (
            1 - $CellContext`z$) $CellContext`Psat2$; $CellContext`Py$[
           Pattern[$CellContext`z$, 
            
            Blank[]]] := ($CellContext`z$/$CellContext`Psat1$ + (
             1 - $CellContext`z$)/$CellContext`Psat2$)^(-1); 
        If[$CellContext`npr$$ == 
          1, {$CellContext`n1$ = 2; $CellContext`n2$ = $CellContext`mol2; 
           Null}, {$CellContext`n1$ = $CellContext`mol1; $CellContext`n2$ = 
            0.5; Null}]; If[$CellContext`mp$$ == 1, {
           
           If[$CellContext`npr$$ == 
            1, {$CellContext`n1$ = 
              2; $CellContext`n2$ = $CellContext`mol2ADD$$; 
             Null}, {$CellContext`n1$ = $CellContext`mol1ADD$$; \
$CellContext`n2$ = 0.5; 
             Null}], $CellContext`nT$ = $CellContext`n1$ + $CellContext`n2$; \
$CellContext`z1$ = $CellContext`n1$/$CellContext`nT$; Null}, 
          
          If[$CellContext`npr$$ == 
           1, {$CellContext`n1$ = 
             2; $CellContext`n2$ = $CellContext`mol2REM$$; $CellContext`nT$ = \
$CellContext`n1$ + 
              10 + $CellContext`n2$; $CellContext`z1$ = \
$CellContext`n1$/$CellContext`nT$; 
            Null}, {$CellContext`n1$ = $CellContext`mol1REM$$; \
$CellContext`n2$ = 
             0.5; $CellContext`nT$ = $CellContext`n2$ + 
              10 + $CellContext`n1$; $CellContext`z1$ = (
               10 + $CellContext`n1$)/$CellContext`nT$; 
            Null}]]; $CellContext`V$ = 500; $CellContext`R$ = 
         0.08314; $CellContext`\[Rho]$ = 
         7.6 $CellContext`z1$ + 
          6.154 (1 - $CellContext`z1$); $CellContext`Pigl$ = \
($CellContext`nT$ $CellContext`R$) (($CellContext`T$$ + 
            273)/$CellContext`V$); $CellContext`sol$ = Quiet[
           Part[
            Solve[
             
             And[$CellContext`X1 $CellContext`Psat1$ == $CellContext`Y1 \
$CellContext`p, (1 - $CellContext`X1) $CellContext`Psat2$ == (
                1 - $CellContext`Y1) $CellContext`p, $CellContext`liq + \
$CellContext`vap == $CellContext`nT$, $CellContext`liq/$CellContext`\[Rho]$ + \
($CellContext`vap $CellContext`R$) (($CellContext`T$$ + 
                  273)/$CellContext`p) == $CellContext`V$, $CellContext`X1 \
$CellContext`liq + $CellContext`Y1 $CellContext`vap == 
              If[$CellContext`npr$$ == 1, $CellContext`n1$, 
                
                If[$CellContext`mp$$ == 1, $CellContext`n1$, 
                 10 + $CellContext`n1$]]], {$CellContext`X1, $CellContext`Y1, \
$CellContext`p, $CellContext`liq, $CellContext`vap}], 1]]; 
        If[$CellContext`Pigl$ < $CellContext`Py$[$CellContext`z1$], \
{$CellContext`P$ = $CellContext`Pigl$, $CellContext`nL$ = 
           0, $CellContext`nV$ = $CellContext`nT$; $CellContext`x1$ = 
            0; $CellContext`y1$ = $CellContext`z1$; 
           Null}, {$CellContext`x1$ = 
            ReplaceAll[$CellContext`X1, $CellContext`sol$]; $CellContext`y1$ = 
            ReplaceAll[$CellContext`Y1, $CellContext`sol$]; $CellContext`P$ = 
            ReplaceAll[$CellContext`p, $CellContext`sol$]; $CellContext`nL$ = 
            ReplaceAll[$CellContext`liq, $CellContext`sol$]; $CellContext`nV$ = 
            ReplaceAll[$CellContext`vap, $CellContext`sol$]; 
           Null}]; $CellContext`c1$ = RGBColor[0.6, 0, 0.3]; $CellContext`c2$ = 
         RGBColor[0, 0.76, 0.32]; $CellContext`c3$ = Orange; Grid[{{
            Plot[{
              $CellContext`Px$[$CellContext`x], 
              $CellContext`Py$[$CellContext`x]}, {$CellContext`x, 0, 1}, 
             PlotStyle -> {{Thick, Blue}, {Thick, $CellContext`c3$}}, Axes -> 
             False, Frame -> True, FrameLabel -> {
               Style[
                Row[{
                  Style["n", Italic], "-hexane mole fraction"}], 17], 
               Style["pressure  (bar)", 17]}, LabelStyle -> {Black, 14}, 
             PlotRange -> {{0, 1.}, {0, 0.4}}, 
             PlotRangePadding -> {0.05, {0.04, None}}, 
             ImageSize -> {395, 395}, AspectRatio -> Full, Epilog -> {
               PointSize[0.023], 
               Point[{$CellContext`z1$, $CellContext`P$}], 
               
               If[$CellContext`Pigl$ < $CellContext`Py$[$CellContext`z1$], {
                Thick, Dashed, 
                 
                 Line[{{$CellContext`z1$, -0.1}, {$CellContext`z1$, \
$CellContext`P$}}]}, {Thick, Dashed, 
                 
                 Line[{{$CellContext`x1$, -0.1}, {$CellContext`x1$, \
$CellContext`P$}, {$CellContext`y1$, $CellContext`P$}, {$CellContext`y1$, \
-0.1}}], Blue, 
                 Point[{$CellContext`x1$, $CellContext`P$}], $CellContext`c3$, 
                 Point[{$CellContext`y1$, $CellContext`P$}]}]}], 
            
            BarChart[{{$CellContext`x1$ $CellContext`nL$, (
                1 - $CellContext`x1$) $CellContext`nL$}, {$CellContext`y1$ \
$CellContext`nV$, (1 - $CellContext`y1$) $CellContext`nV$}}, ChartLayout -> 
             "Stacked", ChartStyle -> {$CellContext`c1$, $CellContext`c2$}, 
             ImageSize -> {160, 395}, AspectRatio -> Full, 
             PlotRange -> {0, 11.5}, PlotRangePadding -> None, 
             Frame -> {{True, None}, {True, None}}, FrameLabel -> {None, 
               Style["moles ", 17]}, LabelStyle -> {Black, 14}, 
             ChartLabels -> {{
                Style["liquid", 17], 
                Style["vapor", 17]}, None}, PlotLabel -> Style[
               Column[{
                 Row[{
                   Style["n", Italic, $CellContext`c1$], 
                   Style["-hexane", $CellContext`c1$], " and"}], 
                 Row[{
                   Style["n", Italic, $CellContext`c2$], 
                   Style["-octane", $CellContext`c2$]}]}, Center], 17]]}}]], 
      "Specifications" :> {{{$CellContext`mp$$, 1, ""}, {
         1 -> " add ", 2 -> " remove "}, ControlType -> RadioButton, 
         ControlPlacement -> 1}, {{$CellContext`npr$$, 1, ""}, {1 -> Row[{
             Style[" n", Italic], "-octane "}], 2 -> Row[{
             Style[" n", Italic], "-hexane "}]}, ControlType -> Setter, 
         ControlPlacement -> 
         2}, {{$CellContext`T$$, 35, "temperature (\[Degree]C)"}, 20, 40, 1, 
         Appearance -> "Labeled", ImageSize -> Small, ControlPlacement -> 
         3}, {{$CellContext`mol2ADD$$, 0, 
          Row[{"moles ", 
            Style["n", Italic], "-octane"}]}, 0, 10, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         4}, {{$CellContext`mol1ADD$$, 0, 
          Row[{"moles ", 
            Style["n", Italic], "-hexane"}]}, 0, 10, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         5}, {{$CellContext`mol2REM$$, 0, 
          Row[{"moles ", 
            Style["n", Italic], "-octane"}]}, 0, -10, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 
         6}, {{$CellContext`mol1REM$$, 0, 
          Row[{"moles ", 
            Style["n", Italic], "-hexane"}]}, 0, -10, 0.01, Appearance -> 
         "Labeled", ImageSize -> Small, ControlPlacement -> 7}, 
        Grid[{{
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           
           PaneSelector[{
            1 -> PaneSelector[{
               1 -> Manipulate`Place[4], 2 -> Manipulate`Place[5]}, 
               Dynamic[$CellContext`npr$$]], 2 -> 
             PaneSelector[{
               1 -> Manipulate`Place[6], 2 -> Manipulate`Place[7]}, 
               Dynamic[$CellContext`npr$$]]}, 
            Dynamic[$CellContext`mp$$]]}}, Alignment -> Left]}, 
      "Options" :> {}, "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{612., {250., 257.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.660928495744811*^9, {3.6609286082878103`*^9, 3.660928660076302*^9}, {
   3.660928696147566*^9, 3.6609287299442253`*^9}, 3.6609287655732956`*^9, 
   3.6609289952765045`*^9, 3.660929346481967*^9, 3.660929581119789*^9, 
   3.660929822208824*^9, 3.6609316630047297`*^9, 3.6609316997969956`*^9, 
   3.6609320781662717`*^9, 3.660932344213148*^9, 3.660932464538164*^9, 
   3.6609325067124395`*^9, {3.6609326166428366`*^9, 3.660932634013667*^9}, 
   3.660932666279326*^9, 3.660933322836502*^9, 3.6609350070158834`*^9, 
   3.6609355564151683`*^9, {3.660935638995717*^9, 3.660935665142764*^9}, {
   3.6609359832536745`*^9, 3.6609360233403482`*^9}, 3.6609360662098255`*^9, 
   3.6609363155064754`*^9, 3.660938312135866*^9, 3.6609390380112333`*^9, 
   3.660940800927641*^9, 3.6610084284267817`*^9, 3.661008786099228*^9, 
   3.6610088587643433`*^9, {3.6610089143174305`*^9, 3.661008934408463*^9}, {
   3.661008979122706*^9, 3.6610089892347436`*^9}, {3.6610091549850235`*^9, 
   3.6610091775290594`*^9}, 3.6610092994060946`*^9, 3.66100939636231*^9, 
   3.661009456483407*^9},
 CellID->132082137]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"RGBColor", "[", 
    RowBox[{"1", ",", "0.5", ",", "0.2"}], "]"}], ",", 
   RowBox[{"Hue", "@", "0.85"}]}], "}"}]], "Input",
 CellID->32989829],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.33333333333333337`, 0.13333333333333336`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0.2]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0.2]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0.2],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.85], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.85, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.85]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.85, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.85],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.6609361225849276`*^9, 3.6609368572549706`*^9},
 CellID->221068900]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hue", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", 
   RowBox[{"0", ",", "1", ",", "0.05"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.660935466557407*^9, 3.6609354780566273`*^9}},
 CellID->473775996],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0., 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0., 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.05], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.05000000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.05]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.05, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.05],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.10000000000000002`, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.1, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.15000000000000002`], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.15, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.15000000000000002]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.15000000000000002`, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.15000000000000002`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.2], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.20000000000000004`, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.2]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.2, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.2],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.25], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.25, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.25]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.25, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.25],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.30000000000000004`], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.30000000000000004`, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.30000000000000004]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.30000000000000004`, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.30000000000000004`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.35000000000000003`], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.35000000000000003`, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.35000000000000003]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.35000000000000003`, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.35000000000000003`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.4], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.4000000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.4]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.4, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.4],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.45], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.45, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.45]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.45, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.45],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.5], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.5, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.5, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.55], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.55, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.55]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.55, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.55],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.6000000000000001], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.6000000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.6000000000000001]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.6000000000000001, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.6000000000000001],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.65], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.65, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.65]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.65, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.65],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.7000000000000001], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.7000000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.7000000000000001]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.7000000000000001, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.7000000000000001],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.75], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.75, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.75]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.75, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.75],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.8], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.8000000000000002, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.8]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.8, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.8],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.8500000000000001], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.8500000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.8500000000000001]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.8500000000000001, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.8500000000000001],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.9], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.9, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.9]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.9, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.9],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.9500000000000001], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.9500000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.9500000000000001]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         Hue[0.9500000000000001, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.9500000000000001],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[1.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0., 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[1.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[1., 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[1.],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.6609354789000287`*^9},
 CellID->518211015]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"RGBColor", "[", 
    RowBox[{"1", ",", "0.5", ",", "0.2"}], "]"}], ",", 
   RowBox[{"Hue", "@", "0.1"}], ",", 
   RowBox[{"Hue", "@", "0.85"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6609361361397524`*^9, 3.660936185913642*^9}, {
  3.660936219507902*^9, 3.660936219710703*^9}},
 CellID->747315922],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666666, 0.33333333333333337`, 0.13333333333333336`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0.2]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0.2]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0.2],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.10000000000000002`, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.1, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.85], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.85, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.85]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.85, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.85],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.6609361368261538`*^9, 3.660936186787244*^9}, 
   3.6609362202265034`*^9},
 CellID->306892805]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hue", "@", "#"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"0.4", ",", "0.85"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.660936192285454*^9, 3.660936213464691*^9}, {
  3.660936273155599*^9, 3.660936290626031*^9}},
 CellID->42064274],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.4], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.4000000000000001, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.4]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.4, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.4],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {Hue[0.85], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->Hue[0.85, 1., 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "Hue[0.85]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = Hue[0.85, 0.5, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["HueColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    Hue[0.85],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.6609362058800783`*^9, 3.6609362139668922`*^9}, 
   3.660936291376832*^9},
 CellID->177536107]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Blend", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Blue", ",", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", "0.6", ",", "0"}], "]"}]}], "}"}], ",", "0.5"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.661009027700815*^9, 3.6610090345208254`*^9}},
 CellID->150182028],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0., 0.3, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0., 0.2, 0.33333333333333337`],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[0., 0.3, 0.5]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0., 0.3, 0.5]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0., 0.3, 0.5],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.661009035130826*^9},
 CellID->376759721]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Orange"], "Input",
 CellChangeTimes->{{3.661009471663431*^9, 3.661009472413432*^9}},
 CellID->164706147],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[1, 0.5, 0]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1, 0.5, 0],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.6610094732234335`*^9},
 CellID->220006700]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RGBColor", "[", 
    RowBox[{"1", ",", "#", ",", "0"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"0.2", ",", "0.3", ",", "0.4", ",", "0.5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.661009481478447*^9, 3.6610094970134716`*^9}},
 CellID->628843558],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.2, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.13333333333333336`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.2, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.2, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.2, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.3, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.2, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.3, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.3, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.3, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.4, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.2666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.4, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.4, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.4, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1, 0.5, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.6610094976734724`*^9},
 CellID->88452087]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell["XXXX", "ManipulateCaption"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[1]], RectangleBox[{0, 0}], 
   InsetBox[
    StyleBox["\<\"Thumbnail Placeholder\"\>",
     StripOnInput->False,
     FontFamily->"Verdana",
     FontSize->14], {0.5, 0.6}], InsetBox[
    StyleBox["\<\"Replace this with your\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.45}], InsetBox[
    StyleBox["\<\"Manipulate at a particular setting.\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.39}], InsetBox[
    StyleBox["\<\"(Do not use a bitmap.)\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.315}]},
  ImageMargins->0.,
  ImageSize->220]], "Output",
 CellEditDuplicate->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[GrayLevel[0]], FaceForm[GrayLevel[1]], RectangleBox[{0, 0}], 
   InsetBox[
    StyleBox["\<\"Snapshot Placeholder\"\>",
     StripOnInput->False,
     FontFamily->"Verdana",
     FontSize->14], {0.5, 0.6}], InsetBox[
    StyleBox["\<\"Replace this with your\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.45}], InsetBox[
    StyleBox["\<\"Manipulate at a particular setting.\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.39}], InsetBox[
    StyleBox["\<\"(Do not use a bitmap.)\"\>",
     StripOnInput->False,
     FrontFaceColor->GrayLevel[0.5],
     GraphicsColor->GrayLevel[0.5],
     FontFamily->"Verdana",
     FontSize->10,
     FontColor->GrayLevel[0.5],
     $CellContext`BackFaceColor -> GrayLevel[0.5]], {0.5, 0.315}]},
  ImageMargins->0.,
  ImageSize->220]], "Output",
 CellEditDuplicate->False]
}, Open  ]],

Cell["", "DetailsSection"],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell["", "SearchTermsSection"],

Cell["", "RelatedLinksSection"],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell["Contributed by: XXXX", "Author"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "WindowsANSI"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ResizeImages"->{
  Cell[100202, 2593, 312, 8, 70, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[100517, 2603, 678, 16, 70, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "DragLocators"->{
  Cell[101198, 2621, 340, 11, 70, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "CreateAndDeleteLocators"->{
  Cell[101541, 2634, 637, 15, 70, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "SliderZoom"->{
  Cell[102181, 2651, 844, 21, 70, "ControlSuggestions",
   CellTags->"SliderZoom"]},
 "GamepadControls"->{
  Cell[103028, 2674, 369, 9, 70, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "AutomaticAnimation"->{
  Cell[103400, 2685, 1464, 31, 70, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[104867, 2718, 908, 21, 70, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ResizeImages", 106349, 2765},
 {"RotateAndZoomIn3D", 106459, 2768},
 {"DragLocators", 106570, 2771},
 {"CreateAndDeleteLocators", 106687, 2774},
 {"SliderZoom", 106802, 2777},
 {"GamepadControls", 106909, 2780},
 {"AutomaticAnimation", 107023, 2783},
 {"BookmarkAnimation", 107141, 2786}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 133, 1, 74, "DemoTitle"],
Cell[716, 25, 33, 0, 287, "InitializationSection"],
Cell[CellGroupData[{
Cell[774, 29, 29, 0, 192, "ManipulateSection"],
Cell[CellGroupData[{
Cell[828, 33, 31061, 721, 1777, "Input"],
Cell[31892, 756, 13153, 247, 519, "Output",
 CellID->132082137]
}, Open  ]],
Cell[CellGroupData[{
Cell[45082, 1008, 195, 6, 27, "Input",
 CellID->32989829],
Cell[45280, 1016, 3077, 85, 25, "Output",
 CellID->221068900]
}, Open  ]],
Cell[CellGroupData[{
Cell[48394, 1106, 256, 7, 27, "Input",
 CellID->473775996],
Cell[48653, 1115, 30642, 851, 25, "Output",
 CellID->518211015]
}, Open  ]],
Cell[CellGroupData[{
Cell[79332, 1971, 351, 9, 27, "Input",
 CellID->747315922],
Cell[79686, 1982, 4542, 126, 25, "Output",
 CellID->306892805]
}, Open  ]],
Cell[CellGroupData[{
Cell[84265, 2113, 280, 8, 27, "Input",
 CellID->42064274],
Cell[84548, 2123, 3029, 85, 25, "Output",
 CellID->177536107]
}, Open  ]],
Cell[CellGroupData[{
Cell[87614, 2213, 303, 9, 27, "Input",
 CellID->150182028],
Cell[87920, 2224, 1465, 41, 25, "Output",
 CellID->376759721]
}, Open  ]],
Cell[CellGroupData[{
Cell[89422, 2270, 118, 2, 27, "Input",
 CellID->164706147],
Cell[89543, 2274, 1470, 41, 25, "Output",
 CellID->220006700]
}, Open  ]],
Cell[CellGroupData[{
Cell[91050, 2320, 302, 8, 27, "Input",
 CellID->628843558],
Cell[91355, 2330, 6001, 164, 58, "Output",
 CellID->88452087]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97405, 2500, 36, 0, 169, "ManipulateCaptionSection"],
Cell[97444, 2502, 33, 0, 22, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97514, 2507, 28, 0, 173, "ThumbnailSection"],
Cell[97545, 2509, 1242, 34, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98824, 2548, 28, 0, 143, "SnapshotsSection"],
Cell[98855, 2550, 1241, 34, 230, "Output"]
}, Open  ]],
Cell[100111, 2587, 26, 0, 70, "DetailsSection"],
Cell[CellGroupData[{
Cell[100162, 2591, 37, 0, 70, "ControlSuggestionsSection"],
Cell[100202, 2593, 312, 8, 70, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[100517, 2603, 678, 16, 70, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[101198, 2621, 340, 11, 70, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[101541, 2634, 637, 15, 70, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[102181, 2651, 844, 21, 70, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[103028, 2674, 369, 9, 70, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[103400, 2685, 1464, 31, 70, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[104867, 2718, 908, 21, 70, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[105790, 2742, 30, 0, 70, "SearchTermsSection"],
Cell[105823, 2744, 31, 0, 70, "RelatedLinksSection"],
Cell[CellGroupData[{
Cell[105879, 2748, 25, 0, 70, "AuthorSection"],
Cell[105907, 2750, 38, 0, 70, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
