(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    410173,       9678]
NotebookOptionsPosition[    374928,       8685]
NotebookOutlinePosition[    388514,       9007]
CellTagsIndexPosition[    384959,       8926]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Helpful Guide to Mathematica", "Title"],

Cell[CellGroupData[{

Cell["Contents", "Section"],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Tricks & Shortcuts",
 BaseStyle->"Hyperlink",
 ButtonData->"Tricks & Shortcuts"],
 FontWeight->"Bold",
 FontColor->GrayLevel[0]]], "ItemNumbered",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Greek alphabet keyboard shortcuts",
 BaseStyle->"Hyperlink",
 ButtonData->"Greek alphabet keyboard shortcuts"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Equation formatting",
 BaseStyle->"Hyperlink",
 ButtonData->"Equation formatting"],
 FontColor->GrayLevel[0]]], "Item"],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Superscript",
 BaseStyle->"Hyperlink",
 ButtonData->"Superscript"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Subscript",
 BaseStyle->"Hyperlink",
 ButtonData->"Subscript"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Square root",
 BaseStyle->"Hyperlink",
 ButtonData->"Square root"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Divided by",
 BaseStyle->"Hyperlink",
 ButtonData->"Divided by"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[TextData[StyleBox[ButtonBox["Shortcut to comment out blocks of code",
 BaseStyle->"Hyperlink",
 ButtonData->"Shortcut to comment out code"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 CellChangeTimes->{{3.61944948178617*^9, 3.6194494821421905`*^9}}],

Cell[TextData[StyleBox[ButtonBox["Common Mistakes",
 BaseStyle->"Hyperlink",
 ButtonData->"Common Mistakes"],
 FontWeight->"Bold",
 FontColor->GrayLevel[0]]], "ItemNumbered",
 FontColor->RGBColor[0., 0., 0.]],

Cell[TextData[StyleBox[ButtonBox["Defining functions",
 BaseStyle->"Hyperlink",
 ButtonData->"Defining functions"],
 FontColor->GrayLevel[0]]], "Item",
 FontColor->RGBColor[0., 0., 0.]],

Cell[TextData[StyleBox[ButtonBox["Evaluating a function at a specific value \
(from NDSolve or similar)",
 BaseStyle->"Hyperlink",
 ButtonData->
  "Evaluating a function at a specific value (from NDSolve or similar)"],
 FontColor->GrayLevel[0]]], "Item",
 FontColor->RGBColor[0., 0., 0.]],

Cell[TextData[StyleBox[ButtonBox["Evaluating a function at a specific value \
(not from NDSolve)",
 BaseStyle->"Hyperlink",
 ButtonData->"Evaluating a function at a specific value (not from NDSolve)"],
 FontColor->GrayLevel[0]]], "Item",
 FontColor->RGBColor[0., 0., 0.]],

Cell[TextData[StyleBox[ButtonBox["Formatting",
 BaseStyle->"Hyperlink",
 ButtonData->"Formatting"],
 FontWeight->"Bold",
 FontColor->GrayLevel[0]]], "ItemNumbered",
 FontColor->RGBColor[0., 0., 0.]],

Cell[TextData[StyleBox[ButtonBox["General",
 BaseStyle->"Hyperlink",
 ButtonData->"General"],
 FontColor->GrayLevel[0]]], "Item",
 FontColor->RGBColor[0., 0., 0.]],

Cell[TextData[StyleBox[ButtonBox["Setting font and font size",
 BaseStyle->"Hyperlink",
 ButtonData->"Setting font and font size"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Plotting",
 BaseStyle->"Hyperlink",
 ButtonData->"Plotting"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Frame and frame labels",
 BaseStyle->"Hyperlink",
 ButtonData->"Frame and frame labels"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Line styles",
 BaseStyle->"Hyperlink",
 ButtonData->"Line styles"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Plot legend - labeling curves",
 BaseStyle->"Hyperlink",
 ButtonData->"Plot legend - labeling curves"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Plot labels",
 BaseStyle->"Hyperlink",
 ButtonData->"Plot labels"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Image size and padding",
 BaseStyle->"Hyperlink",
 ButtonData->"Image size and padding"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Shortcut for plot formatting options",
 BaseStyle->"Hyperlink",
 ButtonData->"Shortcut for plot formatting options"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[TextData[StyleBox[ButtonBox["Plot for different values of a parameter",
 BaseStyle->"Hyperlink",
 ButtonData->"Plot for different values of a parameter"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Graphics ",
 BaseStyle->"Hyperlink",
 ButtonData->"Graphics"],
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "ItemNumbered",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Adding arrows to a plot",
 BaseStyle->"Hyperlink",
 ButtonData->"Adding arrows to a plot"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Creating images/diagrams using Graphics",
 BaseStyle->"Hyperlink",
 ButtonData->"Creating images/diagrams using Graphics"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Rectangles",
 BaseStyle->"Hyperlink",
 ButtonData->"Rectangles"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Arrows",
 BaseStyle->"Hyperlink",
 ButtonData->"Arrows"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Displaying text inside a shape",
 BaseStyle->"Hyperlink",
 ButtonData->"Displaying text inside a shape"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[TextData[StyleBox[ButtonBox["Adding Graphics to plots",
 BaseStyle->"Hyperlink",
 ButtonData->"Adding Graphics to plots"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Adding labels to curves (above, next to, \
etc.)",
 BaseStyle->"Hyperlink",
 ButtonData->"Adding labels to curves (above"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Adding labels onto curves (on curve itself)",
 BaseStyle->"Hyperlink",
 ButtonData->"Adding labels onto curves (on curve itself)"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Adding tables and text to plots",
 BaseStyle->"Hyperlink",
 ButtonData->"Adding tables and text to plots"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Adding Graphics to plots using Scaled[ ]",
 BaseStyle->"Hyperlink",
 ButtonData->"Adding graphics to plots using Scaled[ ]"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[TextData[StyleBox[ButtonBox["Text options",
 BaseStyle->"Hyperlink",
 ButtonData->"Text options"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Manipulate Controls",
 BaseStyle->"Hyperlink",
 ButtonData->"Manipulate controls"],
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "ItemNumbered",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Making variables inactive",
 BaseStyle->"Hyperlink",
 ButtonData->"Making manipulated variables inactive"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Labeling Manipulate variables",
 BaseStyle->"Hyperlink",
 ButtonData->"Assigning labels to Manipulate variables"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Incorporating text into the Manipulate \
window",
 BaseStyle->"Hyperlink",
 ButtonData->"Incorporating text into the Manipulate window"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Creating multiple Manipulate windows \
(PaneSelector)",
 BaseStyle->"Hyperlink",
 ButtonData->"Creating multiple Manipulate windows (PaneSelector)"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Making a vertical slider",
 BaseStyle->"Hyperlink",
 ButtonData->"Making a vertical slider"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Putting controls into columns",
 BaseStyle->"Hyperlink",
 ButtonData->"Putting controls into columns"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Continuous updating of \
\[OpenCurlyQuote]Manipulate\[CloseCurlyQuote] variables",
 BaseStyle->"Hyperlink",
 ButtonData->"Continuous updating of 'Manipulate' variables"],
 FontColor->RGBColor[0., 0., 0.]]], "Item"],

Cell[TextData[StyleBox[ButtonBox["Visually separating variables in the \
\[OpenCurlyQuote]Manipulate\[CloseCurlyQuote] window (Delimiter)",
 BaseStyle->"Hyperlink",
 ButtonData->
  "Visually separating variables in the 'Manipulate' window (Delimiter)"],
 FontColor->RGBColor[0., 0., 0.]]], "Item"],

Cell[TextData[StyleBox[ButtonBox["Commonly used Commands in Demonstrations",
 BaseStyle->"Hyperlink",
 ButtonData->"Commonly used commands in demonstrations"],
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "ItemNumbered",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Solving ordinary differential equations \
(ODE)",
 BaseStyle->"Hyperlink",
 ButtonData->"Solving ordinary differential equations (ODE)"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Defining equations for NDSolve (method #1)",
 BaseStyle->"Hyperlink",
 ButtonData->"Defining equations for NDSolve"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Entering ODE\[CloseCurlyQuote]s into \
NDSolve (method #2)",
 BaseStyle->"Hyperlink",
 ButtonData->"Entering ODE's into NDSolve"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[TextData[StyleBox[ButtonBox["Manipulate",
 BaseStyle->"Hyperlink",
 ButtonData->"Manipulate"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Localizing variables (Module)",
 BaseStyle->"Hyperlink",
 ButtonData->"Localizing variables (Module)"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Setup for making buttons for multiple plots \
(Switch)",
 BaseStyle->"Hyperlink",
 ButtonData->"Setup for making buttons for multiple plots (Switch)"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Show multiple plots on same axes",
 BaseStyle->"Hyperlink",
 ButtonData->"Show multiple plots on same axes"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Miscellaneous",
 BaseStyle->"Hyperlink",
 ButtonData->"Miscellaneous"],
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "ItemNumbered",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Entering constants, equations, and \
functions",
 BaseStyle->"Hyperlink",
 ButtonData->"Entering constants"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["If statements",
 BaseStyle->"Hyperlink",
 ButtonData->"If statements"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Control number of digits displayed",
 BaseStyle->"Hyperlink",
 ButtonData->"Control digits displayed"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Select a solution from a list *important*",
 BaseStyle->"Hyperlink",
 ButtonData->"Select a solution from a list *important*"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Localize variables for faster evaluations",
 BaseStyle->"Hyperlink",
 ButtonData->"Localize variables for faster evaluations"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Partial Differential Equations (PDE)",
 BaseStyle->"Hyperlink",
 ButtonData->"Partial differential equations (PDE) in Mathematica"],
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "ItemNumbered",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Writing PDE\[CloseCurlyQuote]s in \
Mathematica",
 BaseStyle->"Hyperlink",
 ButtonData->"Writing PDE's in Mathematica"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Solving PDE\[CloseCurlyQuote]s in \
Mathematica",
 BaseStyle->"Hyperlink",
 ButtonData->"Solving PDE's in Mathematica"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Nonlinear Models",
 BaseStyle->"Hyperlink",
 ButtonData->"Nonlinear Models"],
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "ItemNumbered",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Nonlinear fit of data to rate law",
 BaseStyle->"Hyperlink",
 ButtonData->"Nonlinear fit of data to rate law"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[ButtonBox["Fitting the model",
 BaseStyle->"Hyperlink",
 ButtonData->"Fitting the model"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Plotting the residuals",
 BaseStyle->"Hyperlink",
 ButtonData->"Plotting the residuals"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["3D Plot and points",
 BaseStyle->"Hyperlink",
 ButtonData->"Plot and points"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[TextData[StyleBox[ButtonBox["Nonlinear fit of data",
 BaseStyle->"Hyperlink",
 ButtonData->"Nonlinear fit of data"],
 FontColor->RGBColor[0., 0., 0.]]], "Item",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["No scatter example",
 BaseStyle->"Hyperlink",
 ButtonData->"No scatter example"],
 FontColor->RGBColor[0., 0., 0.]]], "Subitem",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["What You Need Before Submitting",
 BaseStyle->"Hyperlink",
 ButtonData->"What you need to have in a demonstration before submitting"],
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "ItemNumbered",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox[ButtonBox["Troubleshooting Tips",
 BaseStyle->"Hyperlink",
 ButtonData->"Troubleshooting tips"],
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0., 0.]]], "ItemNumbered",
 FontColor->GrayLevel[0]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tricks & Shortcuts", "Section",
 CellTags->"Tricks & Shortcuts"],

Cell[TextData[{
 "This guide is meant to be an additional resource for you to help with your \
demonstrations. The majority of the functions and commands in this guide are \
described in a way that relate more to making an interactive simulation in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". For more information on each command, how they are formatted, and more of \
what you can do with them, please look through the Documentation Center in \
the Help menu. "
}], "Text"],

Cell[CellGroupData[{

Cell["Greek alphabet keyboard shortcuts", "Subsection",
 CellTags->"Greek alphabet keyboard shortcuts"],

Cell["\<\
Most Greek letters correspond directly to the English alphabet, others need \
to be spelled out, \"ESC\" + English letter + \"ESC\". Here are a few examples:
ESC + \"a\" + ESC generates \[Alpha]
ESC + \"r\" + ESC generates \[Rho]
ESC + \"th\" + ESC generates \[Theta]
ESC + \[OpenCurlyDoubleQuote]d\[CloseCurlyDoubleQuote] + ESC generates \[Delta]
ESC + \[OpenCurlyDoubleQuote]pd\[CloseCurlyDoubleQuote] + ESC generates \
\[PartialD]
To get an uppercase Greek letter just use \"SHIFT\" before the English letter
ESC + \"D\" + ESC generates \[CapitalDelta]\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Equation formatting", "Subsection",
 CellTags->"Equation formatting"],

Cell["\<\
Getting equations out of straight line format so your code is easier to read. \
You can also use one of the palettes in Mathematica but this may be quicker.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Superscript", "Subsubsection",
 CellTags->"Superscript"],

Cell[TextData[{
 "Hold \[OpenCurlyDoubleQuote]CTRL\[CloseCurlyDoubleQuote] + \
\[OpenCurlyDoubleQuote]6\[CloseCurlyDoubleQuote] to quickly get a superscript\
\nThe right arrow will bring you out of it.\n10^10 becomes ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "10"], TraditionalForm]]]
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Subscript", "Subsubsection",
 CellTags->"Subscript"],

Cell[TextData[{
 "Hold \[OpenCurlyDoubleQuote]CTRL\[CloseCurlyDoubleQuote] + \
\[OpenCurlyDoubleQuote]-\[OpenCurlyDoubleQuote] to get a subscript\nC_A \
becomes ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "A"], TraditionalForm]]]
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Square root", "Subsubsection",
 CellTags->"Square root"],

Cell[TextData[{
 "Hold \[OpenCurlyDoubleQuote]CTRL\[CloseCurlyDoubleQuote] + \
\[OpenCurlyDoubleQuote]2\[CloseCurlyDoubleQuote] to start entering \
values/equations under the square root. \nThe right arrow key will bring you \
out of it\nx^1/2 becomes ",
 Cell[BoxData[
  FormBox[
   SqrtBox["x"], TraditionalForm]]]
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Divided by", "Subsubsection",
 CellTags->"Divided by"],

Cell[TextData[{
 "Highlight everything in the numerator and with those values/variables \
selected hold \[OpenCurlyDoubleQuote]CTRL\[CloseCurlyDoubleQuote] + \
\[OpenCurlyDoubleQuote]/\[CloseCurlyDoubleQuote] and release, highlight the \
expression you want to stay in the numerator.\n(x+y)/(10*x-y) becomes ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"x", "+", "y"}], 
    RowBox[{
     RowBox[{"10", "*", "x"}], "-", "y"}]], TraditionalForm]]]
}], "Text"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Common Mistakes", "Section",
 CellTags->"Common Mistakes"],

Cell[CellGroupData[{

Cell["Defining functions", "Subsection",
 CellTags->"Defining functions"],

Cell["\<\
Defining a function in terms of a variable when that variable appears nowhere \
in the equation. For example:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   FractionBox[
    RowBox[{"g", "[", "x", "]"}], "2"]}], ";"}]], "Input"],

Cell["\<\
The function f does not directly contain the variable x, g[x] is a function \
of x but f isn\[CloseCurlyQuote]t, so we write it like this:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "=", 
   FractionBox[
    RowBox[{"g", "[", "x", "]"}], "2"]}], ";"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Evaluating a function at a specific value (from NDSolve or similar)\
\>", "Subsection",
 CellTags->
  "Evaluating a function at a specific value (from NDSolve or similar)"],

Cell["\<\
This depends on how you got the function you are evaluating, if the function \
(let\[CloseCurlyQuote]s say g[x]) was obtained by solving an ODE you have to \
evaluate it differently at a specific value of x, let\[CloseCurlyQuote]s \
evaluate g[x] at x=2.\
\>", "Text",
 CellChangeTimes->{{3.6042612335092993`*^9, 3.604261235521637*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"g", "'"}], "[", "x", "]"}], "\[Equal]", 
       RowBox[{"x", "+", "2"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", "[", "0", "]"}], "\[Equal]", "10"}]}], "}"}], ",", "g", 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"g", "\[Rule]", 
    TagBox[
     RowBox[{"InterpolatingFunction", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
      "]"}],
     False,
     Editable->False]}], "}"}], "}"}]], "Output"]
}, Open  ]],

Cell["\<\
You get some function g[x]. Here are two easy ways to solve g[x] at x=2, both \
methods work well and neither is better than the other. You may choose one \
over the other depending on what you are trying to do with your code.\
\>", "Text"],

Cell["1. Evaluate g[x] at s for x=2", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x", "]"}], "/.", "s"}], "/.", 
  RowBox[{"x", "\[Rule]", "2"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "16.000000160977233`", "}"}]], "Output"]
}, Open  ]],

Cell["2. Evaluate g[2] at s", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "2", "]"}], "/.", "s"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "16.000000160977233`", "}"}]], "Output"]
}, Open  ]],

Cell["\<\
You can also evaluate g[x] at a list of values, either of the above methods \
can be used for this.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x", "]"}], "/.", "s"}], "/.", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
   "16.000000160977233`", ",", "20.500000160977237`", ",", 
    "26.000000160977237`", ",", "32.50000016097724`"}], "}"}], 
  "}"}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluating a function at a specific value (not from NDSolve)", \
"Subsection",
 CellTags->"Evaluating a function at a specific value (not from NDSolve)"],

Cell[TextData[{
 "If a function has already been defined and we didn\[CloseCurlyQuote]t need \
to use ",
 StyleBox["NDSolve", "Code",
  FontWeight->"Plain"],
 " (or similar) to get a solution to the equation, then evaluating the \
function at a specific value is very similar to the above methods. The one \
notable difference is you don\[CloseCurlyQuote]t have to evaluate the \
function at the solution to ",
 StyleBox["NDSolve", "Code",
  FontWeight->"Plain"],
 ". "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "x_", "]"}], "=", 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", "*", "x"}], "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "[", "x", "]"}], "/.", 
  RowBox[{"x", "\[Rule]", "5"}]}]}], "Input"],

Cell[BoxData["36"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", "[", "5", "]"}]], "Input"],

Cell[BoxData["36"], "Output"]
}, Open  ]],

Cell["\<\
You can also evaluate the function at a list of values. Then if you needed to \
extract one value from this list, write which component (1 for first, 2 for \
second, etc.) in double square brackets at the end of the expression.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "x", "]"}], "/.", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9", ",", "16", ",", "25", ",", "36"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}], "]"}], "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input"],

Cell[BoxData["16"], "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Formatting", "Section",
 CellTags->"Formatting"],

Cell["\<\
Formatting is necessary for all good, valuable demonstrations. If your \
demonstration does not contain any of the following formatting options (or \
similar), it would be a good idea to add them in order to help you\
\[CloseCurlyQuote]re demonstration stand out from the others. The goal is to \
format it in such a way that not only makes your demonstration standout, but \
also translates your concept or idea well. \
\>", "Text",
 CellChangeTimes->{{3.6042613498051696`*^9, 3.6042613505726795`*^9}}],

Cell[CellGroupData[{

Cell["General", "Subsection",
 CellTags->"General"],

Cell[CellGroupData[{

Cell["Setting font and font size", "Subsubsection",
 CellTags->"Setting font and font size"],

Cell[TextData[{
 "This can also be done inside the ",
 StyleBox["Plot", "Code",
  FontWeight->"Plain"],
 " command. Changing the font type is not advised if you are submitting your \
demonstration to the Wolfram Demonstrations Project. "
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
       RowBox[{"FontSize", "\[Rule]", "16"}]}], "}"}]}]}], "]"}], 
  ";"}]], "Input"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting", "Subsection",
 CellTags->"Plotting"],

Cell[CellGroupData[{

Cell["Frame and frame labels", "Subsubsection",
 CellTags->"Frame and frame labels"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["t", "2"], ",", 
     RowBox[{"2", "*", "t"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<time (s)\>\"", ",", 
      "\"\<concentration (mol \!\(\*SuperscriptBox[\(L\), \(-1\)]\))\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"LabelStyle", "\[Rule]", "16"}]}], "]"}]], "Input",
 CellChangeTimes->{3.64062467109718*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJw90GtM01cch/FigS2lGCoTuUj5tweplIvUkyVqlPNVTHSARkVmgtmUym2K
KIQmDvCGIhKDVkcEIaRBpsYYcC51CboxhygiUINs6oRlhtoYURNd7aSIY5r+
7Isnn/ePxrhjXe40mUy26n0fbN5j9DfkHEn22JTcPSSlb5C+ER6/FVM3Ow9I
XmtE87XaKD+vp0ThEtP2N1EfPS+G3hbUvfTaIT4ZHtW98NorWm5bip95/VO0
X6wZLkx8SI6JfDF46nmJnXSKIkes3dr+lHQLheag7u8FL0kZjgb16Vs2O4VH
OYzD63+V9/8rPPqj+MZB4w7dhPCowKWdyozQL94Jj4FoKd82lrRBRgah0jK5
9vVzH1IF2dAj/FwmJ4MRU5q3a73ej5yJx676LwN+8SdDkOrYuvtE8adkKFY/
Nsep1QoyHGPXjftutQWQEUhU3YtM2RRIRkIhXNkjzumkGiteZL3RZgaREh50
5fhkxatIDS4f7v5acqlIDfL8TI9sthmkFltKyi8rG4NJhnn5cbb07M/IaNyZ
ER9gWjiTnIOr7ZVN8fIQMgblPvo1/X+FkDFQjJStLLLOInVwnNXUWSpCybmo
mxvm25EZRsbC3JjXky2Fk3pk1X1lUz4JJ/UYX37GbemMIONgdyzb1VU9m4zH
6SWGiIHsSDIBbVUmVX6CmkxEdeaWNLlLTSbi85GW89UDUeQ8NMQ2tQ2kSWQS
9l6rbUjrkMgkrIrIPHM7WkMasLSoZ6OqRkMaYJltjO5//9WjAdHXz51cvVFL
zoc5oUt/t1NLzkee03ewV89IDuOlf6SaY4zkKKzMmEw9zkgOU4b1vvI7RnIc
dpmOmk8ykqN9ofttfTMjOdy/Td07e4GRHOa7ytruHkZyNLZuLzjUy0iO1lJb
yso+RnL8FGKe6LMxkmMkK7hg6A9GcujsYSmjdkZyJFnL1N87GMmxqGrYnfuE
kRzpuuYfno4xkqNkm6R+9YqRHBWL97t/dDKSoypw9PdSFyM5Gi62HhkfZyTH
6X2++VcmGMlxYW3usopJRnJYtTcjk/9jJEenM8Y9NcVIjv8Bl5Aqng==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{{
     FormBox[
     "\"concentration (mol \\!\\(\\*SuperscriptBox[\\(L\\), \\(-1\\)]\\))\"", 
      TraditionalForm], None}, {
     FormBox["\"time (s)\"", TraditionalForm], None}},
  LabelStyle->(FontSize -> 16),
  Method->{},
  PlotRange->{{0, 10}, {0., 99.99999591836738}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Line styles", "Subsubsection",
 CellTags->"Line styles"],

Cell[TextData[{
 "If there is only one curve then only one set of curly brackets { } is \
needed after ",
 StyleBox["PlotStyle", "Code",
  FontWeight->"Plain"],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["t", "2"], ",", 
     RowBox[{"2", "*", "t"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Green", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Thick", ",", "Dashed"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 1, 0], Thickness[Large], LineBox[CompressedData["
1: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
     "]]}, 
   {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
    LineBox[CompressedData["
1:eJw90GtM01cch/FigS2lGCoTuUj5tweplIvUkyVqlPNVTHSARkVmgtmUym2K
KIQmDvCGIhKDVkcEIaRBpsYYcC51CboxhygiUINs6oRlhtoYURNd7aSIY5r+
7Isnn/ePxrhjXe40mUy26n0fbN5j9DfkHEn22JTcPSSlb5C+ER6/FVM3Ow9I
XmtE87XaKD+vp0ThEtP2N1EfPS+G3hbUvfTaIT4ZHtW98NorWm5bip95/VO0
X6wZLkx8SI6JfDF46nmJnXSKIkes3dr+lHQLheag7u8FL0kZjgb16Vs2O4VH
OYzD63+V9/8rPPqj+MZB4w7dhPCowKWdyozQL94Jj4FoKd82lrRBRgah0jK5
9vVzH1IF2dAj/FwmJ4MRU5q3a73ej5yJx676LwN+8SdDkOrYuvtE8adkKFY/
Nsep1QoyHGPXjftutQWQEUhU3YtM2RRIRkIhXNkjzumkGiteZL3RZgaREh50
5fhkxatIDS4f7v5acqlIDfL8TI9sthmkFltKyi8rG4NJhnn5cbb07M/IaNyZ
ER9gWjiTnIOr7ZVN8fIQMgblPvo1/X+FkDFQjJStLLLOInVwnNXUWSpCybmo
mxvm25EZRsbC3JjXky2Fk3pk1X1lUz4JJ/UYX37GbemMIONgdyzb1VU9m4zH
6SWGiIHsSDIBbVUmVX6CmkxEdeaWNLlLTSbi85GW89UDUeQ8NMQ2tQ2kSWQS
9l6rbUjrkMgkrIrIPHM7WkMasLSoZ6OqRkMaYJltjO5//9WjAdHXz51cvVFL
zoc5oUt/t1NLzkee03ewV89IDuOlf6SaY4zkKKzMmEw9zkgOU4b1vvI7RnIc
dpmOmk8ykqN9ofttfTMjOdy/Td07e4GRHOa7ytruHkZyNLZuLzjUy0iO1lJb
yso+RnL8FGKe6LMxkmMkK7hg6A9GcujsYSmjdkZyJFnL1N87GMmxqGrYnfuE
kRzpuuYfno4xkqNkm6R+9YqRHBWL97t/dDKSoypw9PdSFyM5Gi62HhkfZyTH
6X2++VcmGMlxYW3usopJRnJYtTcjk/9jJEenM8Y9NcVIjv8Bl5Aqng==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 10}, {0., 99.99999591836738}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot legend - labeling curves", "Subsubsection",
 CellTags->"Plot legend - labeling curves"],

Cell["Commands in italics are not necessary, but are encouraged.", "Text",
 CellChangeTimes->{{3.6042614572689276`*^9, 3.6042614586838655`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["t", "2"], "+", "2"}], ",", 
     RowBox[{"2", "*", "t"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "\[IndentingNewLine]", 
    RowBox[{"Placed", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(f\), \(1\)]\)(t)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(f\), \(2\)]\)(t)\>\""}], "}"}], "]"}], ",",
       "\[IndentingNewLine]", "Above"}], "]"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, {
      Hue[0.67, 0.6, 0.6], 
      LineBox[CompressedData["
1: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
lAKVi6prW1skcHUb/L4VToH/A1P9Y9U=
       "]]}, {
      Hue[0.9060679774997897, 0.6, 0.6], 
      LineBox[CompressedData["
1:eJw90GtM01cch/FigS2lGCoTuUj5tweplIvUkyVqlPNVTHSARkVmgtmUym2K
KIQmDvCGIhKDVkcEIaRBpsYYcC51CboxhygiUINs6oRlhtoYURNd7aSIY5r+
7Isnn/ePxrhjXe40mUy26n0fbN5j9DfkHEn22JTcPSSlb5C+ER6/FVM3Ow9I
XmtE87XaKD+vp0ThEtP2N1EfPS+G3hbUvfTaIT4ZHtW98NorWm5bip95/VO0
X6wZLkx8SI6JfDF46nmJnXSKIkes3dr+lHQLheag7u8FL0kZjgb16Vs2O4VH
OYzD63+V9/8rPPqj+MZB4w7dhPCowKWdyozQL94Jj4FoKd82lrRBRgah0jK5
9vVzH1IF2dAj/FwmJ4MRU5q3a73ej5yJx676LwN+8SdDkOrYuvtE8adkKFY/
Nsep1QoyHGPXjftutQWQEUhU3YtM2RRIRkIhXNkjzumkGiteZL3RZgaREh50
5fhkxatIDS4f7v5acqlIDfL8TI9sthmkFltKyi8rG4NJhnn5cbb07M/IaNyZ
ER9gWjiTnIOr7ZVN8fIQMgblPvo1/X+FkDFQjJStLLLOInVwnNXUWSpCybmo
mxvm25EZRsbC3JjXky2Fk3pk1X1lUz4JJ/UYX37GbemMIONgdyzb1VU9m4zH
6SWGiIHsSDIBbVUmVX6CmkxEdeaWNLlLTSbi85GW89UDUeQ8NMQ2tQ2kSWQS
9l6rbUjrkMgkrIrIPHM7WkMasLSoZ6OqRkMaYJltjO5//9WjAdHXz51cvVFL
zoc5oUt/t1NLzkee03ewV89IDuOlf6SaY4zkKKzMmEw9zkgOU4b1vvI7RnIc
dpmOmk8ykqN9ofttfTMjOdy/Td07e4GRHOa7ytruHkZyNLZuLzjUy0iO1lJb
yso+RnL8FGKe6LMxkmMkK7hg6A9GcujsYSmjdkZyJFnL1N87GMmxqGrYnfuE
kRzpuuYfno4xkqNkm6R+9YqRHBWL97t/dDKSoypw9PdSFyM5Gi62HhkfZyTH
6X2++VcmGMlxYW3usopJRnJYtTcjk/9jJEenM8Y9NcVIjv8Bl5Aqng==
       "]]}}, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> True, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
    Method -> {}, PlotRange -> {{0, 10}, {0., 101.99999591836738`}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],
   TemplateBox[{
    "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(1\\)]\\)(t)\"", 
     "\"\\!\\(\\*SubscriptBox[\\(f\\), \\(2\\)]\\)(t)\""}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
          GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
          GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
             ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot labels", "Subsubsection",
 CellTags->"Plot labels"],

Cell[TextData[{
 StyleBox["Style", "Code",
  FontWeight->"Plain"],
 " is used so you can easily set a font size or type. \
\[OpenCurlyDoubleQuote]16\[CloseCurlyDoubleQuote] is the equivalent of ",
 StyleBox["FontSize\[Rule]16", "Code",
  FontWeight->"Plain"],
 " here."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], "*", "t"}], "+", "40"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<batch reactor\>\"", ",", "16"}], "]"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVx3081AcAx/GTp+06XulBKQ/HT8lTpf0IHb/v3cUaR+Vh1UXbXeKMPNyc
QnrwMEl0ynJpMqSHVUKn1ZI8pSQU09NpykUvVlPdLl3Urf3xeb1fH2thfNDW
aTQaLeBz/1u6S2jgEpHnPZhyeEqr5aKtj8lbz4ymNMd9Prp9fm17YyaTmULN
bpv4uO0TF6VN+Vb6zFxqtXGYVjHFRayXZNuE1VGqtsJ22mUNF32ToqLXVmeo
jM56wwQVF4aKIbtXVleohRYPZz4d4aL8dlni31YdVEyTuX1TFxfVF3IVsUse
U+xHhTzfYi6iqHtHX4qVlH6yyzFRBBdxw/ZKefUo1V8zsmH/ci7o1ll2g+6v
qfFrOUbiKQ4KZnQ6lH+voiYCg1+pOzgQKkKu6955R/nV0duowxwk3sgSxtt9
oM5cfPBlbjgHtQmM4HnffKTU7j2pcY4clKfFjC1bT8MBad2QmZqNjLKpdf++
1MGM2CaJoIUNWt9TNKTq4tdh5fbTUjYWJUXuCHHQR5qLKqGez8ZzdfG3068Z
YJWO88+bF7PhN/xD+qHEL7C+Mqim6w0Q+FzqaGlJR7Iy35PVAIy1CvfcOj8d
madU4777gSUm9y243xnhsZfPL3NDADqlFgyojGG1ofnHLGvg61f8CZvQGQjL
DcqK66fwsCVCh+9kgqLjAdreaAr1+9o2M9UmOHm19G68PoVIfcnT7u6ZCEi/
cVAm88YWcVo9o2QWun05VZrl3lga5djNE8yGiDcm29jjhZ6ZTtMlHnMgexed
6rPFC1erM4456Zqi4rR3XfQnFtJ0HNbeeWIKjnbsgVkhC/SB1NVx8rmYLGxR
3FrIwvBJ66KynfNQ4DTuWtO8EkWLzfSuhJrhUowqnQhdCWlJ5E0Bcz4u1/HM
e8Y9wS8K72a8mI8+13uylAOeeL+qSlPWuABZ4c66NUxPKIc5O1pyzGGc/1er
ZYMHKrxcFnQJLLBUECU2W+OB89kSkyhnSzh4+WznjbojJ3SLv67aEqzQQP6u
bHe4DpSfyemywojJUkeWmTtk9sfOd/kzIbofEbRcvgK7m/Jl/leY2EuJo+S+
KxCwILTqtq01Lj7/je+qcAM77uYmk1xrXC90P/FPshvKzIW2d9TWEChLFV/R
3WDbeupI4CYbDLA2RNeecIXUucWht9EGCb1e/c5sV0Sq9O51OBAoYUwucesn
Iax9y8w9SOB4oNFgcgKJ2IzgKb9CAkXp53Tr40hIguUPGIcJ5J3zX6yKJbFP
LSmQHiGwg74/MT6aRLWHZrK4lEBQu4GeSEhC06y9f/IsAUNvmv3GEBLSXkZ+
200CCc4q8Up3EiWV20Q/dRCIDDtUnOJGojKpm7u6k0B4nkvD7ySJS6bSD53d
BPxG4/VJFxID/Fmivn4CtlUvi50cSNgpzbhDSgKPzEcaLMxJLJOnWp4YJnDX
P/vZpvkkPLMVmq0vCLSn2hqUzCPBsyutGR0jIH8oXGM6h4Q4hmn55g2BgqLB
Z8bGJHay9mrqVASyWncZBDBIZBsN/ZmkJpD21sIxj05CdqEy7/17AqK1YUmG
hiQq9uhF/fGBwObdkzIffRJn123l7JwiEFpdci1Tl4Tcpt3C+xMB3hOPoWYd
Eo2qRRqtlgCH8ciARiPxH52yHR4=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 20.},
  Method->{},
  PlotLabel->FormBox[
    StyleBox["\"batch reactor\"", 16, StripOnInput -> False], TraditionalForm],
  PlotRange->{{0, 10}, {20.000000408163267`, 39.99999959183673}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Image size and padding", "Subsubsection",
 CellTags->"Image size and padding"],

Cell[TextData[{
 StyleBox["ImagePadding", "Code",
  FontWeight->"Plain"],
 " prevents a plot from \[OpenCurlyDoubleQuote]jiggling\
\[CloseCurlyDoubleQuote]. Often when using ",
 StyleBox["Manipulate", "Code",
  FontWeight->"Plain"],
 ", as you move the slider, the axes on the plot change as the function is \
being evaluated. You\[CloseCurlyQuote]ll see that the values on the vertical \
axis change and depending on the sig figs, it will look like the numbers are \
pushing on the plot frame, making the plot \[OpenCurlyDoubleQuote]jiggle\
\[CloseCurlyDoubleQuote]. \nAdding ",
 StyleBox["ImagePadding", "Code",
  FontWeight->"Plain"],
 " basically prevents the plot from expanding/contracting by setting a \
boundary between the edge of the plot and the bounds of the",
 StyleBox[" ImageSize", "Code",
  FontWeight->"Plain"],
 ". Think of it like adding a mat board to a picture frame so the picture \
sits in the frame nice and snug even if the frame is otherwise too big for \
the picture. Unless you set a ",
 StyleBox["PlotRange", "Code",
  FontWeight->"Plain"],
 ", you should add ",
 StyleBox["ImagePadding", "Code",
  FontWeight->"Plain"],
 " before submitting your demonstration."
}], "Text"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   "\t", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"horizontal", " ", "length"}], ",", 
      RowBox[{"vertival", " ", "length"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"ImagePadding", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"left", " ", "bound"}], ",", 
        RowBox[{"right", " ", "bound"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bottom", " ", "bound"}], ",", " ", 
        RowBox[{"top", " ", "bound"}]}], "}"}]}], "}"}]}]}], "]"}]], "Code"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "sm", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sm", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Ca", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"-", "0.1"}], "*", 
             RowBox[{"Ca", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Ca", "[", "0", "]"}], "\[Equal]", "Cao"}]}], "}"}], ",", 
         "Ca", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Ca", "[", "t", "]"}], "/.", "sm"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"350", ",", "200"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ImagePadding", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"20", ",", "15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"25", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}]}], 
    RowBox[{"(*", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"left", ",", "right"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"bottom", ",", "top"}], "}"}]}], "}"}], "*)"}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Cao", ",", "2", ",", "\"\<initial concentration of A\>\""}], 
      "}"}], ",", "1", ",", "5", ",", "0.5"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Cao$$ = 3., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`Cao$$], 2, "initial concentration of A"}, 1, 5, 
      0.5}}, Typeset`size$$ = {350., {98., 102.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`Cao$8403$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`Cao$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`Cao$$, $CellContext`Cao$8403$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`sm$}, $CellContext`sm$ = 
         NDSolve[{
           Derivative[
             1][$CellContext`Ca][$CellContext`t] == (-0.1) \
$CellContext`Ca[$CellContext`t], $CellContext`Ca[
             0] == $CellContext`Cao$$}, $CellContext`Ca, {$CellContext`t, 0, 
            10}]; Plot[
          ReplaceAll[
           $CellContext`Ca[$CellContext`t], $CellContext`sm$], \
{$CellContext`t, 0, 10}, PlotRange -> All, Frame -> True, 
          ImageSize -> {350, 200}, ImagePadding -> {{20, 15}, {25, 10}}]], 
      "Specifications" :> {{{$CellContext`Cao$$, 2, 
          "initial concentration of A"}, 1, 5, 0.5}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{401., {143., 150.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Shortcut for plot formatting options", "Subsubsection",
 CellTags->"Shortcut for plot formatting options"],

Cell[TextData[{
 "If you have multiple plots that all have the same formatting options, you \
can use this trick to define all of them and then call on this command in \
each plot. This will save time if you need to change your plot formatting \
options, instead of changing them in every ",
 StyleBox["Plot", "Code",
  FontWeight->"Plain"],
 " function, you can change it once using this trick. \nYou can have more \
than one set of options too, just name the ",
 StyleBox["Sequence", "Code",
  FontWeight->"Plain"],
 " something different (specs2, specs3, etc.)"
}], "Text",
 CellChangeTimes->{3.604261861047937*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"specs", "=", 
    RowBox[{"Sequence", "[", 
     RowBox[{"(*", 
      RowBox[{
      "Sequence", " ", "will", " ", "lump", " ", "a", " ", "series", " ", 
       "of", " ", "arguments", " ", "together", " ", "to", " ", "be", " ", 
       "used", " ", "in", " ", "a", " ", "function"}], "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"plot", " ", "formatting", " ", "options"}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "enter", " ", "options", " ", "here", " ", "as", " ", "you", " ", "would", 
    " ", "normally", " ", "do", " ", "inside", " ", "Plot"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"function", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      SubscriptBox["x", "min"], ",", 
      SubscriptBox["x", "max"]}], "}"}], ",", 
    RowBox[{"Evaluate", "@", "specs"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "instead", " ", "of", " ", "putting", " ", "formatting", " ", "options", 
      " ", "after", " ", "the", " ", "x"}], "-", "range"}], ",", " ", 
    RowBox[{"say", " ", 
     RowBox[{"Evaluate", "@", "specs"}]}]}], 
   "*)"}]}], "\[IndentingNewLine]"}], "Code"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", "specs", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"specs", "=", 
     RowBox[{"Sequence", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<Sin(x)\>\""}], "}"}]}]}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
      RowBox[{"Evaluate", "@", "specs"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{{
     FormBox["\"Sin(x)\"", TraditionalForm], None}, {
     FormBox["\"x\"", TraditionalForm], None}},
  Method->{},
  PlotRange->
   NCache[{{-Pi, Pi}, {-0.9999998782112116, 
     0.9999998592131705}}, {{-3.141592653589793, 
    3.141592653589793}, {-0.9999998782112116, 0.9999998592131705}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot for different values of a parameter", "Subsection",
 CellTags->"Plot for different values of a parameter"],

Cell["\<\
If you have a function of x and y (which will produce a 3D plot) you can \
select different values of a single variable to plot if you want a 2D plot \
instead. \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", 
   FractionBox[
    RowBox[{"y", "*", "x"}], 
    RowBox[{"1", "+", 
     RowBox[{"y", "*", "x"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "2"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "0.5"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
MqH0ciaDI/b/AFPLJNw=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwVzXk81Hkcx/FxVesoSso94ydqED0e2z6o+HxLD2RkCdl45Bh3JUuRHGnF
TlPKsMp0zFoZiZbUgxy5Qm5TZkJFkjFm5hddY2JQs7N/vB+vx/OvN4kadyhC
mUAg+Cj2f1nnqKt2hF922jCTPmoXnurUySN6+BNjgLEpczhd7wjIu1ouEIln
4bDmp+JEzRhgtV0xVSPSoZiRFMZZTIYTjomxC6Y3IKCOLVHhXgTecnTBZ9Ny
iM1lvRFmM2H12JTlnGkDNKd307UlZVDcVxT/wbQXKth75RvfP4Z5Zi35XU4v
EIhG6zx214FLVD+fK+uFEt+46D3X6mBWZcGvkdcHelodDgfd6sHe0XMXnTYA
rnsXNOzvN8CLByvKlp+eQ327jJ4U3gQZfdbuO4J5MInX6Xnx2qDqAX3sxPY3
MHhhOYzS9AyiYOjGbAIfCONdvDXDg3BSsI1fUyWGbdmyFzM+XFAnZVm+s/8M
ecarbctow3BVu59cHCIB72AqLQh7BdQx31aVgW9g9JvFfvI/byD+WRY1znIJ
okqZahk94/Dwd02fzQe+Q37yq6St1yagOPU4budPQEOvD82aWU1CZtGK9/ys
EspptGhKE00CgTeJmlJUUDDVdqI67z1YnI5M9iWroUVChr2LwxRMSwsPazSv
Qhki5qb0nilwFxxLz49fgzI7WpfM/fngOc2wMjFRRyVLgvz5UT7gHdTzPZUa
qHolV9vOdRq264wYOwdrIe0fQTE2ddOgDtLQcclaNOlCEh3bLADXuYAFMz9t
5DrdXViWIoBX7eFKAdY6iGLuNH/jpQBqL3YGEaU6aI9GfcE+bAYi1RInOZz1
SJ3DKvM/NQNhCam1mjc3oHWtgfR7DTNgG2XF8QjVRW6eFJeupRl4vt5aI9Fh
IzLgXT1yzlEIT6oyb1mr6KHvZPcLQclCSFUiew281UPhx3kLPTVCUB9PcTtZ
swnF5ARd+jgrBMFdUkFR2mZE/UALqTYRQcFWfdUGP330Vj0kTfmQCBg3I7tD
iQYoS650hpUhgoCCoxxNocJqSae8KkSwuL9UVtRiiN4dkdTnjIiAL9iX3E4z
QmcORLKXv4vgjuMOw8FQY2Trp9s5ZiGGyuxEnSgbE9Sf/Mg/lCIGml8YRUVq
giZW39FojhXDzvHictqgKWLOeBim5YmBue1W5SCFiCoujQ+dfyiGjLYrTEoD
EVF+WuBxuWI4aOhX2mdOQs72FXcdvoph78nuQB06CcmDL83FrMWhyIhqPiAl
Ia3WZvaoFQ7mHWXXPQPNEC25rcHTBQeGTTuZ22KG9M9wvAKDcYiUqA71kjE0
EvzJ8dpZHKgPvxLpuRgqX5ZF7MzD4USmz4p7HoaCnEP0WQon+tSMav6Foaoh
r2bVfBwuShOvMq5jyK5gYoSncJWDbLmQhaHanVre8QU4yJ7KR+7exxDjcV14
eaHin6t5pbMbQ0/615PW/o3DzZLY6D97MfRLTMjsKYVLTnOc3fox9O9H9r3X
Cj/WYyz1czD0VJk4zy7CYTxgQzRvGEO63rtHdxXjYMnXd57iY0hw9MOLMDYO
djUpJmwBhrRlP1f2KLwre0wWIcQQ79eKFJtSHDwsWdViHEMGzlvE3xROOE40
+fIFQ9O5dbr0MhzS9vwheyTBUMPRxpQ5hbO1pl6elmLIfl6Z630PB+aDksuL
ixi6HZfga1COw53zqlGNSxjyGyjKOKfwfe+IfWkrGAp7b3p7SuEasy5jpx8Y
8hJJy10qcGiRWMjkcgzV628pr1D4P2t4i54=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 10}, {0., 0.9523809514554121}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphics", "Section",
 CellTags->"Graphics"],

Cell[CellGroupData[{

Cell["Adding arrows to a plot", "Subsection",
 CellTags->"Adding arrows to a plot"],

Cell[TextData[{
 "Write the ",
 StyleBox["Plot", "Code",
  FontWeight->"Plain"],
 " function as you normally would and use ",
 StyleBox["PlotStyle", "Code",
  FontWeight->"Plain"],
 " to add the arrows. The command should be entered the following way:"
}], "Text"],

Cell[BoxData[
 RowBox[{"PlotStyle", "\[Rule]", 
  RowBox[{"Arrowheads", "[", "\[IndentingNewLine]", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"ConstantArray", "[", 
      RowBox[{
       RowBox[{"size", " ", "of", " ", "arrowheads"}], ",", 
       RowBox[{"#", "of", " ", "arrowheads"}]}], "]"}], ",", "\n", 
     RowBox[{"element", " ", "to", " ", "be", " ", "prepended"}]}], " ", 
    RowBox[{"(*", 
     RowBox[{
     "arrows", " ", "start", " ", "at", " ", "beginning", " ", "or", " ", 
      "end", " ", "of", " ", "function"}], "*)"}], "]"}], "]"}]}]], "Code"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["t", "2"], "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "*", "t"}], "]"}]}], ",", 
      RowBox[{
       SuperscriptBox["t", "2"], "*", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", "*", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"Arrowheads", "[", "\[IndentingNewLine]", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0.05", ",", "5"}], "]"}], ",", "0"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], "/.", 
  RowBox[{"Line", "\[Rule]", "Arrow"}]}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Arrowheads[{0, 0.05, 0.05, 0.05, 0.05, 0.05}], 
    ArrowBox[CompressedData["
1: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
Yq79P9b1upw=
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-22.697723490672256`, 
   39.47841760435743}, {-24.082958429170535`, 3.9452992406854124`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Creating images/diagrams using Graphics", "Subsection",
 CellTags->"Creating images/diagrams using Graphics"],

Cell["\<\
Use the following to create diagrams to add to your demonstration.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Rectangles", "Subsubsection",
 CellTags->"Rectangles"],

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "Add", " ", "in", " ", "any", " ", "formmating", " ", "here", " ", 
        "followed", " ", "by", " ", "the", " ", "shape"}], ",", " ", 
       RowBox[{"here", " ", "are", " ", "a", " ", "few", " ", "examples"}]}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"EdgeForm", "[", 
       RowBox[{"Formatting", " ", "for", " ", "the", " ", "border"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"FaceForm", "[", 
       RowBox[{
       "Formatting", " ", "for", " ", "inside", " ", "the", " ", "rectangle", 
        " ", "or", " ", "shape"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["x", "min"], ",", 
          SubscriptBox["y", "min"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["x", "max"], ",", 
          SubscriptBox["y", "max"]}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
      "}"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", 
         RowBox[{"bound", ",", "min"}]], ",", 
        SubscriptBox["x", 
         RowBox[{"bound", ",", "max"}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["y", 
         RowBox[{"bound", ",", "min"}]], ",", 
        SubscriptBox["y", 
         RowBox[{"bound", ",", "max"}]]}], "}"}]}], "}"}]}]}], "]"}]], "Code"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", 
       RowBox[{"AbsoluteThickness", "[", "1", "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FaceForm", "[", "None", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.3"}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
      "}"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1"}], ",", "0.6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1"}], ",", "0.4"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  {EdgeForm[AbsoluteThickness[1]], FaceForm[None], 
   RectangleBox[{0, 0}, {0.5, 0.3}]},
  ImageSize->Small,
  PlotRange->{{-0.1, 0.6}, {-0.1, 0.4}}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Arrows", "Subsubsection",
 CellTags->"Arrows"],

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", "\n", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Arrowheads", "[", 
       RowBox[{"size", " ", "of", " ", "arrowhead"}], "]"}], ",", "\n", "\t", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["x", "tail"], ",", 
           SubscriptBox["y", "tail"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["x", "head"], ",", 
           SubscriptBox["y", "head"]}], "}"}]}], "}"}], "]"}]}], "\n", "\t", 
     "}"}], "\n", "}"}], ",", "\n", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1"}], ",", "1.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}]}], "}"}]}]}], "]"}]], "Code"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Arrowheads", "[", "0.05", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1"}], ",", "1.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[
  {Arrowheads[0.05], ArrowBox[{{0, 0}, {1, 0}}]},
  PlotRange->{{-0.1, 1.1}, {-0.1, 0.1}}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Displaying text inside a shape", "Subsubsection",
 CellTags->"Displaying text inside a shape"],

Cell[TextData[{
 "Approach #1\nYou will make a rectangle (or other shape) as you normally \
would, then to add text add the following highlighted command inside a new \
set of curly brackets { }. The way the ",
 StyleBox["Text", "Code",
  FontWeight->"Plain"],
 " command is formatted below is just a suggestion, writing it out this way \
will allow you to control the font size, face, color, etc. of the text. "
}], "Text"],

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{
       "add", " ", "in", " ", "any", " ", "additional", " ", "formatting", 
        " ", "to", " ", "the", " ", "shape", " ", "here"}], "*)"}], 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["x", "min"], ",", 
          SubscriptBox["y", "min"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["x", "max"], ",", 
          SubscriptBox["y", "max"]}], "}"}]}], "]"}], "\n", "\t", "}"}], ",", 
     "\[IndentingNewLine]", "\t", 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<text to be displayed\>\"", ",", 
           RowBox[{
           "formatting", " ", "to", " ", "text", " ", "is", " ", "added", " ",
             "here"}]}], "]"}], ",", "\n", "\t\t", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox[
            StyleBox["x",
             Background->RGBColor[1, 1, 0]], "position"], ",", 
           SubscriptBox[
            StyleBox["y",
             Background->RGBColor[1, 1, 0]], "position"]}], "}"}]}], "]"}], 
       "\n", "\t", "}"}],
      Background->RGBColor[1, 1, 0]]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Code"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EdgeForm", "[", 
        RowBox[{"AbsoluteThickness", "[", "1", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FaceForm", "[", "None", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3", ",", "0.6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "0.65"}], "}"}]}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<evaporator\>\"", ",", "12"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"0.4", ",", ".625"}], "}"}]}], "]"}], "\[IndentingNewLine]",
        "}"}],
      Background->RGBColor[1, 1, 0]]}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[AbsoluteThickness[1]], FaceForm[None], 
    RectangleBox[{0.3, 0.6}, {0.5, 0.65}]}, InsetBox[
    StyleBox["\<\"evaporator\"\>",
     StripOnInput->False,
     FontSize->12], {0.4, 0.625}]},
  ImageSize->Tiny]], "Output"]
}, Open  ]],

Cell["Approach #2", "Text"],

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{
       "add", " ", "in", " ", "additional", " ", "formatting", " ", "to", " ",
         "shape", " ", "here"}], "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["x", "min"], ",", 
          SubscriptBox["y", "min"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["x", "max"], ",", 
          SubscriptBox["y", "max"]}], "}"}]}], "]"}], "}"}], ",", 
     "\[IndentingNewLine]", "\t", 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"Inset", "[", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{"\"\<text to be displayed\>\"", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["x", "position"], ",", 
           SubscriptBox["y", "position"]}], "}"}]}], "\[IndentingNewLine]", 
        "\t", "]"}], "\[IndentingNewLine]", "\t", "}"}],
      Background->RGBColor[1, 1, 0]]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}]], "Code"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EdgeForm", "[", 
        RowBox[{"AbsoluteThickness", "[", "1", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FaceForm", "[", "None", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"{", 
       RowBox[{"Inset", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{"\"\<plug flow reactor\>\"", ",", 
           RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"1.5", ",", "0.75"}], "}"}]}], "\[IndentingNewLine]", "]"}],
        "\[IndentingNewLine]", "}"}],
      Background->RGBColor[1, 1, 0]]}], "\[IndentingNewLine]", "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{
   {EdgeForm[AbsoluteThickness[1]], FaceForm[None], 
    RectangleBox[{0, 0}, {3, 1.5}]}, InsetBox[Cell["plug flow reactor",
     TextAlignment->Center], {1.5, 0.75}]},
  ImageSize->Tiny]], "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adding Graphics to plots", "Subsection",
 CellTags->"Adding Graphics to plots"],

Cell[CellGroupData[{

Cell["Adding labels to curves (above, next to, etc.)", "Subsubsection",
 CellTags->{"Adding labels to curves (above", "next to", "etc.)"}],

Cell[TextData[{
 "Combine ",
 StyleBox["Plot", "Code",
  FontWeight->"Plain"],
 " (or similar) and ",
 StyleBox["Graphics", "Code",
  FontWeight->"Plain"],
 " by naming each function and then using ",
 StyleBox["Show", "Code",
  FontWeight->"Plain"],
 " to combine them. The method shown below is just one way of doing this."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"'", 
     RowBox[{"Style", "'"}], " ", "will", " ", "allow", " ", "you", " ", "to",
      " ", "easily", " ", "control", " ", "the", " ", "font"}], ",", " ", 
    "face", ",", " ", 
    RowBox[{
     RowBox[{"etc", ".", " ", "of"}], " ", "the", " ", "test"}]}], "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"labels", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SuperscriptBox[\(1\), \(st\)]\) label\>\"", ",", 
            "formatting"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["x", "position"], ",", 
            SubscriptBox["y", "position"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["x", "offset"], ",", 
            SubscriptBox["y", "offset"]}], "}"}]}], "]"}], ",", "\n", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SuperscriptBox[\(2\), \(nd\)]\) label\>\"", ",", 
            "formatting"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["x", "position"], ",", 
            SubscriptBox["y", "position"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["x", "offset"], ",", 
            SubscriptBox["y", "offset"]}], "}"}]}], "]"}], ",", "\n", "\t", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SuperscriptBox[\(3\), \(rd\)]\) label\>\"", ",", 
            "formatting"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["x", "position"], ",", 
            SubscriptBox["y", "position"]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["x", "offset"], ",", 
            SubscriptBox["y", "offset"]}], "}"}]}], "]"}]}], "\n", "}"}], 
      "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Offset", " ", 
      RowBox[{"isn", "'"}], "t", " ", "necessary", " ", "but", " ", "here", 
      " ", "is", " ", "the", " ", "format", " ", "if", " ", "you", " ", 
      "want", " ", "to", " ", "use", " ", 
      RowBox[{"it", ".", " ", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "  ", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"text", " ", "centered", " ", "at", " ", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}]}], " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"left", "-", 
        RowBox[{"hand", " ", "end", " ", "at", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], "\n", "\t", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}]}], "  ", "\[Rule]", " ", 
       RowBox[{
        RowBox[{"right", "-", 
         RowBox[{"hand", " ", "end", " ", "at", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "\n", "\t", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "1"}]}], "}"}]}]}], " ", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"centered", " ", "above", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "\n", "\t", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "  ", "\[Rule]", " ", 
         RowBox[{"centered", " ", "below", " ", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}]}]}]}]}]}], "*)"}]}]}]], "Code"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "t_"}], "]"}], "=", 
   RowBox[{
    SuperscriptBox["x", "3"], "+", "t"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"curves", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "0"}], "]"}], ",", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", 
         RowBox[{"-", "10"}]}], "]"}], ",", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "10"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<t = 10 s\>\"", ",", "15"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.7", ",", 
          RowBox[{"f", "[", 
           RowBox[{"0.7", ",", "10"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<t = 0 s\>\"", ",", "15"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.7", ",", 
          RowBox[{"f", "[", 
           RowBox[{"0.7", ",", "0"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<t = -10 s\>\"", ",", "15"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.85", ",", 
          RowBox[{"f", "[", 
           RowBox[{"0.85", ",", 
            RowBox[{"-", "10"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"curves", ",", "labels"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\t"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
//ZpzG2rl2SI//k84n8+j/g/zXo9Qw==
      "]]}, 
    {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
unERW5znrCa3Qy5896aAMMZeYOA3F1n6BE0FxJE+dtBocpAq/SdYJrHjtja2
ZZdj6gmfHCgdTx9zFFumXrXyPGcOVDLvYAbYdRkNK3cEsmH4NVbXA9jhMWE8
T2KyYGrc14fy2FeCLaQDxbPg1zmdPBlsBpc5izT5j/Dzu8PFEtjNVwvuFnzO
hCq/Bb2p2NEm/72sOZwJD0l7PBLDdr23J6A2NAMqK2TPCmKf+TXb/iEhHVbT
qznv2lyPdZ5IWF4a7JcPEt2JvdH28NqDmlQ4NHJ3jg+77YTmR+uuFKioUTzC
g51WzLaqPZEMFa6R/3Fhe+5v1pBdS4JHHzgc3IatsMv825pQIhT6O8jJgc32
nLp7YF8CTMl4lciGPUA3aVNz+D1s/qF7kRW7wOljRsbZd3A+uV2GZXP/xlyX
Qyzj4e2DswIk7Gtmh4n7t+NgRsZlUWZsoonR1+pJLGTft6bOhM2vWd98/GUM
nOq458iI3XuLomSmHQ0/tqQUMWA/P59ZJWn7BhYT+oKbVgPqxov+r+FtLZXn
9NiT4nXjpekRcD8jlXvTkZzn7wc0voIXY36834J9YmmQ48JcKDRWlzq56ZUe
h7cSvCHQc6PpLx12YuW67IJiMNQgvS7atFG6XykyCoSL9874bJptj2yCwNwz
+O9Blvmmr/3Rrs1W9IVlcgGHN11VYz11ys0LRucniW+aEv5g20ihB1w9VLt9
0/SN0jYbG/ehQmcu26aL7S1T5Z46wfQcFcZNz/FLDlYK2MLa39u3bLopTbjP
UN8ITn7Gr2MzWumI+hw9DO5I/MMXBSXLxLlyFFiDCuuI/3OE25vF1jYHQASk
rm+6p+v6h9gzbkC74e/KpsmqB67fqnYHxFHD2U0rnPEIEo75D/jw3h3YdNuj
qze9zLzBf1byXzft+uG0zhS/PwjWPZ61aYF+BUmDtgCwi9H9+abNWZ7T92gH
AbfoGPNNfxClu80l8RLwHrtD3TTdwTt9R5lCwQnBkp4NbD29kdOug2HAXUPb
d9Nx102KUkrDwY6+Ttqmf3t82dMbHQlu8SlnrWNrRoII7kdRYJppz75Nh2Zl
kbTM3oL5drfQv9h3hnlU1XbHgP6UifE17Kjbp+bPccSCXe+PSW26Yt0r+dZa
LNgYM9BfxZ7yhZa+E3Hgd0TXpT/Y23f82RnfFQ+Mv781W8E+HCffWFTzDgQ2
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
vV01J0f8//88gk/Xp+bfPznif8HtAEY=
      "]]}, 
    {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
P/4NDdqH0H7CFtx/SW2fzTdkdFsdxWMv0nPe5F3+iuKG2kAK9uuRxNfydF+R
0p+xlznYJm12Sed8stFvo03jfGzxavmyqyzZqDpa+C8Vuyq1dvV/3FnI/P2y
TyV2SFTwfveoTKR347h7LbZZkLFYoGAmkmLJ1mjApneYM06WykAa14tU/mA3
3Mt7nPc9HVXsHnTqwI40/O9NhVI6Km965taN7egs+rLyXSqqrLnAOoh9cXq2
JS0uBZ3aLPEb3p7P7Rze4JxkxFf7oGcUe6v5qfmTiiR0mMuLZQK7+Zxaxu22
L6imQIVrCju5gHlNYzwR1b7vopnB9jjeoCKxnoAK/ntVPot9guvm7/XD8WiQ
/vDcAjZzAIWn/1gc0tcxN1jC7qeZMK1QikUSRNqnZew8+4zU1EufEYu+SMPK
9vqNOq68NYlBr8pZh1axzY2UoIvtJ3RZ50PPX2xYv8P3lns0WmrcUbyGzalW
3XD2TRRiF/YMWMfufkjIGGlEokvH9FQ3sAOuppcLW3xEqihlcNsKQNFgyf8D
epX3024Te0KwaqwoJRTVrXdMbzuM5arLy7r3KMaYuLaFfW55YPf1uXcoobjl
67ZXu2wihNjeoie0EvT/sOPLNiUWpYNQ4epd1W3rp/gVUfUD0S7PDMdtM4tK
xHHPvUC0/2lFb9v8r0ZllrQvUqqzLdp2ecXtyQtOnujWmatt2yZCnrAO/3BD
jGWy49umqxMz3dpyQbVC55a2XWBtkiTpZY90z/9c3/Ycp/BAGbcFOrl7fGvb
9clHeq5c1kccZ/Hl2DtunefzUVUCAX/wxxkNBSaKf3LcnXcbKHw0+38Odfq4
1NRsA6i2V+i23dV2Py36ohP4LkVP2jZZXvb+w5+ugJqfxLrtExfdXh+J+g84
TXrxbLv52b0Hnkbe4GlE7fFtO6ZpnZ/k9AcP0r5rbZu794SwbvNLMLL+3G7b
N5kC6Lo0XgMfE+Pobafx0djuFXoDpnJfdGyb5tT/elQZ3oGcQWUyLbaOzrCW
40AwcCvIcdj2p/uG+V+KQsA4n1D7thfcakS7I8PA64kKLTpstTAQuu9ZOGBb
a27c9rvMTJK6UQRgEfG2oMf+39B+eQWeKMCnx3FgB3a47YV5vd3RYORabsu2
Szc9Ex+uRwO6g8kpDNiTvsjEd/wT2GMmGM6IzXHg78GYthiQQLkVQ8JW+iRV
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
//+fB5mF1Qb/uarA/wP9cVD6
      "]]}}, {InsetBox[
     StyleBox["\<\"t = 10 s\"\>",
      StripOnInput->False,
      FontSize->15], {0.7, 10.343}, {0, -1}], InsetBox[
     StyleBox["\<\"t = 0 s\"\>",
      StripOnInput->False,
      FontSize->15], {0.7, 0.3429999999999999}, {0, -1}], InsetBox[
     StyleBox["\<\"t = -10 s\"\>",
      StripOnInput->False,
      FontSize->15], {0.85, -9.385875}, {0, -1}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{-3, 3}, {-36.99999669387769, 36.99999669387769}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Adding labels onto curves (on curve itself)", "Subsubsection",
 CellTags->"Adding labels onto curves (on curve itself)"],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     SubscriptBox["x", "min"], ",", 
     SubscriptBox["x", "max"]}], "}"}], ",", "\n", "\t", 
   RowBox[{"Epilog", "\[Rule]", "\n", "\t\t", 
    RowBox[{"Inset", "[", "\n", "\t\t\t", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<label\>\"", ",", "formatting"}], "]"}], ",", "\n", 
      "\t\t\t", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", "position"], ",", 
        SubscriptBox["y", "position"]}], "}"}], ",", 
      RowBox[{"Background", "\[Rule]", 
       RowBox[{"color", " ", "behind", " ", "the", " ", "label"}]}]}], 
     "]"}]}]}], "\n", "]"}]], "Code",
 InitializationCell->False],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "x_", "]"}], "=", 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", "*", "x"}], "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"g", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "8"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", "\[IndentingNewLine]", 
    RowBox[{"Inset", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<f(x)\>\"", ",", "16"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"4", ",", 
        RowBox[{"g", "[", "4", "]"}]}], "}"}], ",", 
      RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVzXk41HkAx/FxFKXcZMbxi8htilyh76fIPZaZ6VFCkijaHNmUakuMbeXa
HlvKkZBylORYItlSbQrNEioRSynKsI7NZmbbP97P68+3dnAke684jUZjfet/
3feO8Vs+8Da1SFzzpdEERNKRETVIDyGTliXM1coCYnE5O7eaHktGE4queRoI
iEd77+08ehIxCMuOe+otIL4h83fP0bOIeFjEhaBCAXnD/MkxjV5MZOzresZc
pkiBynfJKfQaEmM3yInOnSYJ0tX6P9NbSVbGj67BEbNk+44rlYKpbmLxyutS
GfMrkREl+LtoDRKGVOPW5nIx6Pl8HntwdoSMBI0/0T+3BHEdtiR75gNJz/9h
scxhOVbVKAyIiU2SMxMFfYvicqgbdnzWaT9NZJ+7/dLjrYj74XnqOyZmyHt+
vTyLpYLZtQ5yN76fJ2ahw29C3dUg/qVcXl1vgbRE2ix70qIOK1FQHefmVxKe
Fjydtp7Cs6QNHY+MRMS+nOFxZLc2qMzxL6WfaTj/uH1h+sAajM8PDrxYJ47+
+QCFkkg9FH9sbJNNl8Bqq4iLzDv6kNW8NjkyIgnnQO2xWVUjpO6vDS3QXYrY
LZcrekJMMIfykX0npTBetZDUQ2Mi1ry1RvWBNFjPDPfsf7gOgzdbz/K1l6PS
3CWRtsEc/4Z35xjGy0B4zLQqucwCxpulhKGNKxCw2z33H2VLuBRqh1WtksVC
52ikcYUV4jR36Qz5y0GzepNJg6UNTCa2yfSy5KFhdJCl3GoLJTmBdOuCPJK9
+Cyn03aQvJdTuSZXAa5tBnv5TAdEbGh8ucxDEfXqOhKNcgTlbsEFzXOKMC7o
q66JB2bHGfLvziuB+u2Q++09m1HLcZHIclKG1NmrX6PCtuCkK+9yzTtlhKXX
W6cHOUL7jXtfEU8F4vz1lNDPCRutk7Lo5qoo279TrD56K/y1Or+IdaliSkZ0
gX3cGbNtacNRCavQo0JTjS92QbZkYCxbVw15fCGv4Z4rlAZqC8Vb1aB8S8qh
9rUblpxI4NpG0yFtdzj5D1UP0EoDK4cVGbDJ1jCLdfREzKXKNMX7DBTMlLYd
y2ThrvEZaYWD6hCmlf/aOOAFBfcYk9OyGvj91MHDPFlv9Js+7zrapIFzx2Pf
Fjd741Y+0R0J1MTw9oa5sFAfBFRaKWgKNZG8MVkgXMnGKd6VhP4yLRhJ6kax
H7NxY0wzR9aTwqsYf/+UOA7O5PGCBrwomKkVhhfHcxDC/qR304eCfrReffMJ
DjSamm6xfCms2DQqP5PIQUrGzkepwRTyHd0admdysM/q4tTyoxTGFgtHXUs5
0ElSdpUqoSDNzKtwfs2B0Ob4yt7rFLTcLhbuG+Dg5ae//iwp//ZX7epNGeIg
07c6wLmKglO7SNT5ngOREfsQr4nC0FUHl4AZDvr5GfkSXRQ2LfWoSlzJRX3y
/J6uFxTq/HRySuW5yLLbZVjUR6E72Lq1U4kLj6tmNVsGKNDSGd0aDC7uHGl/
kvCBwhrvhx8b1nJx3tQyw2eCwtPNKR1DhlxED+dytScpqL1PnVpmyoWB54HB
lhkKJZ4es34WXEiKdRdnzlN4t0KqJ9GKi7e1duFBCxQ6TtHmKmy5aAovYq5b
pOB33Xpbjz0XFyiZWZGIQmpixd8iwsV/nfoiCA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Epilog->InsetBox[
    BoxData[
     FormBox[
      StyleBox["\"f(x)\"", 16, StripOnInput -> False], TraditionalForm]], {4, 
    25}, Background -> GrayLevel[1]],
  Method->{},
  PlotRange->{{0, 8}, {0., 80.99999706122452}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Adding tables and text to plots", "Subsubsection",
 CellTags->"Adding tables and text to plots"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"table", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{"Inset", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"Grid", "[", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"cell", " ", "1", "a"}], ",", 
            RowBox[{"cell", " ", "2", "a"}]}], "}"}], ",", 
          "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"cell", " ", "1", "b"}], ",", 
            RowBox[{"cell", " ", "2", "b"}]}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", "\t\t ", 
        RowBox[{"Alignment", "\[Rule]", 
         RowBox[{
         "how", " ", "cells", " ", "should", " ", "be", " ", "aligned", " ", 
          RowBox[{"(", 
           RowBox[{"see", " ", "below", " ", "for", " ", "options"}], 
           ")"}]}]}], ",", "\[IndentingNewLine]", "\t\t ", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{
         "what", " ", "cells", " ", "have", " ", "a", " ", "border", " ", 
          RowBox[{"(", 
           RowBox[{"see", " ", "below", " ", "for", " ", "options"}], 
           ")"}]}]}]}], "\[IndentingNewLine]", "\t\t", "]"}], 
      "\[IndentingNewLine]", "\t", "]"}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"y", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "6"}], "}"}], ",", "\[IndentingNewLine]", 
   "\t", 
   RowBox[{"Epilog", "\[Rule]", "\[IndentingNewLine]", "\t\t", 
    RowBox[{"Inset", "[", 
     RowBox[{"table", ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["x", "position"], ",", 
        SubscriptBox["y", "position"]}], "}"}]}], "]"}]}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Alignment", " ", 
      RowBox[{"options", ":", "\n", "\t", "Left"}]}], "   ", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"left", " ", "alighned", "\n", "\t", "Right"}], "  ", "\[Rule]",
       " ", 
      RowBox[{
       RowBox[{"right", " ", "aligned", "\n", "\t", "Top"}], "    ", 
       "\[Rule]", " ", 
       RowBox[{
        RowBox[{"aligned", " ", "at", " ", "top", "\n", "\t", "Bottom"}], " ",
         "\[Rule]", " ", 
        RowBox[{
         RowBox[{"aligned", " ", "at", " ", "bottom", "\n", "\t", "Center"}], 
         " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{"center", " ", "aligned", "\n", "\t", "x"}], "      ", 
          "\[Rule]", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
            "aligned", " ", "at", " ", "position", " ", "x", " ", "from"}], 
            " ", "-", 
            RowBox[{"1", " ", 
             RowBox[{"(", "left", ")"}], " ", "to"}], " ", "+", 
            RowBox[{"1", " ", 
             RowBox[{"(", "right", ")"}], "\n", "\t", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}]}], "  ", "\[Rule]", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
             "aligned", " ", "at", " ", "horizontal", " ", "and", " ", 
              "vertical", " ", "positions", " ", "x", " ", "and", " ", "y", 
              " ", "from"}], " ", "-", 
             RowBox[{"1", " ", "to"}], " ", "+", 
             RowBox[{"1", "\n", "\t", "\"\<c\>\""}]}], "    ", "\[Rule]", " ", 
            RowBox[{
             RowBox[{
             "aligned", " ", "at", " ", "a", " ", "specific", " ", "caracter",
               " ", "or", " ", "value", " ", "in", " ", "the", " ", "grid", 
              "\n", "Frame", " ", 
              RowBox[{"options", ":", "\n", "\t", 
               RowBox[{"{", 
                RowBox[{"All", ",", "False"}], "}"}]}]}], " ", "\[Rule]", " ", 
             RowBox[{
              RowBox[{
              "frames", " ", "at", " ", "all", " ", "horizontal", " ", 
               "positions", " ", 
               RowBox[{"(", "columns", ")"}], "\n", "\t", 
               RowBox[{"{", 
                RowBox[{"False", ",", "All"}], "}"}]}], " ", "\[Rule]", " ", 
              RowBox[{
              "frames", " ", "at", " ", "all", " ", "vertical", " ", 
               "positions", " ", 
               RowBox[{"(", "rows", ")"}], "\n", "for", " ", "more", " ", 
               "Frame", " ", "options"}]}]}]}]}]}]}]}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"search", " ", "'"}], 
     RowBox[{"Grid", "'"}], " ", "in", " ", "the", " ", "Documentation", " ", 
     "Center"}]}], "*)"}]}]}], "Code"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", "1"}], ";", 
  RowBox[{"B", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{
     FractionBox["A", "B"], "*", "x"}], "+", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"table", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Inset", "[", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<A =\>\"", ",", "A"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"\"\<B =\>\"", ",", "B"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Alignment", "\[Rule]", "\"\<=\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"False", ",", "All"}], "}"}]}]}], "\[IndentingNewLine]", 
       "]"}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"y", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "6"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", "\[IndentingNewLine]", 
    RowBox[{"Inset", "[", 
     RowBox[{"table", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "2.5"}], "}"}]}], "]"}]}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVj3s0VAkAh++Mx4wx46KZuSvpIWbFKdpo6eH+qEPZtWQ3NGnKiCTrWRGR
R1MqI6V28ywn5dXjpIO0EgpTXnWyK53FJmKwSxFhNWv/+M53vj+/FdJQD38m
QRCuC/zvz9+F5LqHJthbh8VoLCRO7f/arF0koQsY07kODAKt//QHyUUhND8j
cn0yk8D4/S2pwaJ4eqI8+ICmBoEk4cQSH1EaXTYnecblEGhuchn4UZRHW53e
IjfgEwi9dvSZm+gObZHHFawzI1CXmvqbq6iGNm7JMwlwJ6ChGcFSBrXTzZw4
2flCAttP+MrKPTvpz2T/ho+fCVQe8+++8bKH1h9Is6/exkCX+JBlRNQ7ejBn
Inn7VQb0nOUBdRikHQzfGumOM6Db4V/27e4R2ut4ykymMxMrlwcXy6RjtPft
yJXncpmw7f652eHiB7q3YDC//G8m6mYTvu/InqCXnxBIr29VQ+BjhaIm6RM9
uKzl6PPLasj0K1ws2DdNZ6U3dnkPqGG199upL/4zNLs/Jr5kozp6JtzasH2O
np2vjLJJVcfHXgMr4c55umj2TlnyO3Wkl8Yc8PJS0Y5Nyo12dhoQkWzX6GwC
UvFtA7MzGqgISyhNW/jY9MLc7k2vBjpMM1g7LjKRw117u8FKEybJr8z2ZKqh
wuKD9HCKJuzce62vZqujZvGngLM9mugOk9nLUzXg8iLxcdcaFsrsdvEaLmgi
PVCxa1TGgtCzqatowT5Nv26z7WSB7iMu1B9mQzBVIhsRsZEpDOSJorWQwopW
l8axkZR38LRNEAcJva2dem1s5LZdaUwL04Z1VvfoSVMtxIVkjBtFcNFhstZ9
b6wWRnzNvtol5WHmCI8d2ayFc/PD6j0BOugqvs5wMebg4ajzmI6YhH1BvZs4
koM/TG37NpjoIi3EdPRlPQeBq/wsM27oIsvQ8TnXQBt1nrtjHZbqweL84L8J
B7Wxznu4mJ+vh6gBp/AHtdoITnbq3Gyoj21Myw2r9LlICWDPMjL0oTEm3sGQ
cvHIyFc1zF+E+BqU5DzgourLKTXztEWI/emuV7gWD233twzL9fiwbu100vLl
oWF5QGPqRT5eC7aeZFfycLJyZ/5bjgBMUzuhA0sHPsZ/SnbLBRgSDik3SXQw
V2FpaMESwqN9mX7EXR0cV1O2XI4XosgrO0VHpQOhiZ2vKUGhqv4FQnaSiArx
nOQco+A2mebKukliyfr9ClEshUdtjlahhSRq58NzHOMomBdP6XcWkeDI5Vtj
EiloSiSvb5aSyCt9ekl5hkJN02o/p3skGoe+sVFkUViT3RItqybB9yOPyqop
8Bw5BWqvSFSZG7nk11CIXVJz6lAHCclH86WPaikop8IPvvqdRFGiU+PkUwoN
pV1rrr8msfFanHB/K4XjguIqxx4S0u6RCsceCqNDzu2JShKsGzNnJX9RED+Z
u6ccJnErmLU3po+CIvfupR2jJKbmjFll7ykUeFDiFWMkzi4We60Yo+BT/b6/
dpKEZd8Bi80fKDz/JavJbIpER/ERlfcEBdvwH0rSp0kstbtQmD5NgS+qCN03
S+IJcTX21gyFJCLIQzFHIlBxy00xR2H8jZGN1TwJbvrDlf3zFPaUv6SufCFx
z0sxrVJRaD4vm1WpSPwHosoMjQ==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.},
  Epilog->InsetBox[
    GraphicsBox[{
      InsetBox[
       BoxData[
        FormBox[
         TagBox[
          
          GridBox[{{"\"A =\"", "1"}, {"\"B =\"", "3"}}, 
           GridBoxAlignment -> {"Columns" -> {{"="}}, "Rows" -> {{"="}}}, 
           AutoDelete -> False, 
           GridBoxFrame -> {"Columns" -> False, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
         TraditionalForm]]]}], {4, 2.5}],
  Method->{},
  PlotRange->{{0, 6}, {2.0000000408163263`, 3.9999999591836732`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Adding graphics to plots using Scaled[ ]", "Subsubsection",
 CellTags->"Adding graphics to plots using Scaled[ ]"],

Cell[TextData[{
 "This one is almost the same as the one described above, you can also add \
graphics to a plot by following the guide above. In this example ",
 StyleBox["Scale", "Code",
  FontWeight->"Plain"],
 " is used in order to set the placement of the graphic (or table, or text, \
both are ",
 StyleBox["Graphics", "Code",
  FontWeight->"Plain"],
 " primitives). Using Scaled is helpful especially if your axis is changing \
as the sliders are moved, or if you end up changing your fixed plot range \
later on, your graphic will still show up in the same spot. Scaled is \
basically saying how far down the x- and y-axis will the graphic be placed. "
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pfr", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], "}"}], 
        ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"{", 
         RowBox[{"Cylinder", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
           "radius"}], "]"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"{", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"3", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], 
         "}"}]}], "\n", "\t", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "view"], ",", 
         SubscriptBox["y", "view"], ",", 
         SubscriptBox["z", "view"]}], "}"}]}]}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "ViewPoint", " ", "is", " ", "used", " ", "in", " ", "this", " ", 
     "graphic"}], ",", " ", 
    RowBox[{
    "this", " ", "will", " ", "set", " ", "the", " ", "orientation", " ", 
     "of", " ", "the", " ", 
     RowBox[{"graphic", ".", " ", "The"}], " ", "Documentation", " ", 
     "Center", " ", "has", " ", "a", " ", "table", " ", "of", " ", "possible",
      " ", "viewpoints", " ", "and", " ", "what", " ", "they", " ", "will", 
     " ", "do"}]}], "*)"}], "\n"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["\[Pi]", "4"], " ", 
    SuperscriptBox["Dr", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"Dr", ",", "1", ",", "5"}], "}"}], ",", "\n", "\t", 
   RowBox[{"Epilog", "\[Rule]", "\n", "\t\t", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"name", " ", "of", " ", "graphic"}], ",", 
      RowBox[{"Scaled", "[", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", 
          RowBox[{"position", ",", "scaled"}]], ",", 
         SubscriptBox["y", 
          RowBox[{"position", ",", "scaled"}]]}], "}"}], "]"}]}], "\n", 
     "\t\t\t", "]"}]}]}], "\n", "\t", "]"}], "\n", 
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Here", " ", "Scaled", " ", "is", " ", "placing", " ", "the", " ", 
    RowBox[{"graphic", " ", "'"}], 
    RowBox[{"pfr", "'"}], " ", "x", "%", " ", "of", " ", "the", " ", "way", 
    " ", "down", " ", "the", " ", "x"}], "-", 
   RowBox[{
   "axis", " ", "and", " ", "y", "%", " ", "of", " ", "the", " ", "way", " ", 
    "up", " ", "the", " ", "y"}], "-", 
   RowBox[{
    RowBox[{"axis", ".", " ", "The"}], " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], " ", "position", " ", "inside", " ", 
    "Scaled", " ", "will", " ", 
    RowBox[{"(", "each", ")"}], " ", "be", " ", "less", " ", "than", " ", 
    "1.", " "}]}]}]}], "Code",
 InitializationCell->False],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pfr", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], "}"}], 
        ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"{", 
         RowBox[{"Cylinder", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", "1"}], 
          "]"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
        RowBox[{"{", 
         RowBox[{"Arrow", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"3", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"4", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}], 
         "}"}]}], "\n", "\t", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "2"}], ",", "1"}], "}"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    FractionBox["\[Pi]", "4"], " ", 
    SuperscriptBox["Dr", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"Dr", ",", "1", ",", "5"}], "}"}], ",", "\n", "\t", 
   RowBox[{"Epilog", "\[Rule]", "\n", "\t\t", 
    RowBox[{"Inset", "[", 
     RowBox[{"pfr", ",", 
      RowBox[{"Scaled", "[", 
       RowBox[{"{", 
        RowBox[{"0.25", ",", "0.35"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVUn881HccvnO4H8Tdff3uZh35FTnuGzW3V5836cdCoVCKRK0flFwryqoT
F9uEmrD8umqp1FxFck06a4YmasKR2DBzqnOGw/lxu/3xvJ5/ntfzep7n9bCj
44P36xAIhAAt/uc/pHJTAkGJBLVLf5hjy9El/d5EfT0lcghlRDa6y1Ggf2u3
IU2JFn29LAq85ai162GxpYkSrbGxj9u0V46aFcl2uKMS9fXsvzwkkiMpy8jj
y0Al0vgKZTT2KKpI4m5vESlR9vw6P2O79+gbt+TLBd7jqGNG+mKa9xG5OE+a
ri35FwUpKCfGSeNoEOW8bxqcQJe7FeP+sRPIL5enVtpMod4RdwFNMYVEx1uN
7c+okLuL4OaR9hlEOZKWCNJppOaM8lrvz6GIcfbwAetZNBjKXts8s4j2PWq9
6HJSjUSdA44FHCKc/b4kvbN6DvWsj7Kd7dYB4XxIxkXmAlroHuRdrdOF0nNu
b53CFpGnvh5vMl8fYn2sDsRc0SBvfr1rYTIFGE1T89sTCWDGK2oPKaHB9Fz8
2GELIpywui60eGAI26Yi9pMbiSC4HnxmWN8YMrLaE/l8HTBzXFXuU0WHxqpw
PJBJgoxDD1eIexjwtSiEX/WMBH2ZuSRLOwx4ltHh3+3VhUffVmQOx5jAsbCB
hhG6Hpi73E4VN5nCWY/RlyZP9eB8TdRPfK455IlI5yoj9KGpY7KTk2UBy1/n
VMoMyMD/O04VzbSC2izOpWMVZKCJrDaEpC+FlR9CDLoCKPDqFM+pZZEFJsZK
yq9qCrD+kfbbXrMGvWeFYtsiKpz7626Z0mIZxK36uZvqR4OlW/msuullcO+L
aFGdigaSP08TOTI2qN5b0YfzDOBCod7zkgobqN62kZTrawi7+/1vS4psQbBJ
WFo1bAi75g/yPQXLwebdZtkN4RLYUhxXy9pnB7zVabmWXCNoOXVPMhBlDxHW
bbPEdiNYuBVa0xfkAKoXFweOpRiDpIhOq9ntCP46HC8nJh08DzLvO+1yAtpY
eBAxmg5+JLPHWTtXQGodlBfV0IExM0glH3eGlO3isAQqA246cI+OnnUBr5dd
G6h7GdBAlQz2l62EflPfNMpjBrw9LKKtaHMFqt1nZt5kJvSqf39aPsIBhdmI
/PNIJlTonlzzNNsNdrR9yuSLmRDz+I4kwdYdxGGFGUYaJuS/zgmtrHaH+l9e
wdEQDPLsOITVO7mwYzIrgFyGQazNNVbCBBd+a/Vxi7+FQa9uR5yDigur7qiY
XbcxmF1XpXg3wwXjyEhZ2V3tD2RfpfstavWNK2M2PMBgaMeioRMVB4/CliRh
LQbPnnAPfrTGgelD+5HUjkEBgb2ncDMOAlbdhdg3GEiSpENhATgoVAmH2jsw
SA8wKDIJxKH5brfrDRkGzktulGaFaPWmdyQ+fdq8Qz3qtCgcxkY2tqXIMZiZ
iCUmn8Rh9/O5B/JRDBSe9de8TuHwolicG/QBgyud9cfVyTiUBZuHs8cw+ODc
cO90Cg6RtcND0kkMnri+4Z/JxKEl72qjowqDZWFporXZOHglbCnPmcaA29uv
0VzCwdS+Oj5KjcGe+YJtqfk4nCccDm6awyApX7Vx/VUclD2feLgtYOCdrTlC
Ltb6P3ptXrCo7TdY2dBcqvXPFqo1Gu2eudjWzOs4/AfTqypH
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{1., 0},
  Epilog->InsetBox[
    Graphics3DBox[{{
       Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, {
       CylinderBox[{{1, 0, 0}, {3, 0, 0}}, 1]}, {
       Arrow3DBox[{{3, 0, 0}, {4, 0, 0}}]}}, 
     PlotRange -> {{0, 5}, {0, 0}, {0, 0}}, Boxed -> False, 
     ViewPoint -> {2, -2, 1}], 
    Scaled[{0.25, 0.35}]],
  Method->{},
  PlotRange->{{1, 5}, {0., 19.634953443794856`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Text options", "Subsection",
 CellTags->"Text options"],

Cell[TextData[{
 "Text offset is explained above in ",
 ButtonBox["Adding labels to curves",
  BaseStyle->"Hyperlink",
  ButtonData->"Adding labels to curves (above"],
 ", to change the direction the test is displayed in another specification is \
added after offset."
}], "Text"],

Cell[BoxData[{
 RowBox[{"Text", "[", 
  RowBox[{
  "\"\<text to display\>\"", ",", " ", "position", ",", " ", "offset", " ", 
   ",", " ", "direction"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{"direction", " ", 
     RowBox[{"specifications", ":", "\n", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], "   ", "standard"}]}]}], ",", " ", 
    RowBox[{"horizontal", "\n", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], "   ", "at", " ", "an", " ", "angle", 
     "\n", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "   ", "vertical", "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], " ", "at", " ", "an", " ", "angle"}], ",",
     " ", "flipped"}], "\n", "*)"}]}]}], "Code"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<mathematica is cool\>\"", ",", "18"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", "Automatic", ",", "d"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Circle", "[", "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"d", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{InsetBox[
      StyleBox["\<\"mathematica is cool\"\>",
       StripOnInput->False,
       FontSize->18], {0, 0}, Automatic, Automatic, {1, 0}], 
     CircleBox[{0, 0}]}], ",", 
   GraphicsBox[{InsetBox[
      StyleBox["\<\"mathematica is cool\"\>",
       StripOnInput->False,
       FontSize->18], {0, 0}, Automatic, Automatic, {1, 1}], 
     CircleBox[{0, 0}]}], ",", 
   GraphicsBox[{InsetBox[
      StyleBox["\<\"mathematica is cool\"\>",
       StripOnInput->False,
       FontSize->18], {0, 0}, Automatic, Automatic, {0, 1}], 
     CircleBox[{0, 0}]}], ",", 
   GraphicsBox[{InsetBox[
      StyleBox["\<\"mathematica is cool\"\>",
       StripOnInput->False,
       FontSize->18], {0, 0}, Automatic, Automatic, {-1, -1}], 
     CircleBox[{0, 0}]}]}], "}"}]], "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell["Adding Graphics to plots", "Section",
 CellTags->"Adding Graphics to plots"],

Cell[CellGroupData[{

Cell["Manipulate controls", "Section",
 CellTags->"Manipulate controls"],

Cell[CellGroupData[{

Cell["Making manipulated variables inactive", "Subsection",
 CellTags->"Making manipulated variables inactive"],

Cell[TextData[{
 "Below is an example of ",
 StyleBox["If", "Code",
  FontWeight->"Plain"],
 " and ",
 StyleBox["Enabled", "Code",
  FontWeight->"Plain"],
 " being used in a demonstration. Here ",
 StyleBox["If", "Code",
  FontWeight->"Plain"],
 " and ",
 StyleBox["Enabled", "Code",
  FontWeight->"Plain"],
 " are used to make a button inactive so the user can\[CloseCurlyQuote]t use \
it under certain conditions. The  portion of the code that is relevant here \
is highlighted in yellow. The slider for amplitude (a) becomes inactive when \
the Cosine plot is selected since this particular function does depend on the \
variable amplitude. Making the variable inactive for a certain condition will \
eliminate any confusion. "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "g", ",", "p1", ",", "p2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], "=", 
       RowBox[{"a", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]", "*", "t"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", "[", "t_", "]"}], "=", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Omega]", "*", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"f", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"2", "*", "\[Pi]"}]}], "}"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"g", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"2", "*", "\[Pi]"}]}], "}"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"atl", ",", "\[IndentingNewLine]", "1", ",", 
        RowBox[{"Show", "[", "p1", "]"}], ",", "\[IndentingNewLine]", "2", 
        ",", 
        RowBox[{"Show", "[", "p2", "]"}]}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"atl", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "\"\<Sin(t)\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", "\"\<Cos(t)\>\""}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", "1", ",", "\"\<frequency\>\""}], "}"}], ",", 
     "0.5", ",", "5", ",", "0.1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "2", ",", "\"\<amplitude\>\""}], "}"}], ",", "0.25", 
     ",", "2", ",", "0.25", ",", 
     StyleBox[
      RowBox[{"Enabled", "\[Rule]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"atl", "\[Equal]", "1"}], ",", "True", ",", "False"}], 
        "]"}]}],
      Background->RGBColor[1, 1, 0]]}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1., $CellContext`atl$$ = 
    1, $CellContext`\[Omega]$$ = 3.2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`atl$$], 1, ""}, {1 -> "Sin(t)", 2 -> "Cos(t)"}}, {{
       Hold[$CellContext`\[Omega]$$], 1, "frequency"}, 0.5, 5, 0.1}, {{
       Hold[$CellContext`a$$], 2, "amplitude"}, 0.25, 2, 0.25}}, 
    Typeset`size$$ = {360., {116., 120.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`atl$7554$$ = False, $CellContext`\[Omega]$7555$$ = 
    0, $CellContext`a$7556$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 2, $CellContext`atl$$ = 
        1, $CellContext`\[Omega]$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`atl$$, $CellContext`atl$7554$$, False], 
        Hold[$CellContext`\[Omega]$$, $CellContext`\[Omega]$7555$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$7556$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`f$, $CellContext`g$, $CellContext`p1$, \
$CellContext`p2$}, $CellContext`f$[
           Pattern[$CellContext`t$, 
            Blank[]]] = $CellContext`a$$ 
          Sin[$CellContext`\[Omega]$$ $CellContext`t$]; $CellContext`g$[
           Pattern[$CellContext`t$, 
            Blank[]]] = 
         Cos[$CellContext`\[Omega]$$ $CellContext`t$]; $CellContext`p1$ = Plot[
           $CellContext`f$[$CellContext`t], {$CellContext`t, 0, 2 Pi}, Frame -> 
           True, PlotRange -> {-2, 2}]; $CellContext`p2$ = Plot[
           $CellContext`g$[$CellContext`t], {$CellContext`t, 0, 2 Pi}, Frame -> 
           True]; Switch[$CellContext`atl$$, 1, 
          Show[$CellContext`p1$], 2, 
          Show[$CellContext`p2$]]], 
      "Specifications" :> {{{$CellContext`atl$$, 1, ""}, {
         1 -> "Sin(t)", 2 -> "Cos(t)"}, ControlType -> 
         SetterBar}, {{$CellContext`\[Omega]$$, 1, "frequency"}, 0.5, 5, 
         0.1}, {{$CellContext`a$$, 2, "amplitude"}, 0.25, 2, 0.25, Enabled -> 
         Dynamic[
           If[$CellContext`atl$$ == 1, True, False]]}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {186., 191.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assigning labels to Manipulate variables", "Subsection",
 CellTags->"Assigning labels to Manipulate variables"],

Cell[TextData[{
 "When you use ",
 StyleBox["Switch", "Code",
  FontWeight->"Plain"],
 ", for example, with the intention of creating labeled buttons for different \
plots, you\[CloseCurlyQuote]ll also use this. However, if you just want to \
assign a name or a label to different values of a manipulated variable, ",
 StyleBox["Switch", "Code",
  FontWeight->"Plain"],
 " is not needed. "
}], "Text"],

Cell[BoxData[
 RowBox[{"Control", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"var", ",", 
      SubscriptBox["var", "0"], ",", "\"\<var name\>\""}], "}"}], ",", 
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{
       SubscriptBox["val", "1"], "\[Rule]", 
       "\"\<\!\(\*SubscriptBox[\(label\), \(1\)]\)\>\""}], ",", "\n", "\t", 
      RowBox[{
       SubscriptBox["val", "2"], "\[Rule]", 
       "\"\<\!\(\*SubscriptBox[\(label\), \(2\)]\)\>\""}], ",", "\n", "\t", 
      RowBox[{
       SubscriptBox["val", "3"], "\[Rule]", 
       "\"\<\!\(\*SubscriptBox[\(label\), \(3\)]\)\>\""}]}], "}"}], ",", 
    RowBox[{"ControlType", "\[Rule]", "control"}]}], "}"}], "]"}]], "Code"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"F", ",", "p"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"F", "[", "x_", "]"}], "=", 
       RowBox[{"x", "+", "b"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"F", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1", ",", "5"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
        "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", "1.5", ",", "\"\<intercept\>\""}], "}"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"1.5", "\[Rule]", "\"\<b1\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"2.5", "\[Rule]", "\"\<b2\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"3.5", "\[Rule]", "\"\<b3\>\""}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`b$$ = 1.5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`b$$], 1.5, "intercept"}, {
      1.5 -> "b1", 2.5 -> "b2", 3.5 -> "b3"}}}, Typeset`size$$ = {
    360., {117., 122.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`b$8276$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`b$$ = 1.5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`b$$, $CellContext`b$8276$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`F$, $CellContext`p$}, $CellContext`F$[
           Pattern[$CellContext`x$, 
            Blank[]]] = $CellContext`x$ + $CellContext`b$$; $CellContext`p$ = 
         Plot[
           $CellContext`F$[$CellContext`x], {$CellContext`x, 0, 5}, 
           PlotRange -> {1, 5}, Frame -> True]], 
      "Specifications" :> {{{$CellContext`b$$, 1.5, "intercept"}, {
         1.5 -> "b1", 2.5 -> "b2", 3.5 -> "b3"}, ControlType -> SetterBar}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {161., 168.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Incorporating text into the Manipulate window", "Subsection",
 CellTags->"Incorporating text into the Manipulate window"],

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"{", "\[IndentingNewLine]", "\t", 
   RowBox[{"\"\<line 1\>\"", ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"Control", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["var", "1"], ",", 
         SubscriptBox["var", 
          RowBox[{"1", ",", "0"}]], ",", 
         "\"\<\!\(\*SubscriptBox[\(var\), \(1\)]\) name\>\""}], "}"}], ",", 
       RowBox[{
        SubscriptBox["var", "1"], " ", "range"}]}], "}"}], "]"}], ",", " ", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "if", " ", "you", " ", "only", " ", "want", " ", "to", " ", "have", " ",
        "a", " ", "heading", " ", "above", " ", "your", " ", "variable"}], 
      ",", " ", 
      RowBox[{"stop", " ", "here"}]}], "*)"}], "\[IndentingNewLine]", "\t\t", 
    RowBox[{"Row", "[", 
     RowBox[{"{", "                                       ", 
      RowBox[{"(*", 
       RowBox[{
       "this", " ", "is", " ", "an", " ", "example", " ", "of", " ", 
        "incorporating", " ", "other", " ", 
        RowBox[{"styles", "/", "layouts"}], " ", "into", " ", "the", " ", 
        "Manipulate", " ", "window"}], "*)"}], "\[IndentingNewLine]", "\t\t", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            SubscriptBox["var", "2"], ",", 
            SubscriptBox["var", 
             RowBox[{"2", ",", "0"}]], ",", 
            "\"\<\!\(\*SubscriptBox[\(var\), \(2\)]\) name\>\""}], "}"}], ",", 
          RowBox[{
           SubscriptBox["var", "2"], " ", "range"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "\t\t", "\"\<line 2\>\""}], 
      "\[IndentingNewLine]", "\t", "}"}], "]"}]}], "\[IndentingNewLine]", 
   "}"}], "]"}]], "Code"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "x_", "]"}], "=", 
       RowBox[{
        RowBox[{"a", "*", 
         SuperscriptBox["x", "2"]}], "+", 
        RowBox[{"b", "*", "x"}], "+", "c"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"f", "[", "x", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<choose a value for 'a'\>\"", ",", "15"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "0.5", ",", "\"\<a\>\""}], "}"}], ",", "0.1", ",",
          "5", ",", "0.1", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<choose a value for 'b'\>\"", ",", "15"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"b", ",", "1", ",", "\"\<b\>\""}], "}"}], ",", "0", ",", 
         "2", ",", "0.1", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<choose a value for 'c'\>\"", ",", "15"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Row", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "0.5", ",", "\"\<c\>\""}], "}"}], ",", "0", 
            ",", "3", ",", "0.1", ",", 
            RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<y-intercept\>\"", ",", "15"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], "\[IndentingNewLine]", "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.1, $CellContext`b$$ = 
    0.7000000000000001, $CellContext`c$$ = 2.9000000000000004`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`a$$], 0.5, "a"}, 0.1, 5, 0.1}, {{
       Hold[$CellContext`b$$], 1, "b"}, 0, 2, 0.1}, {{
       Hold[$CellContext`c$$], 0.5, "c"}, 0, 3, 0.1}, {
      Hold[
       Column[{
         Style["choose a value for 'a'", 15], 
         Manipulate`Place[1], 
         Style["choose a value for 'b'", 15], 
         Manipulate`Place[2], 
         Style["choose a value for 'c'", 15], 
         Row[{
           Manipulate`Place[3], 
           Style["y-intercept", 15]}]}]], Manipulate`Dump`ThisIsNotAControl}},
     Typeset`size$$ = {360., {117., 120.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$258755$$ = 0, $CellContext`b$258756$$ = 
    0, $CellContext`c$258757$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.5, $CellContext`b$$ = 
        1, $CellContext`c$$ = 0.5}, "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$258755$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$258756$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$258757$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`f$}, $CellContext`f$[
           Pattern[$CellContext`x$, 
            
            Blank[]]] = $CellContext`a$$ $CellContext`x$^2 + $CellContext`b$$ \
$CellContext`x$ + $CellContext`c$$; Plot[
          $CellContext`f$[$CellContext`x], {$CellContext`x, -5, 5}, Frame -> 
          True]], "Specifications" :> {{{$CellContext`a$$, 0.5, "a"}, 0.1, 5, 
         0.1, Appearance -> "Labeled", ControlPlacement -> 
         1}, {{$CellContext`b$$, 1, "b"}, 0, 2, 0.1, Appearance -> "Labeled", 
         ControlPlacement -> 2}, {{$CellContext`c$$, 0.5, "c"}, 0, 3, 0.1, 
         Appearance -> "Labeled", ControlPlacement -> 3}, 
        Column[{
          Style["choose a value for 'a'", 15], 
          Manipulate`Place[1], 
          Style["choose a value for 'b'", 15], 
          Manipulate`Place[2], 
          Style["choose a value for 'c'", 15], 
          Row[{
            Manipulate`Place[3], 
            Style["y-intercept", 15]}]}]}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {215., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Creating multiple Manipulate windows (PaneSelector)", "Subsection",
 CellTags->"Creating multiple Manipulate windows (PaneSelector)"],

Cell[TextData[{
 StyleBox["PaneSelector", "Code",
  FontWeight->"Plain"],
 " can be used here if, for example, you have more than one plot (or graphic) \
and you want some controls to be ",
 StyleBox["visible",
  FontSlant->"Italic"],
 " when one plot is shown and other controls ",
 StyleBox["visible",
  FontSlant->"Italic"],
 " when the other plot is selected. Instead of making some manipulated \
variables inactive you want them to disappear, this can be done by creating \
an option for another ",
 StyleBox["Manipulate", "Code",
  FontWeight->"Plain"],
 " window. In the code below, there are two plots (Sine or Cosine). Notice \
that the variable \[OpenCurlyDoubleQuote]a\[CloseCurlyDoubleQuote] \
(amplitude) has no effect on the behavior of the cosine function so a second \
window option was made where the control for \[OpenCurlyDoubleQuote]a\
\[CloseCurlyDoubleQuote] disappears. "
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PaneSelector", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"1", " ", "\[Rule]", " ", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{"(*", 
          RowBox[{
          "this", " ", "will", " ", "keep", " ", "all", " ", "your", " ", 
           "controls", " ", "organized"}], "*)"}], "\[IndentingNewLine]", 
         "\t\t", 
         RowBox[{
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"ctrl", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "\[Rule]", "\"\<pane 1\>\""}], ",", 
               RowBox[{"2", "\[Rule]", "\"\<pane 2\>\""}]}], "}"}], ",", 
             RowBox[{"ControlType", "\[Rule]", 
              RowBox[{"choose", " ", "type"}]}]}], "}"}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "this", " ", "will", " ", "let", " ", "you", " ", "switch", " ", 
            "between", " ", 
            RowBox[{"panes", "/", "windows"}]}], "*)"}], 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"control", " ", "#1"}], "..."}], "}"}], "}"}], "]"}]}], 
         "\[IndentingNewLine]", "\t", "}"}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{"2", " ", "\[Rule]", " ", 
       RowBox[{"Column", "[", 
        RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"ctrl", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "\[Rule]", "\"\<pane 1\>\""}], ",", 
               RowBox[{"2", "\[Rule]", "\"\<pane 2\>\""}]}], "}"}], ",", 
             RowBox[{"ControlType", "\[Rule]", 
              RowBox[{"choose", " ", "type"}]}]}], "}"}], "]"}], ",", 
          RowBox[{"(*", 
           RowBox[{
           "keep", " ", "this", " ", "is", " ", "both", " ", "panes", " ", 
            "or", " ", "else", " ", "the", " ", "buttons", " ", "will", " ", 
            "\n", "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "disappear", 
            " ", "when", " ", "you", " ", "select", " ", "the", " ", "other", 
            " ", "option"}], "*)"}], "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Control", "[", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"control", " ", "#2"}], "..."}], "}"}], "}"}], "]"}]}], 
         "\[IndentingNewLine]", "\t", "}"}], "]"}]}]}], "\[IndentingNewLine]",
      "}"}], ",", 
    RowBox[{"Dynamic", "@", "ctrl"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "or", " ", "whatever", " ", "dummy", " ", "control", " ", "name", " ", 
    "used", " ", "to", " ", "distinguish", " ", "between", " ", "windows"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "this", " ", "is", " ", "saying", " ", "that", " ", "if", " ", "ctrl"}], 
     " ", "=", " ", 
     RowBox[{
      RowBox[{
      "1", " ", "then", " ", "the", " ", "control", " ", "for", " ", "crtl", 
       " ", "and", " ", "control", " ", "#1", " ", "will", " ", "be", " ", 
       "visible", " ", "and", " ", "available", " ", "and", " ", "if", " ", 
       "ctrl"}], " ", "=", " ", 
      RowBox[{"2", " ", "is", " ", "selected"}]}]}], ",", " ", "\n", "\t", 
    RowBox[{
    "then", " ", "the", " ", "control", " ", "for", " ", "ctrl", " ", "and", 
     " ", "control", " ", "#2", " ", "will", " ", "be", " ", "available"}]}], 
   "*)"}]}]}], "Code"],

Cell[TextData[{
 "The control that allows you to switch between different windows (different \
controls available/visible) is exactly like the control for ",
 StyleBox["Switch", "Code",
  FontWeight->"Plain"],
 ". In the example below \[OpenCurlyDoubleQuote]",
 StyleBox["atl", "Code",
  FontWeight->"Plain"],
 "\[CloseCurlyDoubleQuote] is also part of ",
 StyleBox["Switch", "Code",
  FontWeight->"Plain"],
 " (before the controls) and is used to select different windows. You can \
also create a new dummy variable like \[OpenCurlyDoubleQuote]",
 StyleBox["atl", "Code",
  FontWeight->"Plain"],
 "\[CloseCurlyDoubleQuote] inside ",
 StyleBox["PaneSelector", "Code",
  FontWeight->"Plain"],
 " that allows the user to select different windows. \n\nPlease note that the \
window sizes may be slightly different depending on the controls in each. If \
you want to submit a demonstration containing this command, please use ",
 StyleBox["ImageSize", "Code",
  FontWeight->"Plain"],
 " to adjust the window sizes so that when you switch between them, their \
sizes do not change. In the example below you will notice that the window \
sizes are different. "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "g", ",", "p1", ",", "p2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", "t_", "]"}], "=", 
       RowBox[{"a", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]", "*", "t"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g", "[", "t_", "]"}], "=", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Omega]", "*", "t"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"f", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"2", "*", "\[Pi]"}]}], "}"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"g", "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"2", "*", "\[Pi]"}]}], "}"}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Switch", "[", 
       RowBox[{"atl", ",", "\[IndentingNewLine]", "1", ",", 
        RowBox[{"Show", "[", "p1", "]"}], ",", "\[IndentingNewLine]", "2", 
        ",", 
        RowBox[{"Show", "[", "p2", "]"}]}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "below", " ", "is", " ", "the", " ", "portion", " ", "of", " ", "code", 
     " ", "you", " ", "will", " ", "need"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PaneSelector", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"1", "\[Rule]", 
        RowBox[{"Column", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Control", "[", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"atl", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"1", "\[Rule]", "\"\<Sin(t)\>\""}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"2", "\[Rule]", "\"\<Cos(t)\>\""}]}], "}"}], ",", 
              RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], "]"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "[", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Omega]", ",", "1", ",", "\"\<frequency\>\""}], 
               "}"}], ",", "0.5", ",", "5", ",", "0.1"}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "[", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"a", ",", "2", ",", "\"\<amplitude\>\""}], "}"}], ",", 
              "0.25", ",", "2", ",", "0.25"}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"Column", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Control", "[", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"atl", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"1", "\[Rule]", "\"\<Sin(t)\>\""}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"2", "\[Rule]", "\"\<Cos(t)\>\""}]}], "}"}], ",", 
              RowBox[{"ControlType", "\[Rule]", "SetterBar"}]}], "}"}], "]"}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "[", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Omega]", ",", "1", ",", "\"\<frequency\>\""}], 
               "}"}], ",", "0.5", ",", "5", ",", "0.1"}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"Dynamic", "@", "atl"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1.5, $CellContext`atl$$ = 
    1, $CellContext`\[Omega]$$ = 1., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`atl$$], 1, ""}, {1 -> "Sin(t)", 2 -> "Cos(t)"}}, {{
       Hold[$CellContext`\[Omega]$$], 1, "frequency"}, 0.5, 5, 0.1}, {{
       Hold[$CellContext`a$$], 2, "amplitude"}, 0.25, 2, 0.25}, {{
       Hold[$CellContext`atl$$], 1, ""}, {1 -> "Sin(t)", 2 -> "Cos(t)"}}, {{
       Hold[$CellContext`\[Omega]$$], 1, "frequency"}, 0.5, 5, 0.1}, {
      Hold[
       PaneSelector[{1 -> Column[{
            Manipulate`Place[1], 
            Manipulate`Place[2], 
            Manipulate`Place[3]}], 2 -> Column[{
            Manipulate`Place[4], 
            Manipulate`Place[5]}]}, 
        Dynamic[$CellContext`atl$$]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {360., {115., 120.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`atl$204147$$ = False, $CellContext`\[Omega]$204148$$ = 
    0, $CellContext`a$204149$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 2, $CellContext`atl$$ = 
        1, $CellContext`\[Omega]$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`atl$$, $CellContext`atl$204147$$, False], 
        Hold[$CellContext`\[Omega]$$, $CellContext`\[Omega]$204148$$, 0], 
        Hold[$CellContext`a$$, $CellContext`a$204149$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`f$, $CellContext`g$, $CellContext`p1$, \
$CellContext`p2$}, $CellContext`f$[
           Pattern[$CellContext`t$, 
            Blank[]]] = $CellContext`a$$ 
          Sin[$CellContext`\[Omega]$$ $CellContext`t$]; $CellContext`g$[
           Pattern[$CellContext`t$, 
            Blank[]]] = 
         Cos[$CellContext`\[Omega]$$ $CellContext`t$]; $CellContext`p1$ = Plot[
           $CellContext`f$[$CellContext`t], {$CellContext`t, 0, 2 Pi}, Frame -> 
           True, PlotRange -> {-2, 2}]; $CellContext`p2$ = Plot[
           $CellContext`g$[$CellContext`t], {$CellContext`t, 0, 2 Pi}, Frame -> 
           True]; Switch[$CellContext`atl$$, 1, 
          Show[$CellContext`p1$], 2, 
          Show[$CellContext`p2$]]], 
      "Specifications" :> {{{$CellContext`atl$$, 1, ""}, {
         1 -> "Sin(t)", 2 -> "Cos(t)"}, ControlType -> SetterBar, 
         ControlPlacement -> 1}, {{$CellContext`\[Omega]$$, 1, "frequency"}, 
         0.5, 5, 0.1, ControlPlacement -> 
         2}, {{$CellContext`a$$, 2, "amplitude"}, 0.25, 2, 0.25, 
         ControlPlacement -> 3}, {{$CellContext`atl$$, 1, ""}, {
         1 -> "Sin(t)", 2 -> "Cos(t)"}, ControlType -> SetterBar, 
         ControlPlacement -> 4}, {{$CellContext`\[Omega]$$, 1, "frequency"}, 
         0.5, 5, 0.1, ControlPlacement -> 5}, 
        PaneSelector[{1 -> Column[{
             Manipulate`Place[1], 
             Manipulate`Place[2], 
             Manipulate`Place[3]}], 2 -> Column[{
             Manipulate`Place[4], 
             Manipulate`Place[5]}]}, 
         Dynamic[$CellContext`atl$$]]}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {186., 193.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]],

Cell[TextData[{
 "In order to make a window-in-a-window, insert another ",
 StyleBox["Switch", "Code",
  FontWeight->"Plain"],
 " inside the the \[OpenCurlyQuote]main\[CloseCurlyQuote] ",
 StyleBox["Switch", "Code",
  FontWeight->"Plain"],
 ". Looking at the example above, the \[OpenCurlyQuote]main\[CloseCurlyQuote] \
",
 StyleBox["Switch", "Code",
  FontWeight->"Plain"],
 " is called \[OpenCurlyDoubleQuote]atl\[CloseCurlyDoubleQuote]. "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Switch", "[", 
    RowBox[{
    "omm", ",", "\[IndentingNewLine]", "1", ",", "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{"ptv", ",", "\[IndentingNewLine]", "1", ",", 
       RowBox[{"Show", "[", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Sin", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}], "]"}], 
       ",", "\[IndentingNewLine]", "2", ",", 
       RowBox[{"Show", "[", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Cos", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "2", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{"twa", ",", "\[IndentingNewLine]", "1", ",", 
       RowBox[{"Show", "[", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Log", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", "2", ",", 
       RowBox[{"Show", "[", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Exp", "[", "x", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PaneSelector", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"1", "\[Rule]", 
        RowBox[{"Column", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"omm", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", "\"\<trig functions\>\""}], ",", 
                RowBox[{"2", "\[Rule]", "\"\<log functions\>\""}]}], "}"}], 
              ",", "PopupMenu"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"ptv", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", "\"\<sin(x)\>\""}], ",", 
                RowBox[{"2", "\[Rule]", "\"\<cos(x)\>\""}]}], "}"}], ",", 
              "SetterBar"}], "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", 
        RowBox[{"Column", "[", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"omm", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", "\"\<trig functions\>\""}], ",", 
                RowBox[{"2", "\[Rule]", "\"\<log functions\>\""}]}], "}"}], 
              ",", "PopupMenu"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"twa", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "\[Rule]", "\"\<ln(x)\>\""}], ",", 
                RowBox[{
                "2", "\[Rule]", 
                 "\"\<\!\(\*SuperscriptBox[\(\[ExponentialE]\), \
\(x\)]\)\>\""}]}], "}"}], ",", "SetterBar"}], "}"}], "]"}]}], 
          "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
      "}"}], ",", 
     RowBox[{"Dynamic", "@", "omm"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`omm$$ = 1, $CellContext`ptv$$ = 
    1, $CellContext`twa$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`omm$$], 1, ""}, {
      1 -> "trig functions", 2 -> "log functions"}}, {{
       Hold[$CellContext`ptv$$], 1, ""}, {1 -> "sin(x)", 2 -> "cos(x)"}}, {{
       Hold[$CellContext`omm$$], 1, ""}, {
      1 -> "trig functions", 2 -> "log functions"}}, {{
       Hold[$CellContext`twa$$], 1, ""}, {
      1 -> "ln(x)", 2 -> 
       "\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(x\)]\)"}}, {
      Hold[
       PaneSelector[{1 -> Column[{
            Manipulate`Place[1], 
            Manipulate`Place[2]}], 2 -> Column[{
            Manipulate`Place[3], 
            Manipulate`Place[4]}]}, 
        Dynamic[$CellContext`omm$$]]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {360., {111., 115.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`omm$20423$$ = False, $CellContext`ptv$20424$$ = 
    False, $CellContext`twa$20425$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`omm$$ = 1, $CellContext`ptv$$ = 
        1, $CellContext`twa$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`omm$$, $CellContext`omm$20423$$, False], 
        Hold[$CellContext`ptv$$, $CellContext`ptv$20424$$, False], 
        Hold[$CellContext`twa$$, $CellContext`twa$20425$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Switch[$CellContext`omm$$, 1, 
        Switch[$CellContext`ptv$$, 1, 
         Show[
          Plot[
           Sin[$CellContext`x], {$CellContext`x, -Pi, Pi}]], 2, 
         Show[
          Plot[
           Cos[$CellContext`x], {$CellContext`x, -Pi, Pi}]]], 2, 
        Switch[$CellContext`twa$$, 1, 
         Show[
          Plot[
           Log[$CellContext`x], {$CellContext`x, 0, 5}]], 2, 
         Show[
          Plot[
           Exp[$CellContext`x], {$CellContext`x, 0, 5}]]]], 
      "Specifications" :> {{{$CellContext`omm$$, 1, ""}, {
         1 -> "trig functions", 2 -> "log functions"}, ControlType -> 
         PopupMenu, ControlPlacement -> 1}, {{$CellContext`ptv$$, 1, ""}, {
         1 -> "sin(x)", 2 -> "cos(x)"}, ControlType -> SetterBar, 
         ControlPlacement -> 2}, {{$CellContext`omm$$, 1, ""}, {
         1 -> "trig functions", 2 -> "log functions"}, ControlType -> 
         PopupMenu, ControlPlacement -> 3}, {{$CellContext`twa$$, 1, ""}, {
         1 -> "ln(x)", 2 -> 
          "\!\(\*SuperscriptBox[\(\[ExponentialE]\), \(x\)]\)"}, ControlType -> 
         SetterBar, ControlPlacement -> 4}, 
        PaneSelector[{1 -> Column[{
             Manipulate`Place[1], 
             Manipulate`Place[2]}], 2 -> Column[{
             Manipulate`Place[3], 
             Manipulate`Place[4]}]}, 
         Dynamic[$CellContext`omm$$]]}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {169., 176.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Making a vertical slider", "Subsection",
 CellTags->"Making a vertical slider"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Control", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "2", ",", "\"\<x\>\""}], "}"}], ",", "0", ",", "10", 
    ",", "1", ",", 
    RowBox[{"ControlType", "\[Rule]", "VerticalSlider"}]}], "}"}], 
  "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  DynamicBox[ToBoxes[
    Grid[{{"x", 
       Manipulate`Control[{{$CellContext`x, 2, "x"}, 0, 10, 1}, 
        VerticalSlider]}}, StripOnInput -> True], StandardForm],
   ImageSizeCache->{40., {96.5, 103.5}}],
  "Control"]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Putting controls into columns", "Subsection",
 CellTags->"Putting controls into columns"],

Cell[BoxData[{
 RowBox[{"Grid", "[", 
  RowBox[{"{", "\n", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["var", 
           RowBox[{"(", 
            RowBox[{"1", ",", "1"}], ")"}]], ".."}], "}"}], "}"}], "]"}], " ",
       ",", " ", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["var", 
           RowBox[{"(", 
            RowBox[{"2", ",", "1"}], ")"}]], ".."}], "}"}], "}"}], "]"}]}], 
     "}"}], ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["var", 
           RowBox[{"(", 
            RowBox[{"1", ",", "2"}], ")"}]], ".."}], "}"}], "}"}], "]"}], " ",
       ",", " ", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["var", 
           RowBox[{"(", 
            RowBox[{"2", ",", "2"}], ")"}]], ".."}], "}"}], "}"}], "]"}]}], 
     "}"}]}], "\n", "\t", "}"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", ",", "1"}], ")"}], " ", "refers", " ", "to", " ", "the", 
     " ", "position", " ", "in", " ", "column", " ", "#1"}], ",", " ", 
    RowBox[{"row", " ", "#1", "\n", 
     RowBox[{"(", 
      RowBox[{"2", ",", "1"}], ")"}], " ", "refers", " ", "to", " ", "the", 
     " ", "position", " ", "in", " ", "column", " ", "#2"}], ",", " ", 
    RowBox[{"row", " ", "#1"}]}], "\n", "*)"}]}]}], "Code"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"A", "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Omega]", "*", "t"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "t1", ",", "t2"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], "*", "\[Pi]"}], ",", 
          RowBox[{"2", "*", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<function specifications:\\n\>\"", ",", 
        "\"\<plotting limits:\\n\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"A", ",", "1", ",", "\"\<amplitude\>\""}], "}"}], ",", 
           "0.25", ",", "2"}], "}"}], "]"}], ",", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t1", ",", 
             RowBox[{"-", "\[Pi]"}], ",", "\"\<lower limit\>\""}], "}"}], ",", 
           RowBox[{
            RowBox[{"-", "2"}], "*", "\[Pi]"}], ",", "0", ",", 
           FractionBox["\[Pi]", "4"]}], "}"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Omega]", ",", "1", ",", "\"\<frequency\>\""}], "}"}], 
           ",", "0.25", ",", "5"}], "}"}], "]"}], ",", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"t2", ",", "\[Pi]", ",", "\"\<upper limit\>\""}], "}"}], 
           ",", 
           FractionBox["\[Pi]", "4"], ",", 
           RowBox[{"2", "*", "\[Pi]"}], ",", 
           FractionBox["\[Pi]", "4"]}], "}"}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Above"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`A$$ = 1, $CellContext`t1$$ = -
    Pi, $CellContext`t2$$ = Pi, $CellContext`\[Omega]$$ = 1, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`A$$], 1, "amplitude"}, 0.25, 2}, {{
       Hold[$CellContext`t1$$], -Pi, "lower limit"}, (-2) Pi, 0, 
      Rational[1, 4] Pi}, {{
       Hold[$CellContext`\[Omega]$$], 1, "frequency"}, 0.25, 5}, {{
       Hold[$CellContext`t2$$], Pi, "upper limit"}, Rational[1, 4] Pi, 2 Pi, 
      Rational[1, 4] Pi}, {
      Hold[
       Grid[{{"function specifications:\n", "plotting limits:\n"}, {
          Manipulate`Place[1], 
          Manipulate`Place[2]}, {
          Manipulate`Place[3], 
          Manipulate`Place[4]}}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {360., {115., 120.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`A$1252844$$ = 0, $CellContext`t1$1252845$$ = 
    0, $CellContext`\[Omega]$1252846$$ = 0, $CellContext`t2$1252847$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`A$$ = 
        1, $CellContext`t1$$ = -Pi, $CellContext`t2$$ = 
        Pi, $CellContext`\[Omega]$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`A$$, $CellContext`A$1252844$$, 0], 
        Hold[$CellContext`t1$$, $CellContext`t1$1252845$$, 0], 
        Hold[$CellContext`\[Omega]$$, $CellContext`\[Omega]$1252846$$, 0], 
        Hold[$CellContext`t2$$, $CellContext`t2$1252847$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`A$$ 
        Sin[$CellContext`\[Omega]$$ $CellContext`t], {$CellContext`t, \
$CellContext`t1$$, $CellContext`t2$$}, 
        PlotRange -> {{(-2) Pi, 2 Pi}, {-2, 2}}], 
      "Specifications" :> {{{$CellContext`A$$, 1, "amplitude"}, 0.25, 2, 
         ControlPlacement -> 
         1}, {{$CellContext`t1$$, -Pi, "lower limit"}, (-2) Pi, 0, 
         Rational[1, 4] Pi, ControlPlacement -> 
         2}, {{$CellContext`\[Omega]$$, 1, "frequency"}, 0.25, 5, 
         ControlPlacement -> 3}, {{$CellContext`t2$$, Pi, "upper limit"}, 
         Rational[1, 4] Pi, 2 Pi, Rational[1, 4] Pi, ControlPlacement -> 4}, 
        Grid[{{"function specifications:\n", "plotting limits:\n"}, {
           Manipulate`Place[1], 
           Manipulate`Place[2]}, {
           Manipulate`Place[3], 
           Manipulate`Place[4]}}]}, 
      "Options" :> {ControlPlacement -> Above, Alignment -> Center}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{587., {192., 199.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Continuous updating of \[OpenCurlyQuote]Manipulate\[CloseCurlyQuote] \
variables", "Subsection",
 CellTags->"Continuous updating of 'Manipulate' variables"],

Cell[TextData[{
 StyleBox["ContinuousAction\[Rule]False", "Code",
  FontWeight->"Plain"],
 " will prevent ",
 StyleBox["Manipulate", "Code",
  FontWeight->"Plain"],
 " from updating continuously, instead it will update once the slider has \
been released. "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"A", "*", 
      SuperscriptBox["\[ExponentialE]", "x"]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "6"}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"A", ",", "1.75", ",", "\"\<amplitude\>\""}], "}"}], ",", "0.5",
      ",", "2", ",", "0.25"}], "}"}], ",", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`A$$ = 1.75, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`A$$], 1.75, "amplitude"}, 0.5, 2, 0.25}}, 
    Typeset`size$$ = {360., {120., 123.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`A$70984$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`A$$ = 1.75}, 
      "ControllerVariables" :> {
        Hold[$CellContext`A$$, $CellContext`A$70984$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[$CellContext`A$$ E^$CellContext`x, {$CellContext`x, 0, 1}, 
        PlotRange -> {0, 6}], 
      "Specifications" :> {{{$CellContext`A$$, 1.75, "amplitude"}, 0.5, 2, 
         0.25}}, "Options" :> {ContinuousAction -> False}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {165., 172.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Visually separating variables in the \[OpenCurlyQuote]Manipulate\
\[CloseCurlyQuote] window (Delimiter)\
\>", "Subsection",
 CellTags->
  "Visually separating variables in the 'Manipulate' window (Delimiter)"],

Cell[TextData[{
 StyleBox["Delimiter", "Code",
  FontWeight->"Plain"],
 " will but a faint line in the ",
 StyleBox["Manipulate", "Code",
  FontWeight->"Plain"],
 " window wherever it was placed in the code. It\[CloseCurlyQuote]s a nice \
way of organizing ",
 StyleBox["Manipulate", "Code",
  FontWeight->"Plain"],
 " variables in the window. "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]s", "*", "t"}], "]"}]}], ",", 
       RowBox[{"B", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Omega]c", "*", "t"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", 
        FractionBox["\[Pi]", "2"]}], ",", 
       FractionBox["\[Pi]", "2"]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<ampitudes:\>\"", ",", "13", ",", "Bold"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"A", ",", "1", ",", "\"\<sine\>\""}], "}"}], ",", "0.25", ",", 
     "2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"B", ",", "1.5", ",", "\"\<cosine\>\""}], "}"}], ",", "0.25", 
     ",", "3"}], "}"}], ",", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{"\"\<frequency:\>\"", ",", "13", ",", "Bold"}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]s", ",", "2", ",", "\"\<sine\>\""}], "}"}], ",", "0.1",
      ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]c", ",", "1", ",", "\"\<cosine\>\""}], "}"}], ",", 
     "0.1", ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`A$$ = 1, $CellContext`B$$ = 
    1.5, $CellContext`\[Omega]c$$ = 1, $CellContext`\[Omega]s$$ = 2, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Style["ampitudes:", 13, Bold]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`A$$], 1, "sine"}, 0.25, 2}, {{
       Hold[$CellContext`B$$], 1.5, "cosine"}, 0.25, 3}, {
      Hold[
       Style["frequency:", 13, Bold]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`\[Omega]s$$], 2, "sine"}, 0.1, 2}, {{
       Hold[$CellContext`\[Omega]c$$], 1, "cosine"}, 0.1, 2}}, 
    Typeset`size$$ = {360., {111., 114.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`A$30169$$ = 0, $CellContext`B$30170$$ = 
    0, $CellContext`\[Omega]s$30171$$ = 0, $CellContext`\[Omega]c$30172$$ = 
    0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`A$$ = 1, $CellContext`B$$ = 
        1.5, $CellContext`\[Omega]c$$ = 1, $CellContext`\[Omega]s$$ = 2}, 
      "ControllerVariables" :> {
        Hold[$CellContext`A$$, $CellContext`A$30169$$, 0], 
        Hold[$CellContext`B$$, $CellContext`B$30170$$, 0], 
        Hold[$CellContext`\[Omega]s$$, $CellContext`\[Omega]s$30171$$, 0], 
        Hold[$CellContext`\[Omega]c$$, $CellContext`\[Omega]c$30172$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{$CellContext`A$$ 
         Sin[$CellContext`\[Omega]s$$ $CellContext`t], $CellContext`B$$ 
         Cos[$CellContext`\[Omega]c$$ $CellContext`t]}, {$CellContext`t, -(Pi/
          2), Pi/2}, Frame -> True], "Specifications" :> {
        Style[
        "ampitudes:", 13, Bold], {{$CellContext`A$$, 1, "sine"}, 0.25, 
         2}, {{$CellContext`B$$, 1.5, "cosine"}, 0.25, 3}, Delimiter, 
        Style[
        "frequency:", 13, Bold], {{$CellContext`\[Omega]s$$, 2, "sine"}, 0.1, 
         2}, {{$CellContext`\[Omega]c$$, 1, "cosine"}, 0.1, 2}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {223., 230.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Commonly used commands in demonstrations", "Section",
 CellTags->"Commonly used commands in demonstrations"],

Cell[TextData[{
 "This section is a brief overview of some essential commands and functions \
you will be using in your demonstrations, including ",
 StyleBox["Manipulate", "Code",
  FontWeight->"Plain"],
 ". "
}], "Text"],

Cell[CellGroupData[{

Cell["Solving ordinary differential equations (ODE)", "Subsection",
 CellTags->"Solving ordinary differential equations (ODE)"],

Cell[CellGroupData[{

Cell["Defining equations for NDSolve, one method", "Subsubsection",
 CellTags->{"Defining equations for NDSolve", "one method"}],

Cell[TextData[{
 "When using ",
 StyleBox["NDSolve", "Code",
  FontWeight->"Plain"],
 " to solve a system of ODE\[CloseCurlyQuote]s, you\[CloseCurlyQuote]ll enter \
your differential equations first, then the conditions, followed by the \
variables and range. You can either enter all this directly inside ",
 StyleBox["NDSolve", "Code",
  FontWeight->"Plain"],
 " or you can name each section and enter that into ",
 StyleBox["NDSolve", "Code",
  FontWeight->"Plain"],
 ". Below is an example of the second method being used. Remember, if you \
choose this method the names you give the sets of equations are up to you, \
they can be anything."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ode", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"f", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"f0", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"f", "[", "t", "]"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"g", "'"}], "[", "t", "]"}], "\[Equal]", "g0"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conditions", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "0", "]"}], "\[Equal]", "f0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g", "[", "0", "]"}], "\[Equal]", "g0"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"variables", "=", 
   RowBox[{"{", 
    RowBox[{"f", ",", "g"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"ode", ",", "\[IndentingNewLine]", "conditions"}], "}"}], ",", 
    "\[IndentingNewLine]", "variables", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], ";"}]}], "Input"],

Cell["\<\
Note that all equations entered are inside a set of curly brackets { } and \
followed by a semicolon. The curly brackets indicate that this is a list of \
equations and the semicolon will suppress each function, meaning once you \
enter this data (SHIFT+ENTER) there will be no output.
All \[OpenCurlyDoubleQuote]=\[CloseCurlyDoubleQuote] signs INSIDE NDSolve are \
actually double equal signs \
\[OpenCurlyDoubleQuote]==\[CloseCurlyDoubleQuote]. \
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Entering ODE\[CloseCurlyQuote]s into NDSolve", "Subsubsection",
 CellTags->"Entering ODE's into NDSolve"],

Cell[TextData[{
 "If you don\[CloseCurlyQuote]t want to define each set of equations to be \
entered into ",
 StyleBox["NDSolve", "Code",
  FontWeight->"Plain"],
 " as was shown above, the differential equations, conditions, and variables \
can be entered directly into ",
 StyleBox["NDSolve", "Code",
  FontWeight->"Plain"],
 ". "
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solution", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"f", "'"}], "[", "t", "]"}], "\[Equal]", 
        RowBox[{"f0", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"f", "[", "t", "]"}]}], ")"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"g", "'"}], "[", "t", "]"}], "\[Equal]", "g0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "[", "0", "]"}], "\[Equal]", "f0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "[", "0", "]"}], "\[Equal]", "g0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"f", ",", "g"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[TextData[{
 "Above, each NDSolve function was defined as ",
 StyleBox["solution=NDSolve[{", "Code",
  FontWeight->"Plain"],
 ", this is a helpful way to define the solution to a function you wish to \
plot later on. How this will be used is discussed later on. "
}], "Text"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulate", "Subsection",
 CellTags->"Manipulate"],

Cell[TextData[{
 "All your functions will go inside ",
 StyleBox["Manipulate", "Code",
  FontWeight->"Plain"],
 ", below all functions except for ",
 StyleBox["Plot", "Code",
  FontWeight->"Plain"],
 " are suppressed with a semicolon. The manipulated variable, in this case it\
\[CloseCurlyQuote]s \[Tau], is located inside a set of curly brackets. Note \
that the range of this variable on the slider is 1 \[LessEqual] ",
 Cell[BoxData[
  FormBox["\[Tau]", TraditionalForm]]],
 " \[LessEqual] 10 s with a step size (or increment) of 1. It is not \
necessary to include an increment, however it\[CloseCurlyQuote]s good to have \
one in your demonstration so you can set the number of digits displayed for \
the manipulated variable next to the slider. As shown below, to display the \
value of the manipulated variable add in ",
 StyleBox["Appearance\[Rule]\[CloseCurlyDoubleQuote]Labeled\
\[CloseCurlyDoubleQuote]", "Code",
  FontWeight->"Plain"],
 ". "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "sol", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sol", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Ca", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{
              FractionBox["1", "\[Tau]"], "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"Ca", "[", "t", "]"}]}], ")"}]}], "-", 
             RowBox[{"0.2", "*", 
              RowBox[{"Ca", "[", "t", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Ca", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
         "Ca", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Ca", "[", "t", "]"}], "/.", "sol"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "5", ",", "\"\<residence time (s)\>\""}], "}"}], 
     ",", "1", ",", "10", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Tau]$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Tau]$$], 5, "residence time (s)"}, 1, 10, 1}}, 
    Typeset`size$$ = {360., {115., 118.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Tau]$4069$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Tau]$$ = 5}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Tau]$$, $CellContext`\[Tau]$4069$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`sol$}, $CellContext`sol$ = 
         NDSolve[{
           Derivative[
             1][$CellContext`Ca][$CellContext`t] == (
               1/$CellContext`\[Tau]$$) (1 - $CellContext`Ca[$CellContext`t]) - 
             0.2 $CellContext`Ca[$CellContext`t], $CellContext`Ca[0] == 
            1}, $CellContext`Ca, {$CellContext`t, 0, 10}]; Plot[
          ReplaceAll[
           $CellContext`Ca[$CellContext`t], $CellContext`sol$], \
{$CellContext`t, 0, 10}]], 
      "Specifications" :> {{{$CellContext`\[Tau]$$, 5, "residence time (s)"}, 
         1, 10, 1, Appearance -> "Labeled"}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {160., 167.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Localizing variables (Module)", "Subsection",
 CellTags->"Localizing variables (Module)"],

Cell[TextData[{
 "You should have this command in all of your demonstrations. Basically what \
it does is allow you to localize all of your set variables (variables \
followed by an \[OpenCurlyDoubleQuote] = \[CloseCurlyDoubleQuote] sign). In \
the example below, you\[CloseCurlyQuote]ll see that the two declared \
variables (a and b) are now green, meaning that they have been localized \
inside ",
 StyleBox["Module", "Code",
  FontWeight->"Plain"],
 ". Once your demonstration has been put into demonstration format and all \
snapshots and the thumbnail have been added, make sure they are not being \
evaluated. If they are, you\[CloseCurlyQuote]ll notice that the (normally \
solid blue) bracket to the left of the code or image will be blinking. This \
is essentially saying that not all the variables are localized. "
}], "Text"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"a", "=", "1"}], ";", " ", 
      RowBox[{"b", "=", "2"}], ";", "\n", "\t", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "*", 
          SuperscriptBox["x", "b"]}], "+", "c"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]}]}], "\n", "\t", 
    "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "0", ",", "\"\<y-intercept\>\""}], "}"}], ",", "0", 
     ",", "10"}], "}"}]}], "\n", "]"}]], "Code"],

Cell[TextData[{
 "There are three ways to localize variables (Module, Block, and With), Block \
and With are shown below. For a detailed explanation of what each does and \
the differences between them, see this ",
 StyleBox[ButtonBox["post",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathematica.stackexchange.com/questions/559/what-are-the-use-\
cases-for-different-scoping-constructs"], None},
  ButtonNote->
   "http://mathematica.stackexchange.com/questions/559/what-are-the-use-cases-\
for-different-scoping-constructs"],
  FontWeight->"Bold"],
 " on Stack Exchange. "
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Setup for making buttons for multiple plots (Switch)", "Subsection",
 CellTags->"Setup for making buttons for multiple plots (Switch)"],

Cell[TextData[{
 StyleBox["Switch", "Code",
  FontWeight->"Plain"],
 " is used inside ",
 StyleBox["Manipulate", "Code",
  FontWeight->"Plain"],
 " as a way to switch between multiple plots or graphics. This will create \
buttons or a drop-down list linked to a specific plot. "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "+", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p2", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"2", "*", "x"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Switch", "[", 
     RowBox[{"ctrl", ",", 
      RowBox[{"(*", 
       RowBox[{"this", " ", "name", " ", "can", " ", "be", " ", "anything"}], 
       "*)"}], "\[IndentingNewLine]", "1", ",", 
      RowBox[{"Show", "[", "p1", "]"}], ",", "\[IndentingNewLine]", "2", ",", 
      RowBox[{"Show", "[", "p2", "]"}]}], " ", 
     RowBox[{"(*", 
      RowBox[{
      "associate", " ", "\"\<1\>\"", " ", "with", " ", "p1", " ", "and", " ", 
       "\"\<2\>\"", " ", "with", " ", "p2"}], "*)"}], "\[IndentingNewLine]", 
     "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ctrl", ",", "1", ",", "\"\<\>\""}], "}"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
       "1", "\[Rule]", "\"\<\!\(\*SuperscriptBox[\(x\), \(2\)]\)+1\>\""}], 
       ",", 
       RowBox[{"(*", 
        RowBox[{
        "add", " ", "labels", " ", "to", " ", "\"\<1\>\"", " ", "and", " ", 
         "\"\<2\>\""}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"2", "\[Rule]", "\"\<2 x\>\""}]}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "Setter"}]}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`ctrl$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`ctrl$$], 1, ""}, {
      1 -> "\!\(\*SuperscriptBox[\(x\), \(2\)]\)+1", 2 -> "2 x"}}}, 
    Typeset`size$$ = {360., {115., 118.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`ctrl$1047453$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`ctrl$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`ctrl$$, $CellContext`ctrl$1047453$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`p1 = 
        Plot[$CellContext`x^2 + 1, {$CellContext`x, -5, 5}]; $CellContext`p2 = 
        Plot[2 $CellContext`x, {$CellContext`x, 0, 5}]; 
       Switch[$CellContext`ctrl$$, 1, 
         Show[$CellContext`p1], 2, 
         Show[$CellContext`p2]]), 
      "Specifications" :> {{{$CellContext`ctrl$$, 1, ""}, {
         1 -> "\!\(\*SuperscriptBox[\(x\), \(2\)]\)+1", 2 -> "2 x"}, 
         ControlType -> Setter}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{411., {159., 166.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Show multiple plots on same axes", "Subsection",
 CellTags->"Show multiple plots on same axes"],

Cell[TextData[{
 "Use ",
 StyleBox["Show", "Code",
  FontWeight->"Plain"],
 " to display more than one ",
 StyleBox["Plot", "Code",
  FontWeight->"Plain"],
 " or ",
 StyleBox["Graphic", "Code",
  FontWeight->"Plain"],
 " together (on top of each other). Any type of ",
 StyleBox["Plot", "Code",
  FontWeight->"Plain"],
 " can be used, however for multiple plots the range of each should be the \
same. Plotting functions should be named or defined as follows, in this \
example plots are named \[OpenCurlyDoubleQuote]p1\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]p2\[CloseCurlyDoubleQuote]. These names can be \
anything though. "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     SuperscriptBox["x", "2"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"x", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFxWlIkwEYAODpPGrOcgqRmNuniMt5pD+CjDzSIPMi0yVNOjZ1s7xSHJiz
yzQdoa0ST2RM0xBxZszAjmVqmtdCV1bMSJxLWgra+tKpueqH7/vj4fEQ5J5K
t6ZQKHH//L/pmsAuKE0Suv2glohNJs6EbW8ZUt8iiItwU18ly5a4AmeFiLNX
WVJYu5FRvcyqh+11c+wlVjusGJXn/WD1wsouqS4rYBQWhU3WL+Zr4RyDj16l
/AzTPErZXw/NwlVOYxzFBT0s0CW9oo5/g/PelApy2Ua4+zI9ce+JJVghyTQG
Ji/DJfLNhF+LKzBFOxv+osgEexcIC5M4JDxP1p52ePkbjjZcuno/bw2On5f5
MpnrsHFAcONt5wYcwJh2jzz/B6aFkfwZ0xZ8fIm36smlhG//qT/NiudnBfdU
DJ4jSFxoK57VaKzh1HxJD72BCh8Q+Wpi+TbwO2c/B3GwLfxcWdLoR7WDJVac
k+NfcNpMUVSOyh42tHlUy4t3wNX7XW16uTthWYNwmE/QYF71WQ19AV871mqW
qx1gvSGisL+cDjeHBLlN8B3hzjIxQ+S/Cy7npsZQSfzgjKK9fGI3XOfT2DkR
4wRf76usi+nF49y4raNeDPhoznAKQ4rL9wm8xknca+BRTXyKMyzz7+dMqXGh
yWZyhOMCC7p/EtK7eFZJ4mb0PVycqPpIf4BXkOIqWQ2uDDZv1Dbh5teW6bYO
XDZFrxwcxhtasjNuj+AtBZrIqDH86R7Z+pgGn+G5ZGg/4Gy9a+ScHg9UFTEf
GvDDZTpz+gIey256/N2I52cSzJUVvPjITfMTE17mOPe+gMTrulrurK3hzTds
RM/W8Y6E9IjiTVzlOeQeuoWrTd5miwX/C0XwNRU=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Frame->True,
  Method->{},
  PlotRange->{{0, 5}, {0., 24.999998979591844`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Miscellaneous ", "Section",
 CellTags->"Miscellaneous"],

Cell["\<\
This is a collection of miscellaneous commands and functions explained, that \
should be useful to you in your demonstrations.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Entering constants, equations, and functions", "Subsection",
 CellTags->{"Entering constants", "equations", "and functions"}],

Cell[TextData[{
 "Typically an expression is suppressed (entering the expression in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " won\[CloseCurlyQuote]t return an output) with a colon and equals sign ",
 StyleBox[":=", "Code",
  FontWeight->"Plain"],
 ", this is fine to use if you are not planning on submitting your notebook \
as a demonstration. This, according to Wolfram Demonstrations Project will \
slow down evaluation. Instead, to suppress an expression you should follow \
that expression with a semicolon ",
 StyleBox[";", "Code",
  FontWeight->"Plain"],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"k1", "=", "0.5"}], ";", " ", 
  RowBox[{"ra", "=", 
   RowBox[{"k", "*", 
    RowBox[{"Ca", "[", "t", "]"}]}]}], ";"}]], "Input"],

Cell["\<\
Another way to enter an expression without outputting anything once the \
expression is entered, however it will not suppress the expression like using \
a semicolon will. This will also hide any error messages associated with the \
expression or command. The following is an example taken from the \
Documentation Center that demonstrates this command well.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", "0"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG"],

Cell[BoxData["ComplexInfinity"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quiet", "[", 
  RowBox[{"1", "/", "0"}], "]"}]], "Input"],

Cell[BoxData["ComplexInfinity"], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["If statements", "Subsection",
 CellTags->"If statements"],

Cell[TextData[{
 "The format of the ",
 StyleBox["If", "Code",
  FontWeight->"Plain"],
 " command (inside the brackets) is ",
 StyleBox["condition, then, else",
  FontSlant->"Italic"],
 ". It can be used in a number of scenarios such as in a simple function like \
the one shown below. It is useful in demonstrations too, a second example of \
this is shown below under \[OpenCurlyQuote]Making manipulated variables \
inactive\[CloseCurlyQuote]. "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "\[LessEqual]", "5"}], ",", "3", ",", 
     RowBox[{"8", "-", "x"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxF0Hs0lHkYB/DRxKuJmmGI3Ga8jnENe2m7Mc+m3W7qrIp2lcpgKJNLYcXU
qqOiVk2lWHIslskKtWfsdpFfho1xmUS0Gy3HmI1MG01TRmPend1zej3n/M5z
Pv98n+f5sXkJ26LnUSiUbwzvv158jGfiF3U2gPJ/mQI2MMJ56XSb+8Gl7SVJ
E04y0rV1OQOCZU9Jx3Af/aA6pCAdr3RXSGrHSdPYWZyhFZOkz9E7PEr3qUnz
BnYgaudb0km/Z/ESODOkbyaabbfZODu3T0bcC9+dFPjgEyW64DcqI9KU3mFo
SKeSdk3mp+3wMCY9qskPXXjPhPQm5YGjF5NMSW8dFXk6OtJIv2jmZbbVLCS9
jNHvELjXnDSNq4kYVC8ivf5l2DvnEDrpP6RRRmFeDNL12S17WJo5841ThuVy
i7n9Vk+3H/zEknTkoYx6s8I5X0kQ3x3smLNM0Nt0fXbOV72WS2UUJrRVXsoQ
6DFIVBVI/6YygcWRp380jUHg9fdSKsaEdLFp+vQUBtaCPc0sGhMecwKPNE5g
MO7Z1OxvzoRl146mZSkxaJjAW8LoTMh2u/XtpiEMeHHjLXnWTFjj7p3a34OB
bj/RKvRhgqmXUaJJKQY+MZ7yoAgmlPlVRfL9Mfhrv1NCTRQT1nk1sSuWY/C9
wJK+KJYJY65/Dil8DPOS3gc/jDfMs1+wO8IZg3JhR1+wkAl3TPbv2I1hsORi
3LPQfCb0DLh9se2RCRAN1ap9XUyYd+qaa0C0CTy08FqYstIKeE/F41a5xnC3
9kSRF9UazpTNtFVqqZBh5PFV5zNroM1W741ZNw9og+kb4iVLQLWeloDnU0BZ
yc4rEdqAIOpI3XFzPTfPzXb+7RBbuBFe9MquaoYrKuS3RrCWwv3L0SNpx95x
w/LC5WbPl0JBbc6Dzsg33Ol1FdqSRjtgqQ7YZhpPcRXKtWnS0/Yw1j3mr2qa
4Jb5+9l1RTjApEWqa/7UKLfmZAojxtsRfCvEY+fcn3FPh0RupmocQSRu39hR
1839dLC06nSXE2QqGT6ea6q4Be5FNV2bWUDht/Pj1FL03f3cgs23WTC8+Bbj
sPsTtMUupKLdhQ3dkuCQn4NG0OfxrbsYOWygj6Y2WF0YQyX2PJdODRsmZewv
pbtfIZdm8ZWtu5yBZRtQn/z0NRJ5Sz16Gp0hU8AIvfBWg/jq+Y9kHjj4FnGy
t4ZqEe/ma1bOeRzoZy9jG4U6JDixXbfpAg77LK+O7DyjQynbJU/MLuFwrajs
Hr9Ah7I1KedEV3CA63WHsyQ6VLtS+z6/GIfELtkQUumQtonor6zGoW2x/rfl
4bNI1GOW29KKQ2YeP9YlQI8Kyw/GnpLh0G1/MPDjID0qT5YHbujAwabisOPa
MD361Vo00yHH4UZ95uO9qXo0GGYZ29uHw3B/IRTV6hFHYRs4osBhhe1DGwsn
AvlK0h1/UhryS/vULG8CrTo5oI1+bsh3H5T7rCZQEKf4xvgLwz2rxrO27CTQ
oTiW49QUDqJd1Kns8wQSrjmu/UVtyFcs6MwvJtBJ85HHyRoc3AR0cWU1gQrq
ys9OT+NwX+gQ3tJKoLLM+TF3Zgz/ZeyyorePQNXB0WuFOhy+zvWwHFEQSOL8
wCFAj8OPVn7/TE4RqFHtqiUIHCaLP5MRBIH+BZHTPzI=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Method->{},
  PlotRange->{{0, 10}, {-1.9999997959183666`, 3.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Control number of digits displayed", "Subsection",
 CellTags->"Control digits displayed"],

Cell["\<\
This function is helpful when you want to display a value and control how \
many digits are shown. If you didn\[CloseCurlyQuote]t need to control the \
number of digits displayed, you would simply write the variable itself like \
the first example shown below.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ca0", "=", "0.205619"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<\!\(\*SubscriptBox[\(C\), \(A, 0\)]\) = \>\"", ",", "Ca0"}], 
   "}"}], "]"}]}], "Input"],

Cell[BoxData[
 TemplateBox[{
  "\"\\!\\(\\*SubscriptBox[\\(C\\), \\(A, 0\\)]\\) = \"","0.205619`"},
  "RowDefault"]], "Output"]
}, Open  ]],

Cell[TextData[{
 "Now using ",
 StyleBox["NumberForm", "Code",
  FontWeight->"Plain"],
 " you can limit the digits displayed for \[OpenCurlyDoubleQuote]Caing\
\[CloseCurlyDoubleQuote] to 3. "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<\!\(\*SubscriptBox[\(C\), \(A, 0\)]\) = \>\"", ",", 
    RowBox[{"NumberForm", "[", 
     RowBox[{"Ca0", ",", "3"}], "]"}]}], "}"}], "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{"\"\\!\\(\\*SubscriptBox[\\(C\\), \\(A, 0\\)]\\) = \"",TagBox[
    InterpretationBox["\"0.206\"", 0.205619, AutoDelete -> True], 
    NumberForm[#, 3]& ]},
  "RowDefault"]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Select a solution from a list *important*", "Subsection",
 CellTags->"Select a solution from a list *important*"],

Cell[TextData[{
 "What is [[n]]?\n",
 StyleBox["[[n]]", "Code",
  FontWeight->"Plain"],
 " is the same as ",
 StyleBox["Part[expression,n]", "Code",
  FontWeight->"Plain"],
 " where n is a whole number, typically 1. It\[CloseCurlyQuote]s easier to \
just use ",
 StyleBox["[[n]]", "Code",
  FontWeight->"Plain"],
 ". Here is an example of what it\[CloseCurlyQuote]ll do."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], "-", "2"}], "\[Equal]", "0"}], ",", "x"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.4142135623730951`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.414213562373095`"}], "}"}]}], "}"}]], "Output"]
}, Open  ]],

Cell[TextData[{
 "There are two solutions to this equation, which ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " displays in a list. Use s[[1]] (or First[s]) to get the first solution and \
s[[2]] will return the second solution."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"s", "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"s", "[", 
  RowBox[{"[", "2", "]"}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{"-", "1.4142135623730951`"}]}], "}"}]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", "\[Rule]", "1.414213562373095`"}], "}"}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Localize variables for faster evaluations", "Subsection",
 CellTags->"Localize variables for faster evaluations"],

Cell[TextData[{
 "There are a few other ways to localize variables rather than using ",
 StyleBox["Module", "Code",
  FontWeight->"Plain"],
 ". For a detailed explanation of each of the three ways and the differences \
between them, see this ",
 StyleBox[ButtonBox["post",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathematica.stackexchange.com/questions/559/what-are-the-use-\
cases-for-different-scoping-constructs"], None},
  ButtonNote->
   "http://mathematica.stackexchange.com/questions/559/what-are-the-use-cases-\
for-different-scoping-constructs"],
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "on Stack Exchange. The first is ",
 StyleBox["Block", "Code",
  FontWeight->"Plain"],
 " and the second is ",
 StyleBox["With", "Code",
  FontWeight->"Plain"],
 ":"
}], "Text"],

Cell[TextData[{
 StyleBox["Block", "Code",
  FontWeight->"Plain"],
 " is contructed the same way as ",
 StyleBox["Module.", "Code",
  FontWeight->"Plain"]
}], "Text"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\n", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"a", "=", "1"}], ";", " ", 
      RowBox[{"b", "=", "2"}], ";", "\n", "\t", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"a", "*", 
          SuperscriptBox["x", "b"]}], "+", "c"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]}]}], "\n", "\t", 
    "]"}], ",", "\n", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c", ",", "0", ",", "\"\<y-intercept\>\""}], "}"}], ",", "0", 
     ",", "10"}], "}"}]}], "\n", "]"}]], "Input"],

Cell[TextData[{
 StyleBox["\nWith", "Code",
  FontWeight->"Plain"],
 " is similar to ",
 StyleBox["Module", "Code",
  FontWeight->"Plain"],
 " in the sense that it will localize defined variables. ",
 StyleBox["With", "Code",
  FontWeight->"Plain"],
 " is faster than ",
 StyleBox["Module", "Code",
  FontWeight->"Plain"],
 ". "
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"With", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f", "=", 
      SubscriptBox["f", "0"]}], "}"}], ",", " ", 
    RowBox[{"(*", 
     RowBox[{"define", " ", "local", " ", "variable", " ", "f"}], "*)"}], 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"10", "+", 
     SuperscriptBox["f", "2"]}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"some", " ", 
    RowBox[{"function", "/", "expression"}], " ", "containing", " ", 
    "variable", " ", "f"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "notice", " ", "how", " ", "now", " ", "that", " ", "f", " ", "is", " ", 
     "defined", " ", "as", " ", "a", " ", "local", " ", "variable"}], ",", 
    " ", 
    RowBox[{"it", " ", "appears", " ", 
     RowBox[{"green", ".", " ", "The"}], " ", "same", " ", "happens", " ", 
     "when", " ", "Module", " ", "is", " ", "used", " ", "to", " ", 
     "localize", " ", 
     RowBox[{"variables", "."}]}]}], "*)"}]}]}], "Code"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "=", "0.2"}], ",", "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{"(*", 
           RowBox[{"the", " ", "local", " ", 
            RowBox[{"variable", " ", "'"}], 
            RowBox[{"s", "'"}], " ", "is", " ", "defined", " ", "here", " ", 
            "inside", " ", "the", " ", "curly", " ", "brackets", " ", 
            RowBox[{"{", "}"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Ca", "'"}], "[", "t", "]"}], "\[Equal]", 
            RowBox[{
             RowBox[{"-", "k"}], "*", 
             RowBox[{"Ca", "[", "t", "]"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Ca", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
         "Ca", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Ca", "[", "t", "]"}], "/.", "s"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"the", " ", "fuction", " ", "is", " ", "Plot"}], ",", " ", 
     RowBox[{"where", " ", 
      RowBox[{"ever", " ", "'"}], 
      RowBox[{"s", "'"}], " ", "is", " ", "used"}], ",", " ", 
     RowBox[{"the", " ", "local", " ", 
      RowBox[{"variable", " ", "'"}], 
      RowBox[{"s", "'"}], " ", "will", " ", "be", " ", "used", " ", "in", " ",
       "its", " ", "place"}]}], "*)"}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVxXk01AkcAHByxUw9xzY1jpnf+M3mCElvd/HS99uxEmoXqZYSU4YtHVPj
JWlDJCuaNpWUJ6Z0UnlUJPpN7mMck2OZopHkHKVZQ8nu/vF5Hw7voG/oPA0N
jU3/+f+sP3i6K/akrPYGxvDcnBIqZYT3NuJ3KBgPVk/PKGGuuvwUQRyDYtFA
5WeVErJepLJ1iGSonthdOjqihAi3yP1T7CtQaui0+H2nEmRfwtMn2HfAzCP7
2LcHStDrUViNsUvgpzKuUVWwEnLqswUj7Dooz7c+n1s5DgUPknsiHLqhMCn9
nCBmDMKg9cro4X5w0887G7h1FA4M2PQXFQwBG+OjbdeMgAEnwarXeQJUGRUn
BcQwpBk22OYET8K12PQn1RZDwOvZUqHV+A9kKUIyygw/gKAqgXfQagYGfYPu
pZkMwqNDdL8lG2fh+ieaW63je8g5vm/YcZsG3nX1JYrWD0B89lefz6OaGJfv
kGkneAcasj4si9ZCOQsma+/0w1IhP2qLrQ6ufBTTpdetgHeqy1tpz3WxIslS
f4StAM+BvSf+EsxHoXhZq3vQW9j8TrSMxTLAntZ2Y4PbfTD8khdbm0/D7P2o
3abdBw5GHRbrdi3Aeu+97MLiN2AAqhD55EIMfR/Qwk58DRvGAqYs/Q3R2uLc
LN9DDl2SPZoBdkZYNRY7tYPVA8VnKoMIlRHS3DkafJNu4OtE9kmlxijI7LZL
nu2C3YePF9MzTdD9Rqs4VbsLloctk3qHfIfx1y8+7WV2QrOxHS3SZRHqmaaY
87/vgGcF8VfttBgYYcx5E+zZDsc1bX9tfM3AF79ddz7LfwUG8miPA0WLsX9w
4zgpksFAHic9O2YJ3nztUMdsaYN0a6Z2iT8TnerzLK3nt4Eok18TQpjiwvzn
jvP8WyEgfaeUPmiKh6I+6HLvt4B6/c3p7HIz7NbM2+Wnbob+gbVRkiRzVAt0
T9OeSyHXbYVZU4gFnvLa9nFK2AT5iZFGYfYsFB91cJ3Z3AhJ/ru9tFQsbB+X
9b51aYAf5Dl3kprYuOOZi2IDsx4ybK7mN3kRaFXTofOUUQcnX6RmeJUQuOq0
o7BZvxY2mfnfrOdysO5hbRxFr4E1B2oCjZI5WPuz6fLFttWQbc7jNqo4eMXn
fBx3dRVwX966tDnQEguDLuiX7q0Ekb3Etq3cEs39eb8cEb8E/qR2a50tiXPa
aRkymQR4jz4RyedIPJJQsugVUwIR8X5fPc+TODTbxchjSCDSr6iTfoHEncZ6
t6JMJHBGFZkmukRi0ZS1kL1AAgUu018uZ5F4gVtSfkRDAtPUXEfePRKP/fn4
24+DFIja6KmVNSRq5sYdtSqmIFO8P/x0HYnXUubZ0AopEAul6zwaSGRHhPCV
BRQ8ZohmGqQk+sz6JpTcpkAeYBIuaydR3uLqueUaBVb9zHWKfhInKmoHxaco
cCyKZt0YIPHiQycvUSwFrok906GDJJq4K5xPnKDA2yrr4dAwiYTX/cLtRyk4
vI9gffxIYqc9x4Kxj4KYVXHThZMklhWPNeuGU5C4QPFKqCIxqmQlXb2HgowH
4hS1msRhdjUhD6IgN1Y7rHSGxOCoXrU0kIJ7PqFrY76SaONMD5Bsp6DIstpi
9TcSyW6n9Y/9KSifXDo9N0ei/d8uT+76UvAvCiZJLA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.15000000000000002`},
  Method->{},
  PlotRange->{{0, 10}, {0.13533529230671473`, 0.9999999591836768}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Partial differential equations (PDE) in Mathematica", "Section",
 CellTags->"Partial differential equations (PDE) in Mathematica"],

Cell[CellGroupData[{

Cell["Writing PDE\[CloseCurlyQuote]s in Mathematica", "Subsection",
 CellTags->"Writing PDE's in Mathematica"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["\[PartialD]", "2"], 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], 
   RowBox[{"\[PartialD]", 
    SuperscriptBox["x", "2"]}]], "=", 
  RowBox[{
   RowBox[{"x", " ", 
    FractionBox[
     RowBox[{"\[PartialD]", 
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}]}], 
     RowBox[{"\[PartialD]", "y"}]]}], "+", 
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], 
    RowBox[{"\[PartialD]", "x"}]], "-", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]}]], "Text"],

Cell["\<\
Below are two examples of how the PDE can be written, note that both methods \
will return the same function. \
\>", "Text"],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{"function", ",", 
   RowBox[{"{", 
    RowBox[{"variable", ",", 
     RowBox[{"order", " ", "wrt", " ", "variable"}]}], "}"}]}], "]"}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"x", "*", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}], ",", "y"}], "]"}]}], "+", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", "x"}], "]"}], "-", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Derivative", "[", 
    RowBox[{
     RowBox[{"order", " ", "wrt", " ", "var", " ", "1"}], ",", 
     RowBox[{"order", " ", "wrt", " ", "var", " ", "2"}]}], "]"}], "[", 
   "function", "]"}], "[", 
  RowBox[{
   RowBox[{"var", " ", "1"}], ",", 
   RowBox[{"var", " ", "2"}]}], "]"}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Derivative", "[", 
      RowBox[{"2", ",", "0"}], "]"}], "[", "f", "]"}], "[", 
    RowBox[{"x", ",", "y"}], "]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"x", "*", 
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", 
        RowBox[{"0", ",", "1"}], "]"}], "[", "f", "]"}], "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0"}], "]"}], "[", "f", "]"}], "[", 
     RowBox[{"x", ",", "y"}], "]"}], "-", 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}]}], ";"}]], "Input"],

Cell["\<\
This method is nice when you want to take the derivative of a function at a \
specific point, for example:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"y", "+", "1"}], ")"}], "2"], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"z", "+", "1"}], ")"}], "2"]}], "2"], "+", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"y", "*", "z"}], "]"}], "*", 
     SuperscriptBox["x", "2"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Derivative", "[", 
     RowBox[{"1", ",", "0", ",", "0"}], "]"}], "[", "f", "]"}], "[", 
   RowBox[{"1", ",", "2", ",", "2"}], "]"}], ";"}]}], "Input"],

Cell["\<\
\[OpenCurlyDoubleQuote]The first derivative of f with respect to x at the \
point (1,2,2).\[CloseCurlyDoubleQuote]\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Solving PDE\[CloseCurlyQuote]s in Mathematica", "Subsection",
 CellTags->"Solving PDE's in Mathematica"],

Cell["\<\
PDE\[CloseCurlyQuote]s are solved the same way you would solve an ODE, using \
NDSolve.\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"entering", " ", "the", " ", 
    RowBox[{"PDE", "'"}], "s"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PDE", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], "+", 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "t"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"g", "[", 
           RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}], "\[Equal]", 
        RowBox[{"t", "*", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"g", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}]}]}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "entering", " ", "initial", " ", "and", " ", "boundary", " ", 
     "conditions", " ", 
     RowBox[{"(", 
      RowBox[{"must", " ", "be", " ", "equal"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initialconditions", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"x", ",", "0"}], "]"}], "\[Equal]", "fo"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"x", ",", "0"}], "]"}], "\[Equal]", "go"}]}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"boundaryconditions", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "fo"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{"0", ",", "t"}], "]"}], "\[Equal]", "go"}]}], "}"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"solve", " ", "using", " ", "NDSolve"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solution", "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
        "PDE", ",", "\[IndentingNewLine]", "initialconditions", ",", 
         "\[IndentingNewLine]", "boundaryconditions"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"f", ",", "g"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "x1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "t1"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nonlinear Models ", "Section",
 CellTags->"Nonlinear Models"],

Cell[CellGroupData[{

Cell["Nonlinear fit of data to rate law", "Subsection",
 CellTags->"Nonlinear fit of data to rate law"],

Cell[CellGroupData[{

Cell["Fitting the model", "Subsubsection",
 CellTags->"Fitting the model"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"data", " ", "has", " ", "form", " ", 
    RowBox[{"{", 
     RowBox[{"Ca", ",", "Cb", ",", "ra"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0.05"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "0.071"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "0.17"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "2", ",", "0.035"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5.5", ",", "0.47"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"1.5", ",", "4", ",", "0.15"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"6.4", ",", "2", ",", "0.45"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "0.6"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"sol", "=", 
    RowBox[{"NonlinearModelFit", "[", 
     RowBox[{"data", ",", "\[IndentingNewLine]", 
      RowBox[{"k", "*", 
       SuperscriptBox["Ca", "n"], "*", 
       SuperscriptBox["Cb", "m"]}], ",", 
      RowBox[{"(*", 
       RowBox[{"model", " ", 
        RowBox[{"you", "'"}], "re", " ", "fitting", " ", 
        RowBox[{"(", "ra", ")"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"k", ",", "n", ",", "m"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{
       "variables", " ", "that", " ", "need", " ", "to", " ", "be", " ", 
        RowBox[{"calculated", "/", "determined"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Ca", ",", "Cb"}], "}"}], ",", 
      RowBox[{"(*", 
       RowBox[{"known", " ", "variables"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"MaxIterations", "\[Rule]", "200"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"sol", "[", "\"\<ParameterConfidenceIntervalTable\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"sol", "[", "\"\<FitResiduals\>\"", "]"}]}]}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"0.049116796241318095`", " ", 
       SuperscriptBox["Ca", "1.0031874211611114`"], " ", 
       SuperscriptBox["Cb", "0.5087497005071561`"]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`k -> 0.049116796241318095`, $CellContext`n -> 
      1.0031874211611114`, $CellContext`m -> 
      0.5087497005071561}, {{$CellContext`Ca, $CellContext`Cb}, \
($CellContext`Ca^$CellContext`n $CellContext`Cb^$CellContext`m) \
$CellContext`k}}, {
    1}, {{1, 1, 0.05}, {1, 2, 0.071}, {2, 3, 0.17}, {0.5, 2, 0.035}, {
     4, 5.5, 0.47}, {1.5, 4, 0.15}, {6.4, 2, 0.45}, {6, 4, 0.6}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`Ca, $CellContext`Cb, \
$CellContext`k, $CellContext`m, $CellContext`n}, #], {HoldAll}], 
    MaxIterations -> 200]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output"],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {"\<\"\"\>", "\<\"Estimate\"\>", "\<\"Standard Error\"\>", \
"\<\"Confidence Interval\"\>"},
     {"k", "0.049116796241318095`", "0.00041146677870129315`", 
      RowBox[{"{", 
       RowBox[{"0.04805908721402077`", ",", "0.05017450526861542`"}], "}"}]},
     {"n", "1.0031874211611114`", "0.00362392735343707`", 
      RowBox[{"{", 
       RowBox[{"0.9938718193327004`", ",", "1.0125030229895222`"}], "}"}]},
     {"m", "0.5087497005071561`", "0.003578487602821663`", 
      RowBox[{"{", 
       RowBox[{"0.499550905276293`", ",", "0.5179484957380192`"}], "}"}]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
    GridBoxDividers->{
     "ColumnsIndexed" -> {2 -> GrayLevel[0.7]}, 
      "RowsIndexed" -> {2 -> GrayLevel[0.7]}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{
     "ColumnsIndexed" -> {2 -> 1}, "RowsIndexed" -> {2 -> 0.75}}],
   "Grid"], "DialogStyle",
  StripOnInput->False]], "Output"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000883203758681908`", ",", "0.0011158075030953951`", ",", 
   RowBox[{"-", "0.002168950318451379`"}], ",", "0.00013501792392393852`", 
   ",", "0.00024832449905837217`", ",", "0.0006585349357005887`", ",", 
   "0.00008698099093673584`", ",", 
   RowBox[{"-", "0.000011283529587791108`"}]}], "}"}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plotting the residuals", "Subsubsection",
 CellTags->"Plotting the residuals"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"sol", "[", "\"\<FitResiduals\>\"", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FillingStyle", "\[Rule]", 
    RowBox[{"Opacity", "[", "0.9", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQEf7Bse6C28+cHHHirg0HCNQZ/TIwjK53BomPos
dN6RxP0QvoADA9sCpeJNilB5EQcGFd1Zhm4GUL6EA8PeHkbDKa5QvowDw4Ed
3EZnxaB8BQcGhrr6Myuf74PZz4AKHFC5HGh8ATS+CBpfAo0vg8ZXQOMPnP8B
0d8+yQ==
    "], {{{}, {}, {}, 
      {Opacity[0.9], LineBox[{11, 3}], LineBox[{16, 8}]}, 
      {Opacity[0.9], LineBox[{9, 1}], LineBox[{10, 2}], LineBox[{12, 4}], 
       LineBox[{13, 5}], LineBox[{14, 6}], LineBox[{15, 7}]}}, {{}, 
      {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
       PointBox[{17, 18, 19, 20, 21, 22, 23, 24}]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.},
  Method->{},
  PlotRange->{{0, 8.}, {-0.002168950318451379, 0.0011158075030953951`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0.16, 0.16}, {0.0000656951564309355, 
   0.0000656951564309355}}]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3D Plot and points", "Subsubsection",
 CellTags->"Plot and points"],

Cell["\<\
Plot the data points onto the functions Ca and Cb to see how good the fit is. \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plot1", "=", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"sol", "[", 
      RowBox[{"Ca", ",", "Cb"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Ca", ",", "0", ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Cb", ",", "0", ",", "7"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plot2", "=", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{"data", ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"PointSize", "[", "Large", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plot1", ",", "plot2"}], "]"}]}], "Input"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nHk4VW33+DcViYQKRZGkSJNUGtinFGVo0KBJolEooXmgOaVBSSlFMpeQ
MWSe53nIPE+RUJo43+d933ut+/m5rl//7Mun2z7rfJyzzz7rXmvNMD1hcIiX
YZjFYxhm1D/He93hHoNpHhpwLLRy+/5aOFjd7ah4K8PUs8Bv/S37FcL0ari8
rTVmmF7kKkNBExMFGLZW7oMew/xELnHUZc0z8bHsxNwk6X8ehgNcbOaQU6mY
CBt5W3kiw4xGzu/6M2Wx1CR2z1oXAYYZi7zktbjXSnlJlvvff4LIzd6LfCiY
J82+iTH7weVOQJ56RHXHVylZ1uu/XBS5q1jQkrkz5NjTrq++cbkTkX8OkJ3s
oiDPrj9T/IXLnYw80D2GM1dZgZ26fWw7lyuB/AGvZn3rojnsFxX1Ji53CvI7
zm3xqcuU2HgR61ouV4o+bo+KUqq6MnoBrxIaU1MlPmzBn+EomisdGuPpxIJn
4O3TP1hHvnuNnoGHe12uqLwbgJ6Ba0u6zvwYEYKegRf2yxSfmBOBnoFXfJW1
a3gejZ6BDwVJJfWMj0fPwHm7Fb0SEhLRM3D7YZEFKb+T0TPwM9rhN/6opqFn
4KcMrc+ZnMhAz8AVJrjlfvPPQs/AXXfF/PZrzkHPwNVuu4y+LpOPnsFfYnyY
4aV5u9AzcN4bgdGeEq74Mxxv67aJl8/yR8/AI5JtXrk3fkDPyD8FtU1U/Yie
gQe06OSU3oxHz8DL2s7Wbu5OQs/Ar/rU3/SWSEPPwNUU5Yd2rslEz8APaN8y
NrbMQc/Awy3FbYOe5aNnjEfUo1vWtBA9A2fn1GiN/VmEnoF3/eTTFLxfgp6B
Lz9hlTRbvgw9g6ejx7JeyfXtQ8/A+aZe1tUqf4UegR/ceC42pv09/ozHsfvX
LV8aiZ6Be6i1O638HYeegUvvTezvMk5Gz8Dznq17ZaSZjp6Btyc/3WY4Oxs9
A38Y8fVhqmA+egaubLinWu9sIXoG7nPXckXzsWL0DNw7LXC3l1EpegbeXPT+
tsPmcvSMHp6eev9QsxI9A0//nrYgcmkVegYf9q/Vso07TNAz8PArxz8VV75G
z8BlOfMDe5pC0C/w37vLpmbURuPPcPzDKfCY0JOInvH8MrW3/SzT0DPwgAN3
w4e7s9Az8qtrjPuO56Nn4FucNU8v/VmInoFv2pcUPX95CXoG3leWa7HnfBl6
Bm433Uk/MqYCPQN/8nDmRI2hz+gZeFgA/9wvGjXoGbiofvCDOPs69AzPW2lI
1NFd5CB6Br6Qr23UEu4b9AzcIsqo/+a4MPQMfNDYp+3TlDj0jK/flWXudZNT
cB0cA0Lc5nTKZKJn4IYHv0ZkKOWhZ+C30p9UzH1RiJ6Bn1Wd3aQxowQ9A9/e
JD3K2bcMPQPXfTerdub8SvQMfLL70OP2sCr0DLw9I25Hzcpa9Azc0n1IzM6k
Hj0DN7/6OH+mdwN6hud3IUdMt27UYfQMvMJzsXlyrzd6Bt4UIDt6wVA4egb+
deyc3J3XEtAzcG2nKB5PgTT0DHx39KxOYads/H04fr+QufyDYwF6Bm7ksCFd
fUsxegbOayu9Qlq8DD0DH3/z2XzNqgr0DPzW0XOPAzyq0DPw3w5aP3QP16Jn
4IZ8GWNFXerRM3DX1W85k341oGfgK48eS5+3twk9w/Pw37fd2Df/CHoGPrrd
w+xvtC96Bj5zV+ER84xI9Izn8VwtpVadiJ6Bi3hPOtRYmo6egct2ds7PKMhF
z8DDvk/K2tZaiOeFo65KgdL75hL0DHyc7QxVk6Zy9Ax80sWD/qaNn9EzcLk1
FQX+DTXoGbjQ8qCKp1b16Bn4jhVRumd6G9Az8PpF7xusrJrQM/BsjcPPrvY2
o2eIV/nc4IFZF83QM3CFx2JX+A77o2fg/lfPqx+x/YiegV//+WCV+7Rk9Az8
zcaq2wVXM9Ez8PNW0Ve3duSjZ+Bb1VqaTs4pRs/Al7TriQTsLcPHg2PP21iV
NU6V6Bn4p4Jda+enVaNn4CJtRj0H/9ShZ3xeehJGJ541oGfgWmxZms7iJvSM
j7+nQnFNXjN6Bq4zKc94q1kreoa4ZlaE2ghMMEfPwIvOmFQ7DgagZ+CvR9m0
FPDFoGfgC78fNi3STUHPwD+fzBo9XTwbPQP3rnCUaO8tQM/Ae+u65TYblqBn
4BNeHpq5IK4cPeN61W98trOqMA44ilg6jxW7V4uegWc97Htl97sePQPfOkeh
xvV9I3oGrnjF9UqJaTN6Br5lpWOlskQregY+pveDm0d2G3qGx1/z+XT3WUcL
9Izfn5qXrQ6xeYeegWe/XXgx51osegb+IWSTf7dZKnoGLpB/S//b4xz0DHyb
cs2LyLpC9Aw8dvepw+NPl6Jn4LuPjg2tF6pEz/i4et8uy3hVo2fg2+e4zqmd
Rp8PHHUW5O4q62hAz8CNZ32VHwhvQs/APQwFZFSvtqBn4NFzDU483tiGnoFP
fr8lcIJUB3qGx9ka4FL9ZNASPQPn90rkfVwTiJ4xrry9Uy70fELPwKW9uvx1
zqehZ+BVz7U5ltxc9Axcbk2/jXByEXoG/mX+xxejb5WhZ+BW2oVXLut+Rs/A
HS2uaZiJ1KJnjOdP9I6qTuoZ+Maq0I7A3EaMG45RF6sGfIOb0TPwRvvkhtTH
regZ+Is8i9DRZ9rRM/DBO3GNJrs70TOcb1lHRme+wQn0DLxSzTjQfVkQegZ+
YIWKv+6GePQM3NZp/MJPl9PRM3Adk15F3j356Bl4xIRecRu3YvSM55lw5Ok4
x3L0DFzONjhn7sUq9Azc/R3fQJJFHXrG5xXo6ln/vgE9A9+YXOV5z7cJPQMv
/OnRfMCjBZ8PHDVndfgau7ahZ+Dsysm5lx51oGfgPVeTgmLudqFn/H5zpzNa
cLMVegZefJH52bg6GD0Dz1LZ/ktcNwE9A5fcwef48WwGegZ+Nmzyqc3bCtAz
8DENyhukLUvQM/C2Ey8uOt+sQM/A+T8ITnfzqEbPwH0erdR7YEQ/V4BbVyzQ
5DNvRM/Ab9o9+vXubDN6Bt7aZ+l3+WYregY+EFZ15IxzOz5POL7IZwYfe3ai
Z+BKn42eFAZ/Qc/w/zJ3w17Z9VLPwPN+GbtkN1DPwKdz7k7b3UU9A18WGFJq
aZaJnoF3eI7e3jNAPQO39FVT4Vtaip6BJ2auFC48U4megWe5ClQtjK5Bz5i/
ue0sfXuYegZu4FX6ZIFsE3oGHhY012vsmhb0DLx/8M0W4YNt6Bl4etuXB6tu
dqBn4C+vzh1+4NeFzx89NOYljMnuZn0bb/TxMAV4TLwuKagSexb9A68eGhjK
qFuvUfa6vJ7LncoBrhMWULlYIhXPD3zP5BCborpUPC/83g7u15AlDh54fuAO
GbEPmNdW+DMct097Hjyo8gV/Hx7H5rJeXNrHL3h+OF+XxeOxW77W4XmAzy/9
cidxxVxcD+dZaFHNq1nhgT/D790MnmqkynazcWUHBUczCXg8vCNRym+nCatT
6VXHtZPiAF85yOw6rRKH6+D/J0jMenvJ9yH+DEchBd/XgsP0dQ6/t7Hm/bsL
F1ZrwDr4/6jJLw+uiZ2L54d4S7NtvyTkPcSf4feW1wkMWdyg8cN5Ihb7HtOp
ycf3Ffy/8NK31Wfi43AdnGfj490O3RlW+DP8nq2OxKpDa7rx79Jc11HEMO3s
OrngWJ6TRcjh/do1RmuBGG8eeujdtauOh6lgT927cvH4kSyMH86zN+2lkqVs
Ma7nyNtXM0wze2zNbv5P0wvZJ5OTS3mYaswP96WuSMiovs/eebE1k2Go16/R
Q1J5wn81gMN6T5MiyaSuV6x8WeNWhvmO63kZxilddAxyWO/Qt6VPWc2XvV4r
pckwf3G9rOH60BnThZDjffqxigk+f9+z1jZKUxh7Hvw7bjoh1fLziShyzIsH
mHsbmYSynoNpIgwzBtevkkqIPTVtMnJYX6oiqyG0LpItunBgLGNP9xHMmkrX
HfeWRA7r67TtZ2sqxrD/2RNhGCFcb0H2F1Suuw1y7ej+gln2tG63CBlcD+dh
gv+XJ4f1wA8eS7tw61wiu+i/nO5HtB4pUK92n4Ec1sutMNTTtEhmN6Qd6+ey
dJ8iWXQHz/2DM5HDeul3y1IVjFNZk7HLv3K5k3C91qyegP2Ks5DD+rP5j+3m
G6Sz53T4u7jx4rg+5eB9ty09Cshh/e6/PK6G6zJZJ8fSVq6dJK4Xma38bF/o
HOSwPq2h6Zm7Wjbrn/emkcvS60xEs9+H62eV8PUJn0ti+R+evB94gq9PvM9V
vOa3neuNrzfgF6O2SsReD8bXFfCoBNHkXYIR+PoBHvbF7KX04xh8nQCX2Lzi
YPO9BHw9AA+su2HzwiAZ/77Ar5P8PPx9gTdH7bnPW5OBf0fgVXY9aS89s/Hv
BXxX/H6Lk0fz8O8CfK1X6dZVTwvQP3D53+JBhr8L0TNwC7e2MQ5GxegZ85Gz
B4ryEkrQM3zOj3brizf6+xw9AxeOy3I5JfAWPQPXSPkwfFM/DD0DT5T1Ml8h
GYOecf0knilz+xLQM3Adc9N9GTtT0DNw1doJpdXx6egZeBfJz4NnPH/Uwcxl
D/LQM/AlZ00NP/wpQM/Af0cqnOkKKkLPwGf739NZe7AEPQNn5/boRkuWoWfc
v7gua6CbW46egS9Odr/8/Uoleob7JqVGhWIVdXf0DNyDmdG/Wy8IPQPv2Bzp
FGEfiZ6Bnz++8r2NUTx6Bn7VtnSw/WUyesb8tpXApLh76egZ9121k5SmXc5G
z8ADSX4ePAPv33Aid3pwIXoGXvjW07/Xrxg9Yz7bQSCg83UpegYec36BkcCL
cvQMXEfAr3yDcyV6xn2Kp9Ku/veq0DPwUfFuZxRu1aBnuA+9dvDu3Y12r9Ez
cMm5o8qzb4WgZ+DyMwT1BLZFo2fgPeElG4ydEtEzcCE/2cdvfqWiZ+A79y3K
eW2ahZ6Bh3QsdVmRk4eegTuQ/Dx4Bl7NV3rlYkExegbucUYmZnhMGXoG/m0/
75fAlRXoGfgHb9HlN09+Rs/A04X5jK77VqNn4Edb793xrqlFz8Dz9jwM6Heo
R89wXz+pu0Txrcob9Az85sDl4D8rQ9Ez8NW6w69lm2LRM3Bpfasjl7SS0TPw
YPuGimPSGegZeKLAFT35/hz0jPm2S+fearYUoGfgxiQ/D57x/OJJ5vafStEz
cMcr507+UqxAz7gfPtE7943LZ/QMXPNX3doLo2rQM3Aeqauci1Z16Bm4YmlC
WWFPPXoGfkLh2skzsxrRM3xPSp4iJPQy2Qs9A6+WEZUKzg1Dz8CTHBmz4xrx
6Bl47cy5nPGVKegZ+M/hlIc/J2ahZ+CnAlbcTtiUj56BbzBS/iGjVYSegeuT
/Dx4Bl6qO1h051o5esb8fPREPU+5z+gZeF25kNzXxGr0DFx2t1SihUkdegbu
4Fr05i7TgJ6Br4haEnJqcyN6Bm63+IakjUcTeobvnXfutjetW+6DnoEfUtXQ
EF4bgZ6BF/fvb9gRlYCegT95E964bHMaega+4899n9Ud2egZ+Fo1buaLxAL0
DHzLfOuOn/eL0TPwZSQ/D54xzx96fH6QUiV6Bu54q4/t/1mFnoGH7XM7bpVe
i54xnyQ7s1Mkux49A/dpi/O6otKInoEbp7m4j33ehJ6BR4s93ezF04Ke4Xt8
wp7+0y+e+aJn4GEnPbWFvSLRM/Dujht+AQmJ6Bn4rdBni38Gp6Nn4D6KfiX2
nrnoGfi5qYemXs0qRM9YN1H+l1c5pQQ9Axcj+XnwDHww0e7Y3ajP6Bm4oPvc
20qhNegZeP/xfvlRhvXoGfjDvUJxjiUN6Bn3EcwKPy8waELPwMMXuDztzG9G
z8A7Rb9tidFvRc+QFymvVDRY2eKHnoFbXNK9selbFHoGrvV1akNndBJ6xvx2
gvmFr8MZ6Bm4b9LuG5y1+egZeO+ya8L6qUXoGbh1LH9BW3spegZuRPLz4Bm4
0kJb72WLqtEz8KAJntKl2+vQM/Dgd7u0d6k3oGfgO5T2sS35jegZ+PKfUXKO
ps3oGbi/o1S/7vcW9Ax8rLTYoNztNvQMeSbOi5219TMC0DPu3+Ybhd6fH42e
MZ8dOBA3yz8ZPQO/5D7le9WqLPQMfLGr04PBowXoGfiOT81DgmHF6Bn3Mxdd
rHjMLUPPwG1Ifh48Yz5ydndr9tMa9Ay83b/ab5F1PXoGrn7Lpe+VZCN6Bj7m
nfZXpfgm9Axc5/KHecWHWtAz7muUzHN5ItSGnoEr8hnusgptR8+Qt3P+tvPH
281v0TPw9kdOYV+MYtAz8OqWRMsBxxT0DNzk1/C7Oots9AxcXz68VGp2IXoG
7ps/fnDnsxL0DFxolUic8LgK9Ax8FsnPg2fgj1ukJgT31KJn4HYSthUJCxvQ
M3D+P0lJep3UM3DRfXHJP980o2fglwWq9ZOMWtEz8BQl1UW+Eu3oGfcFmo85
eBd2oGfIgxoJrLbRt3mHnoEf7uIulroSi56BV7ePeuJ2JBU9Y967TnJl4MMc
9Ax8/qFXzW411DPwhOtjd5y3KUXPuP5splWpQCV6Bj6O5OfBM3DbKmf5Nql6
9AycJ936hl8b9Qy83n7eqfuhTegZuNpypvCJXQt6Bv5eallvjG4begbu8cfr
7rBEB3oG3muVE7CnuRM9Q94uSVRbLul2IHoG7lnbLnre9RN6Br5p7RsrhRVp
6Bn4rXM1rLd/LnrG/Ln8T23De0XoGfhoq+UdZ7XK0DPw1Gul/NOYz+gZeC7J
z4Nn4LOdPijsjqaegR82uhGZ+rQRPQM/aZ6tYXiqGT1j/ri47bzg1lb0DLxl
C9evbmE7egZud/+ieaEw9QlH1bXCee5376HPAZIvzc9WWjbx+nP0ufnV13Ye
poS15R4V7XjmgT6DSJ57mvnrHzEfX6PP6RvVfo5iMlgBl8mJu9540DwGyQPb
Bwy0fPd/jj5Xxsupj2WCWdWK80rz1R78K3946vV/8l0VkqL/T/4wmMR/9Gve
PRWxePQ5bvf/4rdcez1F8fcn9HmUxL8xYJW7R2oM+kwn8Re4D043t41CnxtJ
/Cu0Ps4+wBeGPoXL/xe/uWPTkbwf79Dj7nO3Uximh+0eFXvz3/k3OOqIOaVH
idD8W9Sn6XkM08mq20/cIrTqPfpsJ3lpwduDZox6KPqU5A0vZ5hWdktqVWNy
cwT9XCP56oJjzvp/J0Wjz7Naug0M08je/jMQfDw3Fn36kbyi0Ij86lES/1Tj
15lfxtH82xMSf0lvUPCypEz0mULiFzyouuKMejb6HCDxW4efD351MQd9ypP4
27eNn/HGLhd9biPxN9+K+nNeKw99fg+V2MQwg+zpLWZh/86zjV93aQvD/GCP
vw2Wv7IlAH3CMeKAr8xftVD0uerI+h0MM8DOH573zLInCn1u+xm4k2H62XdV
r45cWh+HPi0cJu5hmD7W8OI85yNvEtHn9annjBjmG2uUvCrQaYDmM91IntBh
RD7zL4nfpSTwweruXPQpRuJ35OtIub6G5tmUSPxBJZY3N58pRJ9rSPypl/eO
G3YuQp+7SfwKz1Nn335RjD6tSfwia5P3d94pwevqHRL/g5+vEmQPlKJn9bld
KxmGy67yO5T57zzb9tjNGgwzzNrOXJKbF/we/VroR3AYZoh9GCm9tt4lAj3D
0XKdvaaywye673DiyjqG+cM+q+kq2CKRhJ7DmDZthvnNjqpd7GWlmYqec5z0
dBjmFzth6aGlBesz0HMzyRN+HZHPXEviF3iVIu1tTvNsu0n8Tp8WxO0Ronk2
axK/UJvnjyeuJej5Dolfcjs3WX9iGXr2JPEf6qvkXjpXjp6jSfx1Y9ctksup
QM9FJH65HrdjSwU/o2fNLcaTGPtRHJ6WVbf+nWfLm/JoMsOM4jhMVX0vo0nz
bLsbU8QZe17O2G0fFz288RH9tgYMSjAMLycozKPsdVICeoYj2xX7ONEjBT0P
rzSayjA8nAYrU+fevRno+c7oh1KMPcORNuOWCAzSfKY4yROGjMhnapH4JU9H
KPM50zxbIYn/2YNW99gLpejZiMQveqK+V9ugHD13kPgFYg4xnhKV6PkUid9S
g9cpNfszeuZZ9b/4512slHh/vJrug5D4GZe7roZMLXpuE8ocx9jzc1wse2b9
O89mXfpHkGH4OX37nzRlDn1Az8Mv549n7Pk42xeGv5gxh+bZ7hw2EWYYPs6b
+tTznLtJ6Fl8gfMExn4MZ5Ng2B7R5jT0DEcNzd0x66dno+f5Cb9EGfvRHMXP
TaLxy/PRczTJE94Zkc/sJPGfftU1L+4mzbOdIvG/WxQrlfSuHD3zvPpf/K4R
O6atSa6k+1Yk/jlSSzuXZVWh5ykkftXbk2a+SqxBz94k/quRB2dY+deh50Uk
/rtqdztKEmg+826GCg9jL8h57mA79t95NnGn/7RDCXKWndH8c9SZ5tk8dz0b
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
f0X2PEs=
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
ba21leO56xB8TqE9pXz2BfmsrMdL46a8tVVwPf9TbLVgfaI1WSNYb2hN1gzW
Fe8Fnycpvutek4JrQdp366Jr+tqna6PPKg7ID0WfJXwH36k9n+P9fm9wHic9
cEfwWYb2bL/g8wJdvz76LET+pG/wWYPu+Wb02Yl8V6/gsxWtk23ReZpyuirB
Zxnaa2OCa1PyOc2C9ZL2V9PgGoj2Tn3tYfgD7EXBemwz9pJgrbUFe3uwhpEW
ahJ8bqK91ii4rvKhxi+4bib/0Di4xq59en3wWY98V8Ngrb4V2zP4rEd+Zmt0
LUD5+5bo2Czd/mh0PVxrr3jWZ1qKffuj60rK9epmnTNL2y+J1pFaz4WyPrdT
3Hw8+hxIzy2R9ZmZYuW86Fq05ndZtB7Veiif9Zmi9G2FrM/2pG/3Rde2lG8u
iK7ba78sjK7Va9wWRdeuNW4Vsz6DlG58JLr+r/1SLuvzS+nG2lnXBaS390bX
yJTb1sw6t1cuUCvreoRyhDpZ1yOk2x+LPl/Q3C2N1tba1wWzPuOUJiyb9Zmo
NHmBrM84pXufiD4n09yVyfqMUJr2zKzPXKUhT8/67Fk5RdGszz6lK4plfY4o
LfFstF7XHiyd9dmn8o7Tsj7nVm5SKuszS+UORbI+c5Uu2hNdN1Tunz/rM1rl
OP8HFBPnpg==
          "]], Polygon3DBox[CompressedData["
1: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
yt4=
          "]], Polygon3DBox[CompressedData["
1:eJwt13ncVdMaAODznXM+zXNJRYMipYkSojmlUSqVilJUikpRiIo0EBIaqIQy
plwKzTSIBgpRlCLulXnINTZ4Xvv74/2t9T7r3XufPay196nSf3iXYelUKrVT
5Iq6mVSqjjg7m0p1NPCo9jn5HzmpVDlxipr3eSPeX/sQm806qLmADWAPszms
PXtbXMJy7byB/jlisTiipqKoqm638VXsFG1T1or9od/C/m7VLmZLWX81G0Qb
dszY6frV8/b5775ZZ2PztW3ERP3ltl1h2+vyamObusYuNjZLW1V+qqit3zp+
u/Y80VX/LttOtW1j46eJanFtssnxZ2ovFEP056p7VLwkf1NNO5bjfGvFfkUN
cYaoZ7ytsdnaX+Sb7PsN273IDsvrx3WPc8km12xe/CZxp/4yda+pH2p8rajF
OrGuLJ/8TFFTnJVNjj9He5G4Q/9lda+quzaOKS+qv0S7VFyl5hM+SP9udfcb
u1T+kbiKTWRTWDv5dtGNjWZjWRP5u6I7u5ndzprJm9jnDexJ9jTrzTZnkucp
47rUi98pmqkbxRape1ZdH3a+OE+ca6yLsQXaLZnkvp5g24YxFveCN2bDbHu9
mJFNPMYb6l9q7DHtpkxyzePhrpl3nd4SnVg2N7necd2bq72FPW9fz4lV8lZi
AntJ/opdDFG3Q/Rgt7BxrLl8Wyb5rfntr1HMA7FXDGb3qJuurov8PXE5G8sm
sJbyxo4xNO41W8C6xrPGmrDhbCQryz4WA9lUdh/rLP9UxOR9gD3Mesh3i6vZ
ZDaNdZLvEdewKexedol8n7ieTWcPse7ypo47ki1kz7BeMV9YUzaCjWInsZ2i
J7uVjWctYm6pa8ZuYDeycqwSa8gGsaGsGKsc94kNZtexEmyX6MvuYJPYxfIq
URv3K+6DsQe1LcVY/RdizqgbYHxjJpnLx7PJHKuR92zFM1Y/m9znudrzRW/9
e+O6xHMp35pJnpN8uckzF8/eO+IyNkbNbY7RNM5DVIw5F3Mq1jzts/Lf1ZQV
J6t7j1fk52gHsiGsuJoPRT92J5vM2sY8jXNhN7Ix7GT2gbiSTWB3sTaxZqhr
zkaym1j5OD/Wgo1io1mFWDdZfXY1G8QKs6qsERvKhrPScU1jbWPXxpxhJVl5
Vi/WAXY1K8AqsLNYf3YNK8hOZmezAWwgKxTrZlxXNoQNY6XY++IKNp5NZK3l
P4j57HW2kU2WvyCOyiuJamyP8V72t1C7i+1h02K+sCfZB2w3uyeuU7yT2Cfs
U/YA68OeYXvYXnY/682eZrvZR2KL/CRRh/WVXxlzM94FYko6mfcx/8t5HlbG
ObMm8pb297t+d3ULtDvZLjYlnh82i61gK8WpuclacnM6eSfEu6Ek+0vtl/qF
RRGxVU0P8bi69+Qf2t/UmFfsCfZ+/GZ2d1zPeN7Yx2wfm87miM/lJ0SwNXE8
9oW8oMjP1rHv2MPaV9lqNk5e1P4qsmasudgv7ycWs33yA+oeVPe3+FZeIe4T
22z8W3a/9j9sORsjf0QcjGOKfGxtXF/7e167N/bPZqj5RtzHXmTL2Oh4LsQh
eem4NmyD8e/ZTO1rbA0bL58r/icvHucX7810ck3/Ky8miorBjnmc/aV/pqir
7oN0Mvd7aW+Ld1Rs736UYKeyrvLu6v7WLxXfFNoerDfLsa+S8Y3AurEe7Ih+
YVZO2451Yof1i7HK2ktZN/anfgFWStuKtWHf6ZeJdUp7ObuCpR2jLKvJerO+
LMsKxbPK2rKO7Gf90qy6tifrw1J597IS68wuibVNfqKoEfMpnvEoU1ecVWFd
2GXsr3QyF2qnk+1i+0PyIqI8ax/7U/erfppltA3YuWxfOplbT2nfYm+LWq7p
Mcf5U7+mqKNuVzr5Rro2nay5sfYWUXdU3a8x70V1de8YP8IOy6vGHIp3iO1y
RNpYfXlDdXv1c1lB7QWsKfsy1m9WQtuCXcS+ifd9bK89m50V912eFQVYI3kT
JQfjnc1Kaluy1uzb+M5gxdPJ3Ig5MinOX+SPZ0neWN0X6eQb5MJ0so7EevKr
fKbz2J8TD8+/tye10vgXOmO0j7DH2FXyBTEf5CflJN9j8V32StxPbT12Dvta
/wAbEe8/NotdLl8hTmTnsQvZTzFXWBntuewC9mPMeVZa25A1Yj/oL2OFtXVY
ffZVzGWWq60e84Yd0C/nXOpq+7EBLL+al8QJ7Iy43+wz/ZdZPm0NVpt9HvOb
ZbWnx7PA9usvZ0W0dVkDdkj/Mfa1/MR4LthGtp8N185gM1lP+RuZ5L17JJt8
q8c3+5r4TmJt1LVXd1x/Naumbc3asWP6T7Dv416IUuxt9gz7TV4m1rb478Oe
Zv+PGlGe7WDrM8l/gqPZ5Ns//gMsFcfVVBGnq/vE+CL2k7xAnAvbFu+6TPLd
8nc2+XaIb4gn412oJjfWO3VbjD/FfpYXEmXZdraQ/RhrafxGtpWtYw3iHcR6
saLyJeKYvLI4jX1sfB77Kt45sU+2Pua33/CgdiN7i42Nbxw2l21nO9jEWIfF
pLg+7AU2PO6PmMyeZUvYiNi/uCuuGVvMhsXaLMbH9WZPscHydo5xT9wXto6N
jPVajGOPs0VskHy2+EyezUn+g642fpCN1s5h81m/eH+K29kCtpANjO3EjWwW
m8uujPeiuInNZvNYX/kscUCezvl3aUitylsjUulkvYl1Z6e8vZjG1shfNzzK
dm3Z3WwVW8tuyHvvz04na1+sgZvjW1PMYBsiV3drJllLiqWTNSjWoo/kncVD
bFOsnepuU/d8Jpk/MY9eMfZbJlkTf8l7t8U7brvtuopHjG+Vv6P+DjUd2QPx
vLI32c2sG3uUbWPvsjtZFzaHbYl9sQnxnIlFbDPbxu6Td1A3PZ38N93Ebskk
30hT08k3TnzrrI91WJRlF8s7qPtF/x/yitma
          "]]}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0skuQ1EcwOFrqrElIiIS0wPwAOgL0JUddlZ0wRIvgAcQnoAHMCT2xNZc
rRojIqbEPCyE74jF737/m3Obc9retqGxvtGCKIqm9K4wP+tSa4VRVMNNtnCf
HWGNyfAcU+EzRVE0yBqm2co2TZqTnGGK8xzkItNc5SQ3+Mprfmov3OteWw60
z20ecIcZ7vIwPMtsOBtzPOARM2FdeXOWx8zxhEc8ZZ5nPOY5l3yfG37pQm96
0Kyz7YbfiOsc5wqHucB+zrGH0+xipybMTRxhggP8sUcvH9kd9mF72NP6N5v1
ZL7ih6r1ojs1OmeCDYyznlWsYyVrWRH+B5YzHtZVZq5gKcsYY4wlLGYxC2nb
vxfAkaJll9v/d+IXcJlJOg==
        "]]}, {
       Line3DBox[{696, 1008, 477, 695, 1122, 917, 697, 1123, 918, 698, 1124, 
        919, 699, 1125, 920, 700, 1126, 921, 701, 1127, 922, 702, 1128, 1018, 
        1226, 703, 1129, 923, 704, 1130, 924, 705, 1131, 925, 706, 1132, 926, 
        707, 1133, 927, 708, 1121, 1134, 1015, 1016, 928, 1009}], 
       Line3DBox[{710, 1019, 1227, 709, 492, 711, 1135, 929, 712, 1136, 930, 
        713, 1137, 931, 714, 1138, 932, 715, 1139, 933, 716, 1140, 1020, 1228,
         717, 1021, 1229, 718, 1141, 934, 719, 1142, 935, 720, 1143, 936, 721,
         1144, 937, 722, 1331, 1014, 938, 1017}], 
       Line3DBox[{724, 1022, 1230, 723, 1023, 1231, 725, 507, 726, 1145, 939, 
        727, 1146, 940, 728, 1147, 941, 729, 1148, 942, 730, 1149, 1024, 1232,
         731, 1025, 1233, 732, 1026, 1234, 733, 1150, 943, 734, 1151, 944, 
        735, 1152, 945, 736, 1153, 946, 737}], 
       Line3DBox[{739, 1027, 1235, 738, 1028, 1236, 740, 1029, 1237, 741, 523,
         742, 1154, 947, 743, 1155, 948, 744, 1156, 949, 745, 1157, 1030, 
        1238, 746, 1031, 1239, 747, 1032, 1240, 748, 1033, 1241, 749, 1158, 
        950, 750, 1159, 951, 751, 1160, 952, 752}], 
       Line3DBox[{754, 1034, 1242, 753, 1035, 1243, 755, 1036, 1244, 756, 
        1037, 1245, 757, 539, 758, 1161, 953, 759, 1162, 954, 760, 1163, 1038,
         1246, 761, 1039, 1247, 762, 1040, 1248, 763, 1041, 1249, 764, 1042, 
        1250, 765, 1164, 955, 766, 1165, 956, 767}], 
       Line3DBox[{769, 1043, 1251, 768, 1044, 1252, 770, 1045, 1253, 771, 
        1046, 1254, 772, 1047, 1255, 773, 555, 774, 1166, 957, 775, 1167, 
        1048, 1256, 776, 1049, 1257, 777, 1050, 1258, 778, 1051, 1259, 779, 
        1052, 1260, 780, 1053, 1261, 781, 1168, 958, 782}], 
       Line3DBox[{784, 1054, 1262, 783, 1055, 1263, 785, 1056, 1264, 786, 
        1057, 1265, 787, 1058, 1266, 788, 1059, 1267, 789, 571, 790, 1169, 
        1060, 1268, 791, 1061, 1269, 792, 1062, 1270, 793, 1063, 1271, 794, 
        1064, 1272, 795, 1065, 1273, 796, 1066, 1274, 797}], 
       Line3DBox[{801, 1170, 959, 799, 1171, 960, 803, 1172, 961, 805, 1173, 
        962, 807, 1174, 963, 809, 1175, 964, 811, 1176, 965, 813, 1177, 588, 
        815, 1178, 966, 817, 1179, 967, 819, 1180, 968, 821, 1181, 969, 823, 
        1182, 970, 825, 1183, 971, 827}], 
       Line3DBox[{826, 1288, 1079, 824, 1287, 1078, 822, 1286, 1077, 820, 
        1285, 1076, 818, 1284, 1075, 816, 1283, 1074, 814, 1282, 587, 812, 
        1281, 1073, 810, 1280, 1072, 808, 1279, 1071, 806, 1278, 1070, 804, 
        1277, 1069, 802, 1276, 1068, 798, 1275, 1067, 800}], 
       Line3DBox[{829, 1080, 1289, 828, 1184, 972, 830, 1185, 973, 831, 1186, 
        974, 832, 1187, 975, 833, 1188, 976, 834, 1189, 977, 835, 1190, 1081, 
        1290, 836, 604, 837, 1191, 978, 838, 1192, 979, 839, 1193, 980, 840, 
        1194, 981, 841, 1195, 982, 842}], 
       Line3DBox[{844, 1082, 1291, 843, 1083, 1292, 845, 1196, 983, 846, 1197,
         984, 847, 1198, 985, 848, 1199, 986, 849, 1200, 987, 850, 1201, 1084,
         1293, 851, 1085, 1294, 852, 620, 853, 1202, 988, 854, 1203, 989, 855,
         1204, 990, 856, 1205, 991, 857}], 
       Line3DBox[{859, 1086, 1295, 858, 1087, 1296, 860, 1088, 1297, 861, 
        1206, 992, 862, 1207, 993, 863, 1208, 994, 864, 1209, 995, 865, 1210, 
        1089, 1298, 866, 1090, 1299, 867, 1091, 1300, 868, 636, 869, 1211, 
        996, 870, 1212, 997, 871, 1213, 998, 872}], 
       Line3DBox[{874, 1092, 1301, 873, 1093, 1302, 875, 1094, 1303, 876, 
        1095, 1304, 877, 1214, 999, 878, 1215, 1000, 879, 1216, 1001, 880, 
        1217, 1096, 1305, 881, 1097, 1306, 882, 1098, 1307, 883, 1099, 1308, 
        884, 652, 885, 1218, 1002, 886, 1219, 1003, 887}], 
       Line3DBox[{889, 1100, 1309, 888, 1101, 1310, 890, 1102, 1311, 891, 
        1103, 1312, 892, 1104, 1313, 893, 1220, 1004, 894, 1221, 1005, 895, 
        1222, 1105, 1314, 896, 1106, 1315, 897, 1107, 1316, 898, 1108, 1317, 
        899, 1109, 1318, 900, 668, 901, 1223, 1006, 902}], 
       Line3DBox[{916, 1013, 688, 915, 1329, 1120, 914, 1328, 1119, 913, 1327,
         1118, 912, 1326, 1117, 911, 1325, 1116, 910, 1324, 1115, 1225, 909, 
        1007, 1224, 908, 1323, 1114, 907, 1322, 1113, 906, 1321, 1112, 905, 
        1320, 1111, 904, 1319, 1110, 903, 1330, 1011, 1010, 1012}]}, {
       Line3DBox[{256, 478, 1122, 257, 492, 284, 1231, 506, 299, 1236, 521, 
        314, 1243, 536, 329, 1252, 551, 344, 1263, 566, 359, 1276, 581, 1171, 
        374, 596, 1184, 389, 1292, 611, 404, 1296, 626, 419, 1302, 641, 434, 
        1310, 656, 449, 1319, 671, 464}], 
       Line3DBox[{258, 479, 1123, 259, 493, 1135, 285, 507, 300, 1237, 522, 
        315, 1244, 537, 330, 1253, 552, 345, 1264, 567, 360, 1277, 582, 1172, 
        375, 597, 1185, 390, 612, 1196, 405, 1297, 627, 420, 1303, 642, 435, 
        1311, 657, 450, 1320, 672, 465}], 
       Line3DBox[{260, 480, 1124, 261, 494, 1136, 286, 508, 1145, 301, 523, 
        316, 1245, 538, 331, 1254, 553, 346, 1265, 568, 361, 1278, 583, 1173, 
        376, 598, 1186, 391, 613, 1197, 406, 628, 1206, 421, 1304, 643, 436, 
        1312, 658, 451, 1321, 673, 466}], 
       Line3DBox[{262, 481, 1125, 263, 495, 1137, 287, 509, 1146, 302, 524, 
        1154, 317, 539, 332, 1255, 554, 347, 1266, 569, 362, 1279, 584, 1174, 
        377, 599, 1187, 392, 614, 1198, 407, 629, 1207, 422, 644, 1214, 437, 
        1313, 659, 452, 1322, 674, 467}], 
       Line3DBox[{264, 482, 1126, 265, 496, 1138, 288, 510, 1147, 303, 525, 
        1155, 318, 540, 1161, 333, 555, 348, 1267, 570, 363, 1280, 585, 1175, 
        378, 600, 1188, 393, 615, 1199, 408, 630, 1208, 423, 645, 1215, 438, 
        660, 1220, 453, 1323, 675, 468}], 
       Line3DBox[{266, 483, 1127, 267, 497, 1139, 289, 511, 1148, 304, 526, 
        1156, 319, 541, 1162, 334, 556, 1166, 349, 571, 364, 1281, 586, 1176, 
        379, 601, 1189, 394, 616, 1200, 409, 631, 1209, 424, 646, 1216, 439, 
        661, 1221, 454, 676, 1224, 469}], 
       Line3DBox[{268, 484, 1128, 270, 498, 1140, 290, 512, 1149, 305, 527, 
        1157, 320, 542, 1163, 335, 557, 1167, 350, 572, 1169, 365, 587, 1177, 
        380, 602, 1190, 395, 617, 1201, 410, 632, 1210, 425, 647, 1217, 440, 
        662, 1222, 455, 677, 1225, 470}], 
       Line3DBox[{272, 486, 1129, 273, 1229, 500, 292, 1233, 514, 307, 1239, 
        529, 322, 1247, 544, 337, 1257, 559, 352, 1269, 574, 367, 1283, 589, 
        1178, 382, 604, 397, 1294, 619, 412, 1299, 634, 427, 1306, 649, 442, 
        1315, 664, 457, 1325, 679, 472}], 
       Line3DBox[{274, 487, 1130, 275, 501, 1141, 293, 1234, 515, 308, 1240, 
        530, 323, 1248, 545, 338, 1258, 560, 353, 1270, 575, 368, 1284, 590, 
        1179, 383, 605, 1191, 398, 620, 413, 1300, 635, 428, 1307, 650, 443, 
        1316, 665, 458, 1326, 680, 473}], 
       Line3DBox[{276, 488, 1131, 277, 502, 1142, 294, 516, 1150, 309, 1241, 
        531, 324, 1249, 546, 339, 1259, 561, 354, 1271, 576, 369, 1285, 591, 
        1180, 384, 606, 1192, 399, 621, 1202, 414, 636, 429, 1308, 651, 444, 
        1317, 666, 459, 1327, 681, 474}], 
       Line3DBox[{278, 489, 1132, 279, 503, 1143, 295, 517, 1151, 310, 532, 
        1158, 325, 1250, 547, 340, 1260, 562, 355, 1272, 577, 370, 1286, 592, 
        1181, 385, 607, 1193, 400, 622, 1203, 415, 637, 1211, 430, 652, 445, 
        1318, 667, 460, 1328, 682, 475}], 
       Line3DBox[{280, 490, 1133, 281, 504, 1144, 296, 518, 1152, 311, 533, 
        1159, 326, 548, 1164, 341, 1261, 563, 356, 1273, 578, 371, 1287, 593, 
        1182, 386, 608, 1194, 401, 623, 1204, 416, 638, 1212, 431, 653, 1218, 
        446, 668, 461, 1329, 683, 476}], 
       Line3DBox[{282, 685, 686, 1134, 694, 692, 1331, 693, 297, 519, 1153, 
        312, 534, 1160, 327, 549, 1165, 342, 564, 1168, 357, 1274, 579, 372, 
        1288, 594, 1183, 387, 609, 1195, 402, 624, 1205, 417, 639, 1213, 432, 
        654, 1219, 447, 669, 1223, 462, 688, 689, 690}], 
       Line3DBox[{463, 670, 1330, 687, 448, 655, 1309, 433, 640, 1301, 418, 
        625, 1295, 403, 610, 1291, 388, 595, 1289, 373, 1170, 580, 1275, 358, 
        565, 1262, 343, 550, 1251, 328, 535, 1242, 313, 520, 1235, 298, 505, 
        1230, 283, 491, 1227, 255, 477, 684, 691}], 
       Line3DBox[{471, 678, 1324, 456, 663, 1314, 441, 648, 1305, 426, 633, 
        1298, 411, 618, 1293, 396, 603, 1290, 381, 588, 1282, 366, 573, 1268, 
        351, 558, 1256, 336, 543, 1246, 321, 528, 1238, 306, 513, 1232, 291, 
        499, 1228, 271, 485, 1226, 269}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
qMLfm+KoLtL7uD9OtKcCeLGPdg94U2Bi6ZKXHjrvTTw/yFp7K0CSwfFSiVA6
5ESDjvX/ms/v+c983v8zNMr1VwCjlqCKn0QuyOVF9g8hns7Or7b/6i23sqs6
pQrg7utNFV7k20ErBRhA6xQo8B6sf1MEMfUn2rhR3WWzO5KSEenZLYZBzXwE
CJe469H393sQi0iuFRSn7H11nkdJJUDrqRiq3IRjkv1ClJ7dFfAo7MqZVIEy
ePzujqAZ4px3TnS6Ee1XIi81wzilHLhMhJ5eRJz/7FOk3TpVBcHaSb6qbrbw
jl0whxpxoNRZPbVkUgWV4pp32gN84HVU1hdOxKHGkatJ6nEVXHFk/Mi4EApj
nRh2G/mqaX+O22vrKuia2Vv2LTIKvisOqFggPm8O+x25Y1sFEr2jH4yxN6Dm
rtyjiPz28tmcOfuLKjiZ/ts+/GcSXJPYkRxA55or9WUemWMViK1aF1i1pkJq
Znz4kV4co/03n+/4N5/X+Def5xr+QLuNdCq2RqVC62w4uXW0lg/5M8q5+KCK
cxXEsx326VfNA7ZNCd5qlAdas54PHED6FTbDMd/9hdAc9TmcHeVhxmuTcYlo
Hco22rgPa0XgW5siLIV8uxkneKQFxVPBeIUgfIcA0PBmnhnlZ/Iu9/cJDlWQ
Fpn2lLu1BCINxMlLiDg2TxReP4z29XDYW7foRBkErXQEsaK8ffWB0LZ1QzWc
er0kuk/2OfyW7KbZjXxiMh+nzr9cDR3pCRI7Kt7getzpLT3icI7u4PKPjWpw
2ekfWFgIAc89HXJ3EAerpZOF1WQ1YP+57nvE5UgYftfu7IV8lR5P3jJMUQOh
Yj7+I2mxcGbt+qIN4tOu/nVzmLoG/BsERJ7+SQQehwfJEshvIg+Hlylpa2CF
99Zn+pwUWL1t96bkf83nR/8znz/tfV/Tjb4GJqVMlEx2ZQEXiTmODZ13h44v
r8kYaiDz/Uh/SV4OCJw+y7ry9/uO4YkT+5Fe2+xxJtcgH9ZirAqikT9lf9hx
DaF1kr5lHObZVQSm4wIPqBBPzUOf78kj/XG3Xt9B/WLIemSsegblYeHwjAJN
FI+lSZjU1xwCtLdL3JJDvl1UnHTiQPHXnaUWuLFTAkkSp5rIUH0izDiyW+ZU
LTyViNJrF7KBvRXjUVvIDyS+ELlnZrUwRd3LdObY33na4LsttN83cZ3MLda1
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
faUiTYQuF9PBiMR6iOnYLlXmziT8HyP4uIU=
     "]], 
   {Hue[0.67, 0.6, 0.6], PointSize[Large], 
    Point3DBox[{{1, 1, 0.05}, {1, 2, 0.071}, {2, 3, 0.17}, {0.5, 2, 0.035}, {
      4, 5.5, 0.47}, {1.5, 4, 0.15}, {6.4, 2, 0.45}, {6, 4, 0.6}}]}},
  Axes->True,
  AxesLabel->{
    FormBox["Ca", TraditionalForm], 
    FormBox["Cb", TraditionalForm], 
    FormBox["\"\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{All, All, All},
  PlotRangePadding->{Automatic, Automatic, Automatic}]], "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nonlinear fit of data ", "Subsection",
 CellTags->"Nonlinear fit of data"],

Cell[CellGroupData[{

Cell["No scatter example", "Subsubsection",
 CellTags->"No scatter example"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"data", " ", "in", " ", "form", " ", "of", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nsdata", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "7"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4", ",", "16"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"3", ",", "6", ",", "27"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"5", ",", "10", ",", "55"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"8", ",", "16", ",", "112"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"10", ",", "20", ",", "160"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"nssol", "=", 
    RowBox[{"FindFit", "[", 
     RowBox[{"nsdata", ",", 
      RowBox[{
       RowBox[{"b", "*", 
        SuperscriptBox["x", "a"]}], "+", 
       RowBox[{"c", "*", 
        SuperscriptBox["y", "d"]}]}], ",", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "3"}], "}"}], ",", 
        RowBox[{"(*", 
         RowBox[{
         "this", " ", "is", " ", "saying", " ", "the", " ", "initial", " ", 
          "guess", " ", "for", " ", "a", " ", "is", " ", "3"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"b", ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"c", ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"d", ",", "1.5"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1.9999999999999971`"}], ",", 
   RowBox[{"b", "\[Rule]", "1.0000000000000095`"}], ",", 
   RowBox[{"c", "\[Rule]", "2.9999999999999982`"}], ",", 
   RowBox[{"d", "\[Rule]", "0.9999999999999984`"}]}], "}"}]], "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["What you need to have in a demonstration before submitting", "Section",
 CellTags->"What you need to have in a demonstration before submitting"],

Cell[TextData[{
 "On the ",
 ButtonBox["Wolfram Demonstrations Project guidelines page",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/guidelines.html"], None},
  ButtonNote->"http://demonstrations.wolfram.com/guidelines.html"],
 ", there is a short guide to creating interactive demonstrations. Below are \
some additional guidelines that you should keep in mind while making your own \
demonstrations to submit. "
}], "Text"],

Cell[TextData[{
 "\[Bullet]\tIn title, lowercase for these words: ",
 "a, an, the, by, with, of, to, for, on, between, etc.",
 "\n\[Bullet]\tNo \[OpenCurlyDoubleQuote] := \[OpenCurlyDoubleQuote], just \
use \[OpenCurlyDoubleQuote] = \[OpenCurlyDoubleQuote] and suppress the \
function with a semicolon \[OpenCurlyDoubleQuote] ; \[OpenCurlyDoubleQuote] \
at the \tend; using  :=  slows down evaluation.\n\[Bullet]\tNo Arial fonts or \
any font that is not the default\n\[Bullet]\tNo wobbly plots, set a PlotRange \
or use ImagePadding.\n\[Bullet]\t",
 StyleBox["Nothing should be capitalized",
  FontWeight->"Bold"],
 " (unless proper noun or acronym) in the manipulate window.\n\[Bullet]\tMake \
sure all variables that are displayed in the manipulate window are explained.\
\n\[Bullet]\tIf you\[CloseCurlyQuote]re displaying a variable in the \
manipulate window, it must be italicized\n\t\texample: \
\[OpenCurlyDoubleQuote]",
 StyleBox["P",
  FontSlant->"Italic"],
 " = 10 bar\[CloseCurlyDoubleQuote]\n\[Bullet]\tSubscripts, Superscripts, \
Subsuperscripts, Italic, and Bold that is written in the code need to be \
written completely without the use of ",
 ButtonBox["keyboard shortcuts",
  BaseStyle->"Hyperlink",
  ButtonData->"Equation formatting"],
 ". Note that outside of the code (ie in the \tCaption or Details sections) \
keyboard shortcuts should be used.\n\t\tKeyboard shortcut:",
 StyleBox["\t x+\[ControlKey]+6+2   \[LongRightArrow]  ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]], "Text",
  FontWeight->"Plain"],
 "\n\t\tProper way to write:   ",
 StyleBox["Superscript[\[OpenCurlyDoubleQuote]x\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]2\[CloseCurlyDoubleQuote]]  \[LongRightArrow]  ",
  FontWeight->"Plain"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]]],
 "\n\[Bullet]\tIf any variables are written in the Caption or Details \
sections, select each individually and do \[ControlKey]+9, below is an \
example pulled from the Details section, it shows what it looks like before \
using \t\t\[ControlKey]+9, after it was done, and how it was done.\n",
 StyleBox["\t",
  Background->RGBColor[1, 1, 0.85]],
 StyleBox["\told:\[LineSeparator]\t\twhere P is pressure, R is the ideal gas \
constant, T is temperature, ",
  Background->None],
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "m"], TraditionalForm]], "InlineMath",
  Background->None],
 StyleBox[" is the relative volume,  a, b, \[Alpha], and \[Kappa] are \
Peng-Robinson constants, ",
  Background->None],
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "c"], TraditionalForm]], "InlineMath",
  Background->None],
 StyleBox[" is the critical pressure, ",
  Background->None],
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "c"], TraditionalForm]], "InlineMath",
  Background->None],
 StyleBox[" is the critical \t\ttemperature, and \[Omega] is the acentric \
factor. \[LineSeparator]\t\tnew:\[LineSeparator]\t\twhere ",
  Background->None],
 Cell[BoxData[
  FormBox["P", TraditionalForm]],
  Background->None],
 StyleBox[" is pressure,",
  Background->None],
 Cell[BoxData[
  FormBox[
   RowBox[{" ", "R"}], TraditionalForm]],
  Background->None],
 StyleBox[" is the ideal gas constant, ",
  Background->None],
 Cell[BoxData[
  FormBox["T", TraditionalForm]],
  Background->None],
 StyleBox[" is temperature, ",
  Background->None],
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", "m"], TraditionalForm]], "InlineMath",
  Background->None],
 StyleBox[" is the relative volume,  ",
  Background->None],
 Cell[BoxData[
  FormBox["a", TraditionalForm]],
  Background->None],
 StyleBox[", ",
  Background->None],
 Cell[BoxData[
  FormBox["b", TraditionalForm]],
  Background->None],
 StyleBox[", ",
  Background->None],
 Cell[BoxData[
  FormBox["\[Alpha]", TraditionalForm]],
  Background->None],
 StyleBox[", and ",
  Background->None],
 Cell[BoxData[
  FormBox["\[Kappa]", TraditionalForm]],
  Background->None],
 StyleBox[" are Peng-Robinson constants, ",
  Background->None],
 Cell[BoxData[
  FormBox[
   SubscriptBox["P", "c"], TraditionalForm]], "InlineMath",
  Background->None],
 StyleBox[" is the critical pressure, ",
  Background->None],
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "c"], TraditionalForm]], "InlineMath",
  Background->None],
 StyleBox[" is the \t\t\tcritical temperature, and ",
  Background->None],
 Cell[BoxData[
  FormBox["\[Omega]", TraditionalForm]],
  Background->None],
 StyleBox[" is the acentric factor. \[LineSeparator]\t\t\[LineSeparator]\t\t\
how:\[LineSeparator]\t\tselect P, do Ctrl-9\n\t\tselect R, do Ctrl-9\n\t\t\
select K, do Ctrl-I or command-I (Windows/Mac)\n\t\tselect T, do Ctrl-9\n\t\t\
select  a, b, \[Alpha], and \[Kappa] separately, do Ctrl-9 on each one \
separately\n\t\tselect \[Omega], do Ctrl-9",
  Background->None],
 "\n\t\t\n\t\tAny variables with a super-, or subscript will already be in \
the correct form. "
}], "Text",
 CellChangeTimes->{{3.619446551704579*^9, 3.6194465873106155`*^9}, {
   3.6194466186114054`*^9, 3.619446626601863*^9}, {3.619446663390967*^9, 
   3.6194467778535137`*^9}, {3.6194468512657127`*^9, 3.619446869807773*^9}, {
   3.6194472719067717`*^9, 3.619447289015751*^9}, {3.619447342362802*^9, 
   3.619447422827404*^9}, {3.6194474667139144`*^9, 3.6194474667149143`*^9}, {
   3.619447514739661*^9, 3.619447518408871*^9}, {3.619447574701091*^9, 
   3.619447638020713*^9}, {3.6194478266995044`*^9, 3.6194478305447245`*^9}, {
   3.6194479355547304`*^9, 3.6194479402389984`*^9}, {3.619447975324005*^9, 
   3.6194479783851805`*^9}, 3.6194480665952253`*^9, {3.6194482051531506`*^9, 
   3.6194482888079357`*^9}, {3.6194483557647653`*^9, 3.619448512062705*^9}, {
   3.6194487191115475`*^9, 3.6194487289051075`*^9}, {3.619448851982147*^9, 
   3.6194488839469757`*^9}, {3.6194489140486975`*^9, 3.619449252309045*^9}, {
   3.619449288513115*^9, 3.6194493291244383`*^9}, {3.6344870688805513`*^9, 
   3.6344870946740265`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Troubleshooting tips", "Section",
 CellTags->"Troubleshooting tips"],

Cell["\<\
When you encounter an error message (of any kind) before you open up the \
Documentation Center and try to address the problem head on, try these quick \
and easy troubleshooting tips first. You\[CloseCurlyQuote]re problem may be \
an easier fix than you expected.\
\>", "Text"],

Cell["\<\
First go to the toolbar at the top, select Evaluation \[Rule] Quit Kernel \
\[Rule] Local. A window will pop up asking if you\[CloseCurlyQuote]re sure \
you want to quit the kernel, say Yes. Then re-evaluate your notebook. If this \
solves the problem then some of your variables likely had already been \
defined more than once, possibly from another notebook. This will clear that.\
\>", "Text"],

Cell[TextData[{
 "Another more obvious (but often overlooked) solution is to make sure you \
have all the commands in the right format. This is an easy mistake to make. \
You might have an = sign where you should have a == sign or vice versa. Or a \
comma instead of a semicolon. These mistakes may not be as obvious, when you\
\[CloseCurlyQuote]re missing a closing bracket or curly bracket, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will tell you after evaluating the cell. "
}], "Text"],

Cell[TextData[{
 "When you\[CloseCurlyQuote]ve made sure that the error \
isn\[CloseCurlyQuote]t fixed from any of the above, easier fixes, copy and \
paste the code into a new window and start eliminating unnecessary portions \
of it, this way it\[CloseCurlyQuote]s easier to see where the problem is \
coming from. From here it\[CloseCurlyQuote]s usually a good idea to work \
through the math by hand to make sure it all makes sense and you aren\
\[CloseCurlyQuote]t trying to evaluate something illegal (like ",
 Cell[BoxData[
  FormBox[
   FractionBox["1", "0"], TraditionalForm]]],
 "). "
}], "Text"]
}, Closed]]
}, Open  ]]
},
WindowSize->{1366, 686},
WindowMargins->{{31, Automatic}, {Automatic, 18}},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 10, \
2015)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Tricks & Shortcuts"->{
  Cell[15937, 495, 70, 1, 66, "Section",
   CellTags->"Tricks & Shortcuts"]},
 "Greek alphabet keyboard shortcuts"->{
  Cell[16521, 511, 103, 1, 32, "Subsection",
   CellTags->"Greek alphabet keyboard shortcuts"]},
 "Equation formatting"->{
  Cell[17243, 530, 75, 1, 32, "Subsection",
   CellTags->"Equation formatting"]},
 "Superscript"->{
  Cell[17526, 540, 62, 1, 31, "Subsubsection",
   CellTags->"Superscript"]},
 "Subscript"->{
  Cell[17935, 555, 58, 1, 31, "Subsubsection",
   CellTags->"Subscript"]},
 "Square root"->{
  Cell[18280, 570, 62, 1, 31, "Subsubsection",
   CellTags->"Square root"]},
 "Divided by"->{
  Cell[18710, 586, 60, 1, 31, "Subsubsection",
   CellTags->"Divided by"]},
 "Common Mistakes"->{
  Cell[19304, 607, 64, 1, 66, "Section",
   CellTags->"Common Mistakes"]},
 "Defining functions"->{
  Cell[19393, 612, 73, 1, 32, "Subsection",
   CellTags->"Defining functions"]},
 "Evaluating a function at a specific value (from NDSolve or similar)"->{
  Cell[20078, 641, 182, 4, 32, "Subsection",
   CellTags->
    "Evaluating a function at a specific value (from NDSolve or similar)"]},
 "Evaluating a function at a specific value (not from NDSolve)"->{
  Cell[22824, 747, 159, 2, 32, "Subsection",
   CellTags->"Evaluating a function at a specific value (not from NDSolve)"]},
 "Formatting"->{
  Cell[24809, 825, 54, 1, 66, "Section",
   CellTags->"Formatting"]},
 "General"->{
  Cell[25404, 840, 51, 1, 32, "Subsection",
   CellTags->"General"]},
 "Setting font and font size"->{
  Cell[25480, 845, 92, 1, 31, "Subsubsection",
   CellTags->"Setting font and font size"]},
 "Plotting"->{
  Cell[26177, 871, 53, 1, 32, "Subsection",
   CellTags->"Plotting"]},
 "Frame and frame labels"->{
  Cell[26255, 876, 84, 1, 31, "Subsubsection",
   CellTags->"Frame and frame labels"]},
 "Line styles"->{
  Cell[32190, 1000, 62, 1, 31, "Subsubsection",
   CellTags->"Line styles"]},
 "Plot legend - labeling curves"->{
  Cell[37969, 1126, 98, 1, 31, "Subsubsection",
   CellTags->"Plot legend - labeling curves"]},
 "Plot labels"->{
  Cell[47842, 1333, 62, 1, 31, "Subsubsection",
   CellTags->"Plot labels"]},
 "Image size and padding"->{
  Cell[50811, 1409, 84, 1, 31, "Subsubsection",
   CellTags->"Image size and padding"]},
 "Shortcut for plot formatting options"->{
  Cell[57246, 1576, 112, 1, 31, "Subsubsection",
   CellTags->"Shortcut for plot formatting options"]},
 "Plot for different values of a parameter"->{
  Cell[69602, 1825, 117, 1, 32, "Subsection",
   CellTags->"Plot for different values of a parameter"]},
 "Graphics"->{
  Cell[76235, 1965, 50, 1, 66, "Section",
   CellTags->"Graphics"]},
 "Adding arrows to a plot"->{
  Cell[76310, 1970, 83, 1, 32, "Subsection",
   CellTags->"Adding arrows to a plot"]},
 "Creating images/diagrams using Graphics"->{
  Cell[98558, 2373, 115, 1, 32, "Subsection",
   CellTags->"Creating images/diagrams using Graphics"]},
 "Rectangles"->{
  Cell[98791, 2382, 60, 1, 31, "Subsubsection",
   CellTags->"Rectangles"]},
 "Arrows"->{
  Cell[101766, 2474, 52, 1, 31, "Subsubsection",
   CellTags->"Arrows"]},
 "Displaying text inside a shape"->{
  Cell[103732, 2545, 100, 1, 31, "Subsubsection",
   CellTags->"Displaying text inside a shape"]},
 "Adding Graphics to plots"->{
  Cell[110071, 2731, 85, 1, 32, "Subsection",
   CellTags->"Adding Graphics to plots"],
  Cell[170245, 4072, 82, 1, 66, "Section",
   CellTags->"Adding Graphics to plots"]},
 "Adding labels to curves (above"->{
  Cell[110181, 2736, 138, 1, 31, "Subsubsection",
   CellTags->{"Adding labels to curves (above", "next to", "etc.)"}]},
 "next to"->{
  Cell[110181, 2736, 138, 1, 31, "Subsubsection",
   CellTags->{"Adding labels to curves (above", "next to", "etc.)"}]},
 "etc.)"->{
  Cell[110181, 2736, 138, 1, 31, "Subsubsection",
   CellTags->{"Adding labels to curves (above", "next to", "etc.)"}]},
 "Adding labels onto curves (on curve itself)"->{
  Cell[145131, 3408, 126, 1, 31, "Subsubsection",
   CellTags->"Adding labels onto curves (on curve itself)"]},
 "Adding tables and text to plots"->{
  Cell[149127, 3511, 102, 1, 31, "Subsubsection",
   CellTags->"Adding tables and text to plots"]},
 "Adding graphics to plots using Scaled[ ]"->{
  Cell[157885, 3730, 120, 1, 31, "Subsubsection",
   CellTags->"Adding graphics to plots using Scaled[ ]"]},
 "Text options"->{
  Cell[167186, 3975, 61, 1, 32, "Subsection",
   CellTags->"Text options"]},
 "Manipulate controls"->{
  Cell[170352, 4077, 72, 1, 52, "Section",
   CellTags->"Manipulate controls"]},
 "Making manipulated variables inactive"->{
  Cell[170449, 4082, 111, 1, 32, "Subsection",
   CellTags->"Making manipulated variables inactive"]},
 "Assigning labels to Manipulate variables"->{
  Cell[177085, 4247, 117, 1, 32, "Subsection",
   CellTags->"Assigning labels to Manipulate variables"]},
 "Incorporating text into the Manipulate window"->{
  Cell[181676, 4363, 127, 1, 32, "Subsection",
   CellTags->"Incorporating text into the Manipulate window"]},
 "Creating multiple Manipulate windows (PaneSelector)"->{
  Cell[189374, 4552, 139, 1, 32, "Subsection",
   CellTags->"Creating multiple Manipulate windows (PaneSelector)"]},
 "Making a vertical slider"->{
  Cell[212250, 5096, 85, 1, 32, "Subsection",
   CellTags->"Making a vertical slider"]},
 "Putting controls into columns"->{
  Cell[212939, 5124, 95, 1, 32, "Subsection",
   CellTags->"Putting controls into columns"]},
 "Continuous updating of 'Manipulate' variables"->{
  Cell[220430, 5321, 162, 2, 32, "Subsection",
   CellTags->"Continuous updating of 'Manipulate' variables"]},
 "Visually separating variables in the 'Manipulate' window (Delimiter)"->{
  Cell[223209, 5396, 219, 5, 32, "Subsection",
   CellTags->
    "Visually separating variables in the 'Manipulate' window (Delimiter)"]},
 "Commonly used commands in demonstrations"->{
  Cell[228325, 5528, 114, 1, 66, "Section",
   CellTags->"Commonly used commands in demonstrations"]},
 "Solving ordinary differential equations (ODE)"->{
  Cell[228689, 5541, 127, 1, 32, "Subsection",
   CellTags->"Solving ordinary differential equations (ODE)"]},
 "Defining equations for NDSolve"->{
  Cell[228841, 5546, 128, 1, 31, "Subsubsection",
   CellTags->{"Defining equations for NDSolve", "one method"}]},
 "one method"->{
  Cell[228841, 5546, 128, 1, 31, "Subsubsection",
   CellTags->{"Defining equations for NDSolve", "one method"}]},
 "Entering ODE's into NDSolve"->{
  Cell[231422, 5619, 111, 1, 31, "Subsubsection",
   CellTags->"Entering ODE's into NDSolve"]},
 "Manipulate"->{
  Cell[233120, 5675, 57, 1, 32, "Subsection",
   CellTags->"Manipulate"]},
 "Localizing variables (Module)"->{
  Cell[237778, 5795, 95, 1, 32, "Subsection",
   CellTags->"Localizing variables (Module)"]},
 "Setup for making buttons for multiple plots (Switch)"->{
  Cell[240079, 5857, 141, 1, 32, "Subsection",
   CellTags->"Setup for making buttons for multiple plots (Switch)"]},
 "Show multiple plots on same axes"->{
  Cell[244226, 5965, 101, 1, 32, "Subsection",
   CellTags->"Show multiple plots on same axes"]},
 "Miscellaneous"->{
  Cell[250341, 6103, 61, 1, 66, "Section",
   CellTags->"Miscellaneous"]},
 "Entering constants"->{
  Cell[250580, 6113, 131, 1, 32, "Subsection",
   CellTags->{"Entering constants", "equations", "and functions"}]},
 "equations"->{
  Cell[250580, 6113, 131, 1, 32, "Subsection",
   CellTags->{"Entering constants", "equations", "and functions"}]},
 "and functions"->{
  Cell[250580, 6113, 131, 1, 32, "Subsection",
   CellTags->{"Entering constants", "equations", "and functions"}]},
 "If statements"->{
  Cell[252581, 6177, 63, 1, 32, "Subsection",
   CellTags->"If statements"]},
 "Control digits displayed"->{
  Cell[255661, 6256, 95, 1, 32, "Subsection",
   CellTags->"Control digits displayed"]},
 "Select a solution from a list \[RawStar]important\[RawStar]"->{
  Cell[257156, 6309, 119, 1, 32, "Subsection",
   CellTags->"Select a solution from a list \[RawStar]important\[RawStar]"]},
 "Localize variables for faster evaluations"->{
  Cell[258838, 6376, 119, 1, 32, "Subsection",
   CellTags->"Localize variables for faster evaluations"]},
 "Partial differential equations (PDE) in Mathematica"->{
  Cell[266049, 6579, 136, 1, 66, "Section",
   CellTags->"Partial differential equations (PDE) in Mathematica"]},
 "Writing PDE's in Mathematica"->{
  Cell[266210, 6584, 110, 1, 32, "Subsection",
   CellTags->"Writing PDE's in Mathematica"]},
 "Solving PDE's in Mathematica"->{
  Cell[269892, 6718, 110, 1, 32, "Subsection",
   CellTags->"Solving PDE's in Mathematica"]},
 "Nonlinear Models"->{
  Cell[272965, 6814, 67, 1, 66, "Section",
   CellTags->"Nonlinear Models"]},
 "Nonlinear fit of data to rate law"->{
  Cell[273057, 6819, 103, 1, 32, "Subsection",
   CellTags->"Nonlinear fit of data to rate law"]},
 "Fitting the model"->{
  Cell[273185, 6824, 74, 1, 31, "Subsubsection",
   CellTags->"Fitting the model"]},
 "Plotting the residuals"->{
  Cell[278095, 6959, 84, 1, 31, "Subsubsection",
   CellTags->"Plotting the residuals"]},
 "Plot and points"->{
  Cell[279602, 7000, 73, 1, 31, "Subsubsection",
   CellTags->"Plot and points"]},
 "Nonlinear fit of data"->{
  Cell[363934, 8396, 80, 1, 32, "Subsection",
   CellTags->"Nonlinear fit of data"]},
 "No scatter example"->{
  Cell[364039, 8401, 76, 1, 31, "Subsubsection",
   CellTags->"No scatter example"]},
 "What you need to have in a demonstration before submitting"->{
  Cell[366391, 8473, 150, 1, 66, "Section",
   CellTags->"What you need to have in a demonstration before submitting"]},
 "Troubleshooting tips"->{
  Cell[373011, 8640, 74, 1, 66, "Section",
   CellTags->"Troubleshooting tips"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Tricks & Shortcuts", 375318, 8697},
 {"Greek alphabet keyboard shortcuts", 375436, 8700},
 {"Equation formatting", 375559, 8703},
 {"Superscript", 375659, 8706},
 {"Subscript", 375752, 8709},
 {"Square root", 375845, 8712},
 {"Divided by", 375939, 8715},
 {"Common Mistakes", 376037, 8718},
 {"Defining functions", 376137, 8721},
 {"Evaluating a function at a specific value (from NDSolve or similar)", \
376292, 8724},
 {"Evaluating a function at a specific value (not from NDSolve)", 376495, \
8728},
 {"Formatting", 376636, 8731},
 {"General", 376720, 8734},
 {"Setting font and font size", 376823, 8737},
 {"Plotting", 376930, 8740},
 {"Frame and frame labels", 377030, 8743},
 {"Line styles", 377136, 8746},
 {"Plot legend - labeling curves", 377250, 8749},
 {"Plot labels", 377364, 8752},
 {"Image size and padding", 377471, 8755},
 {"Shortcut for plot formatting options", 377603, 8758},
 {"Plot for different values of a parameter", 377754, 8761},
 {"Graphics", 377874, 8764},
 {"Adding arrows to a plot", 377973, 8767},
 {"Creating images/diagrams using Graphics", 378106, 8770},
 {"Rectangles", 378227, 8773},
 {"Arrows", 378317, 8776},
 {"Displaying text inside a shape", 378428, 8779},
 {"Adding Graphics to plots", 378558, 8782},
 {"Adding labels to curves (above", 378769, 8787},
 {"next to", 378904, 8790},
 {"etc.)", 379037, 8793},
 {"Adding labels onto curves (on curve itself)", 379208, 8796},
 {"Adding tables and text to plots", 379358, 8799},
 {"Adding graphics to plots using Scaled[ ]", 379505, 8802},
 {"Text options", 379633, 8805},
 {"Manipulate controls", 379736, 8808},
 {"Making manipulated variables inactive", 379861, 8811},
 {"Assigning labels to Manipulate variables", 380011, 8814},
 {"Incorporating text into the Manipulate window", 380169, 8817},
 {"Creating multiple Manipulate windows (PaneSelector)", 380338, 8820},
 {"Making a vertical slider", 380486, 8823},
 {"Putting controls into columns", 380611, 8826},
 {"Continuous updating of 'Manipulate' variables", 380757, 8829},
 {"Visually separating variables in the 'Manipulate' window (Delimiter)", \
380943, 8832},
 {"Commonly used commands in demonstrations", 381129, 8836},
 {"Solving ordinary differential equations (ODE)", 381284, 8839},
 {"Defining equations for NDSolve", 381432, 8842},
 {"one method", 381564, 8845},
 {"Entering ODE's into NDSolve", 381713, 8848},
 {"Manipulate", 381826, 8851},
 {"Localizing variables (Module)", 381937, 8854},
 {"Setup for making buttons for multiple plots (Switch)", 382090, 8857},
 {"Show multiple plots on same axes", 382247, 8860},
 {"Miscellaneous", 382365, 8863},
 {"Entering constants", 382465, 8866},
 {"equations", 382597, 8869},
 {"and functions", 382733, 8872},
 {"If statements", 382869, 8875},
 {"Control digits displayed", 382978, 8878},
 {"Select a solution from a list \[RawStar]important\[RawStar]", 383133, 8881},
 {"Localize variables for faster evaluations", 383306, 8884},
 {"Partial differential equations (PDE) in Mathematica", 383471, 8887},
 {"Writing PDE's in Mathematica", 383620, 8890},
 {"Solving PDE's in Mathematica", 383749, 8893},
 {"Nonlinear Models", 383866, 8896},
 {"Nonlinear fit of data to rate law", 383984, 8899},
 {"Fitting the model", 384107, 8902},
 {"Plotting the residuals", 384221, 8905},
 {"Plot and points", 384333, 8908},
 {"Nonlinear fit of data", 384444, 8911},
 {"No scatter example", 384555, 8914},
 {"What you need to have in a demonstration before submitting", 384706, 8917},
 {"Troubleshooting tips", 384854, 8920}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 45, 0, 90, "Title"],
Cell[CellGroupData[{
Cell[649, 26, 27, 0, 66, "Section"],
Cell[CellGroupData[{
Cell[701, 30, 206, 5, 26, "ItemNumbered"],
Cell[910, 37, 215, 4, 24, "Item"],
Cell[1128, 43, 153, 3, 24, "Item"],
Cell[CellGroupData[{
Cell[1306, 50, 174, 4, 26, "Subitem"],
Cell[1483, 56, 170, 4, 26, "Subitem"],
Cell[1656, 62, 174, 4, 26, "Subitem"],
Cell[1833, 68, 172, 4, 26, "Subitem"]
}, Open  ]],
Cell[2020, 75, 256, 4, 24, "Item"],
Cell[2279, 81, 208, 5, 26, "ItemNumbered"],
Cell[2490, 88, 185, 4, 24, "Item"],
Cell[2678, 94, 288, 6, 24, "Item"],
Cell[2969, 102, 271, 5, 24, "Item"],
Cell[3243, 109, 198, 5, 26, "ItemNumbered"],
Cell[3444, 116, 163, 4, 24, "Item"],
Cell[3610, 122, 204, 4, 26, "Subitem"],
Cell[3817, 128, 165, 4, 24, "Item"],
Cell[CellGroupData[{
Cell[4007, 136, 196, 4, 26, "Subitem"],
Cell[4206, 142, 174, 4, 26, "Subitem"],
Cell[4383, 148, 210, 4, 26, "Subitem"],
Cell[4596, 154, 174, 4, 26, "Subitem"],
Cell[4773, 160, 196, 4, 26, "Subitem"],
Cell[4972, 166, 224, 4, 26, "Subitem"]
}, Open  ]],
Cell[5211, 173, 229, 4, 24, "Item"],
Cell[5443, 179, 195, 5, 26, "ItemNumbered"],
Cell[5641, 186, 195, 4, 24, "Item"],
Cell[5839, 192, 227, 4, 24, "Item"],
Cell[CellGroupData[{
Cell[6091, 200, 172, 4, 26, "Subitem"],
Cell[6266, 206, 164, 4, 26, "Subitem"],
Cell[6433, 212, 212, 4, 26, "Subitem"]
}, Open  ]],
Cell[6660, 219, 197, 4, 24, "Item"],
Cell[CellGroupData[{
Cell[6882, 227, 230, 5, 26, "Subitem"],
Cell[7115, 234, 238, 4, 26, "Subitem"],
Cell[7356, 240, 214, 4, 26, "Subitem"],
Cell[7573, 246, 232, 4, 26, "Subitem"]
}, Open  ]],
Cell[7820, 253, 173, 4, 24, "Item"],
Cell[7996, 259, 216, 5, 26, "ItemNumbered"],
Cell[8215, 266, 211, 4, 24, "Item"],
Cell[8429, 272, 218, 4, 24, "Item"],
Cell[8650, 278, 241, 5, 24, "Item"],
Cell[8894, 285, 253, 5, 24, "Item"],
Cell[9150, 292, 197, 4, 24, "Item"],
Cell[9350, 298, 207, 4, 24, "Item"],
Cell[9560, 304, 248, 4, 24, "Item"],
Cell[9811, 310, 297, 5, 24, "Item"],
Cell[10111, 317, 258, 5, 26, "ItemNumbered"],
Cell[10372, 324, 241, 5, 24, "Item"],
Cell[CellGroupData[{
Cell[10638, 333, 224, 4, 26, "Subitem"],
Cell[10865, 339, 237, 5, 26, "Subitem"]
}, Open  ]],
Cell[11117, 347, 169, 4, 24, "Item"],
Cell[11289, 353, 207, 4, 24, "Item"],
Cell[11499, 359, 255, 5, 24, "Item"],
Cell[11757, 366, 213, 4, 24, "Item"],
Cell[11973, 372, 204, 5, 26, "ItemNumbered"],
Cell[12180, 379, 213, 5, 24, "Item"],
Cell[12396, 386, 175, 4, 24, "Item"],
Cell[12574, 392, 207, 4, 24, "Item"],
Cell[12784, 398, 231, 4, 24, "Item"],
Cell[13018, 404, 231, 4, 24, "Item"],
Cell[13252, 410, 265, 5, 26, "ItemNumbered"],
Cell[13520, 417, 224, 5, 24, "Item"],
Cell[13747, 424, 224, 5, 24, "Item"],
Cell[13974, 431, 210, 5, 26, "ItemNumbered"],
Cell[14187, 438, 215, 4, 24, "Item"],
Cell[CellGroupData[{
Cell[14427, 446, 186, 4, 26, "Subitem"],
Cell[14616, 452, 196, 4, 26, "Subitem"],
Cell[14815, 458, 185, 4, 26, "Subitem"]
}, Open  ]],
Cell[15015, 465, 191, 4, 24, "Item"],
Cell[15209, 471, 188, 4, 26, "Subitem"],
Cell[15400, 477, 267, 5, 26, "ItemNumbered"],
Cell[15670, 484, 218, 5, 26, "ItemNumbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15937, 495, 70, 1, 66, "Section",
 CellTags->"Tricks & Shortcuts"],
Cell[16010, 498, 486, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[16521, 511, 103, 1, 32, "Subsection",
 CellTags->"Greek alphabet keyboard shortcuts"],
Cell[16627, 514, 579, 11, 163, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[17243, 530, 75, 1, 32, "Subsection",
 CellTags->"Equation formatting"],
Cell[17321, 533, 180, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[17526, 540, 62, 1, 31, "Subsubsection",
 CellTags->"Superscript"],
Cell[17591, 543, 307, 7, 70, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[17935, 555, 58, 1, 31, "Subsubsection",
 CellTags->"Subscript"],
Cell[17996, 558, 247, 7, 49, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[18280, 570, 62, 1, 31, "Subsubsection",
 CellTags->"Square root"],
Cell[18345, 573, 328, 8, 71, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[18710, 586, 60, 1, 31, "Subsubsection",
 CellTags->"Divided by"],
Cell[18773, 589, 470, 11, 58, "Text"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19304, 607, 64, 1, 66, "Section",
 CellTags->"Common Mistakes"],
Cell[CellGroupData[{
Cell[19393, 612, 73, 1, 32, "Subsection",
 CellTags->"Defining functions"],
Cell[19469, 615, 133, 3, 30, "Text"],
Cell[19605, 620, 149, 5, 56, "Input"],
Cell[19757, 627, 162, 3, 30, "Text"],
Cell[19922, 632, 119, 4, 56, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[20078, 641, 182, 4, 32, "Subsection",
 CellTags->
  "Evaluating a function at a specific value (from NDSolve or similar)"],
Cell[20263, 647, 346, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[20634, 657, 468, 14, 72, "Input"],
Cell[21105, 673, 336, 12, 37, "Output"]
}, Open  ]],
Cell[21456, 688, 250, 4, 49, "Text"],
Cell[21709, 694, 45, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[21779, 698, 132, 4, 37, "Input"],
Cell[21914, 704, 68, 1, 37, "Output"]
}, Open  ]],
Cell[21997, 708, 37, 0, 30, "Text"],
Cell[CellGroupData[{
Cell[22059, 712, 78, 2, 37, "Input"],
Cell[22140, 716, 68, 1, 37, "Output"]
}, Open  ]],
Cell[22223, 720, 123, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[22371, 727, 201, 6, 37, "Input"],
Cell[22575, 735, 200, 6, 37, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22824, 747, 159, 2, 32, "Subsection",
 CellTags->"Evaluating a function at a specific value (not from NDSolve)"],
Cell[22986, 751, 481, 12, 49, "Text"],
Cell[CellGroupData[{
Cell[23492, 767, 292, 9, 61, "Input"],
Cell[23787, 778, 29, 0, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23853, 783, 54, 1, 40, "Input"],
Cell[23910, 786, 29, 0, 40, "Output"]
}, Open  ]],
Cell[23954, 789, 251, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[24230, 797, 176, 5, 40, "Input"],
Cell[24409, 804, 96, 2, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24542, 811, 174, 5, 40, "Input"],
Cell[24719, 818, 29, 0, 40, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24809, 825, 54, 1, 66, "Section",
 CellTags->"Formatting"],
Cell[24866, 828, 513, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[25404, 840, 51, 1, 32, "Subsection",
 CellTags->"General"],
Cell[CellGroupData[{
Cell[25480, 845, 92, 1, 31, "Subsubsection",
 CellTags->"Setting font and font size"],
Cell[25575, 848, 249, 6, 30, "Text"],
Cell[25827, 856, 301, 9, 32, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26177, 871, 53, 1, 32, "Subsection",
 CellTags->"Plotting"],
Cell[CellGroupData[{
Cell[26255, 876, 84, 1, 31, "Subsubsection",
 CellTags->"Frame and frame labels"],
Cell[CellGroupData[{
Cell[26364, 881, 647, 17, 105, "Input"],
Cell[27014, 900, 5127, 94, 259, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32190, 1000, 62, 1, 31, "Subsubsection",
 CellTags->"Line styles"],
Cell[32255, 1003, 177, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[32457, 1013, 508, 16, 65, "Input"],
Cell[32968, 1031, 4952, 89, 252, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37969, 1126, 98, 1, 31, "Subsubsection",
 CellTags->"Plot legend - labeling curves"],
Cell[38070, 1129, 144, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[38239, 1134, 688, 18, 117, "Input"],
Cell[38930, 1154, 8863, 173, 282, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47842, 1333, 62, 1, 31, "Subsubsection",
 CellTags->"Plot labels"],
Cell[47907, 1336, 281, 8, 30, "Text"],
Cell[CellGroupData[{
Cell[48213, 1348, 363, 10, 61, "Input"],
Cell[48579, 1360, 2183, 43, 274, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[50811, 1409, 84, 1, 31, "Subsubsection",
 CellTags->"Image size and padding"],
Cell[50898, 1412, 1203, 27, 106, "Text"],
Cell[52104, 1441, 931, 25, 128, "Code"],
Cell[CellGroupData[{
Cell[53060, 1470, 2078, 55, 261, "Input"],
Cell[55141, 1527, 2056, 43, 319, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[57246, 1576, 112, 1, 31, "Subsubsection",
 CellTags->"Shortcut for plot formatting options"],
Cell[57361, 1579, 618, 13, 68, "Text"],
Cell[57982, 1594, 1231, 33, 108, "Code"],
Cell[CellGroupData[{
Cell[59238, 1631, 776, 20, 161, "Input"],
Cell[60017, 1653, 9524, 165, 257, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69602, 1825, 117, 1, 32, "Subsection",
 CellTags->"Plot for different values of a parameter"],
Cell[69722, 1828, 185, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[69932, 1836, 531, 18, 77, "Input"],
Cell[70466, 1856, 5708, 102, 252, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76235, 1965, 50, 1, 66, "Section",
 CellTags->"Graphics"],
Cell[CellGroupData[{
Cell[76310, 1970, 83, 1, 32, "Subsection",
 CellTags->"Adding arrows to a plot"],
Cell[76396, 1973, 264, 8, 30, "Text"],
Cell[76663, 1983, 579, 13, 77, "Code"],
Cell[CellGroupData[{
Cell[77267, 2000, 809, 23, 100, "Input"],
Cell[78079, 2025, 20430, 342, 187, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[98558, 2373, 115, 1, 32, "Subsection",
 CellTags->"Creating images/diagrams using Graphics"],
Cell[98676, 2376, 90, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[98791, 2382, 60, 1, 31, "Subsubsection",
 CellTags->"Rectangles"],
Cell[98854, 2385, 1671, 45, 163, "Code"],
Cell[CellGroupData[{
Cell[100550, 2434, 974, 27, 157, "Input"],
Cell[101527, 2463, 190, 5, 153, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[101766, 2474, 52, 1, 31, "Subsubsection",
 CellTags->"Arrows"],
Cell[101821, 2477, 903, 28, 124, "Code"],
Cell[CellGroupData[{
Cell[102749, 2509, 801, 25, 123, "Input"],
Cell[103553, 2536, 130, 3, 84, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[103732, 2545, 100, 1, 31, "Subsubsection",
 CellTags->"Displaying text inside a shape"],
Cell[103835, 2548, 424, 8, 68, "Text"],
Cell[104262, 2558, 1496, 41, 176, "Code"],
Cell[CellGroupData[{
Cell[105783, 2603, 1114, 30, 191, "Input"],
Cell[106900, 2635, 263, 7, 53, "Output"]
}, Open  ]],
Cell[107178, 2645, 27, 0, 30, "Text"],
Cell[107208, 2647, 1356, 35, 208, "Code"],
Cell[CellGroupData[{
Cell[108589, 2686, 1190, 31, 241, "Input"],
Cell[109782, 2719, 228, 5, 76, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110071, 2731, 85, 1, 32, "Subsection",
 CellTags->"Adding Graphics to plots"],
Cell[CellGroupData[{
Cell[110181, 2736, 138, 1, 31, "Subsubsection",
 CellTags->{"Adding labels to curves (above", "next to", "etc.)"}],
Cell[110322, 2739, 337, 11, 30, "Text"],
Cell[110662, 2752, 3695, 99, 240, "Code"],
Cell[CellGroupData[{
Cell[114382, 2855, 2221, 66, 178, "Input"],
Cell[116606, 2923, 28476, 479, 247, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[145131, 3408, 126, 1, 31, "Subsubsection",
 CellTags->"Adding labels onto curves (on curve itself)"],
Cell[145260, 3411, 756, 21, 148, "Code",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[146041, 3436, 797, 21, 161, "Input"],
Cell[146841, 3459, 2237, 46, 254, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[149127, 3511, 102, 1, 31, "Subsubsection",
 CellTags->"Adding tables and text to plots"],
Cell[149232, 3514, 4544, 109, 446, "Code"],
Cell[CellGroupData[{
Cell[153801, 3627, 1450, 40, 296, "Input"],
Cell[155254, 3669, 2582, 55, 254, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[157885, 3730, 120, 1, 31, "Subsubsection",
 CellTags->"Adding graphics to plots using Scaled[ ]"],
Cell[158008, 3733, 671, 13, 68, "Text"],
Cell[158682, 3748, 3749, 100, 369, "Code",
 InitializationCell->False],
Cell[CellGroupData[{
Cell[162456, 3852, 2279, 65, 322, "Input"],
Cell[164738, 3919, 2387, 49, 259, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[167186, 3975, 61, 1, 32, "Subsection",
 CellTags->"Text options"],
Cell[167250, 3978, 280, 7, 30, "Text"],
Cell[167533, 3987, 817, 23, 188, "Code"],
Cell[CellGroupData[{
Cell[168375, 4014, 997, 29, 161, "Input"],
Cell[169375, 4045, 831, 22, 206, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[170245, 4072, 82, 1, 66, "Section",
 CellTags->"Adding Graphics to plots"],
Cell[CellGroupData[{
Cell[170352, 4077, 72, 1, 52, "Section",
 CellTags->"Manipulate controls"],
Cell[CellGroupData[{
Cell[170449, 4082, 111, 1, 32, "Subsection",
 CellTags->"Making manipulated variables inactive"],
Cell[170563, 4085, 742, 19, 68, "Text"],
Cell[CellGroupData[{
Cell[171330, 4108, 2736, 74, 276, "Input"],
Cell[174069, 4184, 2967, 57, 403, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177085, 4247, 117, 1, 32, "Subsection",
 CellTags->"Assigning labels to Manipulate variables"],
Cell[177205, 4250, 401, 10, 49, "Text"],
Cell[177609, 4262, 728, 18, 94, "Code"],
Cell[CellGroupData[{
Cell[178362, 4284, 1367, 33, 242, "Input"],
Cell[179732, 4319, 1895, 38, 355, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[181676, 4363, 127, 1, 32, "Subsection",
 CellTags->"Incorporating text into the Manipulate window"],
Cell[181806, 4366, 1810, 44, 188, "Code"],
Cell[CellGroupData[{
Cell[183641, 4414, 2524, 63, 390, "Input"],
Cell[186168, 4479, 3157, 67, 463, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[189374, 4552, 139, 1, 32, "Subsection",
 CellTags->"Creating multiple Manipulate windows (PaneSelector)"],
Cell[189516, 4555, 906, 20, 87, "Text"],
Cell[190425, 4577, 3793, 91, 288, "Code"],
Cell[194221, 4670, 1166, 26, 106, "Text"],
Cell[CellGroupData[{
Cell[195412, 4700, 4562, 111, 641, "Input"],
Cell[199977, 4813, 3937, 77, 405, "Output"]
}, Open  ]],
Cell[203929, 4893, 453, 12, 30, "Text"],
Cell[CellGroupData[{
Cell[204407, 4909, 4079, 100, 517, "Input"],
Cell[208489, 5011, 3712, 79, 371, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[212250, 5096, 85, 1, 32, "Subsection",
 CellTags->"Making a vertical slider"],
Cell[CellGroupData[{
Cell[212360, 5101, 269, 8, 40, "Input"],
Cell[212632, 5111, 258, 7, 258, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[212939, 5124, 95, 1, 32, "Subsection",
 CellTags->"Putting controls into columns"],
Cell[213037, 5127, 1649, 51, 188, "Code"],
Cell[CellGroupData[{
Cell[214711, 5182, 2373, 66, 211, "Input"],
Cell[217087, 5250, 3294, 65, 417, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[220430, 5321, 162, 2, 32, "Subsection",
 CellTags->"Continuous updating of 'Manipulate' variables"],
Cell[220595, 5325, 269, 8, 30, "Text"],
Cell[CellGroupData[{
Cell[220889, 5337, 646, 17, 86, "Input"],
Cell[221538, 5356, 1622, 34, 363, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[223209, 5396, 219, 5, 32, "Subsection",
 CellTags->
  "Visually separating variables in the 'Manipulate' window (Delimiter)"],
Cell[223431, 5403, 357, 11, 30, "Text"],
Cell[CellGroupData[{
Cell[223813, 5418, 1630, 46, 229, "Input"],
Cell[225446, 5466, 2818, 55, 479, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[228325, 5528, 114, 1, 66, "Section",
 CellTags->"Commonly used commands in demonstrations"],
Cell[228442, 5531, 222, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[228689, 5541, 127, 1, 32, "Subsection",
 CellTags->"Solving ordinary differential equations (ODE)"],
Cell[CellGroupData[{
Cell[228841, 5546, 128, 1, 31, "Subsubsection",
 CellTags->{"Defining equations for NDSolve", "one method"}],
Cell[228972, 5549, 657, 15, 68, "Text"],
Cell[229632, 5566, 1279, 38, 281, "Input"],
Cell[230914, 5606, 471, 8, 68, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[231422, 5619, 111, 1, 31, "Subsubsection",
 CellTags->"Entering ODE's into NDSolve"],
Cell[231536, 5622, 343, 10, 49, "Text"],
Cell[231882, 5634, 907, 27, 121, "Input"],
Cell[232792, 5663, 279, 6, 49, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[233120, 5675, 57, 1, 32, "Subsection",
 CellTags->"Manipulate"],
Cell[233180, 5678, 966, 21, 87, "Text"],
Cell[CellGroupData[{
Cell[234171, 5703, 1518, 42, 224, "Input"],
Cell[235692, 5747, 2037, 42, 353, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[237778, 5795, 95, 1, 32, "Subsection",
 CellTags->"Localizing variables (Module)"],
Cell[237876, 5798, 837, 14, 87, "Text"],
Cell[238716, 5814, 721, 22, 179, "Code"],
Cell[239440, 5838, 602, 14, 49, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[240079, 5857, 141, 1, 32, "Subsection",
 CellTags->"Setup for making buttons for multiple plots (Switch)"],
Cell[240223, 5860, 290, 8, 30, "Text"],
Cell[CellGroupData[{
Cell[240538, 5872, 1738, 46, 230, "Input"],
Cell[242279, 5920, 1898, 39, 351, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[244226, 5965, 101, 1, 32, "Subsection",
 CellTags->"Show multiple plots on same axes"],
Cell[244330, 5968, 652, 18, 49, "Text"],
Cell[CellGroupData[{
Cell[245007, 5990, 542, 18, 83, "Input"],
Cell[245552, 6010, 4728, 86, 256, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250341, 6103, 61, 1, 66, "Section",
 CellTags->"Miscellaneous"],
Cell[250405, 6106, 150, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[250580, 6113, 131, 1, 32, "Subsection",
 CellTags->{"Entering constants", "equations", "and functions"}],
Cell[250714, 6116, 591, 14, 49, "Text"],
Cell[251308, 6132, 164, 5, 40, "Input"],
Cell[251475, 6139, 382, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[251882, 6149, 49, 1, 40, "Input"],
Cell[251934, 6152, 390, 8, 40, "Message"],
Cell[252327, 6162, 42, 0, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252406, 6167, 81, 2, 40, "Input"],
Cell[252490, 6171, 42, 0, 40, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[252581, 6177, 63, 1, 32, "Subsection",
 CellTags->"If statements"],
Cell[252647, 6180, 459, 11, 49, "Text"],
Cell[CellGroupData[{
Cell[253131, 6195, 397, 12, 61, "Input"],
Cell[253531, 6209, 2081, 41, 245, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[255661, 6256, 95, 1, 32, "Subsection",
 CellTags->"Control digits displayed"],
Cell[255759, 6259, 284, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[256068, 6268, 235, 6, 61, "Input"],
Cell[256306, 6276, 127, 3, 40, "Output"]
}, Open  ]],
Cell[256448, 6282, 203, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[256676, 6292, 217, 5, 40, "Input"],
Cell[256896, 6299, 211, 4, 40, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[257156, 6309, 119, 1, 32, "Subsection",
 CellTags->"Select a solution from a list \[RawStar]important\[RawStar]"],
Cell[257278, 6312, 383, 12, 49, "Text"],
Cell[CellGroupData[{
Cell[257686, 6328, 196, 7, 42, "Input"],
Cell[257885, 6337, 239, 7, 40, "Output"]
}, Open  ]],
Cell[258139, 6347, 250, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[258414, 6357, 157, 4, 61, "Input"],
Cell[258574, 6363, 116, 3, 40, "Output"],
Cell[258693, 6368, 96, 2, 40, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[258838, 6376, 119, 1, 32, "Subsection",
 CellTags->"Localize variables for faster evaluations"],
Cell[258960, 6379, 813, 24, 49, "Text"],
Cell[259776, 6405, 166, 6, 30, "Text"],
Cell[259945, 6413, 721, 22, 172, "Input"],
Cell[260669, 6437, 340, 13, 49, "Text"],
Cell[261012, 6452, 1019, 27, 113, "Code"],
Cell[CellGroupData[{
Cell[262056, 6483, 1813, 46, 181, "Input"],
Cell[263872, 6531, 2116, 41, 250, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[266049, 6579, 136, 1, 66, "Section",
 CellTags->"Partial differential equations (PDE) in Mathematica"],
Cell[CellGroupData[{
Cell[266210, 6584, 110, 1, 32, "Subsection",
 CellTags->"Writing PDE's in Mathematica"],
Cell[266323, 6587, 631, 22, 51, "Text"],
Cell[266957, 6611, 134, 3, 30, "Text"],
Cell[267094, 6616, 188, 5, 47, "Code"],
Cell[267285, 6623, 590, 20, 40, "Input"],
Cell[267878, 6645, 338, 10, 47, "Code"],
Cell[268219, 6657, 657, 21, 40, "Input"],
Cell[268879, 6680, 130, 3, 30, "Text"],
Cell[269012, 6685, 702, 23, 80, "Input"],
Cell[269717, 6710, 138, 3, 30, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[269892, 6718, 110, 1, 32, "Subsection",
 CellTags->"Solving PDE's in Mathematica"],
Cell[270005, 6721, 111, 3, 30, "Text"],
Cell[270119, 6726, 2797, 82, 381, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[272965, 6814, 67, 1, 66, "Section",
 CellTags->"Nonlinear Models"],
Cell[CellGroupData[{
Cell[273057, 6819, 103, 1, 32, "Subsection",
 CellTags->"Nonlinear fit of data to rate law"],
Cell[CellGroupData[{
Cell[273185, 6824, 74, 1, 31, "Subsubsection",
 CellTags->"Fitting the model"],
Cell[CellGroupData[{
Cell[273284, 6829, 2306, 61, 367, "Input"],
Cell[275593, 6892, 1036, 27, 60, "Output"],
Cell[276632, 6921, 1061, 24, 100, "Output"],
Cell[277696, 6947, 350, 6, 40, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[278095, 6959, 84, 1, 31, "Subsubsection",
 CellTags->"Plotting the residuals"],
Cell[CellGroupData[{
Cell[278204, 6964, 387, 8, 101, "Input"],
Cell[278594, 6974, 959, 20, 227, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[279602, 7000, 73, 1, 31, "Subsubsection",
 CellTags->"Plot and points"],
Cell[279678, 7003, 102, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[279805, 7009, 908, 23, 161, "Input"],
Cell[280716, 7034, 83157, 1355, 310, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[363934, 8396, 80, 1, 32, "Subsection",
 CellTags->"Nonlinear fit of data"],
Cell[CellGroupData[{
Cell[364039, 8401, 76, 1, 31, "Subsubsection",
 CellTags->"No scatter example"],
Cell[CellGroupData[{
Cell[364140, 8406, 1890, 51, 286, "Input"],
Cell[366033, 8459, 285, 6, 40, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[366391, 8473, 150, 1, 66, "Section",
 CellTags->"What you need to have in a demonstration before submitting"],
Cell[366544, 8476, 466, 10, 49, "Text"],
Cell[367013, 8488, 5961, 147, 588, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373011, 8640, 74, 1, 66, "Section",
 CellTags->"Troubleshooting tips"],
Cell[373088, 8643, 288, 5, 49, "Text"],
Cell[373379, 8650, 407, 6, 49, "Text"],
Cell[373789, 8658, 502, 9, 68, "Text"],
Cell[374294, 8669, 606, 12, 80, "Text"]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
